{
  "address": "0x68119c2410b582F191cA98c4AcEEb0470C2D78c5",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_safeAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_lockDrop",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_sovToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_depositor",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DepositSOVToLockdrop",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DepositToLockdrop",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Pause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Stop",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Unpause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "WithdrawBalanceFromSafe",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldDepositor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newDepositor",
          "type": "address"
        }
      ],
      "name": "setDepositor",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ETH_TOKEN_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDepositorAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLockDropAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSafeAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSovTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStopBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isStopped",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "sovAmount",
          "type": "uint256"
        }
      ],
      "name": "sendToLockDropContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newDepositor",
          "type": "address"
        }
      ],
      "name": "setDepositorAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stop",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "withdrawAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xa713b8296b1828199ea8a18ccad41c33331ad30a03b6fdaa3994f6365c0cc9a2",
  "receipt": {
    "to": null,
    "from": "0xFEe171A152C02F336021fb9E79b4fAc2304a9E7E",
    "contractAddress": "0x68119c2410b582F191cA98c4AcEEb0470C2D78c5",
    "transactionIndex": 0,
    "gasUsed": "1792500",
    "logsBloom": "0x
    "blockHash": "0x4c316f929802b5f0e42161f6c1fbd9b78bf74233281b67aeccff48c13e932854",
    "transactionHash": "0xa713b8296b1828199ea8a18ccad41c33331ad30a03b6fdaa3994f6365c0cc9a2",
    "logs": [],
    "blockNumber": 19474142,
    "cumulativeGasUsed": "1792500",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x949Cf9295d2950B6bD9B7334846101E9aE44BBB0",
    "0xb5e3dbaf69a46b71fe9c055e6fa36992ae6b2c1a",
    "0xbdab72602e9ad40fc6a6852caf43258113b8f7a5",
    "0x86de732721fffcdf163629c64e3925b5bf7f371a"
  ],
  "numDeployments": 2,
  "solcInputHash": "ef3b397b90dd266cb4b518e887ca99fc",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_safeAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_lockDrop\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sovToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_depositor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositSOVToLockdrop\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositToLockdrop\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Stop\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"WithdrawBalanceFromSafe\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldDepositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newDepositor\",\"type\":\"address\"}],\"name\":\"setDepositor\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ETH_TOKEN_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDepositorAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLockDropAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSafeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSovTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStopBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isStopped\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"sovAmount\",\"type\":\"uint256\"}],\"name\":\"sendToLockDropContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newDepositor\",\"type\":\"address\"}],\"name\":\"setDepositorAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_depositor\":\"Address of the depositor account\",\"_lockDrop\":\"Address of the lock drop contract\",\"_safeAddress\":\"Address of the Gnosis Safe\",\"_sovToken\":\"Address of the SOV token contract\"}},\"sendToLockDropContract(address[],uint256[],uint256)\":{\"details\":\"This function is for sending tokens to the LockDrop contract for users to receive rewards and to be bridged to the BOB mainnet for Sovryn DEXThe function is allowed to be called only by the DEPOSITOR_ADDRESSToken amounts and SOV amount to send are calculated offchain\",\"params\":{\"amounts\":\"List of amounts of tokens to send\",\"sovAmount\":\"Amount of SOV tokens to send\",\"tokens\":\"List of tokens to send\"}},\"setDepositorAddress(address)\":{\"details\":\"Only Safe can call this functionNew depositor can be zero address\",\"params\":{\"_newDepositor\":\"New depositor address\"}},\"withdraw(address[],uint256[],address)\":{\"details\":\"Only Safe can call this functionRecipient should not be a zero address\",\"params\":{\"amounts\":\"List of token amounts to withdraw\",\"recipient\":\"Recipient address\",\"tokens\":\"List of token addresses to withdraw\"}},\"withdrawAll(address[],address)\":{\"details\":\"Only Safe can call this functionRecipient should not be a zero address\",\"params\":{\"recipient\":\"Recipient address\",\"tokens\":\"List of token addresses to withdraw\"}}},\"title\":\"SafeDepositsSender\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"pause()\":{\"notice\":\"pause the contract - no funds can be sent to the LockDrop contract\"},\"sendToLockDropContract(address[],uint256[],uint256)\":{\"notice\":\"Sends tokens to the LockDrop contract\"},\"setDepositorAddress(address)\":{\"notice\":\"Sets new depositor address\"},\"stop()\":{\"notice\":\"stops the contract - no funds can be sent to the LockDrop contract, this is irreversible\"},\"unpause()\":{\"notice\":\"unpause the contract\"},\"withdraw(address[],uint256[],address)\":{\"notice\":\"Withdraws tokens from this contract to a recipient addressWithdrawal to the Safe address will affect balances and rewardsAmount > 0 should be checked by the caller before calling this function\"},\"withdrawAll(address[],address)\":{\"notice\":\"Withdraws all tokens from this contract to a recipientAmount > 0 should be checked by the caller before calling this functionWithdrawal to the Safe address will affect balances and rewards\"}},\"notice\":\"This contract is a gateway for depositing funds into the Bob locker contracts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/integrations/bob/SafeDepositsSender.sol\":\"SafeDepositsSender\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@contracts/=contracts/\",\":ds-test/=foundry/lib/forge-std/lib/ds-test/src/\",\":forge-std/=foundry/lib/forge-std/src/\"]},\"sources\":{\"contracts/integrations/bob/SafeDepositsSender.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport { ISafeDepositsSender } from \\\"./interfaces/ISafeDepositsSender.sol\\\";\\n\\ninterface IERC20Spec {\\n    function balanceOf(address _who) external view returns (uint256);\\n    function transfer(address _to, uint256 _value) external returns (bool);\\n}\\ninterface GnosisSafe {\\n    enum Operation {\\n        Call,\\n        DelegateCall\\n    }\\n\\n    /// @dev Allows a Module to execute a Safe transaction without any further confirmations.\\n    /// @param to Destination address of module transaction.\\n    /// @param value Ether value of module transaction.\\n    /// @param data Data payload of module transaction.\\n    /// @param operation Operation type of module transaction.\\n    function execTransactionFromModule(\\n        address to,\\n        uint256 value,\\n        bytes calldata data,\\n        Operation operation\\n    ) external returns (bool success);\\n}\\n\\n/**\\n * @title SafeDepositsSender\\n * @notice This contract is a gateway for depositing funds into the Bob locker contracts\\n */\\ncontract SafeDepositsSender is ISafeDepositsSender {\\n    address public constant ETH_TOKEN_ADDRESS = address(0x01);\\n\\n    GnosisSafe private immutable SAFE;\\n    address private immutable LOCK_DROP_ADDRESS;\\n    address private immutable SOV_TOKEN_ADDRESS;\\n    address private DEPOSITOR_ADDRESS;\\n    uint256 private stopBlock; // if set the contract is stopped forever - irreversible\\n    bool private paused;\\n\\n    /**\\n     * @param _safeAddress Address of the Gnosis Safe\\n     * @param _lockDrop Address of the lock drop contract\\n     * @param _sovToken Address of the SOV token contract\\n     * @param _depositor Address of the depositor account\\n     */\\n    constructor(\\n        address _safeAddress,\\n        address _lockDrop,\\n        address _sovToken,\\n        address _depositor\\n    ) public {\\n        require(_safeAddress != address(0), \\\"SafeDepositsSender: Invalid safe address\\\");\\n        require(_lockDrop != address(0), \\\"SafeDepositsSender: Invalid lockdrop address\\\");\\n        require(_sovToken != address(0), \\\"SafeDepositsSender: Invalid sov token address\\\");\\n        require(_depositor != address(0), \\\"SafeDepositsSender: Invalid depositor token address\\\");\\n        SAFE = GnosisSafe(_safeAddress);\\n        LOCK_DROP_ADDRESS = _lockDrop;\\n        SOV_TOKEN_ADDRESS = _sovToken;\\n        DEPOSITOR_ADDRESS = _depositor;\\n    }\\n\\n    receive() external payable {}\\n\\n    // MODIFIERS //\\n\\n    modifier onlySafe() {\\n        require(msg.sender == address(SAFE), \\\"SafeDepositsSender: Only Safe\\\");\\n        _;\\n    }\\n\\n    modifier onlyDepositor() {\\n        require(msg.sender == DEPOSITOR_ADDRESS, \\\"SafeDepositsSender: Only Depositor\\\");\\n        _;\\n    }\\n\\n    modifier onlyDepositorOrSafe() {\\n        require(\\n            msg.sender == DEPOSITOR_ADDRESS || msg.sender == address(SAFE),\\n            \\\"SafeDepositsSender: Only Depositor or Safe\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier expectUnpaused() {\\n        require(!paused, \\\"SafeDepositsSender: Paused\\\");\\n        _;\\n    }\\n\\n    modifier expectPaused() {\\n        require(paused, \\\"SafeDepositsSender: unpaused\\\");\\n        _;\\n    }\\n\\n    modifier expectUnstopped() {\\n        require(stopBlock == 0, \\\"SafeDepositsSender: stopped\\\");\\n        _;\\n    }\\n\\n    modifier notZeroAddress(address _address) {\\n        require(_address != address(0), \\\"SafeDepositsSender: Invalid address\\\");\\n        _;\\n    }\\n\\n    // CORE FUNCTIONS\\n\\n    /**\\n     * @notice Sends tokens to the LockDrop contract\\n     * @dev This function is for sending tokens to the LockDrop contract for users to receive rewards and to be bridged to the BOB mainnet for Sovryn DEX\\n     * @dev The function is allowed to be called only by the DEPOSITOR_ADDRESS\\n     * @dev Token amounts and SOV amount to send are calculated offchain\\n     * @param tokens List of tokens to send\\n     * @param amounts List of amounts of tokens to send\\n     * @param sovAmount Amount of SOV tokens to send\\n     */\\n    function sendToLockDropContract(\\n        address[] calldata tokens,\\n        uint256[] calldata amounts,\\n        uint256 sovAmount\\n    ) external onlyDepositor expectUnpaused expectUnstopped {\\n        require(\\n            tokens.length == amounts.length,\\n            \\\"SafeDepositsSender: Tokens and amounts length mismatch\\\"\\n        );\\n        require(sovAmount > 0, \\\"SafeDepositsSender: Invalid SOV amount\\\");\\n\\n        bytes memory data;\\n\\n        for (uint256 i = 0; i < tokens.length; i++) {\\n            require(\\n                tokens[i] != SOV_TOKEN_ADDRESS,\\n                \\\"SafeDepositsSender: SOV token is transferred separately\\\"\\n            );\\n\\n            // transfer native token\\n            uint256 balance;\\n            if (tokens[i] == address(0x01)) {\\n                require(\\n                    address(SAFE).balance >= amounts[i],\\n                    \\\"SafeDepositsSender: Not enough funds\\\"\\n                );\\n                data = abi.encodeWithSignature(\\\"depositEth()\\\");\\n                require(\\n                    SAFE.execTransactionFromModule(\\n                        LOCK_DROP_ADDRESS,\\n                        amounts[i],\\n                        data,\\n                        GnosisSafe.Operation.Call\\n                    ),\\n                    \\\"Could not execute ether transfer\\\"\\n                );\\n\\n                // withdraw balance to this contract left after deposit to the LockDrop\\n                data = abi.encodeWithSignature(\\n                    \\\"transfer(address,uint256)\\\",\\n                    address(this),\\n                    amounts[i]\\n                );\\n                balance = address(SAFE).balance;\\n                require(\\n                    SAFE.execTransactionFromModule(\\n                        address(this),\\n                        balance,\\n                        \\\"\\\",\\n                        GnosisSafe.Operation.Call\\n                    ),\\n                    \\\"Could not execute ether transfer\\\"\\n                );\\n            } else {\\n                // transfer ERC20 tokens\\n                IERC20Spec token = IERC20Spec(tokens[i]);\\n                balance = token.balanceOf(address(SAFE));\\n                require(balance >= amounts[i], \\\"SafeDepositsSender: Not enough funds\\\");\\n\\n                data = abi.encodeWithSignature(\\n                    \\\"approve(address,uint256)\\\",\\n                    LOCK_DROP_ADDRESS,\\n                    amounts[i]\\n                );\\n                require(\\n                    SAFE.execTransactionFromModule(tokens[i], 0, data, GnosisSafe.Operation.Call),\\n                    \\\"Could not execute token transfer\\\"\\n                );\\n\\n                data = abi.encodeWithSignature(\\n                    \\\"depositERC20(address,uint256)\\\",\\n                    tokens[i],\\n                    amounts[i]\\n                );\\n                require(\\n                    SAFE.execTransactionFromModule(\\n                        LOCK_DROP_ADDRESS,\\n                        0,\\n                        data,\\n                        GnosisSafe.Operation.Call\\n                    ),\\n                    \\\"Could not execute token transfer\\\"\\n                );\\n\\n                // withdraw balance to this contract left after deposit to the LockDrop\\n                balance = IERC20Spec(tokens[i]).balanceOf(address(SAFE));\\n                data = abi.encodeWithSignature(\\n                    \\\"transfer(address,uint256)\\\",\\n                    address(this),\\n                    balance\\n                );\\n                require(\\n                    SAFE.execTransactionFromModule(tokens[i], 0, data, GnosisSafe.Operation.Call),\\n                    \\\"Could not execute ether transfer\\\"\\n                );\\n            }\\n            emit DepositToLockdrop(tokens[i], amounts[i]);\\n            emit WithdrawBalanceFromSafe(tokens[i], balance);\\n        }\\n\\n        // transfer SOV\\n        data = abi.encodeWithSignature(\\n            \\\"depositERC20(address,uint256)\\\",\\n            SOV_TOKEN_ADDRESS,\\n            sovAmount\\n        );\\n        require(\\n            SAFE.execTransactionFromModule(LOCK_DROP_ADDRESS, 0, data, GnosisSafe.Operation.Call),\\n            \\\"Could not execute SOV transfer\\\"\\n        );\\n\\n        emit DepositSOVToLockdrop(sovAmount);\\n    }\\n\\n    // ADMINISTRATIVE FUNCTIONS //\\n\\n    /// @notice There is no check if _newDepositor is not zero on purpose - that could be required\\n\\n    /**\\n     * @notice Sets new depositor address\\n     * @dev Only Safe can call this function\\n     * @dev New depositor can be zero address\\n     * @param _newDepositor New depositor address\\n     */\\n    function setDepositorAddress(address _newDepositor) external onlySafe {\\n        emit setDepositor(DEPOSITOR_ADDRESS, _newDepositor);\\n        DEPOSITOR_ADDRESS = _newDepositor;\\n    }\\n\\n    /**\\n     * @notice Withdraws tokens from this contract to a recipient address\\n     * @notice Withdrawal to the Safe address will affect balances and rewards\\n     * @notice Amount > 0 should be checked by the caller before calling this function\\n     * @dev Only Safe can call this function\\n     * @dev Recipient should not be a zero address\\n     * @param tokens List of token addresses to withdraw\\n     * @param amounts List of token amounts to withdraw\\n     * @param recipient Recipient address\\n     */\\n    function withdraw(\\n        address[] calldata tokens,\\n        uint256[] calldata amounts,\\n        address recipient\\n    ) external onlySafe notZeroAddress(recipient) {\\n        require(\\n            tokens.length == amounts.length,\\n            \\\"SafeDepositsSender: Tokens and amounts length mismatch\\\"\\n        );\\n\\n        for (uint256 i = 0; i < tokens.length; i++) {\\n            if (tokens[i] == address(0x01)) {\\n                require(\\n                    address(this).balance >= amounts[i],\\n                    \\\"SafeDepositsSender: Not enough funds\\\"\\n                );\\n                (bool success, ) = payable(recipient).call{ value: amounts[i] }(\\\"\\\");\\n                require(success, \\\"Could not withdraw ether\\\");\\n                continue;\\n            }\\n\\n            IERC20Spec token = IERC20Spec(tokens[i]);\\n            uint256 balance = token.balanceOf(address(this));\\n            require(balance >= amounts[i], \\\"SafeDepositsSender: Not enough funds\\\");\\n\\n            token.transfer(recipient, amounts[i]);\\n\\n            emit Withdraw(recipient, tokens[i], amounts[i]);\\n        }\\n    }\\n\\n    /**\\n     * @notice Withdraws all tokens from this contract to a recipient\\n     * @notice Amount > 0 should be checked by the caller before calling this function\\n     * @dev Only Safe can call this function\\n     * @dev Recipient should not be a zero address\\n     * @notice Withdrawal to the Safe address will affect balances and rewards\\n     * @param tokens List of token addresses to withdraw\\n     * @param recipient Recipient address\\n     */\\n    function withdrawAll(\\n        address[] calldata tokens,\\n        address recipient\\n    ) external onlySafe notZeroAddress(recipient) {\\n        for (uint256 i = 0; i < tokens.length; i++) {\\n            if (tokens[i] == address(0x01)) {\\n                (bool success, ) = payable(recipient).call{ value: address(this).balance }(\\\"\\\");\\n                require(success, \\\"Could not withdraw ether\\\");\\n                continue;\\n            }\\n            IERC20Spec token = IERC20Spec(tokens[i]);\\n            uint256 balance = token.balanceOf(address(this));\\n            if (balance > 0) {\\n                token.transfer(recipient, balance);\\n            }\\n\\n            emit Withdraw(recipient, tokens[i], balance);\\n        }\\n    }\\n\\n    /// @notice pause the contract - no funds can be sent to the LockDrop contract\\n    function pause() external onlySafe expectUnpaused {\\n        paused = true;\\n        emit Pause();\\n    }\\n\\n    /// @notice unpause the contract\\n    function unpause() external onlySafe expectPaused {\\n        paused = false;\\n        emit Unpause();\\n    }\\n\\n    /// @notice stops the contract - no funds can be sent to the LockDrop contract, this is irreversible\\n    function stop() external onlySafe {\\n        stopBlock = block.number;\\n        emit Stop();\\n    }\\n\\n    // GETTERS //\\n    function getSafeAddress() external view returns (address) {\\n        return address(SAFE);\\n    }\\n\\n    function getLockDropAddress() external view returns (address) {\\n        return LOCK_DROP_ADDRESS;\\n    }\\n\\n    function getSovTokenAddress() external view returns (address) {\\n        return SOV_TOKEN_ADDRESS;\\n    }\\n\\n    function getDepositorAddress() external view returns (address) {\\n        return DEPOSITOR_ADDRESS;\\n    }\\n\\n    function isStopped() external view returns (bool) {\\n        return stopBlock != 0;\\n    }\\n\\n    function getStopBlock() external view returns (uint256) {\\n        return stopBlock;\\n    }\\n\\n    function isPaused() external view returns (bool) {\\n        return paused;\\n    }\\n}\\n\",\"keccak256\":\"0x369f6568f88d6aecf35bfc535199421e5f726be759abd4eb7f8bddbbe949a46e\",\"license\":\"MIT\"},\"contracts/integrations/bob/interfaces/ISafeDepositsSender.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\ninterface ISafeDepositsSender {\\n    event Withdraw(address indexed from, address indexed token, uint256 amount);\\n    event DepositToLockdrop(address indexed token, uint256 amount);\\n    event WithdrawBalanceFromSafe(address indexed token, uint256 balance);\\n    event DepositSOVToLockdrop(uint256 amount);\\n    event Pause();\\n    event Unpause();\\n    event Stop();\\n    event setDepositor(address oldDepositor, address newDepositor);\\n\\n    function getSafeAddress() external view returns (address);\\n    function getLockDropAddress() external view returns (address);\\n    function getSovTokenAddress() external view returns (address);\\n    function getDepositorAddress() external view returns (address);\\n    function isStopped() external view returns (bool);\\n    function isPaused() external view returns (bool);\\n\\n    // @note amount > 0 should be checked by the caller\\n    function withdraw(\\n        address[] calldata tokens,\\n        uint256[] calldata amounts,\\n        address recipient\\n    ) external;\\n\\n    function withdrawAll(address[] calldata tokens, address recipient) external;\\n\\n    function pause() external;\\n\\n    function unpause() external;\\n\\n    function stop() external;\\n\\n    function setDepositorAddress(address _newDepositor) external;\\n\\n    function sendToLockDropContract(\\n        address[] calldata tokens,\\n        uint256[] calldata amounts,\\n        uint256 sovAmount\\n    ) external;\\n}\\n\",\"keccak256\":\"0x2408640d557d39613f35557f44bd84d48411d1a2ad03fdd3bef10569775f1600\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_depositor": "Address of the depositor account",
          "_lockDrop": "Address of the lock drop contract",
          "_safeAddress": "Address of the Gnosis Safe",
          "_sovToken": "Address of the SOV token contract"
        }
      },
      "sendToLockDropContract(address[],uint256[],uint256)": {
        "details": "This function is for sending tokens to the LockDrop contract for users to receive rewards and to be bridged to the BOB mainnet for Sovryn DEXThe function is allowed to be called only by the DEPOSITOR_ADDRESSToken amounts and SOV amount to send are calculated offchain",
        "params": {
          "amounts": "List of amounts of tokens to send",
          "sovAmount": "Amount of SOV tokens to send",
          "tokens": "List of tokens to send"
        }
      },
      "setDepositorAddress(address)": {
        "details": "Only Safe can call this functionNew depositor can be zero address",
        "params": {
          "_newDepositor": "New depositor address"
        }
      },
      "withdraw(address[],uint256[],address)": {
        "details": "Only Safe can call this functionRecipient should not be a zero address",
        "params": {
          "amounts": "List of token amounts to withdraw",
          "recipient": "Recipient address",
          "tokens": "List of token addresses to withdraw"
        }
      },
      "withdrawAll(address[],address)": {
        "details": "Only Safe can call this functionRecipient should not be a zero address",
        "params": {
          "recipient": "Recipient address",
          "tokens": "List of token addresses to withdraw"
        }
      }
    },
    "title": "SafeDepositsSender",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "pause()": {
        "notice": "pause the contract - no funds can be sent to the LockDrop contract"
      },
      "sendToLockDropContract(address[],uint256[],uint256)": {
        "notice": "Sends tokens to the LockDrop contract"
      },
      "setDepositorAddress(address)": {
        "notice": "Sets new depositor address"
      },
      "stop()": {
        "notice": "stops the contract - no funds can be sent to the LockDrop contract, this is irreversible"
      },
      "unpause()": {
        "notice": "unpause the contract"
      },
      "withdraw(address[],uint256[],address)": {
        "notice": "Withdraws tokens from this contract to a recipient addressWithdrawal to the Safe address will affect balances and rewardsAmount > 0 should be checked by the caller before calling this function"
      },
      "withdrawAll(address[],address)": {
        "notice": "Withdraws all tokens from this contract to a recipientAmount > 0 should be checked by the caller before calling this functionWithdrawal to the Safe address will affect balances and rewards"
      }
    },
    "notice": "This contract is a gateway for depositing funds into the Bob locker contracts",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 57,
        "contract": "contracts/integrations/bob/SafeDepositsSender.sol:SafeDepositsSender",
        "label": "DEPOSITOR_ADDRESS",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 59,
        "contract": "contracts/integrations/bob/SafeDepositsSender.sol:SafeDepositsSender",
        "label": "stopBlock",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 61,
        "contract": "contracts/integrations/bob/SafeDepositsSender.sol:SafeDepositsSender",
        "label": "paused",
        "offset": 0,
        "slot": "2",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}