{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lockedUntil",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalStaked",
          "type": "uint256"
        }
      ],
      "name": "TokensStaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lockedTS",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "value",
          "type": "uint96"
        }
      ],
      "name": "VestingStakeSet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAX_DURATION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SOVToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vesting",
          "type": "address"
        }
      ],
      "name": "addContractCodeHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pauser",
          "type": "address"
        }
      ],
      "name": "addPauser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "isAdmin",
          "type": "address"
        }
      ],
      "name": "admins",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allUnlocked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "balance",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vesting",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "startFrom",
          "type": "uint256"
        }
      ],
      "name": "cancelTeamVesting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startDate",
          "type": "uint256"
        }
      ],
      "name": "computeWeightByDate",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "weight",
          "type": "uint96"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "lockDate",
          "type": "uint256"
        }
      ],
      "name": "delegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "lockDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "delegateBySig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delagatee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "index",
          "type": "uint32"
        }
      ],
      "name": "delegateStakingCheckpoints",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "fromBlock",
              "type": "uint32"
            },
            {
              "internalType": "uint96",
              "name": "stake",
              "type": "uint96"
            }
          ],
          "internalType": "struct IStaking.Checkpoint",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "until",
          "type": "uint256"
        }
      ],
      "name": "delegates",
      "outputs": [
        {
          "internalType": "address",
          "name": "_delegate",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "previousLock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "until",
          "type": "uint256"
        }
      ],
      "name": "extendStakingDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeSharing",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_freeze",
          "type": "bool"
        }
      ],
      "name": "freezeUnfreeze",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "lockedTS",
          "type": "uint256"
        }
      ],
      "name": "getCurrentStakedUntil",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getCurrentVotes",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMaxVestingWithdrawIterations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPriorStakeByDateForDelegatee",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPriorTotalStakesForDate",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "blockNumber",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "getPriorTotalVotingPower",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPriorUserStakeByDate",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPriorVestingStakeByDate",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "getPriorVestingWeightedStake",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "votes",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "getPriorVotes",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "getPriorWeightedStake",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "priorWeightedStake",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getStakes",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "dates",
          "type": "uint256[]"
        },
        {
          "internalType": "uint96[]",
          "name": "stakes",
          "type": "uint96[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStorageDefaultWeightScaling",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStorageDelegationTypehash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStorageDomainTypehash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStorageMaxDurationToStakeTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStorageMaxVotingWeight",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStorageName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStorageRangeForWeightScaling",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "minWeightScaling",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxWeightScaling",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStorageWeightFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint96",
          "name": "amount",
          "type": "uint96"
        },
        {
          "internalType": "uint256",
          "name": "until",
          "type": "uint256"
        }
      ],
      "name": "getWithdrawAmounts",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        },
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint96",
          "name": "amount",
          "type": "uint96"
        },
        {
          "internalType": "uint256",
          "name": "until",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "governanceWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vesting",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "governanceWithdrawVesting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "stakerAddress",
          "type": "address"
        }
      ],
      "name": "isVestingContract",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "kickoffTS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "migrateToNewStakingContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "newStakingContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "numDelegateStakingCheckpoints",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "checkpointsQty",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "numTotalStakingCheckpoints",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "checkpointsQty",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "numUserStakingCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "checkpointsQty",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "numVestingCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "checkpointsQty",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_pause",
          "type": "bool"
        }
      ],
      "name": "pauseUnpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "isPauser",
          "type": "address"
        }
      ],
      "name": "pausers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "receiveApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "removeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vesting",
          "type": "address"
        }
      ],
      "name": "removeContractCodeHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pauser",
          "type": "address"
        }
      ],
      "name": "removePauser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeSharing",
          "type": "address"
        }
      ],
      "name": "setFeeSharing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "maxIterations",
          "type": "uint256"
        }
      ],
      "name": "setMaxVestingWithdrawIterations",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newStakingContract",
          "type": "address"
        }
      ],
      "name": "setNewStakingContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vestingRegistryProxy",
          "type": "address"
        }
      ],
      "name": "setVestingRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "lockedDates",
          "type": "uint256[]"
        },
        {
          "internalType": "uint96[]",
          "name": "values",
          "type": "uint96[]"
        }
      ],
      "name": "setVestingStakes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint96",
          "name": "_weightScaling",
          "type": "uint96"
        }
      ],
      "name": "setWeightScaling",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint96",
          "name": "amount",
          "type": "uint96"
        },
        {
          "internalType": "uint256",
          "name": "until",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "stakeFor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "cliff",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "intervalLength",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "stakeFor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "name": "stakeBySchedule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint96",
          "name": "amount",
          "type": "uint96"
        },
        {
          "internalType": "uint256",
          "name": "until",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "stakeFor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "name": "stakeWithApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "cliff",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "intervalLength",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "stakeFor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "name": "stakesBySchedule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "timestampToLockDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "index",
          "type": "uint32"
        }
      ],
      "name": "totalStakingCheckpoints",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "fromBlock",
              "type": "uint32"
            },
            {
              "internalType": "uint96",
              "name": "stake",
              "type": "uint96"
            }
          ],
          "internalType": "struct IStaking.Checkpoint",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlockAllTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "index",
          "type": "uint32"
        }
      ],
      "name": "userStakingCheckpoints",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "fromBlock",
              "type": "uint32"
            },
            {
              "internalType": "uint96",
              "name": "stake",
              "type": "uint96"
            }
          ],
          "internalType": "struct IStaking.Checkpoint",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "index",
          "type": "uint32"
        }
      ],
      "name": "vestingCheckpoints",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "fromBlock",
              "type": "uint32"
            },
            {
              "internalType": "uint96",
              "name": "stake",
              "type": "uint96"
            }
          ],
          "internalType": "struct IStaking.Checkpoint",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "vestingLogicCodeHash",
          "type": "bytes32"
        }
      ],
      "name": "vestingCodeHashes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingRegistryLogic",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "isWhitelisted",
          "type": "address"
        }
      ],
      "name": "vestingWhitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weightScaling",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "weightedStakeByDate",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "power",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "weightedVestingStakeByDate",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "power",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint96",
          "name": "amount",
          "type": "uint96"
        },
        {
          "internalType": "uint256",
          "name": "until",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "MAX_DURATION()": "b1724b46",
    "SOVToken()": "a58848c5",
    "addAdmin(address)": "70480275",
    "addContractCodeHash(address)": "a20d8d03",
    "addPauser(address)": "82dc1ec4",
    "admins(address)": "429b62e5",
    "allUnlocked()": "9929e886",
    "balanceOf(address)": "70a08231",
    "cancelTeamVesting(address,address,uint256)": "765dade9",
    "computeWeightByDate(uint256,uint256)": "62cf8a08",
    "delegate(address,uint256)": "026e402b",
    "delegateBySig(address,uint256,uint256,uint256,uint8,bytes32,bytes32)": "e63a562e",
    "delegateStakingCheckpoints(address,uint256,uint32)": "6b6fde0e",
    "delegates(address,uint256)": "27dd1b00",
    "extendStakingDuration(uint256,uint256)": "eefb8c47",
    "feeSharing()": "03a18fa3",
    "freezeUnfreeze(bool)": "9604c618",
    "frozen()": "054f7d9c",
    "getCurrentStakedUntil(uint256)": "d5c38464",
    "getCurrentVotes(address)": "b4b5ea57",
    "getMaxVestingWithdrawIterations()": "ec8e0b29",
    "getPriorStakeByDateForDelegatee(address,uint256,uint256)": "e97ffacb",
    "getPriorTotalStakesForDate(uint256,uint256)": "f09cfc64",
    "getPriorTotalVotingPower(uint32,uint256)": "2522d7ba",
    "getPriorUserStakeByDate(address,uint256,uint256)": "cf7b684a",
    "getPriorVestingStakeByDate(uint256,uint256)": "c70a7e96",
    "getPriorVestingWeightedStake(uint256,uint256)": "cdbe7155",
    "getPriorVotes(address,uint256,uint256)": "836eebee",
    "getPriorWeightedStake(address,uint256,uint256)": "37e6b1c1",
    "getStakes(address)": "7ba6f458",
    "getStorageDefaultWeightScaling()": "805c49f3",
    "getStorageDelegationTypehash()": "332647b6",
    "getStorageDomainTypehash()": "a9d3ad1c",
    "getStorageMaxDurationToStakeTokens()": "9e5ff1eb",
    "getStorageMaxVotingWeight()": "d8fc90e8",
    "getStorageName()": "1ca6cbeb",
    "getStorageRangeForWeightScaling()": "8cdf855f",
    "getStorageWeightFactor()": "048c9588",
    "getWithdrawAmounts(uint96,uint256)": "96a590c1",
    "governanceWithdraw(uint96,uint256,address)": "800b64ca",
    "governanceWithdrawVesting(address,address)": "3827fca5",
    "isOwner()": "8f32d59b",
    "isVestingContract(address)": "ca6860df",
    "kickoffTS()": "00073f99",
    "migrateToNewStakingContract()": "5419675f",
    "newStakingContract()": "ae81dfe4",
    "nonces(address)": "7ecebe00",
    "numDelegateStakingCheckpoints(address,uint256)": "94c2ce58",
    "numTotalStakingCheckpoints(uint256)": "9436e7d4",
    "numUserStakingCheckpoints(address,uint256)": "db27ec18",
    "numVestingCheckpoints(uint256)": "bb533cf2",
    "owner()": "8da5cb5b",
    "pauseUnpause(bool)": "b0667f7a",
    "paused()": "5c975abb",
    "pausers(address)": "80f51c12",
    "receiveApproval(address,uint256,address,bytes)": "8f4ffcb1",
    "removeAdmin(address)": "1785f53c",
    "removeContractCodeHash(address)": "25464cc5",
    "removePauser(address)": "6b2c0f55",
    "setFeeSharing(address)": "626ee2d9",
    "setMaxVestingWithdrawIterations(uint256)": "5b66a324",
    "setNewStakingContract(address)": "9a377b82",
    "setVestingRegistry(address)": "450b0601",
    "setVestingStakes(uint256[],uint96[])": "6e56c1dd",
    "setWeightScaling(uint96)": "b8a98732",
    "stake(uint96,uint256,address,address)": "25629ec0",
    "stakeBySchedule(uint256,uint256,uint256,uint256,address,address)": "c1b79b05",
    "stakeWithApproval(address,uint96,uint256,address,address)": "0c09ddfd",
    "stakesBySchedule(uint256,uint256,uint256,uint256,address,address)": "4b2fea1e",
    "timestampToLockDate(uint256)": "72ec9795",
    "totalStakingCheckpoints(uint256,uint32)": "dfb267c2",
    "transferOwnership(address)": "f2fde38b",
    "unlockAllTokens()": "5e0be607",
    "userStakingCheckpoints(address,uint256,uint32)": "68cefccc",
    "vestingCheckpoints(uint256,uint32)": "f3f19731",
    "vestingCodeHashes(bytes32)": "07392cc0",
    "vestingRegistryLogic()": "104932cf",
    "vestingWhitelist(address)": "adae9002",
    "weightScaling()": "bf626ec1",
    "weightedStakeByDate(address,uint256,uint256,uint256)": "8dae1b16",
    "weightedVestingStakeByDate(uint256,uint256,uint256)": "ba21c6d7",
    "withdraw(uint96,uint256,address)": "dab6ca44"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockedUntil\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"}],\"name\":\"TokensStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockedTS\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"value\",\"type\":\"uint96\"}],\"name\":\"VestingStakeSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SOVToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vesting\",\"type\":\"address\"}],\"name\":\"addContractCodeHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pauser\",\"type\":\"address\"}],\"name\":\"addPauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isAdmin\",\"type\":\"address\"}],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allUnlocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vesting\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startFrom\",\"type\":\"uint256\"}],\"name\":\"cancelTeamVesting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"}],\"name\":\"computeWeightByDate\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"weight\",\"type\":\"uint96\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lockDate\",\"type\":\"uint256\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lockDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delagatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"delegateStakingCheckpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStaking.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"until\",\"type\":\"uint256\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"previousLock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"until\",\"type\":\"uint256\"}],\"name\":\"extendStakingDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeSharing\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_freeze\",\"type\":\"bool\"}],\"name\":\"freezeUnfreeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lockedTS\",\"type\":\"uint256\"}],\"name\":\"getCurrentStakedUntil\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCurrentVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxVestingWithdrawIterations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorStakeByDateForDelegatee\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorTotalStakesForDate\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"getPriorTotalVotingPower\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorUserStakeByDate\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorVestingStakeByDate\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"getPriorVestingWeightedStake\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"votes\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"getPriorVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"getPriorWeightedStake\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"priorWeightedStake\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getStakes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"dates\",\"type\":\"uint256[]\"},{\"internalType\":\"uint96[]\",\"name\":\"stakes\",\"type\":\"uint96[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStorageDefaultWeightScaling\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStorageDelegationTypehash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStorageDomainTypehash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStorageMaxDurationToStakeTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStorageMaxVotingWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStorageName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStorageRangeForWeightScaling\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minWeightScaling\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWeightScaling\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStorageWeightFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"until\",\"type\":\"uint256\"}],\"name\":\"getWithdrawAmounts\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"until\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"governanceWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vesting\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"governanceWithdrawVesting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakerAddress\",\"type\":\"address\"}],\"name\":\"isVestingContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kickoffTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrateToNewStakingContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newStakingContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"numDelegateStakingCheckpoints\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"checkpointsQty\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"numTotalStakingCheckpoints\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"checkpointsQty\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"numUserStakingCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"checkpointsQty\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"numVestingCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"checkpointsQty\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_pause\",\"type\":\"bool\"}],\"name\":\"pauseUnpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isPauser\",\"type\":\"address\"}],\"name\":\"pausers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"receiveApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vesting\",\"type\":\"address\"}],\"name\":\"removeContractCodeHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pauser\",\"type\":\"address\"}],\"name\":\"removePauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeSharing\",\"type\":\"address\"}],\"name\":\"setFeeSharing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxIterations\",\"type\":\"uint256\"}],\"name\":\"setMaxVestingWithdrawIterations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newStakingContract\",\"type\":\"address\"}],\"name\":\"setNewStakingContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vestingRegistryProxy\",\"type\":\"address\"}],\"name\":\"setVestingRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"lockedDates\",\"type\":\"uint256[]\"},{\"internalType\":\"uint96[]\",\"name\":\"values\",\"type\":\"uint96[]\"}],\"name\":\"setVestingStakes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"_weightScaling\",\"type\":\"uint96\"}],\"name\":\"setWeightScaling\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"until\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"stakeFor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cliff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"intervalLength\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"stakeFor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"stakeBySchedule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"until\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"stakeFor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"stakeWithApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cliff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"intervalLength\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"stakeFor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"stakesBySchedule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"timestampToLockDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"totalStakingCheckpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStaking.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockAllTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"userStakingCheckpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStaking.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"vestingCheckpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStaking.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"vestingLogicCodeHash\",\"type\":\"bytes32\"}],\"name\":\"vestingCodeHashes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingRegistryLogic\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"isWhitelisted\",\"type\":\"address\"}],\"name\":\"vestingWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weightScaling\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"weightedStakeByDate\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"power\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"weightedVestingStakeByDate\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"power\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"until\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"MAX_DURATION()\":{\"returns\":{\"_0\":\"uint96 MAX_DURATION for staking*\"}},\"addAdmin(address)\":{\"params\":{\"_admin\":\"The addresses of the account to grant permissions. \"}},\"addContractCodeHash(address)\":{\"details\":\"We need it to use isVestingContract() function instead of isContract()\",\"params\":{\"vesting\":\"The address of Vesting contract.\"}},\"addPauser(address)\":{\"params\":{\"_pauser\":\"The address to grant pauser permissions. \"}},\"admins(address)\":{\"details\":\"user => flag whether user has admin role.multisig should be an admin, admin can invoke only governanceWithdrawVesting function, \\tthis function works only with Team Vesting contracts\"},\"balanceOf(address)\":{\"details\":\"Iterate checkpoints adding up stakes.\",\"params\":{\"account\":\"The address of the account to get the balance of.\"},\"returns\":{\"balance\":\"The number of tokens held. \"}},\"cancelTeamVesting(address,address,uint256)\":{\"params\":{\"receiver\":\"The receiving address.\",\"startFrom\":\"The start value for the iterations.\",\"vesting\":\"The vesting address.\"}},\"computeWeightByDate(uint256,uint256)\":{\"params\":{\"date\":\"The unlocking date.\",\"startDate\":\"We compute the weight for the tokens staked until 'date' on 'startDate'.\"},\"returns\":{\"weight\":\"The weighted stake the account had as of the given block. \"}},\"delegate(address,uint256)\":{\"params\":{\"delegatee\":\"The address to delegate votes to.\",\"lockDate\":\"the date if the position to delegate. \"}},\"delegateBySig(address,uint256,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The signature needs to be broken up into 3 parameters, known as v, r and s: const r = '0x' + sig.substring(2).substring(0, 64); const s = '0x' + sig.substring(2).substring(64, 128); const v = '0x' + sig.substring(2).substring(128, 130);\",\"params\":{\"delegatee\":\"The address to delegate votes to.\",\"expiry\":\"The time at which to expire the signature.\",\"lockDate\":\"The date until which the position is locked.\",\"nonce\":\"The contract state required to match the signature.\",\"r\":\"Half of the ECDSA signature pair.\",\"s\":\"Half of the ECDSA signature pair. \",\"v\":\"The recovery byte of the signature.\"}},\"delegateStakingCheckpoints(address,uint256,uint32)\":{\"details\":\"delegateStakingCheckpoints[delegatee][date][index] is a checkpoint.\"},\"delegates(address,uint256)\":{\"params\":{\"staker\":\"- the delegating address\",\"until\":\"- delegated voting\"},\"returns\":{\"_delegate\":\"- voting power delegated to address\"}},\"extendStakingDuration(uint256,uint256)\":{\"params\":{\"previousLock\":\"The old unlocking timestamp.\",\"until\":\"The new unlocking timestamp in seconds. \"}},\"freezeUnfreeze(bool)\":{\"details\":\"When freezing, pause is always applied too. When unfreezing, the contract is left in paused stated. \",\"params\":{\"_freeze\":\"true when freezing, false when unfreezing\"}},\"frozen()\":{\"details\":\"Staking contract is frozen\"},\"getCurrentStakedUntil(uint256)\":{\"params\":{\"lockedTS\":\"The timestamp to get the staked tokens for. \"}},\"getCurrentVotes(address)\":{\"details\":\"This is a wrapper to simplify arguments. The actual computation is performed on WeightedStaking parent contract.\",\"params\":{\"account\":\"The address to get votes balance.\"},\"returns\":{\"_0\":\"The number of current votes for a user account. \"}},\"getMaxVestingWithdrawIterations()\":{\"returns\":{\"_0\":\"max iteration value.\"}},\"getPriorStakeByDateForDelegatee(address,uint256,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.\",\"params\":{\"account\":\"The address of the account to check.\",\"blockNumber\":\"The block number to get the vote balance at.\",\"date\":\"The staking date to compute the power for.\"},\"returns\":{\"_0\":\"The number of votes the account had as of the given block. \"}},\"getPriorTotalStakesForDate(uint256,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation. TODO: WeightedStaking::getPriorTotalStakesForDate should probably better be internal instead of a public function.\",\"params\":{\"blockNumber\":\"The block number to get the vote balance at.\",\"date\":\"The date to check the stakes for.\"},\"returns\":{\"_0\":\"The number of votes the account had as of the given block. \"}},\"getPriorTotalVotingPower(uint32,uint256)\":{\"params\":{\"blockNumber\":\"The block number, needed for checkpointing.\",\"time\":\"The timestamp for which to calculate the total voting power.\"},\"returns\":{\"_0\":\"uint96 The total voting power at the given time. \"}},\"getPriorUserStakeByDate(address,uint256,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.\",\"params\":{\"account\":\"The address of the account to check.\",\"blockNumber\":\"The block number to get the vote balance at.\",\"date\":\"The lock date.\"},\"returns\":{\"_0\":\"The number of votes the account had as of the given block. \"}},\"getPriorVestingStakeByDate(uint256,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.\",\"params\":{\"blockNumber\":\"The block number to get the vote balance at.\",\"date\":\"The lock date.\"},\"returns\":{\"_0\":\"The number of votes the account had as of the given block. \"}},\"getPriorVestingWeightedStake(uint256,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.      Used for fee sharing, not voting. TODO: WeightedStaking::getPriorVestingWeightedStake is using the variable name \\\"votes\\\" to add up token stake, and that could be misleading.\",\"params\":{\"blockNumber\":\"The block number to get the vote balance at.\",\"date\":\"The staking date to compute the power for.\"},\"returns\":{\"votes\":\"The weighted stake the account had as of the given block. \"}},\"getPriorVotes(address,uint256,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.      Used for Voting, not for fee sharing.\",\"params\":{\"account\":\"The address of the account to check.\",\"blockNumber\":\"The block number to get the vote balance at.\",\"date\":\"The staking date to compute the power for.\"},\"returns\":{\"_0\":\"The number of votes the delegatee had as of the given block. \"}},\"getPriorWeightedStake(address,uint256,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.      Used for fee sharing, not voting.\",\"params\":{\"account\":\"The address of the account to check.\",\"blockNumber\":\"The block number to get the vote balance at.\",\"date\":\"The date/timestamp of the unstaking time.\"},\"returns\":{\"priorWeightedStake\":\"The weighted stake the account had as of the given block. \"}},\"getStakes(address)\":{\"params\":{\"account\":\"The address to get stakes.\"},\"returns\":{\"dates\":\"The array of dates\",\"stakes\":\"The array of stakes \"}},\"getStorageDefaultWeightScaling()\":{\"returns\":{\"_0\":\"uint256(DEFAULT_WEIGHT_SCALING);\"}},\"getStorageDelegationTypehash()\":{\"returns\":{\"_0\":\"uint256(DELEGATION_TYPEHASH);\"}},\"getStorageDomainTypehash()\":{\"returns\":{\"_0\":\"uint256(DOMAIN_TYPEHASH);\"}},\"getStorageMaxDurationToStakeTokens()\":{\"returns\":{\"_0\":\"MAX_DURATION to stake tokens\"}},\"getStorageMaxVotingWeight()\":{\"returns\":{\"_0\":\"uint256(MAX_VOTING_WEIGHT);\"}},\"getStorageName()\":{\"returns\":{\"_0\":\"name;\"}},\"getStorageWeightFactor()\":{\"details\":\"MAX_VOTING_WEIGHT * WEIGHT_FACTOR needs to be < 792, because there are 100,000,000 SOV with 18 decimals\",\"returns\":{\"_0\":\"uint256(WEIGHT_FACTOR);\"}},\"getWithdrawAmounts(uint96,uint256)\":{\"params\":{\"amount\":\"The number of tokens to withdraw.\",\"until\":\"The date until which the tokens were staked. \"}},\"governanceWithdraw(uint96,uint256,address)\":{\"details\":\"Can be invoked only by whitelisted contract passed to governanceWithdrawVesting**WARNING** This function should not be no longer used by Sovryn Protocol. Sovryn protocol will use the cancelTeamVesting function for the withdrawal moving forward. \",\"params\":{\"amount\":\"The number of tokens to withdraw.\",\"receiver\":\"The receiver of the tokens. If not specified, send to the msg.sender\",\"until\":\"The date until which the tokens were staked.\"}},\"governanceWithdrawVesting(address,address)\":{\"details\":\"Can be invoked only by whitelisted contract passed to governanceWithdrawVesting. \",\"params\":{\"receiver\":\"The receiver of the tokens. If not specified, send to the msg.sender\",\"vesting\":\"The address of Vesting contract.\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"isVestingContract(address)\":{\"params\":{\"stakerAddress\":\"the address to check\"}},\"migrateToNewStakingContract()\":{\"details\":\"Staking contract needs to be set before by the owner. Currently not implemented, just needed for the interface.      In case it's needed at some point in the future,      the implementation needs to be changed first. \"},\"nonces(address)\":{\"details\":\"nonces[user] is a number.\"},\"numDelegateStakingCheckpoints(address,uint256)\":{\"details\":\"numDelegateStakingCheckpoints[delegatee][date] is a number.\"},\"numTotalStakingCheckpoints(uint256)\":{\"details\":\"numTotalStakingCheckpoints[date] is a number.\"},\"numUserStakingCheckpoints(address,uint256)\":{\"details\":\"numUserStakingCheckpoints[user][date] is a number\"},\"numVestingCheckpoints(uint256)\":{\"details\":\"numVestingCheckpoints[date] is a number.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pauseUnpause(bool)\":{\"params\":{\"_pause\":\"true when pausing, false when unpausing \"}},\"paused()\":{\"details\":\"Staking contract is paused\"},\"pausers(address)\":{\"details\":\"user => flag whether user has pauser role.\"},\"receiveApproval(address,uint256,address,bytes)\":{\"params\":{\"_data\":\"The data will be used for low level call.\"}},\"removeAdmin(address)\":{\"params\":{\"_admin\":\"The addresses of the account to revoke permissions. \"}},\"removeContractCodeHash(address)\":{\"details\":\"We need it to use isVestingContract() function instead of isContract()\",\"params\":{\"vesting\":\"The address of Vesting contract.\"}},\"removePauser(address)\":{\"params\":{\"_pauser\":\"The address to grant pauser permissions. \"}},\"setFeeSharing(address)\":{\"params\":{\"_feeSharing\":\"The address of FeeSharingCollectorProxy contract. \"}},\"setMaxVestingWithdrawIterations(uint256)\":{\"details\":\"set max withdraw iterations.\",\"params\":{\"maxIterations\":\"new max iterations value.\"}},\"setNewStakingContract(address)\":{\"details\":\"Doesn't have any influence as long as migrateToNewStakingContract is not implemented.\",\"params\":{\"_newStakingContract\":\"The address of the new staking contract. \"}},\"setVestingRegistry(address)\":{\"details\":\"_vestingRegistryProxy can be set to 0 as this function can be reused by various other functionalities without the necessity of linking it with Vesting Registry\",\"params\":{\"_vestingRegistryProxy\":\"the address of vesting registry proxy contract\"}},\"setVestingStakes(uint256[],uint96[])\":{\"params\":{\"lockedDates\":\"The arrays of lock dates.\",\"values\":\"The array of values to add to the staked balance.\"}},\"setWeightScaling(uint96)\":{\"params\":{\"_weightScaling\":\"The weight scaling. \"}},\"stake(uint96,uint256,address,address)\":{\"params\":{\"amount\":\"The number of tokens to stake.\",\"delegatee\":\"The address of the delegatee or 0x0 if there is none. \",\"stakeFor\":\"The address to stake the tokens for or 0x0 if staking for oneself.\",\"until\":\"Timestamp indicating the date until which to stake.\"}},\"stakeBySchedule(uint256,uint256,uint256,uint256,address,address)\":{\"params\":{\"amount\":\"The amount of tokens to stake.\",\"cliff\":\"The time interval to the first withdraw.\",\"delegatee\":\"The address of the delegatee or 0x0 if there is none. \",\"duration\":\"The staking duration.\",\"intervalLength\":\"The length of each staking interval when cliff passed.\",\"stakeFor\":\"The address to stake the tokens for or 0x0 if staking for oneself.\"}},\"stakeWithApproval(address,uint96,uint256,address,address)\":{\"details\":\"This function will be invoked from receiveApprovalSOV.approveAndCall -> this.receiveApproval -> this.stakeWithApproval\",\"params\":{\"amount\":\"The number of tokens to stake.\",\"delegatee\":\"The address of the delegatee or 0x0 if there is none. \",\"sender\":\"The sender of SOV.approveAndCall\",\"stakeFor\":\"The address to stake the tokens for or 0x0 if staking for oneself.\",\"until\":\"Timestamp indicating the date until which to stake.\"}},\"stakesBySchedule(uint256,uint256,uint256,uint256,address,address)\":{\"details\":\"DO NOT USE this misspelled function. Use stakeBySchedule function instead. This function cannot be deprecated while we have non-upgradeable vesting contracts. \"},\"timestampToLockDate(uint256)\":{\"params\":{\"timestamp\":\"The unlocking timestamp.\"},\"returns\":{\"_0\":\"The actual unlocking date (might be up to 2 weeks shorter than intended). \"}},\"totalStakingCheckpoints(uint256,uint32)\":{\"details\":\"totalStakingCheckpoints[date][index] is a checkpoint\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unlockAllTokens()\":{\"details\":\"Last resort. \"},\"userStakingCheckpoints(address,uint256,uint32)\":{\"details\":\"userStakingCheckpoints[user][date][index] is a checkpoint.\"},\"vestingCheckpoints(uint256,uint32)\":{\"details\":\"vestingCheckpoints[date][index] is a checkpoint.\"},\"vestingCodeHashes(bytes32)\":{\"details\":\"vesting contract code hash => flag whether it's registered code hash\"},\"vestingWhitelist(address)\":{\"details\":\"vestingWhitelist[contract] is true/false.\"},\"weightScaling()\":{\"returns\":{\"_0\":\"uint96 DEFAULT_WEIGHT_SCALING\"}},\"weightedStakeByDate(address,uint256,uint256,uint256)\":{\"params\":{\"account\":\"The user address.\",\"blockNumber\":\"The block number, needed for checkpointing.\",\"date\":\"The staking date to compute the power for.\",\"startDate\":\"The date for which we need to know the power of the stake.\"},\"returns\":{\"power\":\"The stacking power. \"}},\"weightedVestingStakeByDate(uint256,uint256,uint256)\":{\"params\":{\"blockNumber\":\"The block number, needed for checkpointing.\",\"date\":\"The staking date to compute the power for. Adjusted to the next valid lock date, if necessary.\",\"startDate\":\"The date for which we need to know the power of the stake.\"},\"returns\":{\"power\":\"The stacking power. \"}},\"withdraw(uint96,uint256,address)\":{\"params\":{\"amount\":\"The number of tokens to withdraw.\",\"receiver\":\"The receiver of the tokens. If not specified, send to the msg.sender \",\"until\":\"The date until which the tokens were staked.\"}}},\"title\":\"Interface for Staking modules governance/Staking/modules\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"MAX_DURATION()\":{\"notice\":\"Returns public constant MAX_DURATION preserved for backwards compatibility Use getStorageMaxDurationToStakeTokens()\"},\"SOVToken()\":{\"notice\":\"The token to be staked\"},\"addAdmin(address)\":{\"notice\":\"Add account to Admins ACL.\"},\"addContractCodeHash(address)\":{\"notice\":\"Add vesting contract's code hash to a map of code hashes.\"},\"addPauser(address)\":{\"notice\":\"Add account to pausers ACL.\"},\"allUnlocked()\":{\"notice\":\"If this flag is set to true, all tokens are unlocked immediately see function unlockAllTokens() for details\"},\"balanceOf(address)\":{\"notice\":\"Get the number of staked tokens held by the user account.\"},\"cancelTeamVesting(address,address,uint256)\":{\"notice\":\"Governance withdraw vesting directly through staking contract. This direct withdraw vesting solves the out of gas issue when there are too many iterations when withdrawing. This function only allows cancelling vesting contract of the TeamVesting type.\"},\"computeWeightByDate(uint256,uint256)\":{\"notice\":\"Compute the weight for a specific date.\"},\"delegate(address,uint256)\":{\"notice\":\"Delegate votes from `msg.sender` which are locked until lockDate to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Delegates votes from signatory to a delegatee account. Voting with EIP-712 Signatures. Voting power can be delegated to any address, and then can be used to vote on proposals. A key benefit to users of by-signature functionality is that they can create a signed vote transaction for free, and have a trusted third-party spend rBTC(or ETH) on gas fees and write it to the blockchain for them. The third party in this scenario, submitting the SOV-holder\\u2019s signed transaction holds a voting power that is for only a single proposal. The signatory still holds the power to vote on their own behalf in the proposal if the third party has not yet published the signed transaction that was given to them.\"},\"delegateStakingCheckpoints(address,uint256,uint32)\":{\"notice\":\"A record of tokens to be unstaked at a given time which were delegated to a certain address. For delegatee voting power computation. Voting weights get adjusted bi-weekly.\"},\"delegates(address,uint256)\":{\"notice\":\"Stakers delegated voting power\"},\"extendStakingDuration(uint256,uint256)\":{\"notice\":\"Extend the staking duration until the specified date.\"},\"feeSharing()\":{\"notice\":\"the address of FeeSharingCollectorProxy contract, we need it for unstaking with slashing.\"},\"freezeUnfreeze(bool)\":{\"notice\":\"Freeze contract - disable all functions\"},\"getCurrentStakedUntil(uint256)\":{\"notice\":\"Get the current number of tokens staked for a day.\"},\"getCurrentVotes(address)\":{\"notice\":\"Get the current votes balance for a user account.\"},\"getMaxVestingWithdrawIterations()\":{\"notice\":\"Max iteration for direct withdrawal from staking to prevent out of gas issue.\"},\"getPriorStakeByDateForDelegatee(address,uint256,uint256)\":{\"notice\":\"Determine the prior number of stake for an account as of a block number.\"},\"getPriorTotalStakesForDate(uint256,uint256)\":{\"notice\":\"Determine the prior number of stake for an unlocking date as of a block number.\"},\"getPriorTotalVotingPower(uint32,uint256)\":{\"notice\":\"Compute the total voting power at a given time.\"},\"getPriorUserStakeByDate(address,uint256,uint256)\":{\"notice\":\"Determine the prior number of stake for an account until a certain lock date as of a block number.\"},\"getPriorVestingStakeByDate(uint256,uint256)\":{\"notice\":\"Determine the prior number of vested stake for an account until a certain lock date as of a block number.\"},\"getPriorVestingWeightedStake(uint256,uint256)\":{\"notice\":\"Determine the prior weighted vested amount for an account as of a block number. Iterate through checkpoints adding up voting power.\"},\"getPriorVotes(address,uint256,uint256)\":{\"notice\":\"Determine the prior number of votes for a delegatee as of a block number. Iterate through checkpoints adding up voting power.\"},\"getPriorWeightedStake(address,uint256,uint256)\":{\"notice\":\"Determine the prior weighted stake for an account as of a block number. Iterate through checkpoints adding up voting power.\"},\"getStakes(address)\":{\"notice\":\"Get list of stakes for a user account.\"},\"getStorageDelegationTypehash()\":{\"notice\":\"The EIP-712 typehash for the delegation struct used by the contract.\"},\"getStorageDomainTypehash()\":{\"notice\":\"The EIP-712 typehash for the contract's domain.\"},\"getStorageMaxDurationToStakeTokens()\":{\"notice\":\"The maximum duration to stake tokens\"},\"getStorageMaxVotingWeight()\":{\"notice\":\"The maximum possible voting weight before adding +1 (actually 10, but need 9 for computation).\"},\"getStorageRangeForWeightScaling()\":{\"notice\":\"return (uint256(MIN_WEIGHT_SCALING), uint256(MAX_WEIGHT_SCALING))\"},\"getStorageWeightFactor()\":{\"notice\":\"weight is multiplied with this factor (for allowing decimals, like 1.2x).\"},\"getWithdrawAmounts(uint96,uint256)\":{\"notice\":\"Get available and punished amount for withdrawing.\"},\"governanceWithdraw(uint96,uint256,address)\":{\"notice\":\"Withdraw the given amount of tokens.\"},\"governanceWithdrawVesting(address,address)\":{\"notice\":\"Withdraw tokens for vesting contract.\"},\"isVestingContract(address)\":{\"notice\":\"Return flag whether the given address is a registered vesting contract.\"},\"kickoffTS()\":{\"notice\":\"The timestamp of contract creation. Base for the staking period calculation.\"},\"migrateToNewStakingContract()\":{\"notice\":\"Allow a staker to migrate his positions to the new staking contract.\"},\"newStakingContract()\":{\"notice\":\"Used for stake migrations to a new staking contract with a different storage structure\"},\"nonces(address)\":{\"notice\":\"A record of states for signing / validating signatures\"},\"numDelegateStakingCheckpoints(address,uint256)\":{\"notice\":\"The number of total staking checkpoints for each date per delegate.\"},\"numTotalStakingCheckpoints(uint256)\":{\"notice\":\"The number of total staking checkpoints for each date.\"},\"numUserStakingCheckpoints(address,uint256)\":{\"notice\":\"The number of total staking checkpoints for each date per user.\"},\"numVestingCheckpoints(uint256)\":{\"notice\":\"The number of total vesting checkpoints for each date.\"},\"pauseUnpause(bool)\":{\"notice\":\"Pause/unpause contract\"},\"receiveApproval(address,uint256,address,bytes)\":{\"notice\":\"Receives approval from SOV token.\"},\"removeAdmin(address)\":{\"notice\":\"Remove account from Admins ACL.\"},\"removeContractCodeHash(address)\":{\"notice\":\"Remove vesting contract's code hash to a map of code hashes.\"},\"removePauser(address)\":{\"notice\":\"Remove account from pausers ACL.\"},\"setFeeSharing(address)\":{\"notice\":\"Allows the owner to set a fee sharing proxy contract. We need it for unstaking with slashing.\"},\"setNewStakingContract(address)\":{\"notice\":\"Allow the owner to set a new staking contract. As a consequence it allows the stakers to migrate their positions to the new contract.\"},\"setVestingRegistry(address)\":{\"notice\":\"sets vesting registry\"},\"setVestingStakes(uint256[],uint96[])\":{\"notice\":\"Sets the users' vesting stakes for a giving lock dates and writes checkpoints.\"},\"setWeightScaling(uint96)\":{\"notice\":\"Allow the owner to set weight scaling. We need it for unstaking with slashing.\"},\"stake(uint96,uint256,address,address)\":{\"notice\":\"Stake the given amount for the given duration of time.\"},\"stakeBySchedule(uint256,uint256,uint256,uint256,address,address)\":{\"notice\":\"Stake tokens according to the vesting schedule.\"},\"stakeWithApproval(address,uint96,uint256,address,address)\":{\"notice\":\"Stake the given amount for the given duration of time.\"},\"timestampToLockDate(uint256)\":{\"notice\":\"Unstaking is possible every 2 weeks only. This means, to calculate the key value for the staking checkpoints, we need to map the intended timestamp to the closest available date.\"},\"totalStakingCheckpoints(uint256,uint32)\":{\"notice\":\"A record of tokens to be unstaked at a given time in total. For total voting power computation. Voting weights get adjusted bi-weekly.\"},\"unlockAllTokens()\":{\"notice\":\"Allow the owner to unlock all tokens in case the staking contract is going to be replaced Note: Not reversible on purpose. once unlocked, everything is unlocked. The owner should not be able to just quickly unlock to withdraw his own tokens and lock again.\"},\"userStakingCheckpoints(address,uint256,uint32)\":{\"notice\":\"A record of tokens to be unstaked at a given time which per user address (address -> lockDate -> stake checkpoint)\"},\"vestingCheckpoints(uint256,uint32)\":{\"notice\":\"A record of tokens to be unstaked from vesting contract at a given time (lockDate -> vest checkpoint)\"},\"vestingRegistryLogic()\":{\"notice\":\"vesting registry contract PROXY address\"},\"vestingWhitelist(address)\":{\"notice\":\"List of vesting contracts, tokens for these contracts won't be slashed if unstaked by governance.\"},\"weightScaling()\":{\"notice\":\"used for weight scaling when unstaking with slashing.\"},\"weightedStakeByDate(address,uint256,uint256,uint256)\":{\"notice\":\"Compute the voting power for a specific date. Power = stake * weight TODO: WeightedStaking::weightedStakeByDate should probably better be internal instead of a public function.\"},\"weightedVestingStakeByDate(uint256,uint256,uint256)\":{\"notice\":\"Compute the voting power for a specific date. Power = stake * weight\"},\"withdraw(uint96,uint256,address)\":{\"notice\":\"Withdraw the given amount of tokens if they are unlocked.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"tests-foundry/staking/interfaces/IStaking.sol\":\"IStaking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@ethereum-waffle/=node_modules/@ethereum-waffle/\",\":ds-test/=foundry/lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=foundry/lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":truffle/=node_modules/truffle/\"]},\"sources\":{\"tests-foundry/staking/interfaces/IStaking.sol\":{\"keccak256\":\"0x51f3e01b95579a407d497ae72629fdfabf3f04d1ec9d68a188370eca44b89a8d\",\"urls\":[\"bzz-raw://0c46fa4abcf21ca327cee1404013fb9c12192659377ba06e35f0093d542404ab\",\"dweb:/ipfs/QmZMb2LLXzb3RvqjZxtXP1HNrP1T3ewygZwEP9gRRvSD7g\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "lockedUntil",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "totalStaked",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensStaked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "lockedTS",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint96",
              "name": "value",
              "type": "uint96",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VestingStakeSet",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_DURATION",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SOVToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_admin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addAdmin"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "vesting",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addContractCodeHash"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_pauser",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addPauser"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "isAdmin",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "admins",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allUnlocked",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "balance",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "vesting",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "startFrom",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelTeamVesting"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "computeWeightByDate",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "weight",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "lockDate",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "lockDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegateBySig"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delagatee",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "index",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegateStakingCheckpoints",
          "outputs": [
            {
              "internalType": "struct IStaking.Checkpoint",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "fromBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "uint96",
                  "name": "stake",
                  "type": "uint96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "until",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegates",
          "outputs": [
            {
              "internalType": "address",
              "name": "_delegate",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "previousLock",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "until",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "extendStakingDuration"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeSharing",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_freeze",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "freezeUnfreeze"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frozen",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "lockedTS",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentStakedUntil",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentVotes",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getMaxVestingWithdrawIterations",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPriorStakeByDateForDelegatee",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPriorTotalStakesForDate",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "blockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPriorTotalVotingPower",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPriorUserStakeByDate",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPriorVestingStakeByDate",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPriorVestingWeightedStake",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "votes",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPriorVotes",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPriorWeightedStake",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "priorWeightedStake",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakes",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "dates",
              "type": "uint256[]"
            },
            {
              "internalType": "uint96[]",
              "name": "stakes",
              "type": "uint96[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getStorageDefaultWeightScaling",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getStorageDelegationTypehash",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getStorageDomainTypehash",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getStorageMaxDurationToStakeTokens",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getStorageMaxVotingWeight",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getStorageName",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getStorageRangeForWeightScaling",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "minWeightScaling",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxWeightScaling",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getStorageWeightFactor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "amount",
              "type": "uint96"
            },
            {
              "internalType": "uint256",
              "name": "until",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getWithdrawAmounts",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            },
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "amount",
              "type": "uint96"
            },
            {
              "internalType": "uint256",
              "name": "until",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "governanceWithdraw"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "vesting",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "governanceWithdrawVesting"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isOwner",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "stakerAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isVestingContract",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "kickoffTS",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "migrateToNewStakingContract"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "newStakingContract",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "numDelegateStakingCheckpoints",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "checkpointsQty",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "numTotalStakingCheckpoints",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "checkpointsQty",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "numUserStakingCheckpoints",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "checkpointsQty",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "numVestingCheckpoints",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "checkpointsQty",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_pause",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pauseUnpause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "isPauser",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pausers",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "receiveApproval"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_admin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeAdmin"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "vesting",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeContractCodeHash"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_pauser",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removePauser"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_feeSharing",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFeeSharing"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "maxIterations",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMaxVestingWithdrawIterations"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newStakingContract",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setNewStakingContract"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_vestingRegistryProxy",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setVestingRegistry"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "lockedDates",
              "type": "uint256[]"
            },
            {
              "internalType": "uint96[]",
              "name": "values",
              "type": "uint96[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setVestingStakes"
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "_weightScaling",
              "type": "uint96"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setWeightScaling"
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "amount",
              "type": "uint96"
            },
            {
              "internalType": "uint256",
              "name": "until",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "stakeFor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stake"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cliff",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "intervalLength",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "stakeFor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stakeBySchedule"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "amount",
              "type": "uint96"
            },
            {
              "internalType": "uint256",
              "name": "until",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "stakeFor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stakeWithApproval"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cliff",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "intervalLength",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "stakeFor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stakesBySchedule"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "timestampToLockDate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "index",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "totalStakingCheckpoints",
          "outputs": [
            {
              "internalType": "struct IStaking.Checkpoint",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "fromBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "uint96",
                  "name": "stake",
                  "type": "uint96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unlockAllTokens"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "index",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userStakingCheckpoints",
          "outputs": [
            {
              "internalType": "struct IStaking.Checkpoint",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "fromBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "uint96",
                  "name": "stake",
                  "type": "uint96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "index",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "vestingCheckpoints",
          "outputs": [
            {
              "internalType": "struct IStaking.Checkpoint",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "fromBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "uint96",
                  "name": "stake",
                  "type": "uint96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "vestingLogicCodeHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "vestingCodeHashes",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vestingRegistryLogic",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "isWhitelisted",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "vestingWhitelist",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "weightScaling",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "weightedStakeByDate",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "power",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "weightedVestingStakeByDate",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "power",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "amount",
              "type": "uint96"
            },
            {
              "internalType": "uint256",
              "name": "until",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "MAX_DURATION()": {
            "returns": {
              "_0": "uint96 MAX_DURATION for staking*"
            }
          },
          "addAdmin(address)": {
            "params": {
              "_admin": "The addresses of the account to grant permissions. "
            }
          },
          "addContractCodeHash(address)": {
            "details": "We need it to use isVestingContract() function instead of isContract()",
            "params": {
              "vesting": "The address of Vesting contract."
            }
          },
          "addPauser(address)": {
            "params": {
              "_pauser": "The address to grant pauser permissions. "
            }
          },
          "admins(address)": {
            "details": "user => flag whether user has admin role.multisig should be an admin, admin can invoke only governanceWithdrawVesting function, \tthis function works only with Team Vesting contracts"
          },
          "balanceOf(address)": {
            "details": "Iterate checkpoints adding up stakes.",
            "params": {
              "account": "The address of the account to get the balance of."
            },
            "returns": {
              "balance": "The number of tokens held. "
            }
          },
          "cancelTeamVesting(address,address,uint256)": {
            "params": {
              "receiver": "The receiving address.",
              "startFrom": "The start value for the iterations.",
              "vesting": "The vesting address."
            }
          },
          "computeWeightByDate(uint256,uint256)": {
            "params": {
              "date": "The unlocking date.",
              "startDate": "We compute the weight for the tokens staked until 'date' on 'startDate'."
            },
            "returns": {
              "weight": "The weighted stake the account had as of the given block. "
            }
          },
          "delegate(address,uint256)": {
            "params": {
              "delegatee": "The address to delegate votes to.",
              "lockDate": "the date if the position to delegate. "
            }
          },
          "delegateBySig(address,uint256,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "The signature needs to be broken up into 3 parameters, known as v, r and s: const r = '0x' + sig.substring(2).substring(0, 64); const s = '0x' + sig.substring(2).substring(64, 128); const v = '0x' + sig.substring(2).substring(128, 130);",
            "params": {
              "delegatee": "The address to delegate votes to.",
              "expiry": "The time at which to expire the signature.",
              "lockDate": "The date until which the position is locked.",
              "nonce": "The contract state required to match the signature.",
              "r": "Half of the ECDSA signature pair.",
              "s": "Half of the ECDSA signature pair. ",
              "v": "The recovery byte of the signature."
            }
          },
          "delegateStakingCheckpoints(address,uint256,uint32)": {
            "details": "delegateStakingCheckpoints[delegatee][date][index] is a checkpoint."
          },
          "delegates(address,uint256)": {
            "params": {
              "staker": "- the delegating address",
              "until": "- delegated voting"
            },
            "returns": {
              "_delegate": "- voting power delegated to address"
            }
          },
          "extendStakingDuration(uint256,uint256)": {
            "params": {
              "previousLock": "The old unlocking timestamp.",
              "until": "The new unlocking timestamp in seconds. "
            }
          },
          "freezeUnfreeze(bool)": {
            "details": "When freezing, pause is always applied too. When unfreezing, the contract is left in paused stated. ",
            "params": {
              "_freeze": "true when freezing, false when unfreezing"
            }
          },
          "frozen()": {
            "details": "Staking contract is frozen"
          },
          "getCurrentStakedUntil(uint256)": {
            "params": {
              "lockedTS": "The timestamp to get the staked tokens for. "
            }
          },
          "getCurrentVotes(address)": {
            "details": "This is a wrapper to simplify arguments. The actual computation is performed on WeightedStaking parent contract.",
            "params": {
              "account": "The address to get votes balance."
            },
            "returns": {
              "_0": "The number of current votes for a user account. "
            }
          },
          "getMaxVestingWithdrawIterations()": {
            "returns": {
              "_0": "max iteration value."
            }
          },
          "getPriorStakeByDateForDelegatee(address,uint256,uint256)": {
            "details": "Block number must be a finalized block or else this function will revert to prevent misinformation.",
            "params": {
              "account": "The address of the account to check.",
              "blockNumber": "The block number to get the vote balance at.",
              "date": "The staking date to compute the power for."
            },
            "returns": {
              "_0": "The number of votes the account had as of the given block. "
            }
          },
          "getPriorTotalStakesForDate(uint256,uint256)": {
            "details": "Block number must be a finalized block or else this function will revert to prevent misinformation. TODO: WeightedStaking::getPriorTotalStakesForDate should probably better be internal instead of a public function.",
            "params": {
              "blockNumber": "The block number to get the vote balance at.",
              "date": "The date to check the stakes for."
            },
            "returns": {
              "_0": "The number of votes the account had as of the given block. "
            }
          },
          "getPriorTotalVotingPower(uint32,uint256)": {
            "params": {
              "blockNumber": "The block number, needed for checkpointing.",
              "time": "The timestamp for which to calculate the total voting power."
            },
            "returns": {
              "_0": "uint96 The total voting power at the given time. "
            }
          },
          "getPriorUserStakeByDate(address,uint256,uint256)": {
            "details": "Block number must be a finalized block or else this function will revert to prevent misinformation.",
            "params": {
              "account": "The address of the account to check.",
              "blockNumber": "The block number to get the vote balance at.",
              "date": "The lock date."
            },
            "returns": {
              "_0": "The number of votes the account had as of the given block. "
            }
          },
          "getPriorVestingStakeByDate(uint256,uint256)": {
            "details": "Block number must be a finalized block or else this function will revert to prevent misinformation.",
            "params": {
              "blockNumber": "The block number to get the vote balance at.",
              "date": "The lock date."
            },
            "returns": {
              "_0": "The number of votes the account had as of the given block. "
            }
          },
          "getPriorVestingWeightedStake(uint256,uint256)": {
            "details": "Block number must be a finalized block or else this function will revert to prevent misinformation.      Used for fee sharing, not voting. TODO: WeightedStaking::getPriorVestingWeightedStake is using the variable name \"votes\" to add up token stake, and that could be misleading.",
            "params": {
              "blockNumber": "The block number to get the vote balance at.",
              "date": "The staking date to compute the power for."
            },
            "returns": {
              "votes": "The weighted stake the account had as of the given block. "
            }
          },
          "getPriorVotes(address,uint256,uint256)": {
            "details": "Block number must be a finalized block or else this function will revert to prevent misinformation.      Used for Voting, not for fee sharing.",
            "params": {
              "account": "The address of the account to check.",
              "blockNumber": "The block number to get the vote balance at.",
              "date": "The staking date to compute the power for."
            },
            "returns": {
              "_0": "The number of votes the delegatee had as of the given block. "
            }
          },
          "getPriorWeightedStake(address,uint256,uint256)": {
            "details": "Block number must be a finalized block or else this function will revert to prevent misinformation.      Used for fee sharing, not voting.",
            "params": {
              "account": "The address of the account to check.",
              "blockNumber": "The block number to get the vote balance at.",
              "date": "The date/timestamp of the unstaking time."
            },
            "returns": {
              "priorWeightedStake": "The weighted stake the account had as of the given block. "
            }
          },
          "getStakes(address)": {
            "params": {
              "account": "The address to get stakes."
            },
            "returns": {
              "dates": "The array of dates",
              "stakes": "The array of stakes "
            }
          },
          "getStorageDefaultWeightScaling()": {
            "returns": {
              "_0": "uint256(DEFAULT_WEIGHT_SCALING);"
            }
          },
          "getStorageDelegationTypehash()": {
            "returns": {
              "_0": "uint256(DELEGATION_TYPEHASH);"
            }
          },
          "getStorageDomainTypehash()": {
            "returns": {
              "_0": "uint256(DOMAIN_TYPEHASH);"
            }
          },
          "getStorageMaxDurationToStakeTokens()": {
            "returns": {
              "_0": "MAX_DURATION to stake tokens"
            }
          },
          "getStorageMaxVotingWeight()": {
            "returns": {
              "_0": "uint256(MAX_VOTING_WEIGHT);"
            }
          },
          "getStorageName()": {
            "returns": {
              "_0": "name;"
            }
          },
          "getStorageWeightFactor()": {
            "details": "MAX_VOTING_WEIGHT * WEIGHT_FACTOR needs to be < 792, because there are 100,000,000 SOV with 18 decimals",
            "returns": {
              "_0": "uint256(WEIGHT_FACTOR);"
            }
          },
          "getWithdrawAmounts(uint96,uint256)": {
            "params": {
              "amount": "The number of tokens to withdraw.",
              "until": "The date until which the tokens were staked. "
            }
          },
          "governanceWithdraw(uint96,uint256,address)": {
            "details": "Can be invoked only by whitelisted contract passed to governanceWithdrawVesting**WARNING** This function should not be no longer used by Sovryn Protocol. Sovryn protocol will use the cancelTeamVesting function for the withdrawal moving forward. ",
            "params": {
              "amount": "The number of tokens to withdraw.",
              "receiver": "The receiver of the tokens. If not specified, send to the msg.sender",
              "until": "The date until which the tokens were staked."
            }
          },
          "governanceWithdrawVesting(address,address)": {
            "details": "Can be invoked only by whitelisted contract passed to governanceWithdrawVesting. ",
            "params": {
              "receiver": "The receiver of the tokens. If not specified, send to the msg.sender",
              "vesting": "The address of Vesting contract."
            }
          },
          "isOwner()": {
            "details": "Returns true if the caller is the current owner."
          },
          "isVestingContract(address)": {
            "params": {
              "stakerAddress": "the address to check"
            }
          },
          "migrateToNewStakingContract()": {
            "details": "Staking contract needs to be set before by the owner. Currently not implemented, just needed for the interface.      In case it's needed at some point in the future,      the implementation needs to be changed first. "
          },
          "nonces(address)": {
            "details": "nonces[user] is a number."
          },
          "numDelegateStakingCheckpoints(address,uint256)": {
            "details": "numDelegateStakingCheckpoints[delegatee][date] is a number."
          },
          "numTotalStakingCheckpoints(uint256)": {
            "details": "numTotalStakingCheckpoints[date] is a number."
          },
          "numUserStakingCheckpoints(address,uint256)": {
            "details": "numUserStakingCheckpoints[user][date] is a number"
          },
          "numVestingCheckpoints(uint256)": {
            "details": "numVestingCheckpoints[date] is a number."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pauseUnpause(bool)": {
            "params": {
              "_pause": "true when pausing, false when unpausing "
            }
          },
          "paused()": {
            "details": "Staking contract is paused"
          },
          "pausers(address)": {
            "details": "user => flag whether user has pauser role."
          },
          "receiveApproval(address,uint256,address,bytes)": {
            "params": {
              "_data": "The data will be used for low level call."
            }
          },
          "removeAdmin(address)": {
            "params": {
              "_admin": "The addresses of the account to revoke permissions. "
            }
          },
          "removeContractCodeHash(address)": {
            "details": "We need it to use isVestingContract() function instead of isContract()",
            "params": {
              "vesting": "The address of Vesting contract."
            }
          },
          "removePauser(address)": {
            "params": {
              "_pauser": "The address to grant pauser permissions. "
            }
          },
          "setFeeSharing(address)": {
            "params": {
              "_feeSharing": "The address of FeeSharingCollectorProxy contract. "
            }
          },
          "setMaxVestingWithdrawIterations(uint256)": {
            "details": "set max withdraw iterations.",
            "params": {
              "maxIterations": "new max iterations value."
            }
          },
          "setNewStakingContract(address)": {
            "details": "Doesn't have any influence as long as migrateToNewStakingContract is not implemented.",
            "params": {
              "_newStakingContract": "The address of the new staking contract. "
            }
          },
          "setVestingRegistry(address)": {
            "details": "_vestingRegistryProxy can be set to 0 as this function can be reused by various other functionalities without the necessity of linking it with Vesting Registry",
            "params": {
              "_vestingRegistryProxy": "the address of vesting registry proxy contract"
            }
          },
          "setVestingStakes(uint256[],uint96[])": {
            "params": {
              "lockedDates": "The arrays of lock dates.",
              "values": "The array of values to add to the staked balance."
            }
          },
          "setWeightScaling(uint96)": {
            "params": {
              "_weightScaling": "The weight scaling. "
            }
          },
          "stake(uint96,uint256,address,address)": {
            "params": {
              "amount": "The number of tokens to stake.",
              "delegatee": "The address of the delegatee or 0x0 if there is none. ",
              "stakeFor": "The address to stake the tokens for or 0x0 if staking for oneself.",
              "until": "Timestamp indicating the date until which to stake."
            }
          },
          "stakeBySchedule(uint256,uint256,uint256,uint256,address,address)": {
            "params": {
              "amount": "The amount of tokens to stake.",
              "cliff": "The time interval to the first withdraw.",
              "delegatee": "The address of the delegatee or 0x0 if there is none. ",
              "duration": "The staking duration.",
              "intervalLength": "The length of each staking interval when cliff passed.",
              "stakeFor": "The address to stake the tokens for or 0x0 if staking for oneself."
            }
          },
          "stakeWithApproval(address,uint96,uint256,address,address)": {
            "details": "This function will be invoked from receiveApprovalSOV.approveAndCall -> this.receiveApproval -> this.stakeWithApproval",
            "params": {
              "amount": "The number of tokens to stake.",
              "delegatee": "The address of the delegatee or 0x0 if there is none. ",
              "sender": "The sender of SOV.approveAndCall",
              "stakeFor": "The address to stake the tokens for or 0x0 if staking for oneself.",
              "until": "Timestamp indicating the date until which to stake."
            }
          },
          "stakesBySchedule(uint256,uint256,uint256,uint256,address,address)": {
            "details": "DO NOT USE this misspelled function. Use stakeBySchedule function instead. This function cannot be deprecated while we have non-upgradeable vesting contracts. "
          },
          "timestampToLockDate(uint256)": {
            "params": {
              "timestamp": "The unlocking timestamp."
            },
            "returns": {
              "_0": "The actual unlocking date (might be up to 2 weeks shorter than intended). "
            }
          },
          "totalStakingCheckpoints(uint256,uint32)": {
            "details": "totalStakingCheckpoints[date][index] is a checkpoint"
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "unlockAllTokens()": {
            "details": "Last resort. "
          },
          "userStakingCheckpoints(address,uint256,uint32)": {
            "details": "userStakingCheckpoints[user][date][index] is a checkpoint."
          },
          "vestingCheckpoints(uint256,uint32)": {
            "details": "vestingCheckpoints[date][index] is a checkpoint."
          },
          "vestingCodeHashes(bytes32)": {
            "details": "vesting contract code hash => flag whether it's registered code hash"
          },
          "vestingWhitelist(address)": {
            "details": "vestingWhitelist[contract] is true/false."
          },
          "weightScaling()": {
            "returns": {
              "_0": "uint96 DEFAULT_WEIGHT_SCALING"
            }
          },
          "weightedStakeByDate(address,uint256,uint256,uint256)": {
            "params": {
              "account": "The user address.",
              "blockNumber": "The block number, needed for checkpointing.",
              "date": "The staking date to compute the power for.",
              "startDate": "The date for which we need to know the power of the stake."
            },
            "returns": {
              "power": "The stacking power. "
            }
          },
          "weightedVestingStakeByDate(uint256,uint256,uint256)": {
            "params": {
              "blockNumber": "The block number, needed for checkpointing.",
              "date": "The staking date to compute the power for. Adjusted to the next valid lock date, if necessary.",
              "startDate": "The date for which we need to know the power of the stake."
            },
            "returns": {
              "power": "The stacking power. "
            }
          },
          "withdraw(uint96,uint256,address)": {
            "params": {
              "amount": "The number of tokens to withdraw.",
              "receiver": "The receiver of the tokens. If not specified, send to the msg.sender ",
              "until": "The date until which the tokens were staked."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "MAX_DURATION()": {
            "notice": "Returns public constant MAX_DURATION preserved for backwards compatibility Use getStorageMaxDurationToStakeTokens()"
          },
          "SOVToken()": {
            "notice": "The token to be staked"
          },
          "addAdmin(address)": {
            "notice": "Add account to Admins ACL."
          },
          "addContractCodeHash(address)": {
            "notice": "Add vesting contract's code hash to a map of code hashes."
          },
          "addPauser(address)": {
            "notice": "Add account to pausers ACL."
          },
          "allUnlocked()": {
            "notice": "If this flag is set to true, all tokens are unlocked immediately see function unlockAllTokens() for details"
          },
          "balanceOf(address)": {
            "notice": "Get the number of staked tokens held by the user account."
          },
          "cancelTeamVesting(address,address,uint256)": {
            "notice": "Governance withdraw vesting directly through staking contract. This direct withdraw vesting solves the out of gas issue when there are too many iterations when withdrawing. This function only allows cancelling vesting contract of the TeamVesting type."
          },
          "computeWeightByDate(uint256,uint256)": {
            "notice": "Compute the weight for a specific date."
          },
          "delegate(address,uint256)": {
            "notice": "Delegate votes from `msg.sender` which are locked until lockDate to `delegatee`."
          },
          "delegateBySig(address,uint256,uint256,uint256,uint8,bytes32,bytes32)": {
            "notice": "Delegates votes from signatory to a delegatee account. Voting with EIP-712 Signatures. Voting power can be delegated to any address, and then can be used to vote on proposals. A key benefit to users of by-signature functionality is that they can create a signed vote transaction for free, and have a trusted third-party spend rBTC(or ETH) on gas fees and write it to the blockchain for them. The third party in this scenario, submitting the SOV-holder’s signed transaction holds a voting power that is for only a single proposal. The signatory still holds the power to vote on their own behalf in the proposal if the third party has not yet published the signed transaction that was given to them."
          },
          "delegateStakingCheckpoints(address,uint256,uint32)": {
            "notice": "A record of tokens to be unstaked at a given time which were delegated to a certain address. For delegatee voting power computation. Voting weights get adjusted bi-weekly."
          },
          "delegates(address,uint256)": {
            "notice": "Stakers delegated voting power"
          },
          "extendStakingDuration(uint256,uint256)": {
            "notice": "Extend the staking duration until the specified date."
          },
          "feeSharing()": {
            "notice": "the address of FeeSharingCollectorProxy contract, we need it for unstaking with slashing."
          },
          "freezeUnfreeze(bool)": {
            "notice": "Freeze contract - disable all functions"
          },
          "getCurrentStakedUntil(uint256)": {
            "notice": "Get the current number of tokens staked for a day."
          },
          "getCurrentVotes(address)": {
            "notice": "Get the current votes balance for a user account."
          },
          "getMaxVestingWithdrawIterations()": {
            "notice": "Max iteration for direct withdrawal from staking to prevent out of gas issue."
          },
          "getPriorStakeByDateForDelegatee(address,uint256,uint256)": {
            "notice": "Determine the prior number of stake for an account as of a block number."
          },
          "getPriorTotalStakesForDate(uint256,uint256)": {
            "notice": "Determine the prior number of stake for an unlocking date as of a block number."
          },
          "getPriorTotalVotingPower(uint32,uint256)": {
            "notice": "Compute the total voting power at a given time."
          },
          "getPriorUserStakeByDate(address,uint256,uint256)": {
            "notice": "Determine the prior number of stake for an account until a certain lock date as of a block number."
          },
          "getPriorVestingStakeByDate(uint256,uint256)": {
            "notice": "Determine the prior number of vested stake for an account until a certain lock date as of a block number."
          },
          "getPriorVestingWeightedStake(uint256,uint256)": {
            "notice": "Determine the prior weighted vested amount for an account as of a block number. Iterate through checkpoints adding up voting power."
          },
          "getPriorVotes(address,uint256,uint256)": {
            "notice": "Determine the prior number of votes for a delegatee as of a block number. Iterate through checkpoints adding up voting power."
          },
          "getPriorWeightedStake(address,uint256,uint256)": {
            "notice": "Determine the prior weighted stake for an account as of a block number. Iterate through checkpoints adding up voting power."
          },
          "getStakes(address)": {
            "notice": "Get list of stakes for a user account."
          },
          "getStorageDelegationTypehash()": {
            "notice": "The EIP-712 typehash for the delegation struct used by the contract."
          },
          "getStorageDomainTypehash()": {
            "notice": "The EIP-712 typehash for the contract's domain."
          },
          "getStorageMaxDurationToStakeTokens()": {
            "notice": "The maximum duration to stake tokens"
          },
          "getStorageMaxVotingWeight()": {
            "notice": "The maximum possible voting weight before adding +1 (actually 10, but need 9 for computation)."
          },
          "getStorageRangeForWeightScaling()": {
            "notice": "return (uint256(MIN_WEIGHT_SCALING), uint256(MAX_WEIGHT_SCALING))"
          },
          "getStorageWeightFactor()": {
            "notice": "weight is multiplied with this factor (for allowing decimals, like 1.2x)."
          },
          "getWithdrawAmounts(uint96,uint256)": {
            "notice": "Get available and punished amount for withdrawing."
          },
          "governanceWithdraw(uint96,uint256,address)": {
            "notice": "Withdraw the given amount of tokens."
          },
          "governanceWithdrawVesting(address,address)": {
            "notice": "Withdraw tokens for vesting contract."
          },
          "isVestingContract(address)": {
            "notice": "Return flag whether the given address is a registered vesting contract."
          },
          "kickoffTS()": {
            "notice": "The timestamp of contract creation. Base for the staking period calculation."
          },
          "migrateToNewStakingContract()": {
            "notice": "Allow a staker to migrate his positions to the new staking contract."
          },
          "newStakingContract()": {
            "notice": "Used for stake migrations to a new staking contract with a different storage structure"
          },
          "nonces(address)": {
            "notice": "A record of states for signing / validating signatures"
          },
          "numDelegateStakingCheckpoints(address,uint256)": {
            "notice": "The number of total staking checkpoints for each date per delegate."
          },
          "numTotalStakingCheckpoints(uint256)": {
            "notice": "The number of total staking checkpoints for each date."
          },
          "numUserStakingCheckpoints(address,uint256)": {
            "notice": "The number of total staking checkpoints for each date per user."
          },
          "numVestingCheckpoints(uint256)": {
            "notice": "The number of total vesting checkpoints for each date."
          },
          "pauseUnpause(bool)": {
            "notice": "Pause/unpause contract"
          },
          "receiveApproval(address,uint256,address,bytes)": {
            "notice": "Receives approval from SOV token."
          },
          "removeAdmin(address)": {
            "notice": "Remove account from Admins ACL."
          },
          "removeContractCodeHash(address)": {
            "notice": "Remove vesting contract's code hash to a map of code hashes."
          },
          "removePauser(address)": {
            "notice": "Remove account from pausers ACL."
          },
          "setFeeSharing(address)": {
            "notice": "Allows the owner to set a fee sharing proxy contract. We need it for unstaking with slashing."
          },
          "setNewStakingContract(address)": {
            "notice": "Allow the owner to set a new staking contract. As a consequence it allows the stakers to migrate their positions to the new contract."
          },
          "setVestingRegistry(address)": {
            "notice": "sets vesting registry"
          },
          "setVestingStakes(uint256[],uint96[])": {
            "notice": "Sets the users' vesting stakes for a giving lock dates and writes checkpoints."
          },
          "setWeightScaling(uint96)": {
            "notice": "Allow the owner to set weight scaling. We need it for unstaking with slashing."
          },
          "stake(uint96,uint256,address,address)": {
            "notice": "Stake the given amount for the given duration of time."
          },
          "stakeBySchedule(uint256,uint256,uint256,uint256,address,address)": {
            "notice": "Stake tokens according to the vesting schedule."
          },
          "stakeWithApproval(address,uint96,uint256,address,address)": {
            "notice": "Stake the given amount for the given duration of time."
          },
          "timestampToLockDate(uint256)": {
            "notice": "Unstaking is possible every 2 weeks only. This means, to calculate the key value for the staking checkpoints, we need to map the intended timestamp to the closest available date."
          },
          "totalStakingCheckpoints(uint256,uint32)": {
            "notice": "A record of tokens to be unstaked at a given time in total. For total voting power computation. Voting weights get adjusted bi-weekly."
          },
          "unlockAllTokens()": {
            "notice": "Allow the owner to unlock all tokens in case the staking contract is going to be replaced Note: Not reversible on purpose. once unlocked, everything is unlocked. The owner should not be able to just quickly unlock to withdraw his own tokens and lock again."
          },
          "userStakingCheckpoints(address,uint256,uint32)": {
            "notice": "A record of tokens to be unstaked at a given time which per user address (address -> lockDate -> stake checkpoint)"
          },
          "vestingCheckpoints(uint256,uint32)": {
            "notice": "A record of tokens to be unstaked from vesting contract at a given time (lockDate -> vest checkpoint)"
          },
          "vestingRegistryLogic()": {
            "notice": "vesting registry contract PROXY address"
          },
          "vestingWhitelist(address)": {
            "notice": "List of vesting contracts, tokens for these contracts won't be slashed if unstaked by governance."
          },
          "weightScaling()": {
            "notice": "used for weight scaling when unstaking with slashing."
          },
          "weightedStakeByDate(address,uint256,uint256,uint256)": {
            "notice": "Compute the voting power for a specific date. Power = stake * weight TODO: WeightedStaking::weightedStakeByDate should probably better be internal instead of a public function."
          },
          "weightedVestingStakeByDate(uint256,uint256,uint256)": {
            "notice": "Compute the voting power for a specific date. Power = stake * weight"
          },
          "withdraw(uint96,uint256,address)": {
            "notice": "Withdraw the given amount of tokens if they are unlocked."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@ethereum-waffle/=node_modules/@ethereum-waffle/",
        ":ds-test/=foundry/lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=foundry/lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":truffle/=node_modules/truffle/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "tests-foundry/staking/interfaces/IStaking.sol": "IStaking"
      },
      "libraries": {}
    },
    "sources": {
      "tests-foundry/staking/interfaces/IStaking.sol": {
        "keccak256": "0x51f3e01b95579a407d497ae72629fdfabf3f04d1ec9d68a188370eca44b89a8d",
        "urls": [
          "bzz-raw://0c46fa4abcf21ca327cee1404013fb9c12192659377ba06e35f0093d542404ab",
          "dweb:/ipfs/QmZMb2LLXzb3RvqjZxtXP1HNrP1T3ewygZwEP9gRRvSD7g"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "tests-foundry/staking/interfaces/IStaking.sol",
    "id": 44044,
    "exportedSymbols": {
      "IStaking": [
        44043
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:29698:20",
    "nodes": [
      {
        "id": 43325,
        "nodeType": "PragmaDirective",
        "src": "0:24:20",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 43326,
        "nodeType": "PragmaDirective",
        "src": "26:19:20",
        "nodes": [],
        "literals": [
          "abicoder",
          "v2"
        ]
      },
      {
        "id": 44043,
        "nodeType": "ContractDefinition",
        "src": "123:29574:20",
        "nodes": [
          {
            "id": 43333,
            "nodeType": "FunctionDefinition",
            "src": "362:43:20",
            "nodes": [],
            "documentation": {
              "id": 43328,
              "nodeType": "StructuredDocumentation",
              "src": "230:127:20",
              "text": " @notice Add account to Admins ACL.\n @param _admin The addresses of the account to grant permissions.\n "
            },
            "functionSelector": "70480275",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addAdmin",
            "nameLocation": "371:8:20",
            "parameters": {
              "id": 43331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43330,
                  "mutability": "mutable",
                  "name": "_admin",
                  "nameLocation": "388:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43333,
                  "src": "380:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43329,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "380:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "379:16:20"
            },
            "returnParameters": {
              "id": 43332,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "404:0:20"
            },
            "scope": 44043,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43339,
            "nodeType": "FunctionDefinition",
            "src": "549:46:20",
            "nodes": [],
            "documentation": {
              "id": 43334,
              "nodeType": "StructuredDocumentation",
              "src": "411:133:20",
              "text": " @notice Remove account from Admins ACL.\n @param _admin The addresses of the account to revoke permissions.\n "
            },
            "functionSelector": "1785f53c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeAdmin",
            "nameLocation": "558:11:20",
            "parameters": {
              "id": 43337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43336,
                  "mutability": "mutable",
                  "name": "_admin",
                  "nameLocation": "578:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43339,
                  "src": "570:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43335,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "570:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "569:16:20"
            },
            "returnParameters": {
              "id": 43338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "594:0:20"
            },
            "scope": 44043,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43345,
            "nodeType": "FunctionDefinition",
            "src": "725:45:20",
            "nodes": [],
            "documentation": {
              "id": 43340,
              "nodeType": "StructuredDocumentation",
              "src": "601:119:20",
              "text": " @notice Add account to pausers ACL.\n @param _pauser The address to grant pauser permissions.\n "
            },
            "functionSelector": "82dc1ec4",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addPauser",
            "nameLocation": "734:9:20",
            "parameters": {
              "id": 43343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43342,
                  "mutability": "mutable",
                  "name": "_pauser",
                  "nameLocation": "752:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43345,
                  "src": "744:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43341,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "744:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "743:17:20"
            },
            "returnParameters": {
              "id": 43344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "769:0:20"
            },
            "scope": 44043,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43351,
            "nodeType": "FunctionDefinition",
            "src": "905:48:20",
            "nodes": [],
            "documentation": {
              "id": 43346,
              "nodeType": "StructuredDocumentation",
              "src": "776:124:20",
              "text": " @notice Remove account from pausers ACL.\n @param _pauser The address to grant pauser permissions.\n "
            },
            "functionSelector": "6b2c0f55",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removePauser",
            "nameLocation": "914:12:20",
            "parameters": {
              "id": 43349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43348,
                  "mutability": "mutable",
                  "name": "_pauser",
                  "nameLocation": "935:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43351,
                  "src": "927:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43347,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "927:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "926:17:20"
            },
            "returnParameters": {
              "id": 43350,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "952:0:20"
            },
            "scope": 44043,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43357,
            "nodeType": "FunctionDefinition",
            "src": "1076:44:20",
            "nodes": [],
            "documentation": {
              "id": 43352,
              "nodeType": "StructuredDocumentation",
              "src": "959:112:20",
              "text": " @notice Pause/unpause contract\n @param _pause true when pausing, false when unpausing\n "
            },
            "functionSelector": "b0667f7a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pauseUnpause",
            "nameLocation": "1085:12:20",
            "parameters": {
              "id": 43355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43354,
                  "mutability": "mutable",
                  "name": "_pause",
                  "nameLocation": "1103:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43357,
                  "src": "1098:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 43353,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1098:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1097:13:20"
            },
            "returnParameters": {
              "id": 43356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1119:0:20"
            },
            "scope": 44043,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43363,
            "nodeType": "FunctionDefinition",
            "src": "1375:47:20",
            "nodes": [],
            "documentation": {
              "id": 43358,
              "nodeType": "StructuredDocumentation",
              "src": "1126:244:20",
              "text": " @notice Freeze contract - disable all functions\n @param _freeze true when freezing, false when unfreezing\n @dev When freezing, pause is always applied too. When unfreezing, the contract is left in paused stated.\n "
            },
            "functionSelector": "9604c618",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "freezeUnfreeze",
            "nameLocation": "1384:14:20",
            "parameters": {
              "id": 43361,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43360,
                  "mutability": "mutable",
                  "name": "_freeze",
                  "nameLocation": "1404:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43363,
                  "src": "1399:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 43359,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1399:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1398:14:20"
            },
            "returnParameters": {
              "id": 43362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1421:0:20"
            },
            "scope": 44043,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43369,
            "nodeType": "FunctionDefinition",
            "src": "1638:53:20",
            "nodes": [],
            "documentation": {
              "id": 43364,
              "nodeType": "StructuredDocumentation",
              "src": "1428:205:20",
              "text": " @notice Allows the owner to set a fee sharing proxy contract.\n We need it for unstaking with slashing.\n @param _feeSharing The address of FeeSharingCollectorProxy contract.\n "
            },
            "functionSelector": "626ee2d9",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeSharing",
            "nameLocation": "1647:13:20",
            "parameters": {
              "id": 43367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43366,
                  "mutability": "mutable",
                  "name": "_feeSharing",
                  "nameLocation": "1669:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43369,
                  "src": "1661:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43365,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1661:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1660:21:20"
            },
            "returnParameters": {
              "id": 43368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1690:0:20"
            },
            "scope": 44043,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43375,
            "nodeType": "FunctionDefinition",
            "src": "1865:58:20",
            "nodes": [],
            "documentation": {
              "id": 43370,
              "nodeType": "StructuredDocumentation",
              "src": "1697:163:20",
              "text": " @notice Allow the owner to set weight scaling.\n We need it for unstaking with slashing.\n @param _weightScaling The weight scaling.\n "
            },
            "functionSelector": "b8a98732",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setWeightScaling",
            "nameLocation": "1874:16:20",
            "parameters": {
              "id": 43373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43372,
                  "mutability": "mutable",
                  "name": "_weightScaling",
                  "nameLocation": "1898:14:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43375,
                  "src": "1891:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 43371,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "1891:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1890:23:20"
            },
            "returnParameters": {
              "id": 43374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1922:0:20"
            },
            "scope": 44043,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43381,
            "nodeType": "FunctionDefinition",
            "src": "2290:69:20",
            "nodes": [],
            "documentation": {
              "id": 43376,
              "nodeType": "StructuredDocumentation",
              "src": "1929:356:20",
              "text": " @notice Allow the owner to set a new staking contract.\n As a consequence it allows the stakers to migrate their positions\n to the new contract.\n @dev Doesn't have any influence as long as migrateToNewStakingContract\n is not implemented.\n @param _newStakingContract The address of the new staking contract.\n "
            },
            "functionSelector": "9a377b82",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setNewStakingContract",
            "nameLocation": "2299:21:20",
            "parameters": {
              "id": 43379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43378,
                  "mutability": "mutable",
                  "name": "_newStakingContract",
                  "nameLocation": "2329:19:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43381,
                  "src": "2321:27:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43377,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2321:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2320:29:20"
            },
            "returnParameters": {
              "id": 43380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2358:0:20"
            },
            "scope": 44043,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43385,
            "nodeType": "FunctionDefinition",
            "src": "2717:48:20",
            "nodes": [],
            "documentation": {
              "id": 43382,
              "nodeType": "StructuredDocumentation",
              "src": "2365:347:20",
              "text": " @notice Allow a staker to migrate his positions to the new staking contract.\n @dev Staking contract needs to be set before by the owner.\n Currently not implemented, just needed for the interface.\n      In case it's needed at some point in the future,\n      the implementation needs to be changed first.\n "
            },
            "functionSelector": "5419675f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "migrateToNewStakingContract",
            "nameLocation": "2726:27:20",
            "parameters": {
              "id": 43383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2753:2:20"
            },
            "returnParameters": {
              "id": 43384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2764:0:20"
            },
            "scope": 44043,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43395,
            "nodeType": "FunctionDefinition",
            "src": "3190:123:20",
            "nodes": [],
            "documentation": {
              "id": 43386,
              "nodeType": "StructuredDocumentation",
              "src": "2895:290:20",
              "text": " @notice Compute the total voting power at a given time.\n @param blockNumber The block number, needed for checkpointing.\n @param time The timestamp for which to calculate the total voting power.\n @return uint96 The total voting power at the given time.\n "
            },
            "functionSelector": "2522d7ba",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPriorTotalVotingPower",
            "nameLocation": "3199:24:20",
            "parameters": {
              "id": 43391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43388,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "3231:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43395,
                  "src": "3224:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 43387,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3224:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43390,
                  "mutability": "mutable",
                  "name": "time",
                  "nameLocation": "3252:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43395,
                  "src": "3244:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43389,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3244:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3223:34:20"
            },
            "returnParameters": {
              "id": 43394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43393,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43395,
                  "src": "3305:6:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 43392,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "3305:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3304:8:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43403,
            "nodeType": "FunctionDefinition",
            "src": "3653:73:20",
            "nodes": [],
            "documentation": {
              "id": 43396,
              "nodeType": "StructuredDocumentation",
              "src": "3319:329:20",
              "text": " @notice Get the current votes balance for a user account.\n @param account The address to get votes balance.\n @dev This is a wrapper to simplify arguments. The actual computation is\n performed on WeightedStaking parent contract.\n @return The number of current votes for a user account.\n "
            },
            "functionSelector": "b4b5ea57",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentVotes",
            "nameLocation": "3662:15:20",
            "parameters": {
              "id": 43399,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43398,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3686:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43403,
                  "src": "3678:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43397,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3678:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3677:17:20"
            },
            "returnParameters": {
              "id": 43402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43401,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43403,
                  "src": "3718:6:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 43400,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "3718:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3717:8:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43415,
            "nodeType": "FunctionDefinition",
            "src": "4335:136:20",
            "nodes": [],
            "documentation": {
              "id": 43404,
              "nodeType": "StructuredDocumentation",
              "src": "3732:598:20",
              "text": " @notice Determine the prior number of votes for a delegatee as of a block number.\n Iterate through checkpoints adding up voting power.\n @dev Block number must be a finalized block or else this function will revert\n to prevent misinformation.\n      Used for Voting, not for fee sharing.\n @param account The address of the account to check.\n @param blockNumber The block number to get the vote balance at.\n @param date The staking date to compute the power for.\n @return The number of votes the delegatee had as of the given block.\n "
            },
            "functionSelector": "836eebee",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPriorVotes",
            "nameLocation": "4344:13:20",
            "parameters": {
              "id": 43411,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43406,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4375:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43415,
                  "src": "4367:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43405,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4367:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43408,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "4400:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43415,
                  "src": "4392:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43407,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4392:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43410,
                  "mutability": "mutable",
                  "name": "date",
                  "nameLocation": "4429:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43415,
                  "src": "4421:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43409,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4421:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4357:82:20"
            },
            "returnParameters": {
              "id": 43414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43413,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43415,
                  "src": "4463:6:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 43412,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "4463:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4462:8:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43427,
            "nodeType": "FunctionDefinition",
            "src": "4968:154:20",
            "nodes": [],
            "documentation": {
              "id": 43416,
              "nodeType": "StructuredDocumentation",
              "src": "4477:486:20",
              "text": " @notice Determine the prior number of stake for an account as of a block number.\n @dev Block number must be a finalized block or else this function will\n revert to prevent misinformation.\n @param account The address of the account to check.\n @param date The staking date to compute the power for.\n @param blockNumber The block number to get the vote balance at.\n @return The number of votes the account had as of the given block.\n "
            },
            "functionSelector": "e97ffacb",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPriorStakeByDateForDelegatee",
            "nameLocation": "4977:31:20",
            "parameters": {
              "id": 43423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43418,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "5026:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43427,
                  "src": "5018:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43417,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5018:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43420,
                  "mutability": "mutable",
                  "name": "date",
                  "nameLocation": "5051:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43427,
                  "src": "5043:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43419,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5043:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43422,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "5073:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43427,
                  "src": "5065:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43421,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5065:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5008:82:20"
            },
            "returnParameters": {
              "id": 43426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43425,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43427,
                  "src": "5114:6:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 43424,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "5114:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5113:8:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43437,
            "nodeType": "FunctionDefinition",
            "src": "5687:126:20",
            "nodes": [],
            "documentation": {
              "id": 43428,
              "nodeType": "StructuredDocumentation",
              "src": "5128:554:20",
              "text": " @notice Determine the prior number of stake for an unlocking date as of a block number.\n @dev Block number must be a finalized block or else this function will\n revert to prevent misinformation.\n TODO: WeightedStaking::getPriorTotalStakesForDate should probably better\n be internal instead of a public function.\n @param date The date to check the stakes for.\n @param blockNumber The block number to get the vote balance at.\n @return The number of votes the account had as of the given block.\n "
            },
            "functionSelector": "f09cfc64",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPriorTotalStakesForDate",
            "nameLocation": "5696:26:20",
            "parameters": {
              "id": 43433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43430,
                  "mutability": "mutable",
                  "name": "date",
                  "nameLocation": "5731:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43437,
                  "src": "5723:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43429,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5723:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43432,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "5745:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43437,
                  "src": "5737:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43431,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5737:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5722:35:20"
            },
            "returnParameters": {
              "id": 43436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43435,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43437,
                  "src": "5805:6:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 43434,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "5805:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5804:8:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43445,
            "nodeType": "FunctionDefinition",
            "src": "6052:64:20",
            "nodes": [],
            "documentation": {
              "id": 43438,
              "nodeType": "StructuredDocumentation",
              "src": "5819:228:20",
              "text": " @notice Delegate votes from `msg.sender` which are locked until lockDate to `delegatee`.\n @param delegatee The address to delegate votes to.\n @param lockDate the date if the position to delegate.\n "
            },
            "functionSelector": "026e402b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "delegate",
            "nameLocation": "6061:8:20",
            "parameters": {
              "id": 43443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43440,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nameLocation": "6078:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43445,
                  "src": "6070:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43439,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6070:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43442,
                  "mutability": "mutable",
                  "name": "lockDate",
                  "nameLocation": "6097:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43445,
                  "src": "6089:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43441,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6089:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6069:37:20"
            },
            "returnParameters": {
              "id": 43444,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6115:0:20"
            },
            "scope": 44043,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43463,
            "nodeType": "FunctionDefinition",
            "src": "7651:193:20",
            "nodes": [],
            "documentation": {
              "id": 43446,
              "nodeType": "StructuredDocumentation",
              "src": "6122:1524:20",
              "text": " @notice Delegates votes from signatory to a delegatee account.\n Voting with EIP-712 Signatures.\n Voting power can be delegated to any address, and then can be used to\n vote on proposals. A key benefit to users of by-signature functionality\n is that they can create a signed vote transaction for free, and have a\n trusted third-party spend rBTC(or ETH) on gas fees and write it to the\n blockchain for them.\n The third party in this scenario, submitting the SOV-holder’s signed\n transaction holds a voting power that is for only a single proposal.\n The signatory still holds the power to vote on their own behalf in\n the proposal if the third party has not yet published the signed\n transaction that was given to them.\n @dev The signature needs to be broken up into 3 parameters, known as\n v, r and s:\n const r = '0x' + sig.substring(2).substring(0, 64);\n const s = '0x' + sig.substring(2).substring(64, 128);\n const v = '0x' + sig.substring(2).substring(128, 130);\n @param delegatee The address to delegate votes to.\n @param lockDate The date until which the position is locked.\n @param nonce The contract state required to match the signature.\n @param expiry The time at which to expire the signature.\n @param v The recovery byte of the signature.\n @param r Half of the ECDSA signature pair.\n @param s Half of the ECDSA signature pair.\n "
            },
            "functionSelector": "e63a562e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "delegateBySig",
            "nameLocation": "7660:13:20",
            "parameters": {
              "id": 43461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43448,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nameLocation": "7691:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43463,
                  "src": "7683:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43447,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7683:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43450,
                  "mutability": "mutable",
                  "name": "lockDate",
                  "nameLocation": "7718:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43463,
                  "src": "7710:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43449,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7710:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43452,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "7744:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43463,
                  "src": "7736:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43451,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7736:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43454,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nameLocation": "7767:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43463,
                  "src": "7759:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43453,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7759:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43456,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "7789:1:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43463,
                  "src": "7783:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 43455,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "7783:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43458,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "7808:1:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43463,
                  "src": "7800:9:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 43457,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7800:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43460,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "7827:1:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43463,
                  "src": "7819:9:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 43459,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7819:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7673:161:20"
            },
            "returnParameters": {
              "id": 43462,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7843:0:20"
            },
            "scope": 44043,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43473,
            "nodeType": "EventDefinition",
            "src": "7932:139:20",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "0fc5b1bac0416800b42a669229a346b6e5a15db3896339dbdc5fa376e1e4570a",
            "name": "TokensStaked",
            "nameLocation": "7938:12:20",
            "parameters": {
              "id": 43472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43465,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "7976:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43473,
                  "src": "7960:22:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43464,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7960:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43467,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8000:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43473,
                  "src": "7992:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43466,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7992:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43469,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lockedUntil",
                  "nameLocation": "8024:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43473,
                  "src": "8016:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43468,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8016:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43471,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalStaked",
                  "nameLocation": "8053:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43473,
                  "src": "8045:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43470,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8045:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7950:120:20"
            }
          },
          {
            "id": 43485,
            "nodeType": "FunctionDefinition",
            "src": "8457:129:20",
            "nodes": [],
            "documentation": {
              "id": 43474,
              "nodeType": "StructuredDocumentation",
              "src": "8077:375:20",
              "text": " @notice Stake the given amount for the given duration of time.\n @param amount The number of tokens to stake.\n @param until Timestamp indicating the date until which to stake.\n @param stakeFor The address to stake the tokens for or 0x0 if staking for oneself.\n @param delegatee The address of the delegatee or 0x0 if there is none.\n "
            },
            "functionSelector": "25629ec0",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nameLocation": "8466:5:20",
            "parameters": {
              "id": 43483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43476,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8488:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43485,
                  "src": "8481:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 43475,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "8481:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43478,
                  "mutability": "mutable",
                  "name": "until",
                  "nameLocation": "8512:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43485,
                  "src": "8504:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43477,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8504:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43480,
                  "mutability": "mutable",
                  "name": "stakeFor",
                  "nameLocation": "8535:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43485,
                  "src": "8527:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43479,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8527:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43482,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nameLocation": "8561:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43485,
                  "src": "8553:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43481,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8553:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8471:105:20"
            },
            "returnParameters": {
              "id": 43484,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8585:0:20"
            },
            "scope": 44043,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43499,
            "nodeType": "FunctionDefinition",
            "src": "9170:165:20",
            "nodes": [],
            "documentation": {
              "id": 43486,
              "nodeType": "StructuredDocumentation",
              "src": "8592:573:20",
              "text": " @notice Stake the given amount for the given duration of time.\n @dev This function will be invoked from receiveApproval\n @dev SOV.approveAndCall -> this.receiveApproval -> this.stakeWithApproval\n @param sender The sender of SOV.approveAndCall\n @param amount The number of tokens to stake.\n @param until Timestamp indicating the date until which to stake.\n @param stakeFor The address to stake the tokens for or 0x0 if staking for oneself.\n @param delegatee The address of the delegatee or 0x0 if there is none.\n "
            },
            "functionSelector": "0c09ddfd",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stakeWithApproval",
            "nameLocation": "9179:17:20",
            "parameters": {
              "id": 43497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43488,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "9214:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43499,
                  "src": "9206:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43487,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9206:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43490,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9237:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43499,
                  "src": "9230:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 43489,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "9230:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43492,
                  "mutability": "mutable",
                  "name": "until",
                  "nameLocation": "9261:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43499,
                  "src": "9253:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43491,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9253:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43494,
                  "mutability": "mutable",
                  "name": "stakeFor",
                  "nameLocation": "9284:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43499,
                  "src": "9276:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43493,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9276:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43496,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nameLocation": "9310:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43499,
                  "src": "9302:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43495,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9302:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9196:129:20"
            },
            "returnParameters": {
              "id": 43498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9334:0:20"
            },
            "scope": 44043,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43511,
            "nodeType": "FunctionDefinition",
            "src": "9468:144:20",
            "nodes": [],
            "documentation": {
              "id": 43500,
              "nodeType": "StructuredDocumentation",
              "src": "9341:122:20",
              "text": " @notice Receives approval from SOV token.\n @param _data The data will be used for low level call."
            },
            "functionSelector": "8f4ffcb1",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "receiveApproval",
            "nameLocation": "9477:15:20",
            "parameters": {
              "id": 43509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43502,
                  "mutability": "mutable",
                  "name": "_sender",
                  "nameLocation": "9510:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43511,
                  "src": "9502:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43501,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9502:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43504,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "9535:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43511,
                  "src": "9527:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43503,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9527:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43506,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "9560:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43511,
                  "src": "9552:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43505,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9552:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43508,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "9591:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43511,
                  "src": "9576:20:20",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 43507,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9576:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9492:110:20"
            },
            "returnParameters": {
              "id": 43510,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9611:0:20"
            },
            "scope": 44043,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43519,
            "nodeType": "FunctionDefinition",
            "src": "9821:77:20",
            "nodes": [],
            "documentation": {
              "id": 43512,
              "nodeType": "StructuredDocumentation",
              "src": "9618:198:20",
              "text": " @notice Extend the staking duration until the specified date.\n @param previousLock The old unlocking timestamp.\n @param until The new unlocking timestamp in seconds.\n "
            },
            "functionSelector": "eefb8c47",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "extendStakingDuration",
            "nameLocation": "9830:21:20",
            "parameters": {
              "id": 43517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43514,
                  "mutability": "mutable",
                  "name": "previousLock",
                  "nameLocation": "9860:12:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43519,
                  "src": "9852:20:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43513,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9852:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43516,
                  "mutability": "mutable",
                  "name": "until",
                  "nameLocation": "9882:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43519,
                  "src": "9874:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43515,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9874:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9851:37:20"
            },
            "returnParameters": {
              "id": 43518,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9897:0:20"
            },
            "scope": 44043,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43535,
            "nodeType": "FunctionDefinition",
            "src": "10100:199:20",
            "nodes": [],
            "documentation": {
              "id": 43520,
              "nodeType": "StructuredDocumentation",
              "src": "9904:191:20",
              "text": " @dev DO NOT USE this misspelled function. Use stakeBySchedule function instead.\n This function cannot be deprecated while we have non-upgradeable vesting contracts.\n "
            },
            "functionSelector": "4b2fea1e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stakesBySchedule",
            "nameLocation": "10109:16:20",
            "parameters": {
              "id": 43533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43522,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10143:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43535,
                  "src": "10135:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43521,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10135:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43524,
                  "mutability": "mutable",
                  "name": "cliff",
                  "nameLocation": "10167:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43535,
                  "src": "10159:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43523,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10159:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43526,
                  "mutability": "mutable",
                  "name": "duration",
                  "nameLocation": "10190:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43535,
                  "src": "10182:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43525,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10182:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43528,
                  "mutability": "mutable",
                  "name": "intervalLength",
                  "nameLocation": "10216:14:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43535,
                  "src": "10208:22:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43527,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10208:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43530,
                  "mutability": "mutable",
                  "name": "stakeFor",
                  "nameLocation": "10248:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43535,
                  "src": "10240:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43529,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10240:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43532,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nameLocation": "10274:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43535,
                  "src": "10266:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43531,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10266:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10125:164:20"
            },
            "returnParameters": {
              "id": 43534,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10298:0:20"
            },
            "scope": 44043,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43551,
            "nodeType": "FunctionDefinition",
            "src": "10796:198:20",
            "nodes": [],
            "documentation": {
              "id": 43536,
              "nodeType": "StructuredDocumentation",
              "src": "10305:486:20",
              "text": " @notice Stake tokens according to the vesting schedule.\n @param amount The amount of tokens to stake.\n @param cliff The time interval to the first withdraw.\n @param duration The staking duration.\n @param intervalLength The length of each staking interval when cliff passed.\n @param stakeFor The address to stake the tokens for or 0x0 if staking for oneself.\n @param delegatee The address of the delegatee or 0x0 if there is none.\n "
            },
            "functionSelector": "c1b79b05",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stakeBySchedule",
            "nameLocation": "10805:15:20",
            "parameters": {
              "id": 43549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43538,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10838:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43551,
                  "src": "10830:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43537,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10830:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43540,
                  "mutability": "mutable",
                  "name": "cliff",
                  "nameLocation": "10862:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43551,
                  "src": "10854:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43539,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10854:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43542,
                  "mutability": "mutable",
                  "name": "duration",
                  "nameLocation": "10885:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43551,
                  "src": "10877:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43541,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10877:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43544,
                  "mutability": "mutable",
                  "name": "intervalLength",
                  "nameLocation": "10911:14:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43551,
                  "src": "10903:22:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43543,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10903:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43546,
                  "mutability": "mutable",
                  "name": "stakeFor",
                  "nameLocation": "10943:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43551,
                  "src": "10935:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10935:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43548,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nameLocation": "10969:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43551,
                  "src": "10961:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43547,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10961:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10820:164:20"
            },
            "returnParameters": {
              "id": 43550,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10993:0:20"
            },
            "scope": 44043,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43559,
            "nodeType": "FunctionDefinition",
            "src": "11263:75:20",
            "nodes": [],
            "documentation": {
              "id": 43552,
              "nodeType": "StructuredDocumentation",
              "src": "11000:258:20",
              "text": " @notice Get the number of staked tokens held by the user account.\n @dev Iterate checkpoints adding up stakes.\n @param account The address of the account to get the balance of.\n @return balance The number of tokens held.\n "
            },
            "functionSelector": "70a08231",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "11272:9:20",
            "parameters": {
              "id": 43555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43554,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "11290:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43559,
                  "src": "11282:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43553,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11282:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11281:17:20"
            },
            "returnParameters": {
              "id": 43558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43557,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "11329:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43559,
                  "src": "11322:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 43556,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "11322:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11321:16:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43567,
            "nodeType": "FunctionDefinition",
            "src": "11495:80:20",
            "nodes": [],
            "documentation": {
              "id": 43560,
              "nodeType": "StructuredDocumentation",
              "src": "11344:146:20",
              "text": " @notice Get the current number of tokens staked for a day.\n @param lockedTS The timestamp to get the staked tokens for.\n "
            },
            "functionSelector": "d5c38464",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentStakedUntil",
            "nameLocation": "11504:21:20",
            "parameters": {
              "id": 43563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43562,
                  "mutability": "mutable",
                  "name": "lockedTS",
                  "nameLocation": "11534:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43567,
                  "src": "11526:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43561,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11526:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11525:18:20"
            },
            "returnParameters": {
              "id": 43566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43565,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43567,
                  "src": "11567:6:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 43564,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "11567:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11566:8:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43579,
            "nodeType": "FunctionDefinition",
            "src": "11784:131:20",
            "nodes": [],
            "documentation": {
              "id": 43568,
              "nodeType": "StructuredDocumentation",
              "src": "11581:198:20",
              "text": " @notice Get list of stakes for a user account.\n @param account The address to get stakes.\n @return dates The array of dates\n @return stakes The array of stakes\n "
            },
            "functionSelector": "7ba6f458",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStakes",
            "nameLocation": "11793:9:20",
            "parameters": {
              "id": 43571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43570,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "11811:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43579,
                  "src": "11803:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43569,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11803:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11802:17:20"
            },
            "returnParameters": {
              "id": 43578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43574,
                  "mutability": "mutable",
                  "name": "dates",
                  "nameLocation": "11884:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43579,
                  "src": "11867:22:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 43572,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11867:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 43573,
                    "nodeType": "ArrayTypeName",
                    "src": "11867:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43577,
                  "mutability": "mutable",
                  "name": "stakes",
                  "nameLocation": "11907:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43579,
                  "src": "11891:22:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint96_$dyn_memory_ptr",
                    "typeString": "uint96[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 43575,
                      "name": "uint96",
                      "nodeType": "ElementaryTypeName",
                      "src": "11891:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "id": 43576,
                    "nodeType": "ArrayTypeName",
                    "src": "11891:8:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint96_$dyn_storage_ptr",
                      "typeString": "uint96[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11866:48:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43587,
            "nodeType": "FunctionDefinition",
            "src": "12285:80:20",
            "nodes": [],
            "documentation": {
              "id": 43580,
              "nodeType": "StructuredDocumentation",
              "src": "11921:359:20",
              "text": " @notice Unstaking is possible every 2 weeks only. This means, to\n calculate the key value for the staking checkpoints, we need to\n map the intended timestamp to the closest available date.\n @param timestamp The unlocking timestamp.\n @return The actual unlocking date (might be up to 2 weeks shorter than intended).\n "
            },
            "functionSelector": "72ec9795",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "timestampToLockDate",
            "nameLocation": "12294:19:20",
            "parameters": {
              "id": 43583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43582,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "12322:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43587,
                  "src": "12314:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43581,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12314:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12313:19:20"
            },
            "returnParameters": {
              "id": 43586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43585,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43587,
                  "src": "12356:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43584,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12356:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12355:9:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43593,
            "nodeType": "FunctionDefinition",
            "src": "12553:78:20",
            "nodes": [],
            "documentation": {
              "id": 43588,
              "nodeType": "StructuredDocumentation",
              "src": "12455:93:20",
              "text": "@notice The maximum duration to stake tokens\n @return MAX_DURATION to stake tokens"
            },
            "functionSelector": "9e5ff1eb",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStorageMaxDurationToStakeTokens",
            "nameLocation": "12562:34:20",
            "parameters": {
              "id": 43589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12596:2:20"
            },
            "returnParameters": {
              "id": 43592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43591,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43593,
                  "src": "12622:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43590,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12622:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12621:9:20"
            },
            "scope": 44043,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43599,
            "nodeType": "FunctionDefinition",
            "src": "12792:69:20",
            "nodes": [],
            "documentation": {
              "id": 43594,
              "nodeType": "StructuredDocumentation",
              "src": "12637:150:20",
              "text": "@notice The maximum possible voting weight before adding +1 (actually 10, but need 9 for computation).\n @return uint256(MAX_VOTING_WEIGHT);"
            },
            "functionSelector": "d8fc90e8",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStorageMaxVotingWeight",
            "nameLocation": "12801:25:20",
            "parameters": {
              "id": 43595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12826:2:20"
            },
            "returnParameters": {
              "id": 43598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43597,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43599,
                  "src": "12852:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43596,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12852:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12851:9:20"
            },
            "scope": 44043,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43605,
            "nodeType": "FunctionDefinition",
            "src": "13114:66:20",
            "nodes": [],
            "documentation": {
              "id": 43600,
              "nodeType": "StructuredDocumentation",
              "src": "12867:242:20",
              "text": "@notice weight is multiplied with this factor (for allowing decimals, like 1.2x).\n @dev MAX_VOTING_WEIGHT * WEIGHT_FACTOR needs to be < 792, because there are 100,000,000 SOV with 18 decimals\n @return uint256(WEIGHT_FACTOR);"
            },
            "functionSelector": "048c9588",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStorageWeightFactor",
            "nameLocation": "13123:22:20",
            "parameters": {
              "id": 43601,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13145:2:20"
            },
            "returnParameters": {
              "id": 43604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43603,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43605,
                  "src": "13171:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43602,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13171:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13170:9:20"
            },
            "scope": 44043,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43611,
            "nodeType": "FunctionDefinition",
            "src": "13235:74:20",
            "nodes": [],
            "documentation": {
              "id": 43606,
              "nodeType": "StructuredDocumentation",
              "src": "13186:44:20",
              "text": "@return uint256(DEFAULT_WEIGHT_SCALING);"
            },
            "functionSelector": "805c49f3",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStorageDefaultWeightScaling",
            "nameLocation": "13244:30:20",
            "parameters": {
              "id": 43607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13274:2:20"
            },
            "returnParameters": {
              "id": 43610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43609,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43611,
                  "src": "13300:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43608,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13300:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13299:9:20"
            },
            "scope": 44043,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43619,
            "nodeType": "FunctionDefinition",
            "src": "13397:142:20",
            "nodes": [],
            "documentation": {
              "id": 43612,
              "nodeType": "StructuredDocumentation",
              "src": "13315:77:20",
              "text": "@notice return (uint256(MIN_WEIGHT_SCALING), uint256(MAX_WEIGHT_SCALING))"
            },
            "functionSelector": "8cdf855f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStorageRangeForWeightScaling",
            "nameLocation": "13406:31:20",
            "parameters": {
              "id": 43613,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13437:2:20"
            },
            "returnParameters": {
              "id": 43618,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43615,
                  "mutability": "mutable",
                  "name": "minWeightScaling",
                  "nameLocation": "13495:16:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43619,
                  "src": "13487:24:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43614,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13487:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43617,
                  "mutability": "mutable",
                  "name": "maxWeightScaling",
                  "nameLocation": "13521:16:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43619,
                  "src": "13513:24:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43616,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13513:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13486:52:20"
            },
            "scope": 44043,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43625,
            "nodeType": "FunctionDefinition",
            "src": "13651:68:20",
            "nodes": [],
            "documentation": {
              "id": 43620,
              "nodeType": "StructuredDocumentation",
              "src": "13545:101:20",
              "text": "@notice The EIP-712 typehash for the contract's domain.\n @return uint256(DOMAIN_TYPEHASH);"
            },
            "functionSelector": "a9d3ad1c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStorageDomainTypehash",
            "nameLocation": "13660:24:20",
            "parameters": {
              "id": 43621,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13684:2:20"
            },
            "returnParameters": {
              "id": 43624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43623,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43625,
                  "src": "13710:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43622,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13710:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13709:9:20"
            },
            "scope": 44043,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43631,
            "nodeType": "FunctionDefinition",
            "src": "13856:72:20",
            "nodes": [],
            "documentation": {
              "id": 43626,
              "nodeType": "StructuredDocumentation",
              "src": "13725:126:20",
              "text": "@notice The EIP-712 typehash for the delegation struct used by the contract.\n @return uint256(DELEGATION_TYPEHASH);"
            },
            "functionSelector": "332647b6",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStorageDelegationTypehash",
            "nameLocation": "13865:28:20",
            "parameters": {
              "id": 43627,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13893:2:20"
            },
            "returnParameters": {
              "id": 43630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43629,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43631,
                  "src": "13919:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43628,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13919:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13918:9:20"
            },
            "scope": 44043,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43637,
            "nodeType": "FunctionDefinition",
            "src": "13956:64:20",
            "nodes": [],
            "documentation": {
              "id": 43632,
              "nodeType": "StructuredDocumentation",
              "src": "13934:17:20",
              "text": "@return name;"
            },
            "functionSelector": "1ca6cbeb",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStorageName",
            "nameLocation": "13965:14:20",
            "parameters": {
              "id": 43633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13979:2:20"
            },
            "returnParameters": {
              "id": 43636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43635,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43637,
                  "src": "14005:13:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 43634,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14005:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14004:15:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43643,
            "nodeType": "FunctionDefinition",
            "src": "14198:53:20",
            "nodes": [],
            "documentation": {
              "id": 43638,
              "nodeType": "StructuredDocumentation",
              "src": "14105:88:20",
              "text": "@notice The timestamp of contract creation. Base for the staking period calculation."
            },
            "functionSelector": "00073f99",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "kickoffTS",
            "nameLocation": "14207:9:20",
            "parameters": {
              "id": 43639,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14216:2:20"
            },
            "returnParameters": {
              "id": 43642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43641,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43643,
                  "src": "14242:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43640,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14242:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14241:9:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43649,
            "nodeType": "FunctionDefinition",
            "src": "14296:52:20",
            "nodes": [],
            "documentation": {
              "id": 43644,
              "nodeType": "StructuredDocumentation",
              "src": "14257:34:20",
              "text": "@notice The token to be staked"
            },
            "functionSelector": "a58848c5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "SOVToken",
            "nameLocation": "14305:8:20",
            "parameters": {
              "id": 43645,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14313:2:20"
            },
            "returnParameters": {
              "id": 43648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43647,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43649,
                  "src": "14339:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43646,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14339:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14338:9:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43659,
            "nodeType": "FunctionDefinition",
            "src": "14550:92:20",
            "nodes": [],
            "documentation": {
              "id": 43650,
              "nodeType": "StructuredDocumentation",
              "src": "14354:191:20",
              "text": "@notice Stakers delegated voting power\n @param staker - the delegating address\n @param until - delegated voting\n @return _delegate - voting power delegated to address"
            },
            "functionSelector": "27dd1b00",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "delegates",
            "nameLocation": "14559:9:20",
            "parameters": {
              "id": 43655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43652,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "14577:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43659,
                  "src": "14569:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43651,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14569:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43654,
                  "mutability": "mutable",
                  "name": "until",
                  "nameLocation": "14593:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43659,
                  "src": "14585:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43653,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14585:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14568:31:20"
            },
            "returnParameters": {
              "id": 43658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43657,
                  "mutability": "mutable",
                  "name": "_delegate",
                  "nameLocation": "14631:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43659,
                  "src": "14623:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43656,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14623:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14622:19:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43665,
            "nodeType": "FunctionDefinition",
            "src": "14780:52:20",
            "nodes": [],
            "documentation": {
              "id": 43660,
              "nodeType": "StructuredDocumentation",
              "src": "14648:127:20",
              "text": "@notice If this flag is set to true, all tokens are unlocked immediately\n see function unlockAllTokens() for details"
            },
            "functionSelector": "9929e886",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "allUnlocked",
            "nameLocation": "14789:11:20",
            "parameters": {
              "id": 43661,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14800:2:20"
            },
            "returnParameters": {
              "id": 43664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43663,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43665,
                  "src": "14826:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 43662,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14826:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14825:6:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43671,
            "nodeType": "FunctionDefinition",
            "src": "14941:62:20",
            "nodes": [],
            "documentation": {
              "id": 43666,
              "nodeType": "StructuredDocumentation",
              "src": "14838:98:20",
              "text": "@notice Used for stake migrations to a new staking contract with a different storage structure"
            },
            "functionSelector": "ae81dfe4",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "newStakingContract",
            "nameLocation": "14950:18:20",
            "parameters": {
              "id": 43667,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14968:2:20"
            },
            "returnParameters": {
              "id": 43670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43669,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43671,
                  "src": "14994:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43668,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14994:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14993:9:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43676,
            "nodeType": "StructDefinition",
            "src": "15029:73:20",
            "nodes": [],
            "canonicalName": "IStaking.Checkpoint",
            "members": [
              {
                "constant": false,
                "id": 43673,
                "mutability": "mutable",
                "name": "fromBlock",
                "nameLocation": "15064:9:20",
                "nodeType": "VariableDeclaration",
                "scope": 43676,
                "src": "15057:16:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 43672,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "15057:6:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 43675,
                "mutability": "mutable",
                "name": "stake",
                "nameLocation": "15090:5:20",
                "nodeType": "VariableDeclaration",
                "scope": 43676,
                "src": "15083:12:20",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint96",
                  "typeString": "uint96"
                },
                "typeName": {
                  "id": 43674,
                  "name": "uint96",
                  "nodeType": "ElementaryTypeName",
                  "src": "15083:6:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Checkpoint",
            "nameLocation": "15036:10:20",
            "scope": 44043,
            "visibility": "public"
          },
          {
            "id": 43687,
            "nodeType": "FunctionDefinition",
            "src": "15333:127:20",
            "nodes": [],
            "documentation": {
              "id": 43677,
              "nodeType": "StructuredDocumentation",
              "src": "15108:220:20",
              "text": "@notice A record of tokens to be unstaked at a given time in total.\n For total voting power computation. Voting weights get adjusted bi-weekly.\n @dev totalStakingCheckpoints[date][index] is a checkpoint"
            },
            "functionSelector": "dfb267c2",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalStakingCheckpoints",
            "nameLocation": "15342:23:20",
            "parameters": {
              "id": 43682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43679,
                  "mutability": "mutable",
                  "name": "date",
                  "nameLocation": "15374:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43687,
                  "src": "15366:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43678,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15366:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43681,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "15387:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43687,
                  "src": "15380:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 43680,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15380:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15365:28:20"
            },
            "returnParameters": {
              "id": 43686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43685,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43687,
                  "src": "15441:17:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Checkpoint_$43676_memory_ptr",
                    "typeString": "struct IStaking.Checkpoint"
                  },
                  "typeName": {
                    "id": 43684,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 43683,
                      "name": "Checkpoint",
                      "nameLocations": [
                        "15441:10:20"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43676,
                      "src": "15441:10:20"
                    },
                    "referencedDeclaration": 43676,
                    "src": "15441:10:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Checkpoint_$43676_storage_ptr",
                      "typeString": "struct IStaking.Checkpoint"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15440:19:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43695,
            "nodeType": "FunctionDefinition",
            "src": "15596:121:20",
            "nodes": [],
            "documentation": {
              "id": 43688,
              "nodeType": "StructuredDocumentation",
              "src": "15466:125:20",
              "text": "@notice The number of total staking checkpoints for each date.\n @dev numTotalStakingCheckpoints[date] is a number."
            },
            "functionSelector": "9436e7d4",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "numTotalStakingCheckpoints",
            "nameLocation": "15605:26:20",
            "parameters": {
              "id": 43691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43690,
                  "mutability": "mutable",
                  "name": "date",
                  "nameLocation": "15640:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43695,
                  "src": "15632:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43689,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15632:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15631:14:20"
            },
            "returnParameters": {
              "id": 43694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43693,
                  "mutability": "mutable",
                  "name": "checkpointsQty",
                  "nameLocation": "15701:14:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43695,
                  "src": "15693:22:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 43692,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15693:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15692:24:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43708,
            "nodeType": "FunctionDefinition",
            "src": "16000:155:20",
            "nodes": [],
            "documentation": {
              "id": 43696,
              "nodeType": "StructuredDocumentation",
              "src": "15723:272:20",
              "text": "@notice A record of tokens to be unstaked at a given time which were delegated to a certain address.\n For delegatee voting power computation. Voting weights get adjusted bi-weekly.\n @dev delegateStakingCheckpoints[delegatee][date][index] is a checkpoint."
            },
            "functionSelector": "6b6fde0e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "delegateStakingCheckpoints",
            "nameLocation": "16009:26:20",
            "parameters": {
              "id": 43703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43698,
                  "mutability": "mutable",
                  "name": "delagatee",
                  "nameLocation": "16053:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43708,
                  "src": "16045:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43697,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16045:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43700,
                  "mutability": "mutable",
                  "name": "date",
                  "nameLocation": "16080:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43708,
                  "src": "16072:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43699,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16072:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43702,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "16101:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43708,
                  "src": "16094:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 43701,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16094:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16035:77:20"
            },
            "returnParameters": {
              "id": 43707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43706,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43708,
                  "src": "16136:17:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Checkpoint_$43676_memory_ptr",
                    "typeString": "struct IStaking.Checkpoint"
                  },
                  "typeName": {
                    "id": 43705,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 43704,
                      "name": "Checkpoint",
                      "nameLocations": [
                        "16136:10:20"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43676,
                      "src": "16136:10:20"
                    },
                    "referencedDeclaration": 43676,
                    "src": "16136:10:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Checkpoint_$43676_storage_ptr",
                      "typeString": "struct IStaking.Checkpoint"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16135:19:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43718,
            "nodeType": "FunctionDefinition",
            "src": "16318:143:20",
            "nodes": [],
            "documentation": {
              "id": 43709,
              "nodeType": "StructuredDocumentation",
              "src": "16161:152:20",
              "text": "@notice The number of total staking checkpoints for each date per delegate.\n @dev numDelegateStakingCheckpoints[delegatee][date] is a number."
            },
            "functionSelector": "94c2ce58",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "numDelegateStakingCheckpoints",
            "nameLocation": "16327:29:20",
            "parameters": {
              "id": 43714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43711,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nameLocation": "16365:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43718,
                  "src": "16357:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43710,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16357:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43713,
                  "mutability": "mutable",
                  "name": "date",
                  "nameLocation": "16384:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43718,
                  "src": "16376:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43712,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16376:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16356:33:20"
            },
            "returnParameters": {
              "id": 43717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43716,
                  "mutability": "mutable",
                  "name": "checkpointsQty",
                  "nameLocation": "16445:14:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43718,
                  "src": "16437:22:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 43715,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16437:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16436:24:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43731,
            "nodeType": "FunctionDefinition",
            "src": "16670:146:20",
            "nodes": [],
            "documentation": {
              "id": 43719,
              "nodeType": "StructuredDocumentation",
              "src": "16467:198:20",
              "text": "@notice A record of tokens to be unstaked at a given time which per user address (address -> lockDate -> stake checkpoint)\n @dev userStakingCheckpoints[user][date][index] is a checkpoint."
            },
            "functionSelector": "68cefccc",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "userStakingCheckpoints",
            "nameLocation": "16679:22:20",
            "parameters": {
              "id": 43726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43721,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "16719:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43731,
                  "src": "16711:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43720,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16711:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43723,
                  "mutability": "mutable",
                  "name": "date",
                  "nameLocation": "16741:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43731,
                  "src": "16733:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43722,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16733:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43725,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "16762:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43731,
                  "src": "16755:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 43724,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16755:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16701:72:20"
            },
            "returnParameters": {
              "id": 43730,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43729,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43731,
                  "src": "16797:17:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Checkpoint_$43676_memory_ptr",
                    "typeString": "struct IStaking.Checkpoint"
                  },
                  "typeName": {
                    "id": 43728,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 43727,
                      "name": "Checkpoint",
                      "nameLocations": [
                        "16797:10:20"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43676,
                      "src": "16797:10:20"
                    },
                    "referencedDeclaration": 43676,
                    "src": "16797:10:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Checkpoint_$43676_storage_ptr",
                      "typeString": "struct IStaking.Checkpoint"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16796:19:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43741,
            "nodeType": "FunctionDefinition",
            "src": "16965:133:20",
            "nodes": [],
            "documentation": {
              "id": 43732,
              "nodeType": "StructuredDocumentation",
              "src": "16822:138:20",
              "text": "@notice The number of total staking checkpoints for each date per user.\n @dev numUserStakingCheckpoints[user][date] is a number"
            },
            "functionSelector": "db27ec18",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "numUserStakingCheckpoints",
            "nameLocation": "16974:25:20",
            "parameters": {
              "id": 43737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43734,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "17008:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43741,
                  "src": "17000:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43733,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17000:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43736,
                  "mutability": "mutable",
                  "name": "date",
                  "nameLocation": "17022:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43741,
                  "src": "17014:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43735,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17014:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16999:28:20"
            },
            "returnParameters": {
              "id": 43740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43739,
                  "mutability": "mutable",
                  "name": "checkpointsQty",
                  "nameLocation": "17082:14:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43741,
                  "src": "17075:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 43738,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "17075:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17074:23:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43749,
            "nodeType": "FunctionDefinition",
            "src": "17214:68:20",
            "nodes": [],
            "documentation": {
              "id": 43742,
              "nodeType": "StructuredDocumentation",
              "src": "17104:105:20",
              "text": "@notice A record of states for signing / validating signatures\n @dev nonces[user] is a number."
            },
            "functionSelector": "7ecebe00",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "nonces",
            "nameLocation": "17223:6:20",
            "parameters": {
              "id": 43745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43744,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "17238:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43749,
                  "src": "17230:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43743,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17230:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17229:14:20"
            },
            "returnParameters": {
              "id": 43748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43747,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "17275:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43749,
                  "src": "17267:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43746,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17267:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17266:15:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43755,
            "nodeType": "FunctionDefinition",
            "src": "17416:54:20",
            "nodes": [],
            "documentation": {
              "id": 43750,
              "nodeType": "StructuredDocumentation",
              "src": "17310:101:20",
              "text": "@notice the address of FeeSharingCollectorProxy contract, we need it for unstaking with slashing."
            },
            "functionSelector": "03a18fa3",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "feeSharing",
            "nameLocation": "17425:10:20",
            "parameters": {
              "id": 43751,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17435:2:20"
            },
            "returnParameters": {
              "id": 43754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43753,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43755,
                  "src": "17461:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43752,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17461:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17460:9:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43761,
            "nodeType": "FunctionDefinition",
            "src": "17592:56:20",
            "nodes": [],
            "documentation": {
              "id": 43756,
              "nodeType": "StructuredDocumentation",
              "src": "17476:111:20",
              "text": "@notice used for weight scaling when unstaking with slashing.\n @return uint96 DEFAULT_WEIGHT_SCALING"
            },
            "functionSelector": "bf626ec1",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "weightScaling",
            "nameLocation": "17601:13:20",
            "parameters": {
              "id": 43757,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17614:2:20"
            },
            "returnParameters": {
              "id": 43760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43759,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43761,
                  "src": "17640:6:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 43758,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "17640:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17639:8:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43769,
            "nodeType": "FunctionDefinition",
            "src": "17823:78:20",
            "nodes": [],
            "documentation": {
              "id": 43762,
              "nodeType": "StructuredDocumentation",
              "src": "17654:164:20",
              "text": "@notice List of vesting contracts, tokens for these contracts won't be slashed if unstaked by governance.\n @dev vestingWhitelist[contract] is true/false."
            },
            "functionSelector": "adae9002",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "vestingWhitelist",
            "nameLocation": "17832:16:20",
            "parameters": {
              "id": 43765,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43764,
                  "mutability": "mutable",
                  "name": "isWhitelisted",
                  "nameLocation": "17857:13:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43769,
                  "src": "17849:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43763,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17849:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17848:23:20"
            },
            "returnParameters": {
              "id": 43768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43767,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43769,
                  "src": "17895:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 43766,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17895:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17894:6:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43777,
            "nodeType": "FunctionDefinition",
            "src": "18124:62:20",
            "nodes": [],
            "documentation": {
              "id": 43770,
              "nodeType": "StructuredDocumentation",
              "src": "17907:212:20",
              "text": "@dev user => flag whether user has admin role.\n @dev multisig should be an admin, admin can invoke only governanceWithdrawVesting function,\n \tthis function works only with Team Vesting contracts"
            },
            "functionSelector": "429b62e5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "admins",
            "nameLocation": "18133:6:20",
            "parameters": {
              "id": 43773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43772,
                  "mutability": "mutable",
                  "name": "isAdmin",
                  "nameLocation": "18148:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43777,
                  "src": "18140:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43771,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18140:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18139:17:20"
            },
            "returnParameters": {
              "id": 43776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43775,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43777,
                  "src": "18180:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 43774,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "18180:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18179:6:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43785,
            "nodeType": "FunctionDefinition",
            "src": "18274:86:20",
            "nodes": [],
            "documentation": {
              "id": 43778,
              "nodeType": "StructuredDocumentation",
              "src": "18192:77:20",
              "text": "@dev vesting contract code hash => flag whether it's registered code hash"
            },
            "functionSelector": "07392cc0",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "vestingCodeHashes",
            "nameLocation": "18283:17:20",
            "parameters": {
              "id": 43781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43780,
                  "mutability": "mutable",
                  "name": "vestingLogicCodeHash",
                  "nameLocation": "18309:20:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43785,
                  "src": "18301:28:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 43779,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "18301:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18300:30:20"
            },
            "returnParameters": {
              "id": 43784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43783,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43785,
                  "src": "18354:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 43782,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "18354:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18353:6:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43796,
            "nodeType": "FunctionDefinition",
            "src": "18546:122:20",
            "nodes": [],
            "documentation": {
              "id": 43786,
              "nodeType": "StructuredDocumentation",
              "src": "18366:175:20",
              "text": "@notice A record of tokens to be unstaked from vesting contract at a given time (lockDate -> vest checkpoint)\n @dev vestingCheckpoints[date][index] is a checkpoint."
            },
            "functionSelector": "f3f19731",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "vestingCheckpoints",
            "nameLocation": "18555:18:20",
            "parameters": {
              "id": 43791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43788,
                  "mutability": "mutable",
                  "name": "date",
                  "nameLocation": "18582:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43796,
                  "src": "18574:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43787,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18574:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43790,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "18595:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43796,
                  "src": "18588:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 43789,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "18588:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18573:28:20"
            },
            "returnParameters": {
              "id": 43795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43794,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43796,
                  "src": "18649:17:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Checkpoint_$43676_memory_ptr",
                    "typeString": "struct IStaking.Checkpoint"
                  },
                  "typeName": {
                    "id": 43793,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 43792,
                      "name": "Checkpoint",
                      "nameLocations": [
                        "18649:10:20"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43676,
                      "src": "18649:10:20"
                    },
                    "referencedDeclaration": 43676,
                    "src": "18649:10:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Checkpoint_$43676_storage_ptr",
                      "typeString": "struct IStaking.Checkpoint"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18648:19:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43804,
            "nodeType": "FunctionDefinition",
            "src": "18799:91:20",
            "nodes": [],
            "documentation": {
              "id": 43797,
              "nodeType": "StructuredDocumentation",
              "src": "18674:120:20",
              "text": "@notice The number of total vesting checkpoints for each date.\n @dev numVestingCheckpoints[date] is a number."
            },
            "functionSelector": "bb533cf2",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "numVestingCheckpoints",
            "nameLocation": "18808:21:20",
            "parameters": {
              "id": 43800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43799,
                  "mutability": "mutable",
                  "name": "date",
                  "nameLocation": "18838:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43804,
                  "src": "18830:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43798,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18830:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18829:14:20"
            },
            "returnParameters": {
              "id": 43803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43802,
                  "mutability": "mutable",
                  "name": "checkpointsQty",
                  "nameLocation": "18874:14:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43804,
                  "src": "18867:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 43801,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "18867:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18866:23:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43810,
            "nodeType": "FunctionDefinition",
            "src": "18951:64:20",
            "nodes": [],
            "documentation": {
              "id": 43805,
              "nodeType": "StructuredDocumentation",
              "src": "18896:50:20",
              "text": "@notice vesting registry contract PROXY address"
            },
            "functionSelector": "104932cf",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "vestingRegistryLogic",
            "nameLocation": "18960:20:20",
            "parameters": {
              "id": 43806,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18980:2:20"
            },
            "returnParameters": {
              "id": 43809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43808,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43810,
                  "src": "19006:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43807,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19006:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19005:9:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43818,
            "nodeType": "FunctionDefinition",
            "src": "19077:64:20",
            "nodes": [],
            "documentation": {
              "id": 43811,
              "nodeType": "StructuredDocumentation",
              "src": "19021:51:20",
              "text": "@dev user => flag whether user has pauser role."
            },
            "functionSelector": "80f51c12",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pausers",
            "nameLocation": "19086:7:20",
            "parameters": {
              "id": 43814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43813,
                  "mutability": "mutable",
                  "name": "isPauser",
                  "nameLocation": "19102:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43818,
                  "src": "19094:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43812,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19094:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19093:18:20"
            },
            "returnParameters": {
              "id": 43817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43816,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43818,
                  "src": "19135:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 43815,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "19135:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19134:6:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43824,
            "nodeType": "FunctionDefinition",
            "src": "19187:47:20",
            "nodes": [],
            "documentation": {
              "id": 43819,
              "nodeType": "StructuredDocumentation",
              "src": "19147:35:20",
              "text": "@dev Staking contract is paused"
            },
            "functionSelector": "5c975abb",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "paused",
            "nameLocation": "19196:6:20",
            "parameters": {
              "id": 43820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19202:2:20"
            },
            "returnParameters": {
              "id": 43823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43822,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43824,
                  "src": "19228:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 43821,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "19228:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19227:6:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43830,
            "nodeType": "FunctionDefinition",
            "src": "19280:47:20",
            "nodes": [],
            "documentation": {
              "id": 43825,
              "nodeType": "StructuredDocumentation",
              "src": "19240:35:20",
              "text": "@dev Staking contract is frozen"
            },
            "functionSelector": "054f7d9c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "frozen",
            "nameLocation": "19289:6:20",
            "parameters": {
              "id": 43826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19295:2:20"
            },
            "returnParameters": {
              "id": 43829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43828,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43830,
                  "src": "19321:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 43827,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "19321:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19320:6:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43836,
            "nodeType": "EventDefinition",
            "src": "19417:54:20",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "f9ab7366370e872310fc70951197eca2f2b3938b5589040856953f765dfcd11a",
            "name": "VestingStakeSet",
            "nameLocation": "19423:15:20",
            "parameters": {
              "id": 43835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43832,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lockedTS",
                  "nameLocation": "19447:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43836,
                  "src": "19439:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43831,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19439:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43834,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "19464:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43836,
                  "src": "19457:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 43833,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "19457:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19438:32:20"
            }
          },
          {
            "id": 43844,
            "nodeType": "FunctionDefinition",
            "src": "19629:79:20",
            "nodes": [],
            "documentation": {
              "id": 43837,
              "nodeType": "StructuredDocumentation",
              "src": "19477:147:20",
              "text": " @notice Return flag whether the given address is a registered vesting contract.\n @param stakerAddress the address to check"
            },
            "functionSelector": "ca6860df",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isVestingContract",
            "nameLocation": "19638:17:20",
            "parameters": {
              "id": 43840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43839,
                  "mutability": "mutable",
                  "name": "stakerAddress",
                  "nameLocation": "19664:13:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43844,
                  "src": "19656:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43838,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19656:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19655:23:20"
            },
            "returnParameters": {
              "id": 43843,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43842,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43844,
                  "src": "19702:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 43841,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "19702:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19701:6:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43850,
            "nodeType": "FunctionDefinition",
            "src": "19944:58:20",
            "nodes": [],
            "documentation": {
              "id": 43845,
              "nodeType": "StructuredDocumentation",
              "src": "19714:225:20",
              "text": " @notice Remove vesting contract's code hash to a map of code hashes.\n @param vesting The address of Vesting contract.\n @dev We need it to use isVestingContract() function instead of isContract()"
            },
            "functionSelector": "25464cc5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeContractCodeHash",
            "nameLocation": "19953:22:20",
            "parameters": {
              "id": 43848,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43847,
                  "mutability": "mutable",
                  "name": "vesting",
                  "nameLocation": "19984:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43850,
                  "src": "19976:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43846,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19976:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19975:17:20"
            },
            "returnParameters": {
              "id": 43849,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20001:0:20"
            },
            "scope": 44043,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43856,
            "nodeType": "FunctionDefinition",
            "src": "20235:55:20",
            "nodes": [],
            "documentation": {
              "id": 43851,
              "nodeType": "StructuredDocumentation",
              "src": "20008:222:20",
              "text": " @notice Add vesting contract's code hash to a map of code hashes.\n @param vesting The address of Vesting contract.\n @dev We need it to use isVestingContract() function instead of isContract()"
            },
            "functionSelector": "a20d8d03",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addContractCodeHash",
            "nameLocation": "20244:19:20",
            "parameters": {
              "id": 43854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43853,
                  "mutability": "mutable",
                  "name": "vesting",
                  "nameLocation": "20272:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43856,
                  "src": "20264:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43852,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20264:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20263:17:20"
            },
            "returnParameters": {
              "id": 43855,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20289:0:20"
            },
            "scope": 44043,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43866,
            "nodeType": "FunctionDefinition",
            "src": "20740:126:20",
            "nodes": [],
            "documentation": {
              "id": 43857,
              "nodeType": "StructuredDocumentation",
              "src": "20296:439:20",
              "text": " @notice Determine the prior number of vested stake for an account until a\n certain lock date as of a block number.\n @dev Block number must be a finalized block or else this function\n will revert to prevent misinformation.\n @param date The lock date.\n @param blockNumber The block number to get the vote balance at.\n @return The number of votes the account had as of the given block.\n "
            },
            "functionSelector": "c70a7e96",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPriorVestingStakeByDate",
            "nameLocation": "20749:26:20",
            "parameters": {
              "id": 43862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43859,
                  "mutability": "mutable",
                  "name": "date",
                  "nameLocation": "20784:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43866,
                  "src": "20776:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43858,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20776:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43861,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "20798:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43866,
                  "src": "20790:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43860,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20790:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20775:35:20"
            },
            "returnParameters": {
              "id": 43865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43864,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43866,
                  "src": "20858:6:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 43863,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "20858:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20857:8:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43878,
            "nodeType": "FunctionDefinition",
            "src": "21289:157:20",
            "nodes": [],
            "documentation": {
              "id": 43867,
              "nodeType": "StructuredDocumentation",
              "src": "20872:412:20",
              "text": " @notice Compute the voting power for a specific date.\n Power = stake * weight\n @param date The staking date to compute the power for. Adjusted to the next valid lock date, if necessary.\n @param startDate The date for which we need to know the power of the stake.\n @param blockNumber The block number, needed for checkpointing.\n @return power The stacking power.\n "
            },
            "functionSelector": "ba21c6d7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "weightedVestingStakeByDate",
            "nameLocation": "21298:26:20",
            "parameters": {
              "id": 43874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43869,
                  "mutability": "mutable",
                  "name": "date",
                  "nameLocation": "21342:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43878,
                  "src": "21334:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43868,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21334:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43871,
                  "mutability": "mutable",
                  "name": "startDate",
                  "nameLocation": "21364:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43878,
                  "src": "21356:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43870,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21356:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43873,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "21391:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43878,
                  "src": "21383:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43872,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21383:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21324:84:20"
            },
            "returnParameters": {
              "id": 43877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43876,
                  "mutability": "mutable",
                  "name": "power",
                  "nameLocation": "21439:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43878,
                  "src": "21432:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 43875,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "21432:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21431:14:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43888,
            "nodeType": "FunctionDefinition",
            "src": "22162:134:20",
            "nodes": [],
            "documentation": {
              "id": 43879,
              "nodeType": "StructuredDocumentation",
              "src": "21452:705:20",
              "text": " @notice Determine the prior weighted vested amount for an account as of a block number.\n Iterate through checkpoints adding up voting power.\n @dev Block number must be a finalized block or else this function will\n revert to prevent misinformation.\n      Used for fee sharing, not voting.\n TODO: WeightedStaking::getPriorVestingWeightedStake is using the variable name \"votes\"\n to add up token stake, and that could be misleading.\n @param blockNumber The block number to get the vote balance at.\n @param date The staking date to compute the power for.\n @return votes The weighted stake the account had as of the given block.\n "
            },
            "functionSelector": "cdbe7155",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPriorVestingWeightedStake",
            "nameLocation": "22171:28:20",
            "parameters": {
              "id": 43884,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43881,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "22208:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43888,
                  "src": "22200:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43880,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22200:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43883,
                  "mutability": "mutable",
                  "name": "date",
                  "nameLocation": "22229:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43888,
                  "src": "22221:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43882,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22221:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22199:35:20"
            },
            "returnParameters": {
              "id": 43887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43886,
                  "mutability": "mutable",
                  "name": "votes",
                  "nameLocation": "22289:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43888,
                  "src": "22282:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 43885,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "22282:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22281:14:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43900,
            "nodeType": "FunctionDefinition",
            "src": "22798:146:20",
            "nodes": [],
            "documentation": {
              "id": 43889,
              "nodeType": "StructuredDocumentation",
              "src": "22302:491:20",
              "text": " @notice Determine the prior number of stake for an account until a\n certain lock date as of a block number.\n @dev Block number must be a finalized block or else this function\n will revert to prevent misinformation.\n @param account The address of the account to check.\n @param date The lock date.\n @param blockNumber The block number to get the vote balance at.\n @return The number of votes the account had as of the given block.\n "
            },
            "functionSelector": "cf7b684a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPriorUserStakeByDate",
            "nameLocation": "22807:23:20",
            "parameters": {
              "id": 43896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43891,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "22848:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43900,
                  "src": "22840:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43890,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22840:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43893,
                  "mutability": "mutable",
                  "name": "date",
                  "nameLocation": "22873:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43900,
                  "src": "22865:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43892,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22865:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43895,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "22895:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43900,
                  "src": "22887:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43894,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22887:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22830:82:20"
            },
            "returnParameters": {
              "id": 43899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43898,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43900,
                  "src": "22936:6:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 43897,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "22936:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22935:8:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43910,
            "nodeType": "FunctionDefinition",
            "src": "23183:93:20",
            "nodes": [],
            "documentation": {
              "id": 43901,
              "nodeType": "StructuredDocumentation",
              "src": "22950:228:20",
              "text": " @notice Sets the users' vesting stakes for a giving lock dates and writes checkpoints.\n @param lockedDates The arrays of lock dates.\n @param values The array of values to add to the staked balance."
            },
            "functionSelector": "6e56c1dd",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setVestingStakes",
            "nameLocation": "23192:16:20",
            "parameters": {
              "id": 43908,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43904,
                  "mutability": "mutable",
                  "name": "lockedDates",
                  "nameLocation": "23228:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43910,
                  "src": "23209:30:20",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 43902,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "23209:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 43903,
                    "nodeType": "ArrayTypeName",
                    "src": "23209:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43907,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "23259:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43910,
                  "src": "23241:24:20",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint96_$dyn_calldata_ptr",
                    "typeString": "uint96[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 43905,
                      "name": "uint96",
                      "nodeType": "ElementaryTypeName",
                      "src": "23241:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "id": 43906,
                    "nodeType": "ArrayTypeName",
                    "src": "23241:8:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint96_$dyn_storage_ptr",
                      "typeString": "uint96[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23208:58:20"
            },
            "returnParameters": {
              "id": 43909,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23275:0:20"
            },
            "scope": 44043,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43916,
            "nodeType": "FunctionDefinition",
            "src": "23597:68:20",
            "nodes": [],
            "documentation": {
              "id": 43911,
              "nodeType": "StructuredDocumentation",
              "src": "23282:310:20",
              "text": " @notice sets vesting registry\n @param _vestingRegistryProxy the address of vesting registry proxy contract\n @dev _vestingRegistryProxy can be set to 0 as this function can be reused by\n various other functionalities without the necessity of linking it with Vesting Registry"
            },
            "functionSelector": "450b0601",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setVestingRegistry",
            "nameLocation": "23606:18:20",
            "parameters": {
              "id": 43914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43913,
                  "mutability": "mutable",
                  "name": "_vestingRegistryProxy",
                  "nameLocation": "23633:21:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43916,
                  "src": "23625:29:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43912,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23625:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23624:31:20"
            },
            "returnParameters": {
              "id": 43915,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23664:0:20"
            },
            "scope": 44043,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43926,
            "nodeType": "FunctionDefinition",
            "src": "24059:105:20",
            "nodes": [],
            "documentation": {
              "id": 43917,
              "nodeType": "StructuredDocumentation",
              "src": "23756:298:20",
              "text": " @notice Withdraw the given amount of tokens if they are unlocked.\n @param amount The number of tokens to withdraw.\n @param until The date until which the tokens were staked.\n @param receiver The receiver of the tokens. If not specified, send to the msg.sender\n "
            },
            "functionSelector": "dab6ca44",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "24068:8:20",
            "parameters": {
              "id": 43924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43919,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "24093:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43926,
                  "src": "24086:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 43918,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "24086:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43921,
                  "mutability": "mutable",
                  "name": "until",
                  "nameLocation": "24117:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43926,
                  "src": "24109:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43920,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24109:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43923,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "24140:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43926,
                  "src": "24132:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43922,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24132:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24076:78:20"
            },
            "returnParameters": {
              "id": 43925,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24163:0:20"
            },
            "scope": 44043,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43936,
            "nodeType": "FunctionDefinition",
            "src": "24729:115:20",
            "nodes": [],
            "documentation": {
              "id": 43927,
              "nodeType": "StructuredDocumentation",
              "src": "24170:554:20",
              "text": " @notice Withdraw the given amount of tokens.\n @param amount The number of tokens to withdraw.\n @param until The date until which the tokens were staked.\n @param receiver The receiver of the tokens. If not specified, send to the msg.sender\n @dev Can be invoked only by whitelisted contract passed to governanceWithdrawVesting\n @dev **WARNING** This function should not be no longer used by Sovryn Protocol.\n Sovryn protocol will use the cancelTeamVesting function for the withdrawal moving forward.\n "
            },
            "functionSelector": "800b64ca",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "governanceWithdraw",
            "nameLocation": "24738:18:20",
            "parameters": {
              "id": 43934,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43929,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "24773:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43936,
                  "src": "24766:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 43928,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "24766:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43931,
                  "mutability": "mutable",
                  "name": "until",
                  "nameLocation": "24797:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43936,
                  "src": "24789:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43930,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24789:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43933,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "24820:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43936,
                  "src": "24812:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43932,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24812:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24756:78:20"
            },
            "returnParameters": {
              "id": 43935,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24843:0:20"
            },
            "scope": 44043,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43944,
            "nodeType": "FunctionDefinition",
            "src": "25161:79:20",
            "nodes": [],
            "documentation": {
              "id": 43937,
              "nodeType": "StructuredDocumentation",
              "src": "24850:306:20",
              "text": " @notice Withdraw tokens for vesting contract.\n @param vesting The address of Vesting contract.\n @param receiver The receiver of the tokens. If not specified, send to the msg.sender\n @dev Can be invoked only by whitelisted contract passed to governanceWithdrawVesting.\n "
            },
            "functionSelector": "3827fca5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "governanceWithdrawVesting",
            "nameLocation": "25170:25:20",
            "parameters": {
              "id": 43942,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43939,
                  "mutability": "mutable",
                  "name": "vesting",
                  "nameLocation": "25204:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43944,
                  "src": "25196:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43938,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25196:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43941,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "25221:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43944,
                  "src": "25213:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43940,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25213:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25195:35:20"
            },
            "returnParameters": {
              "id": 43943,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25239:0:20"
            },
            "scope": 44043,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43956,
            "nodeType": "FunctionDefinition",
            "src": "25450:121:20",
            "nodes": [],
            "documentation": {
              "id": 43945,
              "nodeType": "StructuredDocumentation",
              "src": "25246:199:20",
              "text": " @notice Get available and punished amount for withdrawing.\n @param amount The number of tokens to withdraw.\n @param until The date until which the tokens were staked.\n "
            },
            "functionSelector": "96a590c1",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getWithdrawAmounts",
            "nameLocation": "25459:18:20",
            "parameters": {
              "id": 43950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43947,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "25485:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43956,
                  "src": "25478:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 43946,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "25478:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43949,
                  "mutability": "mutable",
                  "name": "until",
                  "nameLocation": "25501:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43956,
                  "src": "25493:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43948,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25493:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25477:30:20"
            },
            "returnParameters": {
              "id": 43955,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43952,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43956,
                  "src": "25555:6:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 43951,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "25555:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43954,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43956,
                  "src": "25563:6:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 43953,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "25563:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25554:16:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43960,
            "nodeType": "FunctionDefinition",
            "src": "25920:36:20",
            "nodes": [],
            "documentation": {
              "id": 43957,
              "nodeType": "StructuredDocumentation",
              "src": "25577:338:20",
              "text": " @notice Allow the owner to unlock all tokens in case the staking contract\n is going to be replaced\n Note: Not reversible on purpose. once unlocked, everything is unlocked.\n The owner should not be able to just quickly unlock to withdraw his own\n tokens and lock again.\n @dev Last resort.\n "
            },
            "functionSelector": "5e0be607",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "unlockAllTokens",
            "nameLocation": "25929:15:20",
            "parameters": {
              "id": 43958,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25944:2:20"
            },
            "returnParameters": {
              "id": 43959,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25955:0:20"
            },
            "scope": 44043,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43972,
            "nodeType": "FunctionDefinition",
            "src": "26666:163:20",
            "nodes": [],
            "documentation": {
              "id": 43961,
              "nodeType": "StructuredDocumentation",
              "src": "26047:614:20",
              "text": " @notice Determine the prior weighted stake for an account as of a block number.\n Iterate through checkpoints adding up voting power.\n @dev Block number must be a finalized block or else this function will\n revert to prevent misinformation.\n      Used for fee sharing, not voting.\n @param account The address of the account to check.\n @param blockNumber The block number to get the vote balance at.\n @param date The date/timestamp of the unstaking time.\n @return priorWeightedStake The weighted stake the account had as of the given block.\n "
            },
            "functionSelector": "37e6b1c1",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPriorWeightedStake",
            "nameLocation": "26675:21:20",
            "parameters": {
              "id": 43968,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43963,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "26714:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43972,
                  "src": "26706:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43962,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "26706:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43965,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "26739:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43972,
                  "src": "26731:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43964,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26731:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43967,
                  "mutability": "mutable",
                  "name": "date",
                  "nameLocation": "26768:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43972,
                  "src": "26760:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43966,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26760:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26696:82:20"
            },
            "returnParameters": {
              "id": 43971,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43970,
                  "mutability": "mutable",
                  "name": "priorWeightedStake",
                  "nameLocation": "26809:18:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43972,
                  "src": "26802:25:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 43969,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "26802:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26801:27:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43986,
            "nodeType": "FunctionDefinition",
            "src": "27362:175:20",
            "nodes": [],
            "documentation": {
              "id": 43973,
              "nodeType": "StructuredDocumentation",
              "src": "26835:522:20",
              "text": " @notice Compute the voting power for a specific date.\n Power = stake * weight\n TODO: WeightedStaking::weightedStakeByDate should probably better\n be internal instead of a public function.\n @param account The user address.\n @param date The staking date to compute the power for.\n @param startDate The date for which we need to know the power of the stake.\n @param blockNumber The block number, needed for checkpointing.\n @return power The stacking power.\n "
            },
            "functionSelector": "8dae1b16",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "weightedStakeByDate",
            "nameLocation": "27371:19:20",
            "parameters": {
              "id": 43982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43975,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "27408:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43986,
                  "src": "27400:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43974,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "27400:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43977,
                  "mutability": "mutable",
                  "name": "date",
                  "nameLocation": "27433:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43986,
                  "src": "27425:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43976,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27425:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43979,
                  "mutability": "mutable",
                  "name": "startDate",
                  "nameLocation": "27455:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43986,
                  "src": "27447:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43978,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27447:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43981,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "27482:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43986,
                  "src": "27474:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43980,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27474:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27390:109:20"
            },
            "returnParameters": {
              "id": 43985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43984,
                  "mutability": "mutable",
                  "name": "power",
                  "nameLocation": "27530:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43986,
                  "src": "27523:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 43983,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "27523:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27522:14:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43996,
            "nodeType": "FunctionDefinition",
            "src": "27832:124:20",
            "nodes": [],
            "documentation": {
              "id": 43987,
              "nodeType": "StructuredDocumentation",
              "src": "27543:284:20",
              "text": " @notice Compute the weight for a specific date.\n @param date The unlocking date.\n @param startDate We compute the weight for the tokens staked until 'date' on 'startDate'.\n @return weight The weighted stake the account had as of the given block.\n "
            },
            "functionSelector": "62cf8a08",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "computeWeightByDate",
            "nameLocation": "27841:19:20",
            "parameters": {
              "id": 43992,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43989,
                  "mutability": "mutable",
                  "name": "date",
                  "nameLocation": "27869:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43996,
                  "src": "27861:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43988,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27861:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43991,
                  "mutability": "mutable",
                  "name": "startDate",
                  "nameLocation": "27883:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43996,
                  "src": "27875:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43990,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27875:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27860:33:20"
            },
            "returnParameters": {
              "id": 43995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43994,
                  "mutability": "mutable",
                  "name": "weight",
                  "nameLocation": "27948:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 43996,
                  "src": "27941:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 43993,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "27941:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27940:15:20"
            },
            "scope": 44043,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44002,
            "nodeType": "FunctionDefinition",
            "src": "28171:56:20",
            "nodes": [],
            "documentation": {
              "id": 43997,
              "nodeType": "StructuredDocumentation",
              "src": "27962:204:20",
              "text": " @notice Returns public constant MAX_DURATION\n preserved for backwards compatibility\n Use getStorageMaxDurationToStakeTokens()\n @return uint96 MAX_DURATION for staking*"
            },
            "functionSelector": "b1724b46",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "MAX_DURATION",
            "nameLocation": "28180:12:20",
            "parameters": {
              "id": 43998,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28192:2:20"
            },
            "returnParameters": {
              "id": 44001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44000,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44002,
                  "src": "28218:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43999,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28218:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28217:9:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44008,
            "nodeType": "FunctionDefinition",
            "src": "28303:49:20",
            "nodes": [],
            "documentation": {
              "id": 44003,
              "nodeType": "StructuredDocumentation",
              "src": "28233:65:20",
              "text": " @dev Returns the address of the current owner."
            },
            "functionSelector": "8da5cb5b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "owner",
            "nameLocation": "28312:5:20",
            "parameters": {
              "id": 44004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28317:2:20"
            },
            "returnParameters": {
              "id": 44007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44006,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44008,
                  "src": "28343:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44005,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28343:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28342:9:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44014,
            "nodeType": "FunctionDefinition",
            "src": "28435:48:20",
            "nodes": [],
            "documentation": {
              "id": 44009,
              "nodeType": "StructuredDocumentation",
              "src": "28358:72:20",
              "text": " @dev Returns true if the caller is the current owner."
            },
            "functionSelector": "8f32d59b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isOwner",
            "nameLocation": "28444:7:20",
            "parameters": {
              "id": 44010,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28451:2:20"
            },
            "returnParameters": {
              "id": 44013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44012,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44014,
                  "src": "28477:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 44011,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "28477:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28476:6:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44020,
            "nodeType": "FunctionDefinition",
            "src": "28632:54:20",
            "nodes": [],
            "documentation": {
              "id": 44015,
              "nodeType": "StructuredDocumentation",
              "src": "28489:138:20",
              "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
            },
            "functionSelector": "f2fde38b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnership",
            "nameLocation": "28641:17:20",
            "parameters": {
              "id": 44018,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44017,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "28667:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 44020,
                  "src": "28659:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44016,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28659:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28658:18:20"
            },
            "returnParameters": {
              "id": 44019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28685:0:20"
            },
            "scope": 44043,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44030,
            "nodeType": "FunctionDefinition",
            "src": "29145:120:20",
            "nodes": [],
            "documentation": {
              "id": 44021,
              "nodeType": "StructuredDocumentation",
              "src": "28692:448:20",
              "text": " @notice Governance withdraw vesting directly through staking contract.\n This direct withdraw vesting solves the out of gas issue when there are too many iterations when withdrawing.\n This function only allows cancelling vesting contract of the TeamVesting type.\n @param vesting The vesting address.\n @param receiver The receiving address.\n @param startFrom The start value for the iterations."
            },
            "functionSelector": "765dade9",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "cancelTeamVesting",
            "nameLocation": "29154:17:20",
            "parameters": {
              "id": 44028,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44023,
                  "mutability": "mutable",
                  "name": "vesting",
                  "nameLocation": "29189:7:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 44030,
                  "src": "29181:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44022,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29181:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44025,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "29214:8:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 44030,
                  "src": "29206:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44024,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29206:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44027,
                  "mutability": "mutable",
                  "name": "startFrom",
                  "nameLocation": "29240:9:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 44030,
                  "src": "29232:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44026,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29232:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29171:84:20"
            },
            "returnParameters": {
              "id": 44029,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29264:0:20"
            },
            "scope": 44043,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44036,
            "nodeType": "FunctionDefinition",
            "src": "29423:75:20",
            "nodes": [],
            "documentation": {
              "id": 44031,
              "nodeType": "StructuredDocumentation",
              "src": "29271:147:20",
              "text": " @notice Max iteration for direct withdrawal from staking to prevent out of gas issue.\n @return max iteration value."
            },
            "functionSelector": "ec8e0b29",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getMaxVestingWithdrawIterations",
            "nameLocation": "29432:31:20",
            "parameters": {
              "id": 44032,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29463:2:20"
            },
            "returnParameters": {
              "id": 44035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44034,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44036,
                  "src": "29489:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44033,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29489:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29488:9:20"
            },
            "scope": 44043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44042,
            "nodeType": "FunctionDefinition",
            "src": "29622:73:20",
            "nodes": [],
            "documentation": {
              "id": 44037,
              "nodeType": "StructuredDocumentation",
              "src": "29504:113:20",
              "text": " @dev set max withdraw iterations.\n @param maxIterations new max iterations value."
            },
            "functionSelector": "5b66a324",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setMaxVestingWithdrawIterations",
            "nameLocation": "29631:31:20",
            "parameters": {
              "id": 44040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44039,
                  "mutability": "mutable",
                  "name": "maxIterations",
                  "nameLocation": "29671:13:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 44042,
                  "src": "29663:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44038,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29663:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29662:23:20"
            },
            "returnParameters": {
              "id": 44041,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29694:0:20"
            },
            "scope": 44043,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IStaking",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 43327,
          "nodeType": "StructuredDocumentation",
          "src": "47:74:20",
          "text": " @title Interface for Staking modules governance/Staking/modules"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          44043
        ],
        "name": "IStaking",
        "nameLocation": "133:8:20",
        "scope": 44044,
        "usedErrors": []
      }
    ]
  },
  "id": 20
}