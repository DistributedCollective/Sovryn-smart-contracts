{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "AdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "AdminRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "poolToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "poolToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "accumulatedReward",
          "type": "uint256"
        }
      ],
      "name": "EmergencyWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "poolToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "allocationPoint",
          "type": "uint256"
        }
      ],
      "name": "PoolTokenAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "poolToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newAllocationPoint",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldAllocationPoint",
          "type": "uint256"
        }
      ],
      "name": "PoolTokenUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "poolToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RewardClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "SOVTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "poolToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "BONUS_BLOCK_MULTIPLIER",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "SECONDS_PER_BLOCK",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "SOV",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolToken",
          "type": "address"
        },
        {
          "internalType": "uint96",
          "name": "_allocationPoint",
          "type": "uint96"
        },
        {
          "internalType": "bool",
          "name": "_withUpdate",
          "type": "bool"
        }
      ],
      "name": "add",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "admins",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "bonusEndBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolToken",
          "type": "address"
        }
      ],
      "name": "calcUnlockedImmediatelyPercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "claimReward",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "claimRewardFromAllPools",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolToken",
          "type": "address"
        }
      ],
      "name": "emergencyWithdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "endBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "name": "getEstimatedReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getMissedBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_to",
          "type": "uint256"
        }
      ],
      "name": "getPassedBlocksWithBonusMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolToken",
          "type": "address"
        }
      ],
      "name": "getPoolAccumulatedReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolToken",
          "type": "address"
        }
      ],
      "name": "getPoolId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolToken",
          "type": "address"
        }
      ],
      "name": "getPoolInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "poolToken",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "allocationPoint",
              "type": "uint96"
            },
            {
              "internalType": "uint256",
              "name": "lastRewardBlock",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "accumulatedRewardPerShare",
              "type": "uint256"
            }
          ],
          "internalType": "struct LiquidityMiningStorage.PoolInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPoolInfoList",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "poolToken",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "allocationPoint",
              "type": "uint96"
            },
            {
              "internalType": "uint256",
              "name": "lastRewardBlock",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "accumulatedRewardPerShare",
              "type": "uint256"
            }
          ],
          "internalType": "struct LiquidityMiningStorage.PoolInfo[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPoolLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserAccumulatedReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserAccumulatedRewardList",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserAccumulatedRewardToBePaidLiquid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserAccumulatedRewardToBeVested",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserBalanceList",
      "outputs": [
        {
          "internalType": "uint256[2][]",
          "name": "",
          "type": "uint256[2][]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rewardDebt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "accumulatedReward",
              "type": "uint256"
            }
          ],
          "internalType": "struct LiquidityMiningStorage.UserInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserInfoList",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rewardDebt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "accumulatedReward",
              "type": "uint256"
            }
          ],
          "internalType": "struct LiquidityMiningStorage.UserInfo[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserPoolTokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_SOV",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_rewardTokensPerBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_startDelayBlocks",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_numberOfBonusBlocks",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_wrapper",
          "type": "address"
        },
        {
          "internalType": "contract ILockedSOV",
          "name": "_lockedSOV",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_unlockedImmediatelyPercent",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lockedSOV",
      "outputs": [
        {
          "internalType": "contract ILockedSOV",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "onTokensDeposited",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "poolInfoList",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "poolToken",
          "type": "address"
        },
        {
          "internalType": "uint96",
          "name": "allocationPoint",
          "type": "uint96"
        },
        {
          "internalType": "uint256",
          "name": "lastRewardBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "accumulatedRewardPerShare",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "poolTokensUnlockedImmediatelyPercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "removeAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rewardTokensPerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract ILockedSOV",
          "name": "_lockedSOV",
          "type": "address"
        }
      ],
      "name": "setLockedSOV",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_poolTokenUnlockedImmediatelyPercent",
          "type": "uint256"
        }
      ],
      "name": "setPoolTokenUnlockedImmediatelyPercent",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_unlockedImmediatelyPercent",
          "type": "uint256"
        }
      ],
      "name": "setUnlockedImmediatelyPercent",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_wrapper",
          "type": "address"
        }
      ],
      "name": "setWrapper",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "startBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "stopMining",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalAllocationPoint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalUsersBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferSOV",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "unlockedImmediatelyPercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolToken",
          "type": "address"
        },
        {
          "internalType": "uint96",
          "name": "_allocationPoint",
          "type": "uint96"
        },
        {
          "internalType": "bool",
          "name": "_updateAllFlag",
          "type": "bool"
        }
      ],
      "name": "update",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "updateAllPools",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolToken",
          "type": "address"
        }
      ],
      "name": "updatePool",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_poolTokens",
          "type": "address[]"
        },
        {
          "internalType": "uint96[]",
          "name": "_allocationPoints",
          "type": "uint96[]"
        },
        {
          "internalType": "bool",
          "name": "_updateAllFlag",
          "type": "bool"
        }
      ],
      "name": "updateTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userInfoMap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardDebt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "accumulatedReward",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wrapper",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260006100176001600160e01b0361006616565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006a565b3390565b613dd6806200007a6000396000f3fe608060405234801561001057600080fd5b50600436106103835760003560e01c8063787b4026116101de578063c2167d931161010f578063da408679116100ad578063f2f46b3b1161007c578063f2f46b3b1461076b578063f2fde38b14610773578063f45346dc14610786578063f729a4041461079957610383565b8063da4086791461071b578063e3866c9a14610723578063e788d8d114610736578063f2801fe71461074b57610383565b8063caa9a08d116100e9578063caa9a08d146106cf578063d0452aa6146106e2578063d6a49f0e146106f5578063d8c173c41461070857610383565b8063c2167d9314610696578063c35a934d146106a9578063c680c0b7146106bc57610383565b8063aaf5eb681161017c578063afdd91c611610156578063afdd91c61461066b578063b3944d521461067e578063b9ec7d7414610686578063c1d742581461068e57610383565b8063aaf5eb6814610648578063ab32339f14610650578063ac210cc71461066357610383565b80638da5cb5b116101b85780638da5cb5b1461061b5780638f32d59b146106305780639a13ba2914610638578063a1a6690f1461064057610383565b8063787b4026146105d25780637b46c54f146105f557806386bc67581461060857610383565b8063414d57fb116102b85780635d50d0601161025657806362748fbb1161023057806362748fbb1461057957806369328dec146105995780636ff1c9bc146105ac57806370480275146105bf57610383565b80635d50d060146105245780635e379679146105445780635f02c1451461055757610383565b806348cd4cb11161029257806348cd4cb1146104d5578063492e019d146104dd5780634953c782146104fe57806356085d4c1461051157610383565b8063414d57fb14610482578063429b62e51461049557806348c84d9e146104b557610383565b80631785f53c116103255780631fc3f004116102ff5780631fc3f0041461044c57806329d0fa3e1461045f5780632d0857a2146104675780633723de421461047a57610383565b80631785f53c1461041e5780631aed6553146104315780631d8f889c1461043957610383565b80630b1a2851116103615780630b1a2851146103db5780630c43a7cd146103ee57806310a168f91461040357806316614c261461040b57610383565b806306bfa93814610388578063083c6323146103b157806308dcb360146103c6575b600080fd5b61039b610396366004612dd0565b6107a1565b6040516103a89190613c64565b60405180910390f35b6103b9610821565b6040516103a89190613c80565b6103ce610827565b6040516103a89190613a77565b6103b96103e9366004612ea5565b610836565b6104016103fc366004612ee8565b6108cf565b005b6103b9610b18565b610401610419366004612e28565b610b1d565b61040161042c366004612dd0565b610b99565b6103b9610c18565b61040161044736600461306b565b610c1e565b6103b961045a366004612dd0565b610ca4565b6103b9610cb6565b610401610475366004613089565b610cbc565b6103b9610d21565b610401610490366004612f2b565b610dd3565b6104a86104a3366004612dd0565b610ece565b6040516103a89190613a69565b6104c86104c3366004612dd0565b610ee3565b6040516103a89190613a58565b6103b9610f54565b6104f06104eb366004612dd0565b610f5a565b6040516103a8929190613c8e565b61040161050c366004612dee565b610f9d565b6103b961051f366004612dee565b610fc9565b610537610532366004612dd0565b610feb565b6040516103a89190613a25565b6103b96105523660046130e4565b6110bc565b61056a6105653660046130c5565b6110c8565b6040516103a893929190613c9c565b61058c610587366004612dd0565b6110f4565b6040516103a89190613a47565b6104016105a7366004612e58565b6111ab565b6104016105ba366004612dd0565b61133e565b6104016105cd366004612dd0565b611437565b6105e56105e0366004613089565b6114b0565b6040516103a89493929190613a85565b610401610603366004612dd0565b6114fc565b6103b9610616366004612dd0565b611516565b61062361159d565b6040516103a891906139b9565b6104a86115ac565b6103b96115d0565b6103b96115d6565b6103b96115dc565b6103b961065e366004612dd0565b6115e5565b61062361165a565b6103b9610679366004612dd0565b611669565b6103b961168f565b610401611695565b6103b96116b4565b6104016106a4366004612dd0565b6116b9565b6104016106b7366004612ee8565b611719565b6104016106ca366004612e28565b611782565b6103b96106dd366004612dd0565b611978565b6103b96106f0366004612dee565b611983565b610401610703366004612dd0565b6119a0565b610401610716366004612e28565b611b41565b610401611b4e565b610401610731366004612fcf565b611bb2565b61073e611cd9565b6040516103a89190613a36565b61075e610759366004612dee565b611d6f565b6040516103a89190613c72565b6103ce611dd1565b610401610781366004612dd0565b611de0565b610401610794366004612e58565b611e10565b6103b9611e1d565b6107a9612cc1565b60006107b483611e23565b9050600781815481106107c357fe5b60009182526020918290206040805160808101825260039390930290910180546001600160a01b0381168452600160a01b90046001600160601b03169383019390935260018301549082015260029091015460608201529392505050565b60055481565b600c546001600160a01b031681565b60008061084285611e23565b905060006007828154811061085357fe5b6000918252602082206003909102019150439061088761087a87601e63ffffffff611e6316565b839063ffffffff611ea516565b9050600061089784898585611eca565b91506108c0905064e8d4a510006108b48a8463ffffffff611fed16565b9063ffffffff611e6316565b955050505050505b9392505050565b6108d76115ac565b806108f157503360009081526001602052604090205460ff165b6109165760405162461bcd60e51b815260040161090d90613bc4565b60405180910390fd5b6000826001600160601b03161161093f5760405162461bcd60e51b815260040161090d90613ad4565b6001600160a01b0383166109655760405162461bcd60e51b815260040161090d90613c14565b6001600160a01b0383166000908152600860205260409020541561099b5760405162461bcd60e51b815260040161090d90613be4565b80156109a9576109a9611695565b600060035443116109bc576003546109be565b435b6009549091506109dd906001600160601b03851663ffffffff611ea516565b600955604080516080810182526001600160a01b038087168083526001600160601b0380881660208086019182528587018881526000606088018181526007805460018101825581845299516003909a027fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688810180549751909816600160a01b029a8a166001600160a01b03199097169690961790981698909817909455517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68983015594517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68a90910155915481835260089093529083902091909155905133907f38132ae9e6e6c4e777015bac3679dadd42206fad607b97846830be4b412908c390610b0a908790613caa565b60405180910390a350505050565b600a81565b610b256115ac565b80610b3f57503360009081526001602052604090205460ff165b610b5b5760405162461bcd60e51b815260040161090d90613bc4565b612710811115610b7d5760405162461bcd60e51b815260040161090d90613b04565b6001600160a01b039091166000908152600f6020526040902055565b610ba16115ac565b610bbd5760405162461bcd60e51b815260040161090d90613bc4565b6001600160a01b03811660009081526001602052604090819020805460ff19169055517fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f90610c0d9083906139b9565b60405180910390a150565b60045481565b610c266115ac565b80610c4057503360009081526001602052604090205460ff165b610c5c5760405162461bcd60e51b815260040161090d90613bc4565b6001600160a01b038116610c825760405162461bcd60e51b815260040161090d90613af4565b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b600f6020526000908152604090205481565b60025481565b610cc46115ac565b80610cde57503360009081526001602052604090205460ff165b610cfa5760405162461bcd60e51b815260040161090d90613bc4565b612710811115610d1c5760405162461bcd60e51b815260040161090d90613b04565b600e55565b600c546040516370a0823160e01b815260009182916001600160a01b03909116906370a0823190610d569030906004016139b9565b60206040518083038186803b158015610d6e57600080fd5b505afa158015610d82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610da691908101906130a7565b9050600b54811015610dca57600b54610dc5908263ffffffff61202716565b610dcd565b60005b91505090565b610ddb6115ac565b80610df557503360009081526001602052604090205460ff165b610e115760405162461bcd60e51b815260040161090d90613bc4565b838214610e305760405162461bcd60e51b815260040161090d90613bd4565b8015610e3e57610e3e611695565b8360005b81811015610ec55782610e7357610e73878783818110610e5e57fe5b90506020020160206106039190810190612dd0565b610ebd878783818110610e8257fe5b9050602002016020610e979190810190612dd0565b868684818110610ea357fe5b9050602002016020610eb89190810190613103565b612069565b600101610e42565b50505050505050565b60016020526000908152604090205460ff1681565b600754604080518281526020808402820101909152606091908290828015610f15578160200160208202803883390190505b50905060005b82811015610f4c57610f2d818661214e565b828281518110610f3957fe5b6020908102919091010152600101610f1b565b509392505050565b60035481565b6000806000610f6884611e23565b9050600060078281548110610f7957fe5b90600052602060002090600302019050610f928161228c565b935093505050915091565b6000610fa8826122a9565b90506000610fb584611e23565b9050610fc381836001612305565b50505050565b600080610fd584611e23565b9050610fe1818461214e565b9150505b92915050565b60075460408051828152602080840282010190915260609190829082801561102d57816020015b61101a612cfb565b8152602001906001900390816110125790505b50905060005b82811015610f4c576000818152600a602090815260408083206001600160a01b0389168452909152902054825183908390811061106c57fe5b602002602001015160006002811061108057fe5b602002015261108f818661214e565b82828151811061109b57fe5b60200260200101516001600281106110af57fe5b6020020152600101611033565b60006108c88383612382565b600a60209081526000928352604080842090915290825290208054600182015460029092015490919083565b60075460408051828152602080840282010190915260609190829082801561113657816020015b611123612d19565b81526020019060019003908161111b5790505b50905060005b82811015610f4c576000818152600a602090815260408083206001600160a01b03891684528252918290208251606081018452815481526001820154928101929092526002015491810191909152825183908390811061119857fe5b602090810291909101015260010161113c565b6001600160a01b0383166000908152600860205260409020546111e05760405162461bcd60e51b815260040161090d90613b24565b60006111eb826122a9565b905060006111f885611e23565b905060006007828154811061120957fe5b60009182526020808320858452600a825260408085206001600160a01b0389168652909252922080546003909202909201925086111561125b5760405162461bcd60e51b815260040161090d90613b74565b61126483612422565b61126e8282612534565b61127c87828660008061258b565b805461128e908763ffffffff61202716565b81556006546001600160a01b03163314156112c45781546112bf906001600160a01b0316338863ffffffff6128c616565b6112e0565b81546112e0906001600160a01b0316858863ffffffff6128c616565b6112ea828261291f565b866001600160a01b0316846001600160a01b03167f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb8860405161132d9190613c80565b60405180910390a350505050505050565b600061134982611e23565b905060006007828154811061135a57fe5b60009182526020808320858452600a8252604080852033865290925292206003909102909101915061138b83612422565b6113958282612534565b6002810154600b546113ac9163ffffffff61202716565b600b55805460028201805460008085556001850181905590915583546113e2906001600160a01b0316338463ffffffff6128c616565b856001600160a01b0316336001600160a01b03167f1401b6ff3b281e84fd77353369caed48ba7e787dd3821db05cc00643736082018484604051611427929190613c8e565b60405180910390a3505050505050565b61143f6115ac565b61145b5760405162461bcd60e51b815260040161090d90613bc4565b6001600160a01b038116600090815260016020819052604091829020805460ff19169091179055517f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33990610c0d9083906139b9565b600781815481106114bd57fe5b60009182526020909120600390910201805460018201546002909201546001600160a01b0382169350600160a01b9091046001600160601b0316919084565b600061150782611e23565b905061151281612422565b5050565b60075460009081805b82811015610f4c5760006007828154811061153657fe5b600091825260208220600390910201546001600160a01b0316915061155a82611669565b90506115916115846127106108b4611572878c61214e565b6127108690039063ffffffff611fed16565b859063ffffffff611ea516565b9350505060010161151f565b6000546001600160a01b031690565b600080546001600160a01b03166115c1612949565b6001600160a01b031614905090565b600b5481565b60095481565b64e8d4a5100081565b60075460009081805b82811015610f4c5760006007828154811061160557fe5b600091825260208220600390910201546001600160a01b0316915061162982611669565b905061164e6115846127106108b4611641878c61214e565b859063ffffffff611fed16565b935050506001016115ee565b6006546001600160a01b031681565b6001600160a01b0381166000908152600f602052604081205480610fe557600e546108c8565b60075490565b60075460005b81811015611512576116ac81612422565b60010161169b565b601e81565b6116c16115ac565b806116db57503360009081526001602052604090205460ff165b6116f75760405162461bcd60e51b815260040161090d90613bc4565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6117216115ac565b8061173b57503360009081526001602052604090205460ff165b6117575760405162461bcd60e51b815260040161090d90613bc4565b801561176a57611765611695565b611773565b611773836114fc565b61177d8383612069565b505050565b61178a6115ac565b806117a457503360009081526001602052604090205460ff165b6117c05760405162461bcd60e51b815260040161090d90613bc4565b6001600160a01b0382166117e65760405162461bcd60e51b815260040161090d90613ba4565b806118035760405162461bcd60e51b815260040161090d90613bf4565b600c546040516370a0823160e01b81526000916001600160a01b0316906370a08231906118349030906004016139b9565b60206040518083038186803b15801561184c57600080fd5b505afa158015611860573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061188491908101906130a7565b905080821115611892578091505b600c5460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906118c490869086906004016139ef565b602060405180830381600087803b1580156118de57600080fd5b505af11580156118f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506119169190810190612fb1565b6119325760405162461bcd60e51b815260040161090d90613b34565b826001600160a01b03167fe1b0ada289bf82fb641c8c1e1c78f820fae44e8f845760725cdeb09167a289ad8360405161196b9190613c80565b60405180910390a2505050565b6000610fe582611e23565b600061198d612d19565b6119978484611d6f565b51949350505050565b60006119ab826122a9565b60075490915060005b818110156119d257806119c981856000612305565b506001016119b4565b50600d5460405163c408689360e01b81526000916001600160a01b03169063c408689390611a049086906004016139b9565b60206040518083038186803b158015611a1c57600080fd5b505afa158015611a30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611a5491908101906130a7565b1180611ade5750600d5460405163129de5bf60e01b81526000916001600160a01b03169063129de5bf90611a8c9086906004016139b9565b60206040518083038186803b158015611aa457600080fd5b505afa158015611ab8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611adc91908101906130a7565b115b1561177d57600d546040516315b6fc1560e11b81526001600160a01b0390911690632b6df82a90611b139085906004016139b9565b600060405180830381600087803b158015611b2d57600080fd5b505af1158015610ec5573d6000803e3d6000fd5b611512338284600161294d565b611b566115ac565b80611b7057503360009081526001602052604090205460ff165b611b8c5760405162461bcd60e51b815260040161090d90613bc4565b60055415611bac5760405162461bcd60e51b815260040161090d90613c44565b43600555565b611bba6115ac565b80611bd457503360009081526001602052604090205460ff165b611bf05760405162461bcd60e51b815260040161090d90613bc4565b600c546001600160a01b031615611c195760405162461bcd60e51b815260040161090d90613c24565b6001600160a01b038716611c3f5760405162461bcd60e51b815260040161090d90613c14565b60008511611c5f5760405162461bcd60e51b815260040161090d90613b84565b6127108110611c805760405162461bcd60e51b815260040161090d90613b64565b600c80546001600160a01b03199081166001600160a01b03998a16179091556002969096554394909401600381905592909201600455600680548516918616919091179055600d80549093169316929092179055600e55565b60606007805480602002602001604051908101604052809291908181526020016000905b82821015611d66576000848152602090819020604080516080810182526003860290920180546001600160a01b0381168452600160a01b90046001600160601b031683850152600180820154928401929092526002015460608301529083529092019101611cfd565b50505050905090565b611d77612d19565b6000611d8284611e23565b6000908152600a602090815260408083206001600160a01b0387168452825291829020825160608101845281548152600182015492810192909252600201549181019190915291505092915050565b600d546001600160a01b031681565b611de86115ac565b611e045760405162461bcd60e51b815260040161090d90613bc4565b611e0d81612a98565b50565b61177d838383600061294d565b600e5481565b6001600160a01b03811660009081526008602052604081205480611e595760405162461bcd60e51b815260040161090d90613b24565b6000190192915050565b60006108c883836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612b19565b6000828201838110156108c85760405162461bcd60e51b815260040161090d90613b44565b6000806000611ed98585612382565b90506000611f286009546108b48a60000160149054906101000a90046001600160601b03166001600160601b0316611f1c60025487611fed90919063ffffffff16565b9063ffffffff611fed16565b88546040516370a0823160e01b81529192506000916001600160a01b03909116906370a0823190611f5d9030906004016139b9565b60206040518083038186803b158015611f7557600080fd5b505afa158015611f89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611fad91908101906130a7565b9050611fbf818963ffffffff611ea516565b90506000611fdc826108b48564e8d4a5100063ffffffff611fed16565b929a92995091975050505050505050565b600082611ffc57506000610fe5565b8282028284828161200957fe5b04146108c85760405162461bcd60e51b815260040161090d90613bb4565b60006108c883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612b50565b600061207483611e23565b905060006007828154811061208557fe5b60009182526020909120600390910201546009546001600160601b03600160a01b909204821692506120d0918516906120c4908463ffffffff61202716565b9063ffffffff611ea516565b60098190555082600783815481106120e457fe5b6000918252602090912060039091020180546001600160601b0392909216600160a01b026001600160a01b039283161790556040519085169033907f7b327867ecd5d7f5165f3d8af5193f1255f215acb14e229b529a4f8a9991abbc90610b0a9087908690613cb8565b6000806007848154811061215e57fe5b60009182526020808320878452600a825260408085206001600160a01b03808a16875293528085206002600390950290920193840154845491516370a0823160e01b815294965091949193919216906370a08231906121c19030906004016139b9565b60206040518083038186803b1580156121d957600080fd5b505afa1580156121ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061221191908101906130a7565b905083600101544311801561222557508015155b1561224d5760006122358561228c565b91506122499050838263ffffffff611ea516565b9250505b612281836001015461227564e8d4a510006108b4868860000154611fed90919063ffffffff16565b9063ffffffff61202716565b979650505050505050565b6000806122a0836000856001015443611eca565b91509150915091565b6000336001600160a01b03831615610fe5576006546001600160a01b03163314806122e257503360009081526008602052604090205415155b6122fe5760405162461bcd60e51b815260040161090d90613c04565b5090919050565b60006007848154811061231457fe5b60009182526020808320878452600a825260408085206001600160a01b038916865290925292206003909102909101915061234e85612422565b6123588282612534565b8154612371906001600160a01b0316828686600161258b565b61237b828261291f565b5050505050565b60006003548310156123945760035492505b60006005541180156123a7575060055482115b156123b25760055491505b60045482116123d7576123d0600a611f1c848663ffffffff61202716565b9050610fe5565b60045483106123f0576123d0828463ffffffff61202716565b6123d06124086004548461202790919063ffffffff16565b6120c4600a611f1c8760045461202790919063ffffffff16565b60006007828154811061243157fe5b90600052602060002090600302019050806001015443116124525750611e0d565b80546040516370a0823160e01b81526000916001600160a01b0316906370a08231906124829030906004016139b9565b60206040518083038186803b15801561249a57600080fd5b505afa1580156124ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506124d291908101906130a7565b9050806124e6575043600190910155611e0d565b6000806124f28461228c565b6002860154919350915061250c908263ffffffff611ea516565b6002850155436001850155600b5461252a908363ffffffff611ea516565b600b555050505050565b805415611512576000612569826001015461227564e8d4a510006108b487600201548760000154611fed90919063ffffffff16565b6002830154909150612581908263ffffffff611ea516565b6002830155505050565b6002840154600061259b87611669565b600c546040516370a0823160e01b81529192506000916001600160a01b03909116906370a08231906125d19030906004016139b9565b60206040518083038186803b1580156125e957600080fd5b505afa1580156125fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061262191908101906130a7565b905082811061289e57600b5461263d908463ffffffff61202716565b600b55600060028801556127108214156126db57600c5460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb9061268390899087906004016139ef565b602060405180830381600087803b15801561269d57600080fd5b505af11580156126b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506126d59190810190612fb1565b5061284e565b600c54600d5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926127119291169087906004016139ef565b602060405180830381600087803b15801561272b57600080fd5b505af115801561273f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506127639190810190612fb1565b61277f5760405162461bcd60e51b815260040161090d90613b94565b600d54604051630efe6a8b60e01b81526001600160a01b0390911690630efe6a8b906127b390899087908790600401613a0a565b600060405180830381600087803b1580156127cd57600080fd5b505af11580156127e1573d6000803e3d6000fd5b50505050841561284e57600d546040516315b6fc1560e11b81526001600160a01b0390911690632b6df82a9061281b9089906004016139b9565b600060405180830381600087803b15801561283557600080fd5b505af1158015612849573d6000803e3d6000fd5b505050505b876001600160a01b0316866001600160a01b03167f0aa4d283470c904c551d18bb894d37e17674920f3261a7f854be501e25f421b7856040516128919190613c80565b60405180910390a36128bc565b83156128bc5760405162461bcd60e51b815260040161090d90613ae4565b5050505050505050565b60405161177d90849063a9059cbb60e01b906128e890869086906024016139ef565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612b7c565b600282015481546129409164e8d4a51000916108b49163ffffffff611fed16565b60019091015550565b3390565b6001600160a01b0384166000908152600860205260409020546129825760405162461bcd60e51b815260040161090d90613b24565b60006001600160a01b038316612998573361299a565b825b905060006129a786611e23565b90506000600782815481106129b857fe5b60009182526020808320858452600a825260408085206001600160a01b03891686529092529220600390910290910191506129f283612422565b6129fc8282612534565b8615612a395784612a24578154612a24906001600160a01b031633308a63ffffffff612c6116565b8054612a36908863ffffffff611ea516565b81555b612a43828261291f565b876001600160a01b0316846001600160a01b03167f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f6289604051612a869190613c80565b60405180910390a35050505050505050565b6001600160a01b038116612abe5760405162461bcd60e51b815260040161090d90613b14565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60008183612b3a5760405162461bcd60e51b815260040161090d9190613ac3565b506000838581612b4657fe5b0495945050505050565b60008184841115612b745760405162461bcd60e51b815260040161090d9190613ac3565b505050900390565b612b8e826001600160a01b0316612c85565b612baa5760405162461bcd60e51b815260040161090d90613c54565b60006060836001600160a01b031683604051612bc691906139ad565b6000604051808303816000865af19150503d8060008114612c03576040519150601f19603f3d011682016040523d82523d6000602084013e612c08565b606091505b509150915081612c2a5760405162461bcd60e51b815260040161090d90613b54565b805115610fc35780806020019051612c459190810190612fb1565b610fc35760405162461bcd60e51b815260040161090d90613c34565b604051610fc39085906323b872dd60e01b906128e8908790879087906024016139c7565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590612cb957508115155b949350505050565b604051806080016040528060006001600160a01b0316815260200160006001600160601b0316815260200160008152602001600081525090565b60405180604001604052806002906020820280388339509192915050565b60405180606001604052806000815260200160008152602001600081525090565b8035610fe581613d5b565b60008083601f840112612d5757600080fd5b50813567ffffffffffffffff811115612d6f57600080fd5b602083019150836020820283011115612d8757600080fd5b9250929050565b8035610fe581613d6f565b8051610fe581613d6f565b8035610fe581613d78565b8035610fe581613d81565b8051610fe581613d81565b8035610fe581613d8a565b600060208284031215612de257600080fd5b6000610fe18484612d3a565b60008060408385031215612e0157600080fd5b6000612e0d8585612d3a565b9250506020612e1e85828601612d3a565b9150509250929050565b60008060408385031215612e3b57600080fd5b6000612e478585612d3a565b9250506020612e1e85828601612daf565b600080600060608486031215612e6d57600080fd5b6000612e798686612d3a565b9350506020612e8a86828701612daf565b9250506040612e9b86828701612d3a565b9150509250925092565b600080600060608486031215612eba57600080fd5b6000612ec68686612d3a565b9350506020612ed786828701612daf565b9250506040612e9b86828701612daf565b600080600060608486031215612efd57600080fd5b6000612f098686612d3a565b9350506020612f1a86828701612dc5565b9250506040612e9b86828701612d8e565b600080600080600060608688031215612f4357600080fd5b853567ffffffffffffffff811115612f5a57600080fd5b612f6688828901612d45565b9550955050602086013567ffffffffffffffff811115612f8557600080fd5b612f9188828901612d45565b93509350506040612fa488828901612d8e565b9150509295509295909350565b600060208284031215612fc357600080fd5b6000610fe18484612d99565b600080600080600080600060e0888a031215612fea57600080fd5b6000612ff68a8a612da4565b97505060206130078a828b01612daf565b96505060406130188a828b01612daf565b95505060606130298a828b01612daf565b945050608061303a8a828b01612d3a565b93505060a061304b8a828b01612da4565b92505060c061305c8a828b01612daf565b91505092959891949750929550565b60006020828403121561307d57600080fd5b6000610fe18484612da4565b60006020828403121561309b57600080fd5b6000610fe18484612daf565b6000602082840312156130b957600080fd5b6000610fe18484612dba565b600080604083850312156130d857600080fd5b6000612e0d8585612daf565b600080604083850312156130f757600080fd5b6000612e478585612daf565b60006020828403121561311557600080fd5b6000610fe18484612dc5565b600061312d8383613275565b505060400190565b60006131418383613915565b505060800190565b6000613155838361395f565b505060600190565b60006131698383613992565b505060200190565b61317a81613ce7565b82525050565b600061318b82613ccf565b6131958185613cd9565b93506131a083613cc6565b8060005b838110156131ce5781516131b88882613121565b97506131c383613cc6565b9250506001016131a4565b509495945050505050565b60006131e482613ccf565b6131ee8185613cd9565b93506131f983613cc6565b8060005b838110156131ce5781516132118882613135565b975061321c83613cc6565b9250506001016131fd565b600061323282613ccf565b61323c8185613cd9565b935061324783613cc6565b8060005b838110156131ce57815161325f8882613149565b975061326a83613cc6565b92505060010161324b565b61327e81613cd3565b6132888184613ce2565b925061329382613ccc565b8060005b838110156132c15781516132ab878261315d565b96506132b683613cc6565b925050600101613297565b505050505050565b60006132d482613ccf565b6132de8185613cd9565b93506132e983613cc6565b8060005b838110156131ce578151613301888261315d565b975061330c83613cc6565b9250506001016132ed565b61317a81613cf2565b600061332b82613ccf565b6133358185613ce2565b9350613345818560208601613d25565b9290920192915050565b61317a81613cf7565b600061336382613ccf565b61336d8185613cd9565b935061337d818560208601613d25565b61338681613d51565b9093019392505050565b600061339d601883613cd9565b7f496e76616c696420616c6c6f636174696f6e20706f696e740000000000000000815260200192915050565b60006133d6601683613cd9565b7510db185a5b5a5b99c81c995dd85c990819985a5b195960521b815260200192915050565b6000613408601a83613cd9565b7f496e76616c6964206c6f636b6564534f5620416464726573732e000000000000815260200192915050565b6000613441604083613cd9565b7f556e6c6f636b656420696d6d6564696174656c792070657263656e742068617381527f20746f206265206c657373207468616e20657175616c20746f2031303030302e602082015260400192915050565b60006134a0602683613cd9565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015260400192915050565b60006134e8601483613cd9565b73141bdbdb081d1bdad95b881b9bdd08199bdd5b9960621b815260200192915050565b6000613518600f83613cd9565b6e151c985b9cd9995c8819985a5b1959608a1b815260200192915050565b6000613543601b83613cd9565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000815260200192915050565b600061357c602083613cd9565b7f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815260200192915050565b60006135b5603783613cd9565b7f556e6c6f636b656420696d6d6564696174656c792070657263656e742068617381527f20746f206265206c657373207468616e2031303030302e000000000000000000602082015260400192915050565b6000613614601283613cd9565b714e6f7420656e6f7567682062616c616e636560701b815260200192915050565b6000613642601383613cd9565b72496e76616c696420737461727420626c6f636b60681b815260200192915050565b6000613671600e83613cd9565b6d105c1c1c9bdd994819985a5b195960921b815260200192915050565b600061369b601883613cd9565b7f5265636569766572206164647265737320696e76616c69640000000000000000815260200192915050565b60006136d4602183613cd9565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f8152607760f81b602082015260400192915050565b6000613717600c83613cd9565b6b1d5b985d5d1a1bdc9a5e995960a21b815260200192915050565b600061373f600f83613cd9565b6e082e4e4c2f2e640dad2e6dac2e8c6d608b1b815260200192915050565b600061376a601383613cd9565b72151bdad95b88185b1c9958591e481859191959606a1b815260200192915050565b6000613799600e83613cd9565b6d105b5bdd5b9d081a5b9d985b1a5960921b815260200192915050565b60006137c3602d83613cd9565b7f6f6e6c792077726170706572206f7220706f6f6c73206d61792077697468647281526c30bb903337b91030903ab9b2b960991b602082015260400192915050565b6000613812601583613cd9565b74496e76616c696420746f6b656e206164647265737360581b815260200192915050565b6000613843601383613cd9565b72105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b815260200192915050565b6000613872602a83613cd9565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b602082015260400192915050565b60006138be600f83613cd9565b6e105b1c9958591e481cdd1bdc1c1959608a1b815260200192915050565b60006138e9601f83613cd9565b7f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400815260200192915050565b80516080830190613926848261334f565b50602082015161393960208501826139a4565b50604082015161394c6040850182613992565b506060820151610fc36060850182613992565b805160608301906139708482613992565b5060208201516139836020850182613992565b506040820151610fc360408501825b61317a81613ccc565b61317a81613d1a565b61317a81613d0e565b60006108c88284613320565b60208101610fe58284613171565b606081016139d58286613171565b6139e26020830185613171565b612cb96040830184613992565b604081016139fd8285613171565b6108c86020830184613992565b60608101613a188286613171565b6139e26020830185613992565b602080825281016108c88184613180565b602080825281016108c881846131d9565b602080825281016108c88184613227565b602080825281016108c881846132c9565b60208101610fe58284613317565b60208101610fe5828461334f565b60808101613a93828761334f565b613aa060208301866139a4565b613aad6040830185613992565b613aba6060830184613992565b95945050505050565b602080825281016108c88184613358565b60208082528101610fe581613390565b60208082528101610fe5816133c9565b60208082528101610fe5816133fb565b60208082528101610fe581613434565b60208082528101610fe581613493565b60208082528101610fe5816134db565b60208082528101610fe58161350b565b60208082528101610fe581613536565b60208082528101610fe58161356f565b60208082528101610fe5816135a8565b60208082528101610fe581613607565b60208082528101610fe581613635565b60208082528101610fe581613664565b60208082528101610fe58161368e565b60208082528101610fe5816136c7565b60208082528101610fe58161370a565b60208082528101610fe581613732565b60208082528101610fe58161375d565b60208082528101610fe58161378c565b60208082528101610fe5816137b6565b60208082528101610fe581613805565b60208082528101610fe581613836565b60208082528101610fe581613865565b60208082528101610fe5816138b1565b60208082528101610fe5816138dc565b60808101610fe58284613915565b60608101610fe5828461395f565b60208101610fe58284613992565b604081016139fd8285613992565b60608101613a188286613992565b60208101610fe5828461399b565b604081016139fd828561399b565b60200190565b90565b5190565b50600290565b90815260200190565b919050565b6000610fe582613d02565b151590565b6000610fe582613ce7565b6001600160a01b031690565b6001600160601b031690565b6000610fe582613d0e565b60005b83811015613d40578181015183820152602001613d28565b83811115610fc35750506000910152565b601f01601f191690565b613d6481613ce7565b8114611e0d57600080fd5b613d6481613cf2565b613d6481613cf7565b613d6481613ccc565b613d6481613d0e56fea365627a7a72315820c7ceb1bb596c06daa249a175809499e1d03c75f4c192b5175ae585b9d19e33706c6578706572696d656e74616cf564736f6c63430005110040",
    "sourceMap": "99:516:133:-;;;701:17:184;721:12;-1:-1:-1;;;;;721:10:184;:12;:::i;:::-;743:6;:18;;-1:-1:-1;;;;;;743:18:184;-1:-1:-1;;;;;743:18:184;;;;;;;776:43;;743:18;;-1:-1:-1;743:18:184;776:43;;743:6;;776:43;668:158;99:516:133;;795:96:179;874:10;795:96;:::o;99:516:133:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106103835760003560e01c8063787b4026116101de578063c2167d931161010f578063da408679116100ad578063f2f46b3b1161007c578063f2f46b3b1461076b578063f2fde38b14610773578063f45346dc14610786578063f729a4041461079957610383565b8063da4086791461071b578063e3866c9a14610723578063e788d8d114610736578063f2801fe71461074b57610383565b8063caa9a08d116100e9578063caa9a08d146106cf578063d0452aa6146106e2578063d6a49f0e146106f5578063d8c173c41461070857610383565b8063c2167d9314610696578063c35a934d146106a9578063c680c0b7146106bc57610383565b8063aaf5eb681161017c578063afdd91c611610156578063afdd91c61461066b578063b3944d521461067e578063b9ec7d7414610686578063c1d742581461068e57610383565b8063aaf5eb6814610648578063ab32339f14610650578063ac210cc71461066357610383565b80638da5cb5b116101b85780638da5cb5b1461061b5780638f32d59b146106305780639a13ba2914610638578063a1a6690f1461064057610383565b8063787b4026146105d25780637b46c54f146105f557806386bc67581461060857610383565b8063414d57fb116102b85780635d50d0601161025657806362748fbb1161023057806362748fbb1461057957806369328dec146105995780636ff1c9bc146105ac57806370480275146105bf57610383565b80635d50d060146105245780635e379679146105445780635f02c1451461055757610383565b806348cd4cb11161029257806348cd4cb1146104d5578063492e019d146104dd5780634953c782146104fe57806356085d4c1461051157610383565b8063414d57fb14610482578063429b62e51461049557806348c84d9e146104b557610383565b80631785f53c116103255780631fc3f004116102ff5780631fc3f0041461044c57806329d0fa3e1461045f5780632d0857a2146104675780633723de421461047a57610383565b80631785f53c1461041e5780631aed6553146104315780631d8f889c1461043957610383565b80630b1a2851116103615780630b1a2851146103db5780630c43a7cd146103ee57806310a168f91461040357806316614c261461040b57610383565b806306bfa93814610388578063083c6323146103b157806308dcb360146103c6575b600080fd5b61039b610396366004612dd0565b6107a1565b6040516103a89190613c64565b60405180910390f35b6103b9610821565b6040516103a89190613c80565b6103ce610827565b6040516103a89190613a77565b6103b96103e9366004612ea5565b610836565b6104016103fc366004612ee8565b6108cf565b005b6103b9610b18565b610401610419366004612e28565b610b1d565b61040161042c366004612dd0565b610b99565b6103b9610c18565b61040161044736600461306b565b610c1e565b6103b961045a366004612dd0565b610ca4565b6103b9610cb6565b610401610475366004613089565b610cbc565b6103b9610d21565b610401610490366004612f2b565b610dd3565b6104a86104a3366004612dd0565b610ece565b6040516103a89190613a69565b6104c86104c3366004612dd0565b610ee3565b6040516103a89190613a58565b6103b9610f54565b6104f06104eb366004612dd0565b610f5a565b6040516103a8929190613c8e565b61040161050c366004612dee565b610f9d565b6103b961051f366004612dee565b610fc9565b610537610532366004612dd0565b610feb565b6040516103a89190613a25565b6103b96105523660046130e4565b6110bc565b61056a6105653660046130c5565b6110c8565b6040516103a893929190613c9c565b61058c610587366004612dd0565b6110f4565b6040516103a89190613a47565b6104016105a7366004612e58565b6111ab565b6104016105ba366004612dd0565b61133e565b6104016105cd366004612dd0565b611437565b6105e56105e0366004613089565b6114b0565b6040516103a89493929190613a85565b610401610603366004612dd0565b6114fc565b6103b9610616366004612dd0565b611516565b61062361159d565b6040516103a891906139b9565b6104a86115ac565b6103b96115d0565b6103b96115d6565b6103b96115dc565b6103b961065e366004612dd0565b6115e5565b61062361165a565b6103b9610679366004612dd0565b611669565b6103b961168f565b610401611695565b6103b96116b4565b6104016106a4366004612dd0565b6116b9565b6104016106b7366004612ee8565b611719565b6104016106ca366004612e28565b611782565b6103b96106dd366004612dd0565b611978565b6103b96106f0366004612dee565b611983565b610401610703366004612dd0565b6119a0565b610401610716366004612e28565b611b41565b610401611b4e565b610401610731366004612fcf565b611bb2565b61073e611cd9565b6040516103a89190613a36565b61075e610759366004612dee565b611d6f565b6040516103a89190613c72565b6103ce611dd1565b610401610781366004612dd0565b611de0565b610401610794366004612e58565b611e10565b6103b9611e1d565b6107a9612cc1565b60006107b483611e23565b9050600781815481106107c357fe5b60009182526020918290206040805160808101825260039390930290910180546001600160a01b0381168452600160a01b90046001600160601b03169383019390935260018301549082015260029091015460608201529392505050565b60055481565b600c546001600160a01b031681565b60008061084285611e23565b905060006007828154811061085357fe5b6000918252602082206003909102019150439061088761087a87601e63ffffffff611e6316565b839063ffffffff611ea516565b9050600061089784898585611eca565b91506108c0905064e8d4a510006108b48a8463ffffffff611fed16565b9063ffffffff611e6316565b955050505050505b9392505050565b6108d76115ac565b806108f157503360009081526001602052604090205460ff165b6109165760405162461bcd60e51b815260040161090d90613bc4565b60405180910390fd5b6000826001600160601b03161161093f5760405162461bcd60e51b815260040161090d90613ad4565b6001600160a01b0383166109655760405162461bcd60e51b815260040161090d90613c14565b6001600160a01b0383166000908152600860205260409020541561099b5760405162461bcd60e51b815260040161090d90613be4565b80156109a9576109a9611695565b600060035443116109bc576003546109be565b435b6009549091506109dd906001600160601b03851663ffffffff611ea516565b600955604080516080810182526001600160a01b038087168083526001600160601b0380881660208086019182528587018881526000606088018181526007805460018101825581845299516003909a027fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688810180549751909816600160a01b029a8a166001600160a01b03199097169690961790981698909817909455517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68983015594517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68a90910155915481835260089093529083902091909155905133907f38132ae9e6e6c4e777015bac3679dadd42206fad607b97846830be4b412908c390610b0a908790613caa565b60405180910390a350505050565b600a81565b610b256115ac565b80610b3f57503360009081526001602052604090205460ff165b610b5b5760405162461bcd60e51b815260040161090d90613bc4565b612710811115610b7d5760405162461bcd60e51b815260040161090d90613b04565b6001600160a01b039091166000908152600f6020526040902055565b610ba16115ac565b610bbd5760405162461bcd60e51b815260040161090d90613bc4565b6001600160a01b03811660009081526001602052604090819020805460ff19169055517fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f90610c0d9083906139b9565b60405180910390a150565b60045481565b610c266115ac565b80610c4057503360009081526001602052604090205460ff165b610c5c5760405162461bcd60e51b815260040161090d90613bc4565b6001600160a01b038116610c825760405162461bcd60e51b815260040161090d90613af4565b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b600f6020526000908152604090205481565b60025481565b610cc46115ac565b80610cde57503360009081526001602052604090205460ff165b610cfa5760405162461bcd60e51b815260040161090d90613bc4565b612710811115610d1c5760405162461bcd60e51b815260040161090d90613b04565b600e55565b600c546040516370a0823160e01b815260009182916001600160a01b03909116906370a0823190610d569030906004016139b9565b60206040518083038186803b158015610d6e57600080fd5b505afa158015610d82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610da691908101906130a7565b9050600b54811015610dca57600b54610dc5908263ffffffff61202716565b610dcd565b60005b91505090565b610ddb6115ac565b80610df557503360009081526001602052604090205460ff165b610e115760405162461bcd60e51b815260040161090d90613bc4565b838214610e305760405162461bcd60e51b815260040161090d90613bd4565b8015610e3e57610e3e611695565b8360005b81811015610ec55782610e7357610e73878783818110610e5e57fe5b90506020020160206106039190810190612dd0565b610ebd878783818110610e8257fe5b9050602002016020610e979190810190612dd0565b868684818110610ea357fe5b9050602002016020610eb89190810190613103565b612069565b600101610e42565b50505050505050565b60016020526000908152604090205460ff1681565b600754604080518281526020808402820101909152606091908290828015610f15578160200160208202803883390190505b50905060005b82811015610f4c57610f2d818661214e565b828281518110610f3957fe5b6020908102919091010152600101610f1b565b509392505050565b60035481565b6000806000610f6884611e23565b9050600060078281548110610f7957fe5b90600052602060002090600302019050610f928161228c565b935093505050915091565b6000610fa8826122a9565b90506000610fb584611e23565b9050610fc381836001612305565b50505050565b600080610fd584611e23565b9050610fe1818461214e565b9150505b92915050565b60075460408051828152602080840282010190915260609190829082801561102d57816020015b61101a612cfb565b8152602001906001900390816110125790505b50905060005b82811015610f4c576000818152600a602090815260408083206001600160a01b0389168452909152902054825183908390811061106c57fe5b602002602001015160006002811061108057fe5b602002015261108f818661214e565b82828151811061109b57fe5b60200260200101516001600281106110af57fe5b6020020152600101611033565b60006108c88383612382565b600a60209081526000928352604080842090915290825290208054600182015460029092015490919083565b60075460408051828152602080840282010190915260609190829082801561113657816020015b611123612d19565b81526020019060019003908161111b5790505b50905060005b82811015610f4c576000818152600a602090815260408083206001600160a01b03891684528252918290208251606081018452815481526001820154928101929092526002015491810191909152825183908390811061119857fe5b602090810291909101015260010161113c565b6001600160a01b0383166000908152600860205260409020546111e05760405162461bcd60e51b815260040161090d90613b24565b60006111eb826122a9565b905060006111f885611e23565b905060006007828154811061120957fe5b60009182526020808320858452600a825260408085206001600160a01b0389168652909252922080546003909202909201925086111561125b5760405162461bcd60e51b815260040161090d90613b74565b61126483612422565b61126e8282612534565b61127c87828660008061258b565b805461128e908763ffffffff61202716565b81556006546001600160a01b03163314156112c45781546112bf906001600160a01b0316338863ffffffff6128c616565b6112e0565b81546112e0906001600160a01b0316858863ffffffff6128c616565b6112ea828261291f565b866001600160a01b0316846001600160a01b03167f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb8860405161132d9190613c80565b60405180910390a350505050505050565b600061134982611e23565b905060006007828154811061135a57fe5b60009182526020808320858452600a8252604080852033865290925292206003909102909101915061138b83612422565b6113958282612534565b6002810154600b546113ac9163ffffffff61202716565b600b55805460028201805460008085556001850181905590915583546113e2906001600160a01b0316338463ffffffff6128c616565b856001600160a01b0316336001600160a01b03167f1401b6ff3b281e84fd77353369caed48ba7e787dd3821db05cc00643736082018484604051611427929190613c8e565b60405180910390a3505050505050565b61143f6115ac565b61145b5760405162461bcd60e51b815260040161090d90613bc4565b6001600160a01b038116600090815260016020819052604091829020805460ff19169091179055517f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33990610c0d9083906139b9565b600781815481106114bd57fe5b60009182526020909120600390910201805460018201546002909201546001600160a01b0382169350600160a01b9091046001600160601b0316919084565b600061150782611e23565b905061151281612422565b5050565b60075460009081805b82811015610f4c5760006007828154811061153657fe5b600091825260208220600390910201546001600160a01b0316915061155a82611669565b90506115916115846127106108b4611572878c61214e565b6127108690039063ffffffff611fed16565b859063ffffffff611ea516565b9350505060010161151f565b6000546001600160a01b031690565b600080546001600160a01b03166115c1612949565b6001600160a01b031614905090565b600b5481565b60095481565b64e8d4a5100081565b60075460009081805b82811015610f4c5760006007828154811061160557fe5b600091825260208220600390910201546001600160a01b0316915061162982611669565b905061164e6115846127106108b4611641878c61214e565b859063ffffffff611fed16565b935050506001016115ee565b6006546001600160a01b031681565b6001600160a01b0381166000908152600f602052604081205480610fe557600e546108c8565b60075490565b60075460005b81811015611512576116ac81612422565b60010161169b565b601e81565b6116c16115ac565b806116db57503360009081526001602052604090205460ff165b6116f75760405162461bcd60e51b815260040161090d90613bc4565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6117216115ac565b8061173b57503360009081526001602052604090205460ff165b6117575760405162461bcd60e51b815260040161090d90613bc4565b801561176a57611765611695565b611773565b611773836114fc565b61177d8383612069565b505050565b61178a6115ac565b806117a457503360009081526001602052604090205460ff165b6117c05760405162461bcd60e51b815260040161090d90613bc4565b6001600160a01b0382166117e65760405162461bcd60e51b815260040161090d90613ba4565b806118035760405162461bcd60e51b815260040161090d90613bf4565b600c546040516370a0823160e01b81526000916001600160a01b0316906370a08231906118349030906004016139b9565b60206040518083038186803b15801561184c57600080fd5b505afa158015611860573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061188491908101906130a7565b905080821115611892578091505b600c5460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906118c490869086906004016139ef565b602060405180830381600087803b1580156118de57600080fd5b505af11580156118f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506119169190810190612fb1565b6119325760405162461bcd60e51b815260040161090d90613b34565b826001600160a01b03167fe1b0ada289bf82fb641c8c1e1c78f820fae44e8f845760725cdeb09167a289ad8360405161196b9190613c80565b60405180910390a2505050565b6000610fe582611e23565b600061198d612d19565b6119978484611d6f565b51949350505050565b60006119ab826122a9565b60075490915060005b818110156119d257806119c981856000612305565b506001016119b4565b50600d5460405163c408689360e01b81526000916001600160a01b03169063c408689390611a049086906004016139b9565b60206040518083038186803b158015611a1c57600080fd5b505afa158015611a30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611a5491908101906130a7565b1180611ade5750600d5460405163129de5bf60e01b81526000916001600160a01b03169063129de5bf90611a8c9086906004016139b9565b60206040518083038186803b158015611aa457600080fd5b505afa158015611ab8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611adc91908101906130a7565b115b1561177d57600d546040516315b6fc1560e11b81526001600160a01b0390911690632b6df82a90611b139085906004016139b9565b600060405180830381600087803b158015611b2d57600080fd5b505af1158015610ec5573d6000803e3d6000fd5b611512338284600161294d565b611b566115ac565b80611b7057503360009081526001602052604090205460ff165b611b8c5760405162461bcd60e51b815260040161090d90613bc4565b60055415611bac5760405162461bcd60e51b815260040161090d90613c44565b43600555565b611bba6115ac565b80611bd457503360009081526001602052604090205460ff165b611bf05760405162461bcd60e51b815260040161090d90613bc4565b600c546001600160a01b031615611c195760405162461bcd60e51b815260040161090d90613c24565b6001600160a01b038716611c3f5760405162461bcd60e51b815260040161090d90613c14565b60008511611c5f5760405162461bcd60e51b815260040161090d90613b84565b6127108110611c805760405162461bcd60e51b815260040161090d90613b64565b600c80546001600160a01b03199081166001600160a01b03998a16179091556002969096554394909401600381905592909201600455600680548516918616919091179055600d80549093169316929092179055600e55565b60606007805480602002602001604051908101604052809291908181526020016000905b82821015611d66576000848152602090819020604080516080810182526003860290920180546001600160a01b0381168452600160a01b90046001600160601b031683850152600180820154928401929092526002015460608301529083529092019101611cfd565b50505050905090565b611d77612d19565b6000611d8284611e23565b6000908152600a602090815260408083206001600160a01b0387168452825291829020825160608101845281548152600182015492810192909252600201549181019190915291505092915050565b600d546001600160a01b031681565b611de86115ac565b611e045760405162461bcd60e51b815260040161090d90613bc4565b611e0d81612a98565b50565b61177d838383600061294d565b600e5481565b6001600160a01b03811660009081526008602052604081205480611e595760405162461bcd60e51b815260040161090d90613b24565b6000190192915050565b60006108c883836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612b19565b6000828201838110156108c85760405162461bcd60e51b815260040161090d90613b44565b6000806000611ed98585612382565b90506000611f286009546108b48a60000160149054906101000a90046001600160601b03166001600160601b0316611f1c60025487611fed90919063ffffffff16565b9063ffffffff611fed16565b88546040516370a0823160e01b81529192506000916001600160a01b03909116906370a0823190611f5d9030906004016139b9565b60206040518083038186803b158015611f7557600080fd5b505afa158015611f89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611fad91908101906130a7565b9050611fbf818963ffffffff611ea516565b90506000611fdc826108b48564e8d4a5100063ffffffff611fed16565b929a92995091975050505050505050565b600082611ffc57506000610fe5565b8282028284828161200957fe5b04146108c85760405162461bcd60e51b815260040161090d90613bb4565b60006108c883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612b50565b600061207483611e23565b905060006007828154811061208557fe5b60009182526020909120600390910201546009546001600160601b03600160a01b909204821692506120d0918516906120c4908463ffffffff61202716565b9063ffffffff611ea516565b60098190555082600783815481106120e457fe5b6000918252602090912060039091020180546001600160601b0392909216600160a01b026001600160a01b039283161790556040519085169033907f7b327867ecd5d7f5165f3d8af5193f1255f215acb14e229b529a4f8a9991abbc90610b0a9087908690613cb8565b6000806007848154811061215e57fe5b60009182526020808320878452600a825260408085206001600160a01b03808a16875293528085206002600390950290920193840154845491516370a0823160e01b815294965091949193919216906370a08231906121c19030906004016139b9565b60206040518083038186803b1580156121d957600080fd5b505afa1580156121ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061221191908101906130a7565b905083600101544311801561222557508015155b1561224d5760006122358561228c565b91506122499050838263ffffffff611ea516565b9250505b612281836001015461227564e8d4a510006108b4868860000154611fed90919063ffffffff16565b9063ffffffff61202716565b979650505050505050565b6000806122a0836000856001015443611eca565b91509150915091565b6000336001600160a01b03831615610fe5576006546001600160a01b03163314806122e257503360009081526008602052604090205415155b6122fe5760405162461bcd60e51b815260040161090d90613c04565b5090919050565b60006007848154811061231457fe5b60009182526020808320878452600a825260408085206001600160a01b038916865290925292206003909102909101915061234e85612422565b6123588282612534565b8154612371906001600160a01b0316828686600161258b565b61237b828261291f565b5050505050565b60006003548310156123945760035492505b60006005541180156123a7575060055482115b156123b25760055491505b60045482116123d7576123d0600a611f1c848663ffffffff61202716565b9050610fe5565b60045483106123f0576123d0828463ffffffff61202716565b6123d06124086004548461202790919063ffffffff16565b6120c4600a611f1c8760045461202790919063ffffffff16565b60006007828154811061243157fe5b90600052602060002090600302019050806001015443116124525750611e0d565b80546040516370a0823160e01b81526000916001600160a01b0316906370a08231906124829030906004016139b9565b60206040518083038186803b15801561249a57600080fd5b505afa1580156124ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506124d291908101906130a7565b9050806124e6575043600190910155611e0d565b6000806124f28461228c565b6002860154919350915061250c908263ffffffff611ea516565b6002850155436001850155600b5461252a908363ffffffff611ea516565b600b555050505050565b805415611512576000612569826001015461227564e8d4a510006108b487600201548760000154611fed90919063ffffffff16565b6002830154909150612581908263ffffffff611ea516565b6002830155505050565b6002840154600061259b87611669565b600c546040516370a0823160e01b81529192506000916001600160a01b03909116906370a08231906125d19030906004016139b9565b60206040518083038186803b1580156125e957600080fd5b505afa1580156125fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061262191908101906130a7565b905082811061289e57600b5461263d908463ffffffff61202716565b600b55600060028801556127108214156126db57600c5460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb9061268390899087906004016139ef565b602060405180830381600087803b15801561269d57600080fd5b505af11580156126b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506126d59190810190612fb1565b5061284e565b600c54600d5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926127119291169087906004016139ef565b602060405180830381600087803b15801561272b57600080fd5b505af115801561273f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506127639190810190612fb1565b61277f5760405162461bcd60e51b815260040161090d90613b94565b600d54604051630efe6a8b60e01b81526001600160a01b0390911690630efe6a8b906127b390899087908790600401613a0a565b600060405180830381600087803b1580156127cd57600080fd5b505af11580156127e1573d6000803e3d6000fd5b50505050841561284e57600d546040516315b6fc1560e11b81526001600160a01b0390911690632b6df82a9061281b9089906004016139b9565b600060405180830381600087803b15801561283557600080fd5b505af1158015612849573d6000803e3d6000fd5b505050505b876001600160a01b0316866001600160a01b03167f0aa4d283470c904c551d18bb894d37e17674920f3261a7f854be501e25f421b7856040516128919190613c80565b60405180910390a36128bc565b83156128bc5760405162461bcd60e51b815260040161090d90613ae4565b5050505050505050565b60405161177d90849063a9059cbb60e01b906128e890869086906024016139ef565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612b7c565b600282015481546129409164e8d4a51000916108b49163ffffffff611fed16565b60019091015550565b3390565b6001600160a01b0384166000908152600860205260409020546129825760405162461bcd60e51b815260040161090d90613b24565b60006001600160a01b038316612998573361299a565b825b905060006129a786611e23565b90506000600782815481106129b857fe5b60009182526020808320858452600a825260408085206001600160a01b03891686529092529220600390910290910191506129f283612422565b6129fc8282612534565b8615612a395784612a24578154612a24906001600160a01b031633308a63ffffffff612c6116565b8054612a36908863ffffffff611ea516565b81555b612a43828261291f565b876001600160a01b0316846001600160a01b03167f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f6289604051612a869190613c80565b60405180910390a35050505050505050565b6001600160a01b038116612abe5760405162461bcd60e51b815260040161090d90613b14565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60008183612b3a5760405162461bcd60e51b815260040161090d9190613ac3565b506000838581612b4657fe5b0495945050505050565b60008184841115612b745760405162461bcd60e51b815260040161090d9190613ac3565b505050900390565b612b8e826001600160a01b0316612c85565b612baa5760405162461bcd60e51b815260040161090d90613c54565b60006060836001600160a01b031683604051612bc691906139ad565b6000604051808303816000865af19150503d8060008114612c03576040519150601f19603f3d011682016040523d82523d6000602084013e612c08565b606091505b509150915081612c2a5760405162461bcd60e51b815260040161090d90613b54565b805115610fc35780806020019051612c459190810190612fb1565b610fc35760405162461bcd60e51b815260040161090d90613c34565b604051610fc39085906323b872dd60e01b906128e8908790879087906024016139c7565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590612cb957508115155b949350505050565b604051806080016040528060006001600160a01b0316815260200160006001600160601b0316815260200160008152602001600081525090565b60405180604001604052806002906020820280388339509192915050565b60405180606001604052806000815260200160008152602001600081525090565b8035610fe581613d5b565b60008083601f840112612d5757600080fd5b50813567ffffffffffffffff811115612d6f57600080fd5b602083019150836020820283011115612d8757600080fd5b9250929050565b8035610fe581613d6f565b8051610fe581613d6f565b8035610fe581613d78565b8035610fe581613d81565b8051610fe581613d81565b8035610fe581613d8a565b600060208284031215612de257600080fd5b6000610fe18484612d3a565b60008060408385031215612e0157600080fd5b6000612e0d8585612d3a565b9250506020612e1e85828601612d3a565b9150509250929050565b60008060408385031215612e3b57600080fd5b6000612e478585612d3a565b9250506020612e1e85828601612daf565b600080600060608486031215612e6d57600080fd5b6000612e798686612d3a565b9350506020612e8a86828701612daf565b9250506040612e9b86828701612d3a565b9150509250925092565b600080600060608486031215612eba57600080fd5b6000612ec68686612d3a565b9350506020612ed786828701612daf565b9250506040612e9b86828701612daf565b600080600060608486031215612efd57600080fd5b6000612f098686612d3a565b9350506020612f1a86828701612dc5565b9250506040612e9b86828701612d8e565b600080600080600060608688031215612f4357600080fd5b853567ffffffffffffffff811115612f5a57600080fd5b612f6688828901612d45565b9550955050602086013567ffffffffffffffff811115612f8557600080fd5b612f9188828901612d45565b93509350506040612fa488828901612d8e565b9150509295509295909350565b600060208284031215612fc357600080fd5b6000610fe18484612d99565b600080600080600080600060e0888a031215612fea57600080fd5b6000612ff68a8a612da4565b97505060206130078a828b01612daf565b96505060406130188a828b01612daf565b95505060606130298a828b01612daf565b945050608061303a8a828b01612d3a565b93505060a061304b8a828b01612da4565b92505060c061305c8a828b01612daf565b91505092959891949750929550565b60006020828403121561307d57600080fd5b6000610fe18484612da4565b60006020828403121561309b57600080fd5b6000610fe18484612daf565b6000602082840312156130b957600080fd5b6000610fe18484612dba565b600080604083850312156130d857600080fd5b6000612e0d8585612daf565b600080604083850312156130f757600080fd5b6000612e478585612daf565b60006020828403121561311557600080fd5b6000610fe18484612dc5565b600061312d8383613275565b505060400190565b60006131418383613915565b505060800190565b6000613155838361395f565b505060600190565b60006131698383613992565b505060200190565b61317a81613ce7565b82525050565b600061318b82613ccf565b6131958185613cd9565b93506131a083613cc6565b8060005b838110156131ce5781516131b88882613121565b97506131c383613cc6565b9250506001016131a4565b509495945050505050565b60006131e482613ccf565b6131ee8185613cd9565b93506131f983613cc6565b8060005b838110156131ce5781516132118882613135565b975061321c83613cc6565b9250506001016131fd565b600061323282613ccf565b61323c8185613cd9565b935061324783613cc6565b8060005b838110156131ce57815161325f8882613149565b975061326a83613cc6565b92505060010161324b565b61327e81613cd3565b6132888184613ce2565b925061329382613ccc565b8060005b838110156132c15781516132ab878261315d565b96506132b683613cc6565b925050600101613297565b505050505050565b60006132d482613ccf565b6132de8185613cd9565b93506132e983613cc6565b8060005b838110156131ce578151613301888261315d565b975061330c83613cc6565b9250506001016132ed565b61317a81613cf2565b600061332b82613ccf565b6133358185613ce2565b9350613345818560208601613d25565b9290920192915050565b61317a81613cf7565b600061336382613ccf565b61336d8185613cd9565b935061337d818560208601613d25565b61338681613d51565b9093019392505050565b600061339d601883613cd9565b7f496e76616c696420616c6c6f636174696f6e20706f696e740000000000000000815260200192915050565b60006133d6601683613cd9565b7510db185a5b5a5b99c81c995dd85c990819985a5b195960521b815260200192915050565b6000613408601a83613cd9565b7f496e76616c6964206c6f636b6564534f5620416464726573732e000000000000815260200192915050565b6000613441604083613cd9565b7f556e6c6f636b656420696d6d6564696174656c792070657263656e742068617381527f20746f206265206c657373207468616e20657175616c20746f2031303030302e602082015260400192915050565b60006134a0602683613cd9565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015260400192915050565b60006134e8601483613cd9565b73141bdbdb081d1bdad95b881b9bdd08199bdd5b9960621b815260200192915050565b6000613518600f83613cd9565b6e151c985b9cd9995c8819985a5b1959608a1b815260200192915050565b6000613543601b83613cd9565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000815260200192915050565b600061357c602083613cd9565b7f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815260200192915050565b60006135b5603783613cd9565b7f556e6c6f636b656420696d6d6564696174656c792070657263656e742068617381527f20746f206265206c657373207468616e2031303030302e000000000000000000602082015260400192915050565b6000613614601283613cd9565b714e6f7420656e6f7567682062616c616e636560701b815260200192915050565b6000613642601383613cd9565b72496e76616c696420737461727420626c6f636b60681b815260200192915050565b6000613671600e83613cd9565b6d105c1c1c9bdd994819985a5b195960921b815260200192915050565b600061369b601883613cd9565b7f5265636569766572206164647265737320696e76616c69640000000000000000815260200192915050565b60006136d4602183613cd9565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f8152607760f81b602082015260400192915050565b6000613717600c83613cd9565b6b1d5b985d5d1a1bdc9a5e995960a21b815260200192915050565b600061373f600f83613cd9565b6e082e4e4c2f2e640dad2e6dac2e8c6d608b1b815260200192915050565b600061376a601383613cd9565b72151bdad95b88185b1c9958591e481859191959606a1b815260200192915050565b6000613799600e83613cd9565b6d105b5bdd5b9d081a5b9d985b1a5960921b815260200192915050565b60006137c3602d83613cd9565b7f6f6e6c792077726170706572206f7220706f6f6c73206d61792077697468647281526c30bb903337b91030903ab9b2b960991b602082015260400192915050565b6000613812601583613cd9565b74496e76616c696420746f6b656e206164647265737360581b815260200192915050565b6000613843601383613cd9565b72105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b815260200192915050565b6000613872602a83613cd9565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b602082015260400192915050565b60006138be600f83613cd9565b6e105b1c9958591e481cdd1bdc1c1959608a1b815260200192915050565b60006138e9601f83613cd9565b7f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400815260200192915050565b80516080830190613926848261334f565b50602082015161393960208501826139a4565b50604082015161394c6040850182613992565b506060820151610fc36060850182613992565b805160608301906139708482613992565b5060208201516139836020850182613992565b506040820151610fc360408501825b61317a81613ccc565b61317a81613d1a565b61317a81613d0e565b60006108c88284613320565b60208101610fe58284613171565b606081016139d58286613171565b6139e26020830185613171565b612cb96040830184613992565b604081016139fd8285613171565b6108c86020830184613992565b60608101613a188286613171565b6139e26020830185613992565b602080825281016108c88184613180565b602080825281016108c881846131d9565b602080825281016108c88184613227565b602080825281016108c881846132c9565b60208101610fe58284613317565b60208101610fe5828461334f565b60808101613a93828761334f565b613aa060208301866139a4565b613aad6040830185613992565b613aba6060830184613992565b95945050505050565b602080825281016108c88184613358565b60208082528101610fe581613390565b60208082528101610fe5816133c9565b60208082528101610fe5816133fb565b60208082528101610fe581613434565b60208082528101610fe581613493565b60208082528101610fe5816134db565b60208082528101610fe58161350b565b60208082528101610fe581613536565b60208082528101610fe58161356f565b60208082528101610fe5816135a8565b60208082528101610fe581613607565b60208082528101610fe581613635565b60208082528101610fe581613664565b60208082528101610fe58161368e565b60208082528101610fe5816136c7565b60208082528101610fe58161370a565b60208082528101610fe581613732565b60208082528101610fe58161375d565b60208082528101610fe58161378c565b60208082528101610fe5816137b6565b60208082528101610fe581613805565b60208082528101610fe581613836565b60208082528101610fe581613865565b60208082528101610fe5816138b1565b60208082528101610fe5816138dc565b60808101610fe58284613915565b60608101610fe5828461395f565b60208101610fe58284613992565b604081016139fd8285613992565b60608101613a188286613992565b60208101610fe5828461399b565b604081016139fd828561399b565b60200190565b90565b5190565b50600290565b90815260200190565b919050565b6000610fe582613d02565b151590565b6000610fe582613ce7565b6001600160a01b031690565b6001600160601b031690565b6000610fe582613d0e565b60005b83811015613d40578181015183820152602001613d28565b83811115610fc35750506000910152565b601f01601f191690565b613d6481613ce7565b8114611e0d57600080fd5b613d6481613cf2565b613d6481613cf7565b613d6481613ccc565b613d6481613d0e56fea365627a7a72315820c7ceb1bb596c06daa249a175809499e1d03c75f4c192b5175ae585b9d19e33706c6578706572696d656e74616cf564736f6c63430005110040",
    "sourceMapi;:::-;;;;;;;;;;;;;;;;1956:23:39;;;:::i;:::-;;;;;;;;2629:17;;;:::i;:::-;;;;;;;;12228:545:36;;;;;;;;;:::i;6910:1053::-;;;;;;;;;:::i;:::-;;622:51;;;:::i;4452:430::-;;;;;;;;;:::i;915:128:225:-;;;;;;;;;:::i;1871:28:39:-;;;:::i;3414:190:36:-;;;;;;;;;:::i;2974:71:39:-;;;;;;;;;:::i;1685:35::-;;;:::i;3806:350:36:-;;;;;;;;;:::i;6395:205::-;;;:::i;9404:587::-;;;;;;;;;:::i;155:38:225:-;;;;;;;;;:::i;:::-;;;;;;;;27480:357:36;;;;;;;;;:::i;:::-;;;;;;;;1783:25:39;;;:::i;362:251:133:-;;;;;;;;;:::i;:::-;;;;;;;;;17621:225:36;;;;;;;;;:::i;11743:242::-;;;;;;;;;:::i;26039:440::-;;;;;;;;;:::i;:::-;;;;;;;;155:201:133;;;;;;;;;:::i;2408:67:39:-;;;;;;;;;:::i;:::-;;;;;;;;;;26994:339:36;;;;;;;;;:::i;:::-;;;;;;;;19307:1086;;;;;;;;;:::i;24068:730::-;;;;;;;;;:::i;656:122:225:-;;;;;;;;;:::i;2106:30:39:-;;;;;;;;;:::i;:::-;;;;;;;;;;;13209:132:36;;;;;;;;;:::i;29225:642::-;;;;;;;;;:::i;902:77:184:-;;;:::i;:::-;;;;;;;;1233:92;;;:::i;2563:32:39:-;;;:::i;2318:35::-;;;:::i;408:40:36:-;;;:::i;28407:660::-;;;;;;;;;:::i;2051:22:39:-;;;:::i;30090:380:36:-;;;;;;;;;:::i;25299:100::-;;;:::i;12890:171::-;;;:::i;680:46::-;;;:::i;5004:97::-;;;;;;;;;:::i;8261:318::-;;;;;;;;;:::i;5594:580::-;;;;;;;;;:::i;24902:117::-;;;;;;;;;:::i;28027:222::-;;;;;;;;;:::i;18482:524::-;;;;;;;;;:::i;15852:237::-;;;;;;;;;:::i;5172:138::-;;;:::i;2249:1024::-;;;;;;;;;:::i;25470:105::-;;;:::i;:::-;;;;;;;;26656:193;;;;;;;;;:::i;:::-;;;;;;;;2722:27:39;;;:::i;1474:107:184:-;;;;;;;;;:::i;15409:168:36:-;;;;;;;;;:::i;2852:41:39:-;;;:::i;25701:174:36:-;25765:15;;:::i;:::-;25792:14;25809:22;25820:10;25809;:22::i;:::-;25792:39;;25848:12;25861:6;25848:20;;;;;;;;;;;;;;;;;25841:27;;;;;;;;25848:20;;;;;;;;25841:27;;-1:-1:-1;;;;;25841:27:36;;;;-1:-1:-1;;;25841:27:36;;-1:-1:-1;;;;;25841:27:36;;;;;;;;;;;;;;;;;;;;;;;;;;25701:174;-1:-1:-1;;;25701:174:36:o;1956:23:39:-;;;;:::o;2629:17::-;;;-1:-1:-1;;;;;2629:17:39;;:::o;12228:545:36:-;12365:7;12384:14;12401:22;12412:10;12401;:22::i;:::-;12384:39;;12433:21;12457:12;12470:6;12457:20;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12503:12:36;;12539:43;12549:32;:9;724:2;12549:32;:13;:32;:::i;:::-;12539:5;;:43;:9;:43;:::i;:::-;12525:57;;12595:33;12644:52;12670:4;12676:7;12685:5;12692:3;12644:25;:52::i;:::-;12592:104;-1:-1:-1;12713:53:36;;-1:-1:-1;444:4:36;12713:38;:7;12592:104;12713:38;:11;:38;:::i;:::-;:42;:53;:42;:53;:::i;:::-;12706:60;;;;;;;12228:545;;;;;;:::o;6910:1053::-;459:9:225;:7;:9::i;:::-;:31;;;-1:-1:-1;479:10:225;472:18;;;;:6;:18;;;;;;;;459:31;451:56;;;;-1:-1:-1;;;451:56:225;;;;;;;;;;;;;;;;;7077:1:36;7058:16;-1:-1:-1;;;;;7058:20:36;;7050:57;;;;-1:-1:-1;;;7050:57:36;;;;;;;;;-1:-1:-1;;;;;7125:24:36;;7117:58;;;;-1:-1:-1;;;7117:58:36;;;;;;;;;-1:-1:-1;;;;;7193:22:36;;;;;;:10;:22;;;;;;:27;7185:59;;;;-1:-1:-1;;;7185:59:36;;;;;;;;;7259:11;7255:58;;;7286:16;:14;:16::i;:::-;7323:23;7364:10;;7349:12;:25;:53;;7392:10;;7349:53;;;7377:12;7349:53;7435:20;;7323:79;;-1:-1:-1;7435:42:36;;-1:-1:-1;;;;;7435:42:36;;;:24;:42;:::i;:::-;7412:20;:65;7519:218;;;;;;;;-1:-1:-1;;;;;7519:218:36;;;;;;-1:-1:-1;;;;;7519:218:36;;;;;;;;;;;;;;;;-1:-1:-1;7519:218:36;;;;;;7488:12;27:10:-1;;39:1;23:18;;45:23;;7488:259:36;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7488:259:36;;;;-1:-1:-1;;;;;;7488:259:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7865:19;;7840:22;;;:10;:22;;;;;;;:44;;;;7900:56;;7915:10;;7900:56;;;;7610:16;;7900:56;;;;;;;;;;517:1:225;6910:1053:36;;;:::o;622:51::-;671:2;622:51;:::o;4452:430::-;459:9:225;:7;:9::i;:::-;:31;;;-1:-1:-1;479:10:225;472:18;;;;:6;:18;;;;;;;;459:31;451:56;;;;-1:-1:-1;;;451:56:225;;;;;;;;;4683:5:36;4643:36;:45;;4622:156;;;;-1:-1:-1;;;4622:156:36;;;;;;;;;-1:-1:-1;;;;;4788:48:36;;;;;;;:36;:48;;;;;:87;4452:430::o;915:128:225:-;1106:9:184;:7;:9::i;:::-;1098:34;;;;-1:-1:-1;;;1098:34:184;;;;;;;;;-1:-1:-1;;;;;979:14:225;;996:5;979:14;;;:6;:14;;;;;;;:22;;-1:-1:-1;;979:22:225;;;1016:20;;;;;986:6;;1016:20;;;;;;;;;;915:128;:::o;1871:28:39:-;;;;:::o;3414:190:36:-;459:9:225;:7;:9::i;:::-;:31;;;-1:-1:-1;479:10:225;472:18;;;;:6;:18;;;;;;;;459:31;451:56;;;;-1:-1:-1;;;451:56:225;;;;;;;;;-1:-1:-1;;;;;3501:33:36;;3493:72;;;;-1:-1:-1;;;3493:72:36;;;;;;;;;3575:9;:22;;-1:-1:-1;;;;;;3575:22:36;-1:-1:-1;;;;;3575:22:36;;;;;;;;;;3414:190::o;2974:71:39:-;;;;;;;;;;;;;:::o;1685:35::-;;;;:::o;3806:350:36:-;459:9:225;:7;:9::i;:::-;:31;;;-1:-1:-1;479:10:225;472:18;;;;:6;:18;;;;;;;;459:31;451:56;;;;-1:-1:-1;;;451:56:225;;;;;;;;;3988:5:36;3957:27;:36;;3936:147;;;;-1:-1:-1;;;3936:147:36;;;;;;;;;4093:26;:56;3806:350::o;6395:205::-;6483:3;;:28;;-1:-1:-1;;;6483:28:36;;6446:7;;;;-1:-1:-1;;;;;6483:3:36;;;;:13;;:28;;6505:4;;6483:28;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6483:28:36;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6483:28:36;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6483:28:36;;;;;;;;;6465:46;;6539:17;;6528:7;:28;;:65;;6563:17;;:30;;6585:7;6563:30;:21;:30;:::i;:::-;6528:65;;;6559:1;6528:65;6521:72;;;6395:205;:::o;9404:587::-;459:9:225;:7;:9::i;:::-;:31;;;-1:-1:-1;479:10:225;472:18;;;;:6;:18;;;;;;;;459:31;451:56;;;;-1:-1:-1;;;451:56:225;;;;;;;;;9588:46:36;;;9580:74;;;;-1:-1:-1;;;9580:74:36;;;;;;;;;9669:14;9665:61;;;9699:16;:14;:16::i;:::-;9752:11;9735:14;9780:205;9804:6;9800:1;:10;9780:205;;;9836:14;9831:80;;9870:26;9881:11;;9893:1;9881:14;;;;;;;;;;;;;;;;;;;;;9870:26;9924:50;9937:11;;9949:1;9937:14;;;;;;;;;;;;;;;;;;;;;;9953:17;;9971:1;9953:20;;;;;;;;;;;;;;;;;;;;;;9924:12;:50::i;:::-;9812:3;;9780:205;;;;517:1:225;9404:587:36;;;;;:::o;155:38:225:-;;;;;;;;;;;;;;;:::o;27480:357:36:-;27601:12;:19;27660:21;;;;;;;;;;;;;;;;27556:16;;27601:19;27556:16;;27601:19;27660:21;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;27660:21:36;-1:-1:-1;27630:51:36;-1:-1:-1;27696:9:36;27691:113;27715:6;27711:1;:10;27691:113;;;27758:35;27784:1;27787:5;27758:25;:35::i;:::-;27742:10;27753:1;27742:13;;;;;;;;;;;;;;;;;:51;27723:3;;27691:113;;;-1:-1:-1;27820:10:36;27480:357;-1:-1:-1;;;27480:357:36:o;1783:25:39:-;;;;:::o;362:251:133:-;437:7;446;465:14;482:22;493:10;482;:22::i;:::-;465:39;;514:21;538:12;551:6;538:20;;;;;;;;;;;;;;;;;;514:44;;575:31;601:4;575:25;:31::i;:::-;568:38;;;;;;362:251;;;:::o;17621:225:36:-;17696:19;17718:22;17734:5;17718:15;:22::i;:::-;17696:44;;17751:14;17768:22;17779:10;17768;:22::i;:::-;17751:39;;17800;17813:6;17821:11;17834:4;17800:12;:39::i;:::-;17621:225;;;;:::o;11743:242::-;11859:7;11882:14;11899:22;11910:10;11899;:22::i;:::-;11882:39;;11938:40;11964:6;11972:5;11938:25;:40::i;:::-;11931:47;;;11743:242;;;;;:::o;26039:440::-;26153:12;:19;26220:24;;;;;;;;;;;;;;;;26105:19;;26153;26105;;26153;26220:24;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;26182:62:36;-1:-1:-1;26259:9:36;26254:187;26278:6;26274:1;:10;26254:187;;;26329:14;;;;:11;:14;;;;;;;;-1:-1:-1;;;;;26329:21:36;;;;;;;;;:28;26305:18;;:15;;26341:1;;26305:18;;;;;;;;;;;;26324:1;26305:21;;;;;;;;;;:52;26395:35;26421:1;26424:5;26395:25;:35::i;:::-;26371:15;26387:1;26371:18;;;;;;;;;;;;;;26390:1;26371:21;;;;;;;;;;:59;26286:3;;26254:187;;155:201:133;272:7;302:47;338:5;345:3;302:35;:47::i;2408:67:39:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;26994:339:36:-;27103:12;:19;27165:22;;;;;;;;;;;;;;;;27057:17;;27103:19;27057:17;;27103:19;27165:22;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;27132:55:36;-1:-1:-1;27202:9:36;27197:101;27221:6;27217:1;:10;27197:101;;;27266:14;;;;:11;:14;;;;;;;;-1:-1:-1;;;;;27266:21:36;;;;;;;;;;27248:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:15;;:12;;27278:1;;27248:15;;;;;;;;;;;;;;;:39;27229:3;;27197:101;;19307:1086;-1:-1:-1;;;;;19434:22:36;;;;;;:10;:22;;;;;;19426:60;;;;-1:-1:-1;;;19426:60:36;;;;;;;;;19496:19;19518:22;19534:5;19518:15;:22::i;:::-;19496:44;;19551:14;19568:22;19579:10;19568;:22::i;:::-;19551:39;;19600:21;19624:12;19637:6;19624:20;;;;;;;;;;;;;;;;19678:19;;;:11;:19;;;;;;-1:-1:-1;;;;;19678:32:36;;;;;;;;;19728:11;;19624:20;;;;;;;;-1:-1:-1;19728:22:36;-1:-1:-1;19728:22:36;19720:53;;;;-1:-1:-1;;;19720:53:36;;;;;;;;;19784:19;19796:6;19784:11;:19::i;:::-;19813:25;19827:4;19833;19813:13;:25::i;:::-;19848:60;19864:10;19876:4;19882:11;19895:5;19902;19848:15;:60::i;:::-;19933:11;;:24;;19949:7;19933:24;:15;:24;:::i;:::-;19919:38;;20037:7;;-1:-1:-1;;;;;20037:7:36;20023:10;:21;20019:271;;;20060:14;;:57;;-1:-1:-1;;;;;20060:14:36;20096:10;20109:7;20060:57;:27;:57;:::i;:::-;20019:271;;;20230:14;;:49;;-1:-1:-1;;;;;20230:14:36;20258:11;20271:7;20230:49;:27;:49;:::i;:::-;20300:29;20318:4;20324;20300:17;:29::i;:::-;20366:10;-1:-1:-1;;;;;20344:42:36;20353:11;-1:-1:-1;;;;;20344:42:36;;20378:7;20344:42;;;;;;;;;;;;;;;19307:1086;;;;;;;:::o;24068:730::-;24134:14;24151:22;24162:10;24151;:22::i;:::-;24134:39;;24183:21;24207:12;24220:6;24207:20;;;;;;;;;;;;;;;;24261:19;;;:11;:19;;;;;;24281:10;24261:31;;;;;;;24207:20;;;;;;;;-1:-1:-1;24303:19:36;24273:6;24303:11;:19::i;:::-;24332:25;24346:4;24352;24332:13;:25::i;:::-;24410:22;;;;24388:17;;:45;;;:21;:45;:::i;:::-;24368:17;:65;24464:11;;24517:22;;;;;24443:18;24549:15;;;-1:-1:-1;24574:15:36;;:19;;;24603:26;;;24639:14;;:60;;-1:-1:-1;;;;;24639:14:36;24675:10;24464:11;24639:60;:27;:60;:::i;:::-;24745:10;-1:-1:-1;;;;;24715:76:36;24733:10;-1:-1:-1;;;;;24715:76:36;;24757:10;24769:21;24715:76;;;;;;;;;;;;;;;;24068:730;;;;;;:::o;656:122:225:-;1106:9:184;:7;:9::i;:::-;1098:34;;;;-1:-1:-1;;;1098:34:184;;;;;;;;;-1:-1:-1;;;;;717:14:225;;;;;;734:4;717:14;;;;;;;;;:21;;-1:-1:-1;;717:21:225;;;;;;753:18;;;;;724:6;;753:18;;2106:30:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2106:30:39;;;-1:-1:-1;;;;2106:30:39;;;-1:-1:-1;;;;;2106:30:39;;;;:::o;13209:132:36:-;13266:14;13283:22;13294:10;13283;:22::i;:::-;13266:39;;13315:19;13327:6;13315:11;:19::i;:::-;13209:132;;:::o;29225:642::-;29343:12;:19;29307:7;;;;29396:441;29420:6;29416:1;:10;29396:441;;;29447:18;29476:12;29489:1;29476:15;;;;;;;;;;;;;;;;;;;;:25;-1:-1:-1;;;;;29476:25:36;;-1:-1:-1;29579:42:36;29476:25;29579:30;:42::i;:::-;29516:105;;29644:182;29672:140;29806:5;29672:108;29744:35;29770:1;29773:5;29744:25;:35::i;:::-;29673:5;:44;;;;29672:108;:71;:108;:::i;:140::-;29644:6;;:182;:10;:182;:::i;:::-;29635:191;-1:-1:-1;;;29428:3:36;;29396:441;;902:77:184;940:7;966:6;-1:-1:-1;;;;;966:6:184;902:77;:::o;1233:92::-;1273:4;1312:6;;-1:-1:-1;;;;;1312:6:184;1296:12;:10;:12::i;:::-;-1:-1:-1;;;;;1296:22:184;;1289:29;;1233:92;:::o;2563:32:39:-;;;;:::o;2318:35::-;;;;:::o;408:40:36:-;444:4;408:40;:::o;28407:660::-;28557:12;:19;28517:7;;;;28610:427;28634:6;28630:1;:10;28610:427;;;28661:18;28690:12;28703:1;28690:15;;;;;;;;;;;;;;;;;;;;:25;-1:-1:-1;;;;;28690:25:36;;-1:-1:-1;28793:42:36;28690:25;28793:30;:42::i;:::-;28730:105;;28858:168;28886:126;28989:5;28886:77;28927:35;28953:1;28956:5;28927:25;:35::i;:::-;28886:36;;:77;:40;:77;:::i;28858:168::-;28849:177;-1:-1:-1;;;28642:3:36;;28610:427;;2051:22:39;;;-1:-1:-1;;;;;2051:22:39;;:::o;30090:380:36:-;-1:-1:-1;;;;;30248:48:36;;30171:7;30248:48;;;:36;:48;;;;;;30325:39;:138;;30437:26;;30325:138;;25299:100;25373:12;:19;25299:100;:::o;12890:171::-;12950:12;:19;12933:14;12979:76;13003:6;12999:1;:10;12979:76;;;13030:14;13042:1;13030:11;:14::i;:::-;13011:3;;12979:76;;680:46;724:2;680:46;:::o;5004:97::-;459:9:225;:7;:9::i;:::-;:31;;;-1:-1:-1;479:10:225;472:18;;;;:6;:18;;;;;;;;459:31;451:56;;;;-1:-1:-1;;;451:56:225;;;;;;;;;5076:7:36;:18;;-1:-1:-1;;;;;;5076:18:36;-1:-1:-1;;;;;5076:18:36;;;;;;;;;;5004:97::o;8261:318::-;459:9:225;:7;:9::i;:::-;:31;;;-1:-1:-1;479:10:225;472:18;;;;:6;:18;;;;;;;;459:31;451:56;;;;-1:-1:-1;;;451:56:225;;;;;;;;;8411:14:36;8407:114;;;8441:16;:14;:16::i;:::-;8407:114;;;8488:22;8499:10;8488;:22::i;:::-;8530:42;8543:10;8555:16;8530:12;:42::i;:::-;8261:318;;;:::o;5594:580::-;459:9:225;:7;:9::i;:::-;:31;;;-1:-1:-1;479:10:225;472:18;;;;:6;:18;;;;;;;;459:31;451:56;;;;-1:-1:-1;;;451:56:225;;;;;;;;;-1:-1:-1;;;;;5693:23:36;;5685:60;;;;-1:-1:-1;;;5685:60:36;;;;;;;;;5763:12;5755:39;;;;-1:-1:-1;;;5755:39:36;;;;;;;;;5880:3;;:28;;-1:-1:-1;;;5880:28:36;;5863:14;;-1:-1:-1;;;;;5880:3:36;;:13;;:28;;5902:4;;5880:28;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5880:28:36;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5880:28:36;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5880:28:36;;;;;;;;;5863:45;;5932:6;5922:7;:16;5918:63;;;5964:6;5954:16;;5918:63;6037:3;;:32;;-1:-1:-1;;;6037:32:36;;-1:-1:-1;;;;;6037:3:36;;;;:12;;:32;;6050:9;;6061:7;;6037:32;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6037:32:36;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6037:32:36;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6037:32:36;;;;;;;;;6029:60;;;;-1:-1:-1;;;6029:60:36;;;;;;;;;6148:9;-1:-1:-1;;;;;6133:34:36;;6159:7;6133:34;;;;;;;;;;;;;;;517:1:225;5594:580:36;;:::o;24902:117::-;24964:7;24990:22;25001:10;24990;:22::i;28027:222::-;28142:7;28165:18;;:::i;:::-;28186:30;28198:10;28210:5;28186:11;:30::i;:::-;28233:9;;28027:222;-1:-1:-1;;;;28027:222:36:o;18482:524::-;18549:19;18571:22;18587:5;18571:15;:22::i;:::-;18621:12;:19;18549:44;;-1:-1:-1;18604:14:36;18650:134;18674:6;18670:1;:10;18650:134;;;18718:1;18733:40;18718:1;18754:11;18701:14;18733:12;:40::i;:::-;-1:-1:-1;18682:3:36;;18650:134;;;-1:-1:-1;18811:9:36;;:39;;-1:-1:-1;;;18811:39:36;;18853:1;;-1:-1:-1;;;;;18811:9:36;;:26;;:39;;18838:11;;18811:39;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18811:39:36;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18811:39:36;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;18811:39:36;;;;;;;;;:43;:104;;;-1:-1:-1;18870:9:36;;:41;;-1:-1:-1;;;18870:41:36;;18914:1;;-1:-1:-1;;;;;18870:9:36;;:28;;:41;;18899:11;;18870:41;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18870:41:36;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18870:41:36;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;18870:41:36;;;;;;;;;:45;18811:104;18794:206;;;18940:9;;:49;;-1:-1:-1;;;18940:49:36;;-1:-1:-1;;;;;18940:9:36;;;;:36;;:49;;18977:11;;18940:49;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18940:49:36;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;15852:237:36;16040:42;16049:10;16061:7;16070:5;16077:4;16040:8;:42::i;5172:138::-;459:9:225;:7;:9::i;:::-;:31;;;-1:-1:-1;479:10:225;472:18;;;;:6;:18;;;;;;;;459:31;451:56;;;;-1:-1:-1;;;451:56:225;;;;;;;;;5236:8:36;;:13;5228:41;;;;-1:-1:-1;;;5228:41:36;;;;;;;;;5291:12;5280:8;:23;5172:138::o;2249:1024::-;459:9:225;:7;:9::i;:::-;:31;;;-1:-1:-1;479:10:225;472:18;;;;:6;:18;;;;;;;;459:31;451:56;;;;-1:-1:-1;;;451:56:225;;;;;;;;;2628:3:36;;-1:-1:-1;;;;;2628:3:36;2620:26;2612:58;;;;-1:-1:-1;;;2612:58:36;;;;;;;;;-1:-1:-1;;;;;2688:27:36;;2680:61;;;;-1:-1:-1;;;2680:61:36;;;;;;;;;2779:1;2759:17;:21;2751:53;;;;-1:-1:-1;;;2751:53:36;;;;;;;;;2865:5;2835:27;:35;2814:137;;;;-1:-1:-1;;;2814:137:36;;;;;;;;;2962:3;:10;;-1:-1:-1;;;;;;2962:10:36;;;-1:-1:-1;;;;;2962:10:36;;;;;;;2982:20;:44;;;;3049:12;:32;;;;3036:10;:45;;;3107:33;;;;3091:13;:49;3150:7;:18;;;;;;;;;;;;;3178:9;:22;;;;;;;;;;;;;3210:26;:56;2249:1024::o;25470:105::-;25520:17;25556:12;25549:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;25549:19:36;;;;-1:-1:-1;;;25549:19:36;;-1:-1:-1;;;;;25549:19:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25470:105;:::o;26656:193::-;26733:15;;:::i;:::-;26760:14;26777:22;26788:10;26777;:22::i;:::-;26816:19;;;;:11;:19;;;;;;;;-1:-1:-1;;;;;26816:26:36;;;;;;;;;;26809:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;26656:193:36;;;;:::o;2722:27:39:-;;;-1:-1:-1;;;;;2722:27:39;;:::o;1474:107:184:-;1106:9;:7;:9::i;:::-;1098:34;;;;-1:-1:-1;;;1098:34:184;;;;;;;;;1546:28;1565:8;1546:18;:28::i;:::-;1474:107;:::o;15409:168:36:-;15527:43;15536:10;15548:7;15557:5;15564;15527:8;:43::i;2852:41:39:-;;;;:::o;25025:208:36:-;-1:-1:-1;;;;;25124:22:36;;25088:7;25124:22;;;:10;:22;;;;;;25164:10;25156:43;;;;-1:-1:-1;;;25156:43:36;;;;;;;;;-1:-1:-1;;25216:10:36;;25025:208;-1:-1:-1;;25025:208:36:o;3111:130:188:-;3169:7;3195:39;3199:1;3202;3195:39;;;;;;;;;;;;;;;;;:3;:39::i;842:176::-;900:7;931:5;;;954:6;;;;946:46;;;;-1:-1:-1;;;946:46:188;;;;;;;;14379:784:36;14566:7;14575;14594:20;14617:59;14653:11;14666:9;14617:35;:59::i;:::-;14594:82;;14686:25;14726:121;14813:20;;14726:65;14769:5;:21;;;;;;;;;;-1:-1:-1;;;;;14769:21:36;-1:-1:-1;;;;;14726:65:36;:38;14743:20;;14726:12;:16;;:38;;;;:::i;:::-;:42;:65;:42;:65;:::i;:121::-;14885:15;;:40;;-1:-1:-1;;;14885:40:36;;14686:161;;-1:-1:-1;14858:24:36;;-1:-1:-1;;;;;14885:15:36;;;;:25;;:40;;14919:4;;14885:40;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14885:40:36;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14885:40:36;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;14885:40:36;;;;;;;;;14858:67;-1:-1:-1;14954:39:36;14858:67;14975:17;14954:39;:20;:39;:::i;:::-;14935:58;-1:-1:-1;15003:33:36;15039:54;14935:58;15039:32;:17;444:4;15039:32;:21;:32;:::i;:54::-;15111:17;;;;-1:-1:-1;14379:784:36;;-1:-1:-1;;;;;;;;14379:784:36:o;2197:459:188:-;2255:7;2496:6;2492:45;;-1:-1:-1;2525:1:188;2518:8;;2492:45;2559:5;;;2563:1;2559;:5;:1;2582:5;;;;;:10;2574:56;;;;-1:-1:-1;;;2574:56:188;;;;;;;;1282:134;1340:7;1366:43;1370:1;1373;1366:43;;;;;;;;;;;;;;;;;:3;:43::i;8585:503:36:-;8671:14;8688:22;8699:10;8688;:22::i;:::-;8671:39;;8721:31;8755:12;8768:6;8755:20;;;;;;;;;;;;;;;;;;;;;:36;8824:20;;-1:-1:-1;;;;;;;;8755:36:36;;;;;;-1:-1:-1;8824:93:36;;;;;:49;;8755:36;8824:49;:24;:49;:::i;:::-;:53;:93;:53;:93;:::i;:::-;8801:20;:116;;;;8966:16;8927:12;8940:6;8927:20;;;;;;;;;;;;;;;;;;;;;:55;;-1:-1:-1;;;;;8927:55:36;;;;-1:-1:-1;;;8927:55:36;-1:-1:-1;;;;;8927:55:36;;;;;;8998:83;;;;;;9015:10;;8998:83;;;;9039:16;;9057:23;;8998:83;;10822:769;10936:7;10959:21;10983:12;10996:7;10983:21;;;;;;;;;;;;;;;;11038:20;;;:11;:20;;;;;;-1:-1:-1;;;;;11038:27:36;;;;;;;;;;11112:30;10983:21;;;;;;;11112:30;;;;11179:14;;:39;;-1:-1:-1;;;11179:39:36;;10983:21;;-1:-1:-1;11038:27:36;;11112:30;;10983:21;;11179:14;;:24;;:39;;11212:4;;11179:39;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11179:39:36;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11179:39:36;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11179:39:36;;;;;;;;;11152:66;;11247:4;:20;;;11232:12;:35;:60;;;;-1:-1:-1;11271:21:36;;;11232:60;11228:262;;;11311:34;11349:31;11375:4;11349:25;:31::i;:::-;11308:72;-1:-1:-1;11422:57:36;;-1:-1:-1;11422:25:36;11308:72;11422:57;:29;:57;:::i;:::-;11394:85;;11228:262;;11506:78;11568:4;:15;;;11506:57;444:4;11506:42;11522:25;11506:4;:11;;;:15;;:42;;;;:::i;:57::-;:61;:78;:61;:78;:::i;:::-;11499:85;10822:769;-1:-1:-1;;;;;;;10822:769:36:o;14149:224::-;14255:7;14264;14294:72;14320:5;14327:1;14330:5;:21;;;14353:12;14294:25;:72::i;:::-;14287:79;;;;14149:224;;;:::o;20399:449::-;20462:7;20503:10;-1:-1:-1;;;;;20527:19:36;;;20523:291;;20653:7;;-1:-1:-1;;;;;20653:7:36;20639:10;:21;;:52;;-1:-1:-1;20675:10:36;20664:22;;;;:10;:22;;;;;;:27;;20639:52;20614:156;;;;-1:-1:-1;;;20614:156:36;;;;;;;;;-1:-1:-1;20798:5:36;;20399:449;-1:-1:-1;20399:449:36:o;17852:452::-;17985:21;18009:12;18022:7;18009:21;;;;;;;;;;;;;;;;18064:20;;;:11;:20;;;;;;-1:-1:-1;;;;;18064:34:36;;;;;;;;;18009:21;;;;;;;;-1:-1:-1;18109:20:36;18076:7;18109:11;:20::i;:::-;18139:25;18153:4;18159;18139:13;:25::i;:::-;18198:14;;18174:84;;-1:-1:-1;;;;;18198:14:36;18215:4;18221:12;18235:16;18198:14;18174:15;:84::i;:::-;18268:29;18286:4;18292;18268:17;:29::i;:::-;17852:452;;;;;:::o;10193:623::-;10313:7;10348:10;;10340:5;:18;10336:67;;;10382:10;;10374:18;;10336:67;10427:1;10416:8;;:12;:30;;;;;10438:8;;10432:3;:14;10416:30;10412:75;;;10468:8;;10462:14;;10412:75;10507:13;;10500:3;:20;10496:314;;10543:42;671:2;10543:14;:3;10551:5;10543:14;:7;:14;:::i;:42::-;10536:49;;;;10496:314;10615:13;;10606:5;:22;10602:208;;10651:14;:3;10659:5;10651:14;:7;:14;:::i;10602:208::-;10719:80;10776:22;10784:13;;10776:3;:7;;:22;;;;:::i;:::-;10719:52;671:2;10719:24;10737:5;10719:13;;:17;;:24;;;;:::i;13347:796::-;13404:21;13428:12;13441:7;13428:21;;;;;;;;;;;;;;;;;;13404:45;;13526:4;:20;;;13510:12;:36;13506:73;;13562:7;;;13506:73;13616:14;;:39;;-1:-1:-1;;;13616:39:36;;13589:24;;-1:-1:-1;;;;;13616:14:36;;:24;;:39;;13649:4;;13616:39;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13616:39:36;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13616:39:36;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13616:39:36;;;;;;;;;13589:66;-1:-1:-1;13669:21:36;13665:107;;-1:-1:-1;13729:12:36;13706:20;;;;:35;13755:7;;13665:107;13783:26;13811:34;13861:31;13887:4;13861:25;:31::i;:::-;13935:30;;;;13782:110;;-1:-1:-1;13782:110:36;-1:-1:-1;13935:84:36;;13782:110;13935:84;:34;:84;:::i;:::-;13902:30;;;:117;14052:12;14029:20;;;:35;14095:17;;:41;;14117:18;14095:41;:21;:41;:::i;:::-;14075:17;:61;-1:-1:-1;;;;13347:796:36;:::o;20854:499::-;20987:11;;:15;20983:364;;21087:25;21131:121;21219:4;:15;;;21131:62;444:4;21131:47;21147:4;:30;;;21131:4;:11;;;:15;;:47;;;;:::i;:121::-;21291:22;;;;21087:165;;-1:-1:-1;21291:45:36;;21087:165;21291:45;:26;:45;:::i;:::-;21266:22;;;:70;-1:-1:-1;20854:499:36;;:::o;22058:1838::-;22294:23;;;;22262:29;22439:42;22470:10;22439:30;:42::i;:::-;22579:3;;:28;;-1:-1:-1;;;22579:28:36;;22392:89;;-1:-1:-1;22561:15:36;;-1:-1:-1;;;;;22579:3:36;;;;:13;;:28;;22601:4;;22579:28;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22579:28:36;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;22579:28:36;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;22579:28:36;;;;;;;;;22561:46;;22632:21;22621:7;:32;22617:1273;;22689:17;;:44;;22711:21;22689:44;:21;:44;:::i;:::-;22669:17;:64;22773:1;22747:23;;;:27;23153:5;23113:45;;23109:572;;;23178:3;;:49;;-1:-1:-1;;;23178:49:36;;-1:-1:-1;;;;;23178:3:36;;;;:12;;:49;;23191:12;;23205:21;;23178:49;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23178:49:36;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23178:49:36;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;23178:49:36;;;;;;;;;;23109:572;;;23274:3;;23294:9;;23274:54;;-1:-1:-1;;;23274:54:36;;-1:-1:-1;;;;;23274:3:36;;;;:11;;:54;;23294:9;;;23306:21;;23274:54;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23274:54:36;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23274:54:36;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;23274:54:36;;;;;;;;;23266:81;;;;-1:-1:-1;;;23266:81:36;;;;;;;;;23365:9;;:170;;-1:-1:-1;;;23365:170:36;;-1:-1:-1;;;;;23365:9:36;;;;:17;;:170;;23404:12;;23438:21;;23481:36;;23365:170;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23365:170:36;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23365:170:36;;;;23558:16;23554:113;;;23598:9;;:50;;-1:-1:-1;;;23598:50:36;;-1:-1:-1;;;;;23598:9:36;;;;:36;;:50;;23635:12;;23598:50;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23598:50:36;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23598:50:36;;;;23554:113;23760:10;-1:-1:-1;;;;;23732:62:36;23746:12;-1:-1:-1;;;;;23732:62:36;;23772:21;23732:62;;;;;;;;;;;;;;;22617:1273;;;23834:18;23833:19;23825:54;;;;-1:-1:-1;;;23825:54:36;;;;;;;;;22058:1838;;;;;;;;:::o;663:204:187:-;801:58;;775:85;;794:5;;-1:-1:-1;;;824:23:187;801:58;;849:2;;853:5;;801:58;;;;;;;;-1:-1:-1;;26:21;;;22:32;6:49;;801:58:187;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;-1:-1;;;;;;801:58:187;;;179:29:-1;;;;160:49;;;775:18:187;:85::i;21359:283:36:-;21589:30;;;;21573:11;;:62;;444:4;;21573:47;;;:15;:47;:::i;:62::-;21555:15;;;;:80;-1:-1:-1;21359:283:36:o;795:96:179:-;874:10;795:96;:::o;16429:978:36:-;-1:-1:-1;;;;;16589:22:36;;;;;;:10;:22;;;;;;16581:60;;;;-1:-1:-1;;;16581:60:36;;;;;;;;;16651:19;-1:-1:-1;;;;;16673:19:36;;:40;;16703:10;16673:40;;;16695:5;16673:40;16651:62;;16724:14;16741:22;16752:10;16741;:22::i;:::-;16724:39;;16773:21;16797:12;16810:6;16797:20;;;;;;;;;;;;;;;;16851:19;;;:11;:19;;;;;;-1:-1:-1;;;;;16851:32:36;;;;;;;;;16797:20;;;;;;;;-1:-1:-1;16894:19:36;16863:6;16894:11;:19::i;:::-;16967:25;16981:4;16987;16967:13;:25::i;:::-;17007:11;;17003:303;;17131:18;17126:117;;17167:14;;:76;;-1:-1:-1;;;;;17167:14:36;17207:10;17228:4;17235:7;17167:76;:31;:76;:::i;:::-;17271:11;;:24;;17287:7;17271:24;:15;:24;:::i;:::-;17257:38;;17003:303;17315:29;17333:4;17339;17315:17;:29::i;:::-;17380:10;-1:-1:-1;;;;;17359:41:36;17367:11;-1:-1:-1;;;;;17359:41:36;;17392:7;17359:41;;;;;;;;;;;;;;;16429:978;;;;;;;;:::o;1682:225:184:-;-1:-1:-1;;;;;1755:22:184;;1747:73;;;;-1:-1:-1;;;1747:73:184;;;;;;;;;1856:6;;;1835:38;;-1:-1:-1;;;;;1835:38:184;;;;1856:6;;;1835:38;;;1883:6;:17;;-1:-1:-1;;;;;;1883:17:184;-1:-1:-1;;;;;1883:17:184;;;;;;;;;;1682:225::o;3756:369:188:-;3872:7;3973:12;3965:6;3957:29;;;;-1:-1:-1;;;3957:29:188;;;;;;;;;;;3996:9;4012:1;4008;:5;;;;;;;3756:369;-1:-1:-1;;;;;3756:369:188:o;1740:217::-;1856:7;1891:12;1883:6;;;;1875:29;;;;-1:-1:-1;;;1875:29:188;;;;;;;;;;-1:-1:-1;;;1926:5:188;;;1740:217::o;2998:1107:187:-;3593:27;3601:5;-1:-1:-1;;;;;3593:25:187;;:27::i;:::-;3585:71;;;;-1:-1:-1;;;3585:71:187;;;;;;;;;3727:12;3741:23;3776:5;-1:-1:-1;;;;;3768:19:187;3788:4;3768:25;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3726:67:187;;;;3811:7;3803:52;;;;-1:-1:-1;;;3803:52:187;;;;;;;;;3870:17;;:21;3866:233;;4022:10;4011:30;;;;;;;;;;;;;;4003:85;;;;-1:-1:-1;;;4003:85:187;;;;;;;;873:274;1062:68;;1011:129;;1043:5;;-1:-1:-1;;;1085:27:187;1062:68;;1114:4;;1120:2;;1124:5;;1062:68;;;;693:630:178;753:4;1226:20;;1059:66;1273:23;;;;;;:42;;-1:-1:-1;1300:15:178;;;1273:42;1265:51;693:630;-1:-1:-1;;;;693:630:178:o;99:516:133:-;;;;;;;;;;-1:-1:-1;;;;;99:516:133;;;;;;-1:-1:-1;;;;;99:516:133;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;-1:-1;99:516:133;;;-1:-1:-1;;99:516:133:o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;160:352;;;290:3;283:4;275:6;271:17;267:27;257:2;;308:1;305;298:12;257:2;-1:-1;328:20;;368:18;357:30;;354:2;;;400:1;397;390:12;354:2;434:4;426:6;422:17;410:29;;485:3;477:4;469:6;465:17;455:8;451:32;448:41;445:2;;;502:1;499;492:12;445:2;250:262;;;;;;896:124;960:20;;985:30;960:20;985:30;;1027:128;1102:13;;1120:30;1102:13;1120:30;;1162:162;1245:20;;1270:49;1245:20;1270:49;;1508:130;1575:20;;1600:33;1575:20;1600:33;;1645:134;1723:13;;1741:33;1723:13;1741:33;;1786:128;1852:20;;1877:32;1852:20;1877:32;;1921:241;;2025:2;2013:9;2004:7;2000:23;1996:32;1993:2;;;2041:1;2038;2031:12;1993:2;2076:1;2093:53;2138:7;2118:9;2093:53;;2169:366;;;2290:2;2278:9;2269:7;2265:23;2261:32;2258:2;;;2306:1;2303;2296:12;2258:2;2341:1;2358:53;2403:7;2383:9;2358:53;;;2348:63;;2320:97;2448:2;2466:53;2511:7;2502:6;2491:9;2487:22;2466:53;;;2456:63;;2427:98;2252:283;;;;;;2542:366;;;2663:2;2651:9;2642:7;2638:23;2634:32;2631:2;;;2679:1;2676;2669:12;2631:2;2714:1;2731:53;2776:7;2756:9;2731:53;;;2721:63;;2693:97;2821:2;2839:53;2884:7;2875:6;2864:9;2860:22;2839:53;;2915:491;;;;3053:2;3041:9;3032:7;3028:23;3024:32;3021:2;;;3069:1;3066;3059:12;3021:2;3104:1;3121:53;3166:7;3146:9;3121:53;;;3111:63;;3083:97;3211:2;3229:53;3274:7;3265:6;3254:9;3250:22;3229:53;;;3219:63;;3190:98;3319:2;3337:53;3382:7;3373:6;3362:9;3358:22;3337:53;;;3327:63;;3298:98;3015:391;;;;;;3413:491;;;;3551:2;3539:9;3530:7;3526:23;3522:32;3519:2;;;3567:1;3564;3557:12;3519:2;3602:1;3619:53;3664:7;3644:9;3619:53;;;3609:63;;3581:97;3709:2;3727:53;3772:7;3763:6;3752:9;3748:22;3727:53;;;3717:63;;3688:98;3817:2;3835:53;3880:7;3871:6;3860:9;3856:22;3835:53;;3911:483;;;;4045:2;4033:9;4024:7;4020:23;4016:32;4013:2;;;4061:1;4058;4051:12;4013:2;4096:1;4113:53;4158:7;4138:9;4113:53;;;4103:63;;4075:97;4203:2;4221:52;4265:7;4256:6;4245:9;4241:22;4221:52;;;4211:62;;4182:97;4310:2;4328:50;4370:7;4361:6;4350:9;4346:22;4328:50;;4401:795;;;;;;4605:2;4593:9;4584:7;4580:23;4576:32;4573:2;;;4621:1;4618;4611:12;4573:2;4656:31;;4707:18;4696:30;;4693:2;;;4739:1;4736;4729:12;4693:2;4767:80;4839:7;4830:6;4819:9;4815:22;4767:80;;;4757:90;;;;4635:218;4912:2;4901:9;4897:18;4884:32;4936:18;4928:6;4925:30;4922:2;;;4968:1;4965;4958:12;4922:2;4996:79;5067:7;5058:6;5047:9;5043:22;4996:79;;;4986:89;;;;4863:218;5112:2;5130:50;5172:7;5163:6;5152:9;5148:22;5130:50;;;5120:60;;5091:95;4567:629;;;;;;;;;5203:257;;5315:2;5303:9;5294:7;5290:23;5286:32;5283:2;;;5331:1;5328;5321:12;5283:2;5366:1;5383:61;5436:7;5416:9;5383:61;;5467:1067;;;;;;;;5709:3;5697:9;5688:7;5684:23;5680:33;5677:2;;;5726:1;5723;5716:12;5677:2;5761:1;5778:69;5839:7;5819:9;5778:69;;;5768:79;;5740:113;5884:2;5902:53;5947:7;5938:6;5927:9;5923:22;5902:53;;;5892:63;;5863:98;5992:2;6010:53;6055:7;6046:6;6035:9;6031:22;6010:53;;;6000:63;;5971:98;6100:2;6118:53;6163:7;6154:6;6143:9;6139:22;6118:53;;;6108:63;;6079:98;6208:3;6227:53;6272:7;6263:6;6252:9;6248:22;6227:53;;;6217:63;;6187:99;6317:3;6336:73;6401:7;6392:6;6381:9;6377:22;6336:73;;;6326:83;;6296:119;6446:3;6465:53;6510:7;6501:6;6490:9;6486:22;6465:53;;;6455:63;;6425:99;5671:863;;;;;;;;;;;6541:281;;6665:2;6653:9;6644:7;6640:23;6636:32;6633:2;;;6681:1;6678;6671:12;6633:2;6716:1;6733:73;6798:7;6778:9;6733:73;;6829:241;;6933:2;6921:9;6912:7;6908:23;6904:32;6901:2;;;6949:1;6946;6939:12;6901:2;6984:1;7001:53;7046:7;7026:9;7001:53;;7077:263;;7192:2;7180:9;7171:7;7167:23;7163:32;7160:2;;;7208:1;7205;7198:12;7160:2;7243:1;7260:64;7316:7;7296:9;7260:64;;7347:366;;;7468:2;7456:9;7447:7;7443:23;7439:32;7436:2;;;7484:1;7481;7474:12;7436:2;7519:1;7536:53;7581:7;7561:9;7536:53;;7720:366;;;7841:2;7829:9;7820:7;7816:23;7812:32;7809:2;;;7857:1;7854;7847:12;7809:2;7892:1;7909:53;7954:7;7934:9;7909:53;;8093:239;;8196:2;8184:9;8175:7;8171:23;8167:32;8164:2;;;8212:1;8209;8202:12;8164:2;8247:1;8264:52;8308:7;8288:9;8264:52;;8340:253;;8465:88;8549:3;8541:6;8465:88;;;-1:-1;;8582:4;8573:14;;8458:135;8602:269;;8735:96;8827:3;8819:6;8735:96;;;-1:-1;;8860:4;8851:14;;8728:143;8880:269;;9013:96;9105:3;9097:6;9013:96;;;-1:-1;;9138:4;9129:14;;9006:143;9158:173;;9245:46;9287:3;9279:6;9245:46;;;-1:-1;;9320:4;9311:14;;9238:93;9339:113;9422:24;9440:5;9422:24;;;9417:3;9410:37;9404:48;;;9496:842;;9679:73;9746:5;9679:73;;;9765:105;9863:6;9858:3;9765:105;;;9758:112;;9891:75;9960:5;9891:75;;;9986:7;10014:1;9999:317;10024:6;10021:1;10018:13;9999:317;;;10091:6;10085:13;10112:101;10209:3;10194:13;10112:101;;;10105:108;;10230:79;10302:6;10230:79;;;10220:89;-1:-1;;10046:1;10039:9;9999:317;;;-1:-1;10329:3;;9658:680;-1:-1;;;;;9658:680;10439:874;;10630:77;10701:5;10630:77;;;10720:109;10822:6;10817:3;10720:109;;;10713:116;;10850:79;10923:5;10850:79;;;10949:7;10977:1;10962:329;10987:6;10984:1;10981:13;10962:329;;;11054:6;11048:13;11075:109;11180:3;11165:13;11075:109;;;11068:116;;11201:83;11277:6;11201:83;;;11191:93;-1:-1;;11009:1;11002:9;10962:329;;11414:874;;11605:77;11676:5;11605:77;;;11695:109;11797:6;11792:3;11695:109;;;11688:116;;11825:79;11898:5;11825:79;;;11924:7;11952:1;11937:329;11962:6;11959:1;11956:13;11937:329;;;12029:6;12023:13;12050:109;12155:3;12140:13;12050:109;;;12043:116;;12176:83;12252:6;12176:83;;;12166:93;-1:-1;;11984:1;11977:9;11937:329;;12329:624;12448:48;12490:5;12448:48;;;12509:74;12576:6;12571:3;12509:74;;;12502:81;;12604:50;12648:5;12604:50;;;12674:7;12702:1;12687:254;12712:6;12709:1;12706:13;12687:254;;;12779:6;12773:13;12800:63;12859:3;12844:13;12800:63;;;12793:70;;12880:54;12927:6;12880:54;;;12870:64;-1:-1;;12734:1;12727:9;12687:254;;;12691:14;12427:526;;;;;;12992:690;;13137:54;13185:5;13137:54;;;13204:86;13283:6;13278:3;13204:86;;;13197:93;;13311:56;13361:5;13311:56;;;13387:7;13415:1;13400:260;13425:6;13422:1;13419:13;13400:260;;;13492:6;13486:13;13513:63;13572:3;13557:13;13513:63;;;13506:70;;13593:60;13646:6;13593:60;;;13583:70;-1:-1;;13447:1;13440:9;13400:260;;13690:104;13767:21;13782:5;13767:21;;13801:356;;13929:38;13961:5;13929:38;;;13979:88;14060:6;14055:3;13979:88;;;13972:95;;14072:52;14117:6;14112:3;14105:4;14098:5;14094:16;14072:52;;;14136:16;;;;;13909:248;-1:-1;;13909:248;14164:148;14253:53;14300:5;14253:53;;14657:347;;14769:39;14802:5;14769:39;;;14820:71;14884:6;14879:3;14820:71;;;14813:78;;14896:52;14941:6;14936:3;14929:4;14922:5;14918:16;14896:52;;;14969:29;14991:6;14969:29;;;14960:39;;;;14749:255;-1:-1;;;14749:255;15012:324;;15172:67;15236:2;15231:3;15172:67;;;15272:26;15252:47;;15327:2;15318:12;;15158:178;-1:-1;;15158:178;15345:322;;15505:67;15569:2;15564:3;15505:67;;;-1:-1;;;15585:45;;15658:2;15649:12;;15491:176;-1:-1;;15491:176;15676:326;;15836:67;15900:2;15895:3;15836:67;;;15936:28;15916:49;;15993:2;15984:12;;15822:180;-1:-1;;15822:180;16011:401;;16171:67;16235:2;16230:3;16171:67;;;16271:34;16251:55;;16340:34;16335:2;16326:12;;16319:56;16403:2;16394:12;;16157:255;-1:-1;;16157:255;16421:375;;16581:67;16645:2;16640:3;16581:67;;;16681:34;16661:55;;-1:-1;;;16745:2;16736:12;;16729:30;16787:2;16778:12;;16567:229;-1:-1;;16567:229;16805:320;;16965:67;17029:2;17024:3;16965:67;;;-1:-1;;;17045:43;;17116:2;17107:12;;16951:174;-1:-1;;16951:174;17134:315;;17294:67;17358:2;17353:3;17294:67;;;-1:-1;;;17374:38;;17440:2;17431:12;;17280:169;-1:-1;;17280:169;17458:327;;17618:67;17682:2;17677:3;17618:67;;;17718:29;17698:50;;17776:2;17767:12;;17604:181;-1:-1;;17604:181;17794:332;;17954:67;18018:2;18013:3;17954:67;;;18054:34;18034:55;;18117:2;18108:12;;17940:186;-1:-1;;17940:186;18135:392;;18295:67;18359:2;18354:3;18295:67;;;18395:34;18375:55;;18464:25;18459:2;18450:12;;18443:47;18518:2;18509:12;;18281:246;-1:-1;;18281:246;18536:318;;18696:67;18760:2;18755:3;18696:67;;;-1:-1;;;18776:41;;18845:2;18836:12;;18682:172;-1:-1;;18682:172;18863:319;;19023:67;19087:2;19082:3;19023:67;;;-1:-1;;;19103:42;;19173:2;19164:12;;19009:173;-1:-1;;19009:173;19191:314;;19351:67;19415:2;19410:3;19351:67;;;-1:-1;;;19431:37;;19496:2;19487:12;;19337:168;-1:-1;;19337:168;19514:324;;19674:67;19738:2;19733:3;19674:67;;;19774:26;19754:47;;19829:2;19820:12;;19660:178;-1:-1;;19660:178;19847:370;;20007:67;20071:2;20066:3;20007:67;;;20107:34;20087:55;;-1:-1;;;20171:2;20162:12;;20155:25;20208:2;20199:12;;19993:224;-1:-1;;19993:224;20226:312;;20386:67;20450:2;20445:3;20386:67;;;-1:-1;;;20466:35;;20529:2;20520:12;;20372:166;-1:-1;;20372:166;20547:315;;20707:67;20771:2;20766:3;20707:67;;;-1:-1;;;20787:38;;20853:2;20844:12;;20693:169;-1:-1;;20693:169;20871:319;;21031:67;21095:2;21090:3;21031:67;;;-1:-1;;;21111:42;;21181:2;21172:12;;21017:173;-1:-1;;21017:173;21199:314;;21359:67;21423:2;21418:3;21359:67;;;-1:-1;;;21439:37;;21504:2;21495:12;;21345:168;-1:-1;;21345:168;21522:382;;21682:67;21746:2;21741:3;21682:67;;;21782:34;21762:55;;-1:-1;;;21846:2;21837:12;;21830:37;21895:2;21886:12;;21668:236;-1:-1;;21668:236;21913:321;;22073:67;22137:2;22132:3;22073:67;;;-1:-1;;;22153:44;;22225:2;22216:12;;22059:175;-1:-1;;22059:175;22243:319;;22403:67;22467:2;22462:3;22403:67;;;-1:-1;;;22483:42;;22553:2;22544:12;;22389:173;-1:-1;;22389:173;22571:379;;22731:67;22795:2;22790:3;22731:67;;;22831:34;22811:55;;-1:-1;;;22895:2;22886:12;;22879:34;22941:2;22932:12;;22717:233;-1:-1;;22717:233;22959:315;;23119:67;23183:2;23178:3;23119:67;;;-1:-1;;;23199:38;;23265:2;23256:12;;23105:169;-1:-1;;23105:169;23283:331;;23443:67;23507:2;23502:3;23443:67;;;23543:33;23523:54;;23605:2;23596:12;;23429:185;-1:-1;;23429:185;23709:850;23927:23;;23856:4;23847:14;;;23956:79;23851:3;23927:23;23956:79;;;23876:165;24125:4;24118:5;24114:16;24108:23;24137:61;24192:4;24187:3;24183:14;24169:12;24137:61;;;24051:153;24288:4;24281:5;24277:16;24271:23;24300:63;24357:4;24352:3;24348:14;24334:12;24300:63;;;24214:155;24463:4;24456:5;24452:16;24446:23;24475:63;24532:4;24527:3;24523:14;24509:12;24475:63;;25583:655;25798:23;;25730:4;25721:14;;;25827:63;25725:3;25798:23;25827:63;;;25750:146;25975:4;25968:5;25964:16;25958:23;25987:63;26044:4;26039:3;26035:14;26021:12;25987:63;;;25906:150;26142:4;26135:5;26131:16;26125:23;26154:63;26211:4;26206:3;26202:14;26188:12;26980:103;27053:24;27071:5;27053:24;;27210:124;27292:36;27322:5;27292:36;;27341:100;27412:23;27429:5;27412:23;;27565:262;;27709:93;27798:3;27789:6;27709:93;;27834:213;27952:2;27937:18;;27966:71;27941:9;28010:6;27966:71;;28054:435;28228:2;28213:18;;28242:71;28217:9;28286:6;28242:71;;;28324:72;28392:2;28381:9;28377:18;28368:6;28324:72;;;28407;28475:2;28464:9;28460:18;28451:6;28407:72;;28496:324;28642:2;28627:18;;28656:71;28631:9;28700:6;28656:71;;;28738:72;28806:2;28795:9;28791:18;28782:6;28738:72;;28827:435;29001:2;28986:18;;29015:71;28990:9;29059:6;29015:71;;;29097:72;29165:2;29154:9;29150:18;29141:6;29097:72;;29269:437;29475:2;29489:47;;;29460:18;;29550:146;29460:18;29682:6;29550:146;;29713:453;29927:2;29941:47;;;29912:18;;30002:154;29912:18;30142:6;30002:154;;30173:453;30387:2;30401:47;;;30372:18;;30462:154;30372:18;30602:6;30462:154;;30633:361;30801:2;30815:47;;;30786:18;;30876:108;30786:18;30970:6;30876:108;;31001:201;31113:2;31098:18;;31127:65;31102:9;31165:6;31127:65;;31209:245;31343:2;31328:18;;31357:87;31332:9;31417:6;31357:87;;31461:575;31677:3;31662:19;;31692:87;31666:9;31752:6;31692:87;;;31790:70;31856:2;31845:9;31841:18;31832:6;31790:70;;;31871:72;31939:2;31928:9;31924:18;31915:6;31871:72;;;31954;32022:2;32011:9;32007:18;31998:6;31954:72;;;31648:388;;;;;;;;32303:301;32441:2;32455:47;;;32426:18;;32516:78;32426:18;32580:6;32516:78;;32611:407;32802:2;32816:47;;;32787:18;;32877:131;32787:18;32877:131;;33025:407;33216:2;33230:47;;;33201:18;;33291:131;33201:18;33291:131;;33439:407;33630:2;33644:47;;;33615:18;;33705:131;33615:18;33705:131;;33853:407;34044:2;34058:47;;;34029:18;;34119:131;34029:18;34119:131;;34267:407;34458:2;34472:47;;;34443:18;;34533:131;34443:18;34533:131;;34681:407;34872:2;34886:47;;;34857:18;;34947:131;34857:18;34947:131;;35095:407;35286:2;35300:47;;;35271:18;;35361:131;35271:18;35361:131;;35509:407;35700:2;35714:47;;;35685:18;;35775:131;35685:18;35775:131;;35923:407;36114:2;36128:47;;;36099:18;;36189:131;36099:18;36189:131;;36337:407;36528:2;36542:47;;;36513:18;;36603:131;36513:18;36603:131;;36751:407;36942:2;36956:47;;;36927:18;;37017:131;36927:18;37017:131;;37165:407;37356:2;37370:47;;;37341:18;;37431:131;37341:18;37431:131;;37579:407;37770:2;37784:47;;;37755:18;;37845:131;37755:18;37845:131;;37993:407;38184:2;38198:47;;;38169:18;;38259:131;38169:18;38259:131;;38407:407;38598:2;38612:47;;;38583:18;;38673:131;38583:18;38673:131;;38821:407;39012:2;39026:47;;;38997:18;;39087:131;38997:18;39087:131;;39235:407;39426:2;39440:47;;;39411:18;;39501:131;39411:18;39501:131;;39649:407;39840:2;39854:47;;;39825:18;;39915:131;39825:18;39915:131;;40063:407;40254:2;40268:47;;;40239:18;;40329:131;40239:18;40329:131;;40477:407;40668:2;40682:47;;;40653:18;;40743:131;40653:18;40743:131;;40891:407;41082:2;41096:47;;;41067:18;;41157:131;41067:18;41157:131;;41305:407;41496:2;41510:47;;;41481:18;;41571:131;41481:18;41571:131;;41719:407;41910:2;41924:47;;;41895:18;;41985:131;41895:18;41985:131;;42133:407;42324:2;42338:47;;;42309:18;;42399:131;42309:18;42399:131;;42547:407;42738:2;42752:47;;;42723:18;;42813:131;42723:18;42813:131;;42961:322;43133:3;43118:19;;43148:125;43122:9;43246:6;43148:125;;43290:321;43462:2;43447:18;;43476:125;43451:9;43574:6;43476:125;;43618:213;43736:2;43721:18;;43750:71;43725:9;43794:6;43750:71;;43838:324;43984:2;43969:18;;43998:71;43973:9;44042:6;43998:71;;44169:435;44343:2;44328:18;;44357:71;44332:9;44401:6;44357:71;;44611:211;44728:2;44713:18;;44742:70;44717:9;44785:6;44742:70;;44829:322;44974:2;44959:18;;44988:70;44963:9;45031:6;44988:70;;45158:170;45301:4;45292:14;;45249:79;45697:93;45777:3;45763:27;45955:156;46077:12;;46048:63;46452:104;-1:-1;46542:4;;46520:36;47599:197;47736:19;;;47785:4;47776:14;;47729:67;48225:130;48346:3;48324:31;-1:-1;48324:31;48875:91;;48937:24;48955:5;48937:24;;48973:85;49039:13;49032:21;;49015:43;49065:107;;49143:24;49161:5;49143:24;;49297:121;-1:-1;;;;;49359:54;;49342:76;49504:104;-1:-1;;;;;49565:38;;49548:60;50209:106;;50287:23;50304:5;50287:23;;50323:268;50388:1;50395:101;50409:6;50406:1;50403:13;50395:101;;;50476:11;;;50470:18;50457:11;;;50450:39;50431:2;50424:10;50395:101;;;50511:6;50508:1;50505:13;50502:2;;;-1:-1;;50576:1;50558:16;;50551:27;50372:219;50599:97;50687:2;50667:14;-1:-1;;50663:28;;50647:49;50704:117;50773:24;50791:5;50773:24;;;50766:5;50763:35;50753:2;;50812:1;50809;50802:12;50828:111;50894:21;50909:5;50894:21;;50946:149;51031:40;51065:5;51031:40;;51266:117;51335:24;51353:5;51335:24;;51390:115;51458:23;51475:5;51458:23;",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "BONUS_BLOCK_MULTIPLIER()": "10a168f9",
    "PRECISION()": "aaf5eb68",
    "SECONDS_PER_BLOCK()": "c1d74258",
    "SOV()": "08dcb360",
    "add(address,uint96,bool)": "0c43a7cd",
    "addAdmin(address)": "70480275",
    "admins(address)": "429b62e5",
    "bonusEndBlock()": "1aed6553",
    "calcUnlockedImmediatelyPercent(address)": "afdd91c6",
    "claimReward(address,address)": "4953c782",
    "claimRewardFromAllPools(address)": "d6a49f0e",
    "deposit(address,uint256,address)": "f45346dc",
    "emergencyWithdraw(address)": "6ff1c9bc",
    "endBlock()": "083c6323",
    "getEstimatedReward(address,uint256,uint256)": "0b1a2851",
    "getMissedBalance()": "3723de42",
    "getPassedBlocksWithBonusMultiplier(uint256,uint256)": "5e379679",
    "getPoolAccumulatedReward(address)": "492e019d",
    "getPoolId(address)": "caa9a08d",
    "getPoolInfo(address)": "06bfa938",
    "getPoolInfoList()": "e788d8d1",
    "getPoolLength()": "b3944d52",
    "getUserAccumulatedReward(address,address)": "56085d4c",
    "getUserAccumulatedRewardList(address)": "48c84d9e",
    "getUserAccumulatedRewardToBePaidLiquid(address)": "ab32339f",
    "getUserAccumulatedRewardToBeVested(address)": "86bc6758",
    "getUserBalanceList(address)": "5d50d060",
    "getUserInfo(address,address)": "f2801fe7",
    "getUserInfoList(address)": "62748fbb",
    "getUserPoolTokenBalance(address,address)": "d0452aa6",
    "initialize(address,uint256,uint256,uint256,address,address,uint256)": "e3866c9a",
    "isOwner()": "8f32d59b",
    "lockedSOV()": "f2f46b3b",
    "onTokensDeposited(address,uint256)": "d8c173c4",
    "owner()": "8da5cb5b",
    "poolInfoList(uint256)": "787b4026",
    "poolTokensUnlockedImmediatelyPercent(address)": "1fc3f004",
    "removeAdmin(address)": "1785f53c",
    "rewardTokensPerBlock()": "29d0fa3e",
    "setLockedSOV(address)": "1d8f889c",
    "setPoolTokenUnlockedImmediatelyPercent(address,uint256)": "16614c26",
    "setUnlockedImmediatelyPercent(uint256)": "2d0857a2",
    "setWrapper(address)": "c2167d93",
    "startBlock()": "48cd4cb1",
    "stopMining()": "da408679",
    "totalAllocationPoint()": "a1a6690f",
    "totalUsersBalance()": "9a13ba29",
    "transferOwnership(address)": "f2fde38b",
    "transferSOV(address,uint256)": "c680c0b7",
    "unlockedImmediatelyPercent()": "f729a404",
    "update(address,uint96,bool)": "c35a934d",
    "updateAllPools()": "b9ec7d74",
    "updatePool(address)": "7b46c54f",
    "updateTokens(address[],uint96[],bool)": "414d57fb",
    "userInfoMap(uint256,address)": "5f02c145",
    "withdraw(address,uint256,address)": "69328dec",
    "wrapper()": "ac210cc7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"AdminAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"AdminRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"accumulatedReward\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allocationPoint\",\"type\":\"uint256\"}],\"name\":\"PoolTokenAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAllocationPoint\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldAllocationPoint\",\"type\":\"uint256\"}],\"name\":\"PoolTokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SOVTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"BONUS_BLOCK_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SECONDS_PER_BLOCK\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SOV\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolToken\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"_allocationPoint\",\"type\":\"uint96\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bonusEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolToken\",\"type\":\"address\"}],\"name\":\"calcUnlockedImmediatelyPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"claimReward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"claimRewardFromAllPools\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolToken\",\"type\":\"address\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"getEstimatedReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMissedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getPassedBlocksWithBonusMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolToken\",\"type\":\"address\"}],\"name\":\"getPoolAccumulatedReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolToken\",\"type\":\"address\"}],\"name\":\"getPoolId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolToken\",\"type\":\"address\"}],\"name\":\"getPoolInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"poolToken\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"allocationPoint\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accumulatedRewardPerShare\",\"type\":\"uint256\"}],\"internalType\":\"struct LiquidityMiningStorage.PoolInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPoolInfoList\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"poolToken\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"allocationPoint\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accumulatedRewardPerShare\",\"type\":\"uint256\"}],\"internalType\":\"struct LiquidityMiningStorage.PoolInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPoolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserAccumulatedReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserAccumulatedRewardList\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserAccumulatedRewardToBePaidLiquid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserAccumulatedRewardToBeVested\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserBalanceList\",\"outputs\":[{\"internalType\":\"uint256[2][]\",\"name\":\"\",\"type\":\"uint256[2][]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accumulatedReward\",\"type\":\"uint256\"}],\"internalType\":\"struct LiquidityMiningStorage.UserInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserInfoList\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accumulatedReward\",\"type\":\"uint256\"}],\"internalType\":\"struct LiquidityMiningStorage.UserInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserPoolTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_SOV\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardTokensPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startDelayBlocks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_numberOfBonusBlocks\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_wrapper\",\"type\":\"address\"},{\"internalType\":\"contract ILockedSOV\",\"name\":\"_lockedSOV\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_unlockedImmediatelyPercent\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lockedSOV\",\"outputs\":[{\"internalType\":\"contract ILockedSOV\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"onTokensDeposited\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfoList\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"poolToken\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"allocationPoint\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accumulatedRewardPerShare\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolTokensUnlockedImmediatelyPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardTokensPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract ILockedSOV\",\"name\":\"_lockedSOV\",\"type\":\"address\"}],\"name\":\"setLockedSOV\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_poolTokenUnlockedImmediatelyPercent\",\"type\":\"uint256\"}],\"name\":\"setPoolTokenUnlockedImmediatelyPercent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_unlockedImmediatelyPercent\",\"type\":\"uint256\"}],\"name\":\"setUnlockedImmediatelyPercent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wrapper\",\"type\":\"address\"}],\"name\":\"setWrapper\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stopMining\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalAllocationPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalUsersBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferSOV\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unlockedImmediatelyPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolToken\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"_allocationPoint\",\"type\":\"uint96\"},{\"internalType\":\"bool\",\"name\":\"_updateAllFlag\",\"type\":\"bool\"}],\"name\":\"update\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"updateAllPools\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolToken\",\"type\":\"address\"}],\"name\":\"updatePool\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_poolTokens\",\"type\":\"address[]\"},{\"internalType\":\"uint96[]\",\"name\":\"_allocationPoints\",\"type\":\"uint96[]\"},{\"internalType\":\"bool\",\"name\":\"_updateAllFlag\",\"type\":\"bool\"}],\"name\":\"updateTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfoMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accumulatedReward\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wrapper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"add(address,uint96,bool)\":{\"params\":{\"_allocationPoint\":\"the allocation point (weight) for the given pool\",\"_poolToken\":\"the address of pool token\",\"_withUpdate\":\"the flag whether we need to update all pools\"}},\"addAdmin(address)\":{\"params\":{\"_admin\":\"The addresses of the account to grant permissions.\"}},\"calcUnlockedImmediatelyPercent(address)\":{\"details\":\"calculate the unlocked immediate percentage of specific pool token use the poolTokensUnlockedImmediatelyPercent by default, if it is not set, then use the unlockedImmediatelyPercent\"},\"claimReward(address,address)\":{\"params\":{\"_poolToken\":\"the address of pool token\",\"_user\":\"the address of user to claim reward from (can be passed only by wrapper contract)\"}},\"claimRewardFromAllPools(address)\":{\"params\":{\"_user\":\"the address of user to claim reward from (can be passed only by wrapper contract)\"}},\"deposit(address,uint256,address)\":{\"params\":{\"_amount\":\"the amount of pool tokens\",\"_poolToken\":\"the address of pool token\",\"_user\":\"the address of user, tokens will be deposited to it or to msg.sender\"}},\"emergencyWithdraw(address)\":{\"details\":\"EMERGENCY ONLY\",\"params\":{\"_poolToken\":\"the address of pool token\"}},\"getEstimatedReward(address,uint256,uint256)\":{\"params\":{\"_amount\":\"the amount of tokens to be deposited\",\"_duration\":\"the duration of liquidity providing in seconds\",\"_poolToken\":\"the address of pool token\"}},\"getMissedBalance()\":{\"return\":\"The amount of SOV tokens according to totalUsersBalance  in excess of actual SOV balance of the LM contract.\"},\"getPoolId(address)\":{\"params\":{\"_poolToken\":\"the address of pool token\"}},\"getPoolInfo(address)\":{\"params\":{\"_poolToken\":\"the address of pool token\"}},\"getUserAccumulatedReward(address,address)\":{\"params\":{\"_poolToken\":\"the address of pool token\",\"_user\":\"the user address\"}},\"getUserAccumulatedRewardList(address)\":{\"params\":{\"_user\":\"the address of the user\"}},\"getUserAccumulatedRewardToBePaidLiquid(address)\":{\"params\":{\"_user\":\"the address of the user\"}},\"getUserAccumulatedRewardToBeVested(address)\":{\"params\":{\"_user\":\"the address of the user\"}},\"getUserBalanceList(address)\":{\"params\":{\"_user\":\"the address of the user\"}},\"getUserInfo(address,address)\":{\"params\":{\"_poolToken\":\"the address of pool token\",\"_user\":\"the address of the user\"}},\"getUserInfoList(address)\":{\"params\":{\"_user\":\"the address of the user\"}},\"getUserPoolTokenBalance(address,address)\":{\"params\":{\"_poolToken\":\"the address of pool token\",\"_user\":\"the address of the user\"}},\"initialize(address,uint256,uint256,uint256,address,address,uint256)\":{\"params\":{\"_SOV\":\"The SOV token.\",\"_lockedSOV\":\"The contract instance address of the lockedSOV vault.  SOV rewards are not paid directly to liquidity providers. Instead they  are deposited into a lockedSOV vault contract.\",\"_numberOfBonusBlocks\":\"The number of blocks when each block will  be calculated as N blocks (BONUS_BLOCK_MULTIPLIER).\",\"_rewardTokensPerBlock\":\"The number of reward tokens per block.\",\"_startDelayBlocks\":\"The number of blocks should be passed to start  mining.\",\"_unlockedImmediatelyPercent\":\"The % which determines how much will be unlocked immediately.\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"onTokensDeposited(address,uint256)\":{\"details\":\"only callable by the pool which issues the tokens\",\"params\":{\"_amount\":\"the minted amount\",\"_user\":\"the user address\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeAdmin(address)\":{\"params\":{\"_admin\":\"The addresses of the account to revoke permissions.\"}},\"setLockedSOV(address)\":{\"params\":{\"_lockedSOV\":\"The contract instance address of the lockedSOV vault.\"}},\"setPoolTokenUnlockedImmediatelyPercent(address,uint256)\":{\"details\":\"10000 is 100%\",\"params\":{\"_poolToken\":\"the address of pool token\",\"_poolTokenUnlockedImmediatelyPercent\":\"The % which determines how much will be unlocked immediately.\"}},\"setUnlockedImmediatelyPercent(uint256)\":{\"details\":\"10000 is 100%\",\"params\":{\"_unlockedImmediatelyPercent\":\"The % which determines how much will be unlocked immediately.\"}},\"setWrapper(address)\":{\"details\":\"can be set to zero address to remove wrapper\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"transferSOV(address,uint256)\":{\"params\":{\"_amount\":\"The amount to be transferred.\",\"_receiver\":\"The address of the SOV receiver.\"}},\"update(address,uint96,bool)\":{\"params\":{\"_allocationPoint\":\"the allocation point (weight) for the given pool\",\"_poolToken\":\"the address of pool token\",\"_updateAllFlag\":\"the flag whether we need to update all pools\"}},\"updateAllPools()\":{\"details\":\"Be careful of gas spending!\"},\"updatePool(address)\":{\"params\":{\"_poolToken\":\"the address of pool token\"}},\"updateTokens(address[],uint96[],bool)\":{\"params\":{\"_allocationPoints\":\"array of allocation points (weight) for the given pools\",\"_poolTokens\":\"array of addresses of pool tokens\",\"_updateAllFlag\":\"the flag whether we need to update all pools\"}},\"withdraw(address,uint256,address)\":{\"params\":{\"_amount\":\"the amount of pool tokens\",\"_poolToken\":\"the address of pool token\",\"_user\":\"the user address will be used to process a withdrawal (can be passed only by wrapper contract)\"}}}},\"userdoc\":{\"methods\":{\"add(address,uint96,bool)\":{\"notice\":\"adds a new lp to the pool. Can only be called by the owner or an admin\"},\"addAdmin(address)\":{\"notice\":\"Add account to ACL.\"},\"claimReward(address,address)\":{\"notice\":\"transfers reward tokens\"},\"claimRewardFromAllPools(address)\":{\"notice\":\"transfers reward tokens from all pools\"},\"deposit(address,uint256,address)\":{\"notice\":\"deposits pool tokens\"},\"emergencyWithdraw(address)\":{\"notice\":\"withdraws pool tokens without transferring reward tokens\"},\"getEstimatedReward(address,uint256,uint256)\":{\"notice\":\"returns estimated reward\"},\"getMissedBalance()\":{\"notice\":\"Get the missed SOV balance of LM contract.\"},\"getPoolId(address)\":{\"notice\":\"returns pool id\"},\"getPoolInfo(address)\":{\"notice\":\"returns pool info for the given token\"},\"getPoolInfoList()\":{\"notice\":\"returns list of pool token's info\"},\"getPoolLength()\":{\"notice\":\"returns count of pool tokens\"},\"getUserAccumulatedReward(address,address)\":{\"notice\":\"returns accumulated reward\"},\"getUserAccumulatedRewardList(address)\":{\"notice\":\"returns accumulated reward for the given user for each pool token\"},\"getUserAccumulatedRewardToBePaidLiquid(address)\":{\"notice\":\"returns the accumulated liquid reward for the given user for each pool token\"},\"getUserAccumulatedRewardToBeVested(address)\":{\"notice\":\"returns the accumulated vested reward for the given user for each pool token\"},\"getUserBalanceList(address)\":{\"notice\":\"returns list of [amount, accumulatedReward] for the given user for each pool token\"},\"getUserInfo(address,address)\":{\"notice\":\"returns UserInfo for the given pool and user\"},\"getUserInfoList(address)\":{\"notice\":\"returns list of UserInfo for the given user for each pool token\"},\"getUserPoolTokenBalance(address,address)\":{\"notice\":\"returns the pool token balance a user has on the contract\"},\"initialize(address,uint256,uint256,uint256,address,address,uint256)\":{\"notice\":\"Initialize mining.\"},\"onTokensDeposited(address,uint256)\":{\"notice\":\"if the lending pools directly mint/transfer tokens to this address, process it like a user deposit\"},\"removeAdmin(address)\":{\"notice\":\"Remove account from ACL.\"},\"setLockedSOV(address)\":{\"notice\":\"Sets lockedSOV contract.\"},\"setPoolTokenUnlockedImmediatelyPercent(address,uint256)\":{\"notice\":\"Sets unlocked immediately percent overwrite for specific pool token.\"},\"setUnlockedImmediatelyPercent(uint256)\":{\"notice\":\"Sets unlocked immediately percent.\"},\"setWrapper(address)\":{\"notice\":\"sets wrapper proxy contract\"},\"stopMining()\":{\"notice\":\"stops mining by setting end block\"},\"transferSOV(address,uint256)\":{\"notice\":\"Transfers SOV tokens to given address.  Owner use this function to withdraw SOV from LM contract  into another account.\"},\"update(address,uint96,bool)\":{\"notice\":\"updates the given pool's reward tokens allocation point\"},\"updateAllPools()\":{\"notice\":\"Updates reward variables for all pools.\"},\"updatePool(address)\":{\"notice\":\"Updates reward variables of the given pool to be up-to-date\"},\"updateTokens(address[],uint96[],bool)\":{\"notice\":\"updates the given pools' reward tokens allocation points\"},\"withdraw(address,uint256,address)\":{\"notice\":\"withdraws pool tokens and transfers reward tokens\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/mockup/LiquidityMiningMockup.sol\":\"LiquidityMiningMockup\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@ethereum-waffle/=node_modules/@ethereum-waffle/\",\":ds-test/=foundry/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=foundry/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":truffle/=node_modules/truffle/\"]},\"sources\":{\"contracts/farm/ILiquidityMining.sol\":{\"keccak256\":\"0xed5abb44e4a222ecf9d20998ad9ae2ee3715291c9ea6a30e0c74f0a0e6d08ea8\",\"urls\":[\"bzz-raw://5fef3b0642fb459b84f25e39036b3765a7cd554be1258ff678fc6204d4551fd6\",\"dweb:/ipfs/QmUcbqnmK2sWSQZDzLJfxbFepVF816S9XsYqMgk4D6DEc6\"]},\"contracts/farm/LiquidityMining.sol\":{\"keccak256\":\"0x3e5807cbe6073fb64e930616c66c0a1dabed89720f71d84a899822a51a296a88\",\"urls\":[\"bzz-raw://4be2bc822a17991fb1f3bfd5b2355b34b0daabc484491324a788135e737ab6b1\",\"dweb:/ipfs/QmQ4T4f2brXr9z9txXgnVzGAYfquTbPYTzhY9AD5R3HbHz\"]},\"contracts/farm/LiquidityMiningStorage.sol\":{\"keccak256\":\"0x2f910ff0a0e23a4d04be4b0f37a3b8a080fd2d8035cf8e5d979a52dc459d5cdd\",\"urls\":[\"bzz-raw://90b082169f76b659dd0187fb25b7c73a2b48975d761f58d1d7bb2bfe54376cdf\",\"dweb:/ipfs/QmNi87TdhQd9eMFYTctVpNg1BruPKZt5d9ibCe5uGEwYmG\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xea0bb1bf7d022130bb42a4efdfd875ef76ac5ac730a94ddd7b8c9949d4253855\",\"urls\":[\"bzz-raw://2050b03a2a1d4203698261daf2f46749bf5b72e3d23c272553e047e6bea4af40\",\"dweb:/ipfs/QmPY8bbNv3KxnyQ4Z6DtHkYu2U1Kfd7ooRDRUWNuw6v4Jt\"]},\"contracts/locked/ILockedSOV.sol\":{\"keccak256\":\"0x2ecf9d6c3704b4210b86d15a35650b34a1c44d0fb57795668fd2b2b4eab6104f\",\"urls\":[\"bzz-raw://eaaa0dffb62e76ea397dc90b6a9e5ba497950ee1e57a97e6537a5b02ee045312\",\"dweb:/ipfs/QmaihaZugWsrSQttSprvThscmPrFhUj4gxTry94TNMx386\"]},\"contracts/mockup/LiquidityMiningMockup.sol\":{\"keccak256\":\"0x67e2342d0e4c3c4566737ede072f1915065416d42a31e1a3461bacdbbceaf77d\",\"urls\":[\"bzz-raw://7f077fcf6016cc70688bf75b757c577a03ed9d805aa7cbe6ec122be4475e6a8e\",\"dweb:/ipfs/QmTJnhkRrXrvGXXEjp3D7sQcbEmQ66vHienNxCnQjdWpV2\"]},\"contracts/openzeppelin/Address.sol\":{\"keccak256\":\"0x23df48a01dbac9b25e86c9131174fb7752bbc7e741e63f1aa982de22e055ad54\",\"urls\":[\"bzz-raw://0928673cfdca6f6917432e1cff628b726b4396ed0f4b08d3281a7ebbdb2380e3\",\"dweb:/ipfs/QmY12enUUEaE7sC5PZAdqJo63JxaH2FqVJtHZxxB9HzVYE\"]},\"contracts/openzeppelin/Context.sol\":{\"keccak256\":\"0x7860cb1591dbd66bb497c60c46866d9fcdb56c73306ed86b25801000af1c7b2b\",\"urls\":[\"bzz-raw://79e480eab5cb03c034f7fb2c177f23874fddebbb3514d773729bb094a0fda826\",\"dweb:/ipfs/QmTfDHE4fnQE3gfycu7NePREWfWFgJgmaEmHDn4uyTnMBP\"]},\"contracts/openzeppelin/ERC20.sol\":{\"keccak256\":\"0x810c04a1a750deb534208b90bde6ada794d7659f2a0ab0a747efbcd04b1ce29b\",\"urls\":[\"bzz-raw://d6f374661570a3258995da1559ba58df7889d2b08107a235ece6cf24adcd2979\",\"dweb:/ipfs/QmUYhfCoTNZPPgnGzMU36qJ6EJpMicpQvoVrYdbob5T6G7\"]},\"contracts/openzeppelin/IERC20_.sol\":{\"keccak256\":\"0x913b27f370c93061abf98b13a872e12bba2fa2707bc5cd4e1e7728944209a88d\",\"urls\":[\"bzz-raw://dfb90a7a2d935e2c4ae70cc458f77e07ceaa6fc8ae6734e621ebf9c039cd962c\",\"dweb:/ipfs/QmTxp7s3uYcQkzfribiyFp6mdgeUY4T3UeWX1YZVK1kint\"]},\"contracts/openzeppelin/Ownable.sol\":{\"keccak256\":\"0x94496c375b3e82d87d7f01ce1577f008fab374312cf93012a0eca716e6aadb3a\",\"urls\":[\"bzz-raw://ea268f87bc9d256b99aae4d98f23931f485295b5720f505e0554223c9b54431a\",\"dweb:/ipfs/QmWCLqTijearegiDuWyhrkRQXXACT1sVUG6cF3L9pszb6Y\"]},\"contracts/openzeppelin/SafeERC20.sol\":{\"keccak256\":\"0xe99b4d979cb976a6b70e297600242afe38b8cd8f1b1ba6ee373f39f7abb3ca79\",\"urls\":[\"bzz-raw://961909a659615705b0fab99627d90562545225715965239e5be6e861ca059e78\",\"dweb:/ipfs/QmeNB4Tb8ReyGrLKvoe7UJWfNRLarhEc52tAZd12wpvWqK\"]},\"contracts/openzeppelin/SafeMath.sol\":{\"keccak256\":\"0xbff8d6273e1a6870d1a142c0c23acd63a4dd47760f250390f49ee56333bcb6e8\",\"urls\":[\"bzz-raw://379880c293771d9db34b4db282bd22f0536d41f1db2a7fb887124984a5bcd719\",\"dweb:/ipfs/QmUrUzEJPp9WxyvFFZSaqv7qjnSwrkApNUkMny5cCcY2a6\"]},\"contracts/utils/AdminRole.sol\":{\"keccak256\":\"0x7333f56bc6887f53b12ec51d9e6d7f2aae23063000b101e6bb7c3ae684cca51d\",\"urls\":[\"bzz-raw://c7d2462840a56bf06653f868ef64c1e1558e12f1ecf8012ec967ef046152e8ea\",\"dweb:/ipfs/QmcMrLxvVcZpu8PqtgENLXiFqEXBRuTFLBUgVEgDgXgHSo\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.5.17+commit.d19bba13"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AdminAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AdminRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "poolToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Deposit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "poolToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "accumulatedReward",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "EmergencyWithdraw",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "poolToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "allocationPoint",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolTokenAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "poolToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newAllocationPoint",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "oldAllocationPoint",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolTokenUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "poolToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SOVTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "poolToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Withdraw",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BONUS_BLOCK_MULTIPLIER",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "PRECISION",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SECONDS_PER_BLOCK",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SOV",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_poolToken",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "_allocationPoint",
              "type": "uint96"
            },
            {
              "internalType": "bool",
              "name": "_withUpdate",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "add"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_admin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addAdmin"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "admins",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bonusEndBlock",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_poolToken",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calcUnlockedImmediatelyPercent",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_poolToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimReward"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimRewardFromAllPools"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_poolToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_poolToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "emergencyWithdraw"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "endBlock",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_poolToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_duration",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEstimatedReward",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getMissedBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_from",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_to",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPassedBlocksWithBonusMultiplier",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_poolToken",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolAccumulatedReward",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_poolToken",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_poolToken",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolInfo",
          "outputs": [
            {
              "internalType": "struct LiquidityMiningStorage.PoolInfo",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "poolToken",
                  "type": "address"
                },
                {
                  "internalType": "uint96",
                  "name": "allocationPoint",
                  "type": "uint96"
                },
                {
                  "internalType": "uint256",
                  "name": "lastRewardBlock",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "accumulatedRewardPerShare",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolInfoList",
          "outputs": [
            {
              "internalType": "struct LiquidityMiningStorage.PoolInfo[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "poolToken",
                  "type": "address"
                },
                {
                  "internalType": "uint96",
                  "name": "allocationPoint",
                  "type": "uint96"
                },
                {
                  "internalType": "uint256",
                  "name": "lastRewardBlock",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "accumulatedRewardPerShare",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolLength",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_poolToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserAccumulatedReward",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserAccumulatedRewardList",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserAccumulatedRewardToBePaidLiquid",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserAccumulatedRewardToBeVested",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserBalanceList",
          "outputs": [
            {
              "internalType": "uint256[2][]",
              "name": "",
              "type": "uint256[2][]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_poolToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserInfo",
          "outputs": [
            {
              "internalType": "struct LiquidityMiningStorage.UserInfo",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rewardDebt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "accumulatedReward",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserInfoList",
          "outputs": [
            {
              "internalType": "struct LiquidityMiningStorage.UserInfo[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rewardDebt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "accumulatedReward",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_poolToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserPoolTokenBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_SOV",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_rewardTokensPerBlock",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_startDelayBlocks",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_numberOfBonusBlocks",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_wrapper",
              "type": "address"
            },
            {
              "internalType": "contract ILockedSOV",
              "name": "_lockedSOV",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_unlockedImmediatelyPercent",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isOwner",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lockedSOV",
          "outputs": [
            {
              "internalType": "contract ILockedSOV",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onTokensDeposited"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "poolInfoList",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "poolToken",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "allocationPoint",
              "type": "uint96"
            },
            {
              "internalType": "uint256",
              "name": "lastRewardBlock",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "accumulatedRewardPerShare",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "poolTokensUnlockedImmediatelyPercent",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_admin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeAdmin"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardTokensPerBlock",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ILockedSOV",
              "name": "_lockedSOV",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setLockedSOV"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_poolToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_poolTokenUnlockedImmediatelyPercent",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPoolTokenUnlockedImmediatelyPercent"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_unlockedImmediatelyPercent",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUnlockedImmediatelyPercent"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_wrapper",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setWrapper"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "startBlock",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stopMining"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalAllocationPoint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalUsersBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferSOV"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "unlockedImmediatelyPercent",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_poolToken",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "_allocationPoint",
              "type": "uint96"
            },
            {
              "internalType": "bool",
              "name": "_updateAllFlag",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "update"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAllPools"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_poolToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updatePool"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_poolTokens",
              "type": "address[]"
            },
            {
              "internalType": "uint96[]",
              "name": "_allocationPoints",
              "type": "uint96[]"
            },
            {
              "internalType": "bool",
              "name": "_updateAllFlag",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateTokens"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userInfoMap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rewardDebt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "accumulatedReward",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_poolToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "wrapper",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "methods": {
          "add(address,uint96,bool)": {
            "params": {
              "_allocationPoint": "the allocation point (weight) for the given pool",
              "_poolToken": "the address of pool token",
              "_withUpdate": "the flag whether we need to update all pools"
            }
          },
          "addAdmin(address)": {
            "params": {
              "_admin": "The addresses of the account to grant permissions."
            }
          },
          "calcUnlockedImmediatelyPercent(address)": {
            "details": "calculate the unlocked immediate percentage of specific pool token use the poolTokensUnlockedImmediatelyPercent by default, if it is not set, then use the unlockedImmediatelyPercent"
          },
          "claimReward(address,address)": {
            "params": {
              "_poolToken": "the address of pool token",
              "_user": "the address of user to claim reward from (can be passed only by wrapper contract)"
            }
          },
          "claimRewardFromAllPools(address)": {
            "params": {
              "_user": "the address of user to claim reward from (can be passed only by wrapper contract)"
            }
          },
          "deposit(address,uint256,address)": {
            "params": {
              "_amount": "the amount of pool tokens",
              "_poolToken": "the address of pool token",
              "_user": "the address of user, tokens will be deposited to it or to msg.sender"
            }
          },
          "emergencyWithdraw(address)": {
            "details": "EMERGENCY ONLY",
            "params": {
              "_poolToken": "the address of pool token"
            }
          },
          "getEstimatedReward(address,uint256,uint256)": {
            "params": {
              "_amount": "the amount of tokens to be deposited",
              "_duration": "the duration of liquidity providing in seconds",
              "_poolToken": "the address of pool token"
            }
          },
          "getMissedBalance()": {
            "return": "The amount of SOV tokens according to totalUsersBalance  in excess of actual SOV balance of the LM contract."
          },
          "getPoolId(address)": {
            "params": {
              "_poolToken": "the address of pool token"
            }
          },
          "getPoolInfo(address)": {
            "params": {
              "_poolToken": "the address of pool token"
            }
          },
          "getUserAccumulatedReward(address,address)": {
            "params": {
              "_poolToken": "the address of pool token",
              "_user": "the user address"
            }
          },
          "getUserAccumulatedRewardList(address)": {
            "params": {
              "_user": "the address of the user"
            }
          },
          "getUserAccumulatedRewardToBePaidLiquid(address)": {
            "params": {
              "_user": "the address of the user"
            }
          },
          "getUserAccumulatedRewardToBeVested(address)": {
            "params": {
              "_user": "the address of the user"
            }
          },
          "getUserBalanceList(address)": {
            "params": {
              "_user": "the address of the user"
            }
          },
          "getUserInfo(address,address)": {
            "params": {
              "_poolToken": "the address of pool token",
              "_user": "the address of the user"
            }
          },
          "getUserInfoList(address)": {
            "params": {
              "_user": "the address of the user"
            }
          },
          "getUserPoolTokenBalance(address,address)": {
            "params": {
              "_poolToken": "the address of pool token",
              "_user": "the address of the user"
            }
          },
          "initialize(address,uint256,uint256,uint256,address,address,uint256)": {
            "params": {
              "_SOV": "The SOV token.",
              "_lockedSOV": "The contract instance address of the lockedSOV vault.  SOV rewards are not paid directly to liquidity providers. Instead they  are deposited into a lockedSOV vault contract.",
              "_numberOfBonusBlocks": "The number of blocks when each block will  be calculated as N blocks (BONUS_BLOCK_MULTIPLIER).",
              "_rewardTokensPerBlock": "The number of reward tokens per block.",
              "_startDelayBlocks": "The number of blocks should be passed to start  mining.",
              "_unlockedImmediatelyPercent": "The % which determines how much will be unlocked immediately."
            }
          },
          "isOwner()": {
            "details": "Returns true if the caller is the current owner."
          },
          "onTokensDeposited(address,uint256)": {
            "details": "only callable by the pool which issues the tokens",
            "params": {
              "_amount": "the minted amount",
              "_user": "the user address"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "removeAdmin(address)": {
            "params": {
              "_admin": "The addresses of the account to revoke permissions."
            }
          },
          "setLockedSOV(address)": {
            "params": {
              "_lockedSOV": "The contract instance address of the lockedSOV vault."
            }
          },
          "setPoolTokenUnlockedImmediatelyPercent(address,uint256)": {
            "details": "10000 is 100%",
            "params": {
              "_poolToken": "the address of pool token",
              "_poolTokenUnlockedImmediatelyPercent": "The % which determines how much will be unlocked immediately."
            }
          },
          "setUnlockedImmediatelyPercent(uint256)": {
            "details": "10000 is 100%",
            "params": {
              "_unlockedImmediatelyPercent": "The % which determines how much will be unlocked immediately."
            }
          },
          "setWrapper(address)": {
            "details": "can be set to zero address to remove wrapper"
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "transferSOV(address,uint256)": {
            "params": {
              "_amount": "The amount to be transferred.",
              "_receiver": "The address of the SOV receiver."
            }
          },
          "update(address,uint96,bool)": {
            "params": {
              "_allocationPoint": "the allocation point (weight) for the given pool",
              "_poolToken": "the address of pool token",
              "_updateAllFlag": "the flag whether we need to update all pools"
            }
          },
          "updateAllPools()": {
            "details": "Be careful of gas spending!"
          },
          "updatePool(address)": {
            "params": {
              "_poolToken": "the address of pool token"
            }
          },
          "updateTokens(address[],uint96[],bool)": {
            "params": {
              "_allocationPoints": "array of allocation points (weight) for the given pools",
              "_poolTokens": "array of addresses of pool tokens",
              "_updateAllFlag": "the flag whether we need to update all pools"
            }
          },
          "withdraw(address,uint256,address)": {
            "params": {
              "_amount": "the amount of pool tokens",
              "_poolToken": "the address of pool token",
              "_user": "the user address will be used to process a withdrawal (can be passed only by wrapper contract)"
            }
          }
        }
      },
      "userdoc": {
        "methods": {
          "add(address,uint96,bool)": {
            "notice": "adds a new lp to the pool. Can only be called by the owner or an admin"
          },
          "addAdmin(address)": {
            "notice": "Add account to ACL."
          },
          "claimReward(address,address)": {
            "notice": "transfers reward tokens"
          },
          "claimRewardFromAllPools(address)": {
            "notice": "transfers reward tokens from all pools"
          },
          "deposit(address,uint256,address)": {
            "notice": "deposits pool tokens"
          },
          "emergencyWithdraw(address)": {
            "notice": "withdraws pool tokens without transferring reward tokens"
          },
          "getEstimatedReward(address,uint256,uint256)": {
            "notice": "returns estimated reward"
          },
          "getMissedBalance()": {
            "notice": "Get the missed SOV balance of LM contract."
          },
          "getPoolId(address)": {
            "notice": "returns pool id"
          },
          "getPoolInfo(address)": {
            "notice": "returns pool info for the given token"
          },
          "getPoolInfoList()": {
            "notice": "returns list of pool token's info"
          },
          "getPoolLength()": {
            "notice": "returns count of pool tokens"
          },
          "getUserAccumulatedReward(address,address)": {
            "notice": "returns accumulated reward"
          },
          "getUserAccumulatedRewardList(address)": {
            "notice": "returns accumulated reward for the given user for each pool token"
          },
          "getUserAccumulatedRewardToBePaidLiquid(address)": {
            "notice": "returns the accumulated liquid reward for the given user for each pool token"
          },
          "getUserAccumulatedRewardToBeVested(address)": {
            "notice": "returns the accumulated vested reward for the given user for each pool token"
          },
          "getUserBalanceList(address)": {
            "notice": "returns list of [amount, accumulatedReward] for the given user for each pool token"
          },
          "getUserInfo(address,address)": {
            "notice": "returns UserInfo for the given pool and user"
          },
          "getUserInfoList(address)": {
            "notice": "returns list of UserInfo for the given user for each pool token"
          },
          "getUserPoolTokenBalance(address,address)": {
            "notice": "returns the pool token balance a user has on the contract"
          },
          "initialize(address,uint256,uint256,uint256,address,address,uint256)": {
            "notice": "Initialize mining."
          },
          "onTokensDeposited(address,uint256)": {
            "notice": "if the lending pools directly mint/transfer tokens to this address, process it like a user deposit"
          },
          "removeAdmin(address)": {
            "notice": "Remove account from ACL."
          },
          "setLockedSOV(address)": {
            "notice": "Sets lockedSOV contract."
          },
          "setPoolTokenUnlockedImmediatelyPercent(address,uint256)": {
            "notice": "Sets unlocked immediately percent overwrite for specific pool token."
          },
          "setUnlockedImmediatelyPercent(uint256)": {
            "notice": "Sets unlocked immediately percent."
          },
          "setWrapper(address)": {
            "notice": "sets wrapper proxy contract"
          },
          "stopMining()": {
            "notice": "stops mining by setting end block"
          },
          "transferSOV(address,uint256)": {
            "notice": "Transfers SOV tokens to given address.  Owner use this function to withdraw SOV from LM contract  into another account."
          },
          "update(address,uint96,bool)": {
            "notice": "updates the given pool's reward tokens allocation point"
          },
          "updateAllPools()": {
            "notice": "Updates reward variables for all pools."
          },
          "updatePool(address)": {
            "notice": "Updates reward variables of the given pool to be up-to-date"
          },
          "updateTokens(address[],uint96[],bool)": {
            "notice": "updates the given pools' reward tokens allocation points"
          },
          "withdraw(address,uint256,address)": {
            "notice": "withdraws pool tokens and transfers reward tokens"
          }
        }
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@ethereum-waffle/=node_modules/@ethereum-waffle/",
        ":ds-test/=foundry/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=foundry/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":truffle/=node_modules/truffle/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "compilationTarget": {
        "contracts/mockup/LiquidityMiningMockup.sol": "LiquidityMiningMockup"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/farm/ILiquidityMining.sol": {
        "keccak256": "0xed5abb44e4a222ecf9d20998ad9ae2ee3715291c9ea6a30e0c74f0a0e6d08ea8",
        "urls": [
          "bzz-raw://5fef3b0642fb459b84f25e39036b3765a7cd554be1258ff678fc6204d4551fd6",
          "dweb:/ipfs/QmUcbqnmK2sWSQZDzLJfxbFepVF816S9XsYqMgk4D6DEc6"
        ],
        "license": null
      },
      "contracts/farm/LiquidityMining.sol": {
        "keccak256": "0x3e5807cbe6073fb64e930616c66c0a1dabed89720f71d84a899822a51a296a88",
        "urls": [
          "bzz-raw://4be2bc822a17991fb1f3bfd5b2355b34b0daabc484491324a788135e737ab6b1",
          "dweb:/ipfs/QmQ4T4f2brXr9z9txXgnVzGAYfquTbPYTzhY9AD5R3HbHz"
        ],
        "license": null
      },
      "contracts/farm/LiquidityMiningStorage.sol": {
        "keccak256": "0x2f910ff0a0e23a4d04be4b0f37a3b8a080fd2d8035cf8e5d979a52dc459d5cdd",
        "urls": [
          "bzz-raw://90b082169f76b659dd0187fb25b7c73a2b48975d761f58d1d7bb2bfe54376cdf",
          "dweb:/ipfs/QmNi87TdhQd9eMFYTctVpNg1BruPKZt5d9ibCe5uGEwYmG"
        ],
        "license": null
      },
      "contracts/interfaces/IERC20.sol": {
        "keccak256": "0xea0bb1bf7d022130bb42a4efdfd875ef76ac5ac730a94ddd7b8c9949d4253855",
        "urls": [
          "bzz-raw://2050b03a2a1d4203698261daf2f46749bf5b72e3d23c272553e047e6bea4af40",
          "dweb:/ipfs/QmPY8bbNv3KxnyQ4Z6DtHkYu2U1Kfd7ooRDRUWNuw6v4Jt"
        ],
        "license": null
      },
      "contracts/locked/ILockedSOV.sol": {
        "keccak256": "0x2ecf9d6c3704b4210b86d15a35650b34a1c44d0fb57795668fd2b2b4eab6104f",
        "urls": [
          "bzz-raw://eaaa0dffb62e76ea397dc90b6a9e5ba497950ee1e57a97e6537a5b02ee045312",
          "dweb:/ipfs/QmaihaZugWsrSQttSprvThscmPrFhUj4gxTry94TNMx386"
        ],
        "license": null
      },
      "contracts/mockup/LiquidityMiningMockup.sol": {
        "keccak256": "0x67e2342d0e4c3c4566737ede072f1915065416d42a31e1a3461bacdbbceaf77d",
        "urls": [
          "bzz-raw://7f077fcf6016cc70688bf75b757c577a03ed9d805aa7cbe6ec122be4475e6a8e",
          "dweb:/ipfs/QmTJnhkRrXrvGXXEjp3D7sQcbEmQ66vHienNxCnQjdWpV2"
        ],
        "license": null
      },
      "contracts/openzeppelin/Address.sol": {
        "keccak256": "0x23df48a01dbac9b25e86c9131174fb7752bbc7e741e63f1aa982de22e055ad54",
        "urls": [
          "bzz-raw://0928673cfdca6f6917432e1cff628b726b4396ed0f4b08d3281a7ebbdb2380e3",
          "dweb:/ipfs/QmY12enUUEaE7sC5PZAdqJo63JxaH2FqVJtHZxxB9HzVYE"
        ],
        "license": null
      },
      "contracts/openzeppelin/Context.sol": {
        "keccak256": "0x7860cb1591dbd66bb497c60c46866d9fcdb56c73306ed86b25801000af1c7b2b",
        "urls": [
          "bzz-raw://79e480eab5cb03c034f7fb2c177f23874fddebbb3514d773729bb094a0fda826",
          "dweb:/ipfs/QmTfDHE4fnQE3gfycu7NePREWfWFgJgmaEmHDn4uyTnMBP"
        ],
        "license": null
      },
      "contracts/openzeppelin/ERC20.sol": {
        "keccak256": "0x810c04a1a750deb534208b90bde6ada794d7659f2a0ab0a747efbcd04b1ce29b",
        "urls": [
          "bzz-raw://d6f374661570a3258995da1559ba58df7889d2b08107a235ece6cf24adcd2979",
          "dweb:/ipfs/QmUYhfCoTNZPPgnGzMU36qJ6EJpMicpQvoVrYdbob5T6G7"
        ],
        "license": null
      },
      "contracts/openzeppelin/IERC20_.sol": {
        "keccak256": "0x913b27f370c93061abf98b13a872e12bba2fa2707bc5cd4e1e7728944209a88d",
        "urls": [
          "bzz-raw://dfb90a7a2d935e2c4ae70cc458f77e07ceaa6fc8ae6734e621ebf9c039cd962c",
          "dweb:/ipfs/QmTxp7s3uYcQkzfribiyFp6mdgeUY4T3UeWX1YZVK1kint"
        ],
        "license": null
      },
      "contracts/openzeppelin/Ownable.sol": {
        "keccak256": "0x94496c375b3e82d87d7f01ce1577f008fab374312cf93012a0eca716e6aadb3a",
        "urls": [
          "bzz-raw://ea268f87bc9d256b99aae4d98f23931f485295b5720f505e0554223c9b54431a",
          "dweb:/ipfs/QmWCLqTijearegiDuWyhrkRQXXACT1sVUG6cF3L9pszb6Y"
        ],
        "license": null
      },
      "contracts/openzeppelin/SafeERC20.sol": {
        "keccak256": "0xe99b4d979cb976a6b70e297600242afe38b8cd8f1b1ba6ee373f39f7abb3ca79",
        "urls": [
          "bzz-raw://961909a659615705b0fab99627d90562545225715965239e5be6e861ca059e78",
          "dweb:/ipfs/QmeNB4Tb8ReyGrLKvoe7UJWfNRLarhEc52tAZd12wpvWqK"
        ],
        "license": null
      },
      "contracts/openzeppelin/SafeMath.sol": {
        "keccak256": "0xbff8d6273e1a6870d1a142c0c23acd63a4dd47760f250390f49ee56333bcb6e8",
        "urls": [
          "bzz-raw://379880c293771d9db34b4db282bd22f0536d41f1db2a7fb887124984a5bcd719",
          "dweb:/ipfs/QmUrUzEJPp9WxyvFFZSaqv7qjnSwrkApNUkMny5cCcY2a6"
        ],
        "license": null
      },
      "contracts/utils/AdminRole.sol": {
        "keccak256": "0x7333f56bc6887f53b12ec51d9e6d7f2aae23063000b101e6bb7c3ae684cca51d",
        "urls": [
          "bzz-raw://c7d2462840a56bf06653f868ef64c1e1558e12f1ecf8012ec967ef046152e8ea",
          "dweb:/ipfs/QmcMrLxvVcZpu8PqtgENLXiFqEXBRuTFLBUgVEgDgXgHSo"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/mockup/LiquidityMiningMockup.sol",
    "id": 37319,
    "exportedSymbols": {
      "LiquidityMiningMockup": [
        37318
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:616:133",
    "nodes": [
      {
        "id": 37272,
        "nodeType": "PragmaDirective",
        "src": "0:24:133",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".17"
        ]
      },
      {
        "id": 37273,
        "nodeType": "PragmaDirective",
        "src": "25:33:133",
        "nodes": [],
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ]
      },
      {
        "id": 37274,
        "nodeType": "ImportDirective",
        "src": "60:37:133",
        "nodes": [],
        "absolutePath": "contracts/farm/LiquidityMining.sol",
        "file": "../farm/LiquidityMining.sol",
        "scope": 37319,
        "sourceUnit": 9986,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 37318,
        "nodeType": "ContractDefinition",
        "src": "99:516:133",
        "nodes": [
          {
            "id": 37291,
            "nodeType": "FunctionDefinition",
            "src": "155:201:133",
            "nodes": [],
            "body": {
              "id": 37290,
              "nodeType": "Block",
              "src": "285:71:133",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 37286,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37278,
                        "src": "338:5:133",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 37287,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37280,
                        "src": "345:3:133",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 37285,
                      "name": "_getPassedBlocksWithBonusMultiplier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8510,
                      "src": "302:35:133",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 37288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "302:47:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 37284,
                  "id": 37289,
                  "nodeType": "Return",
                  "src": "295:54:133"
                }
              ]
            },
            "documentation": null,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPassedBlocksWithBonusMultiplier",
            "parameters": {
              "id": 37281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37278,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 37291,
                  "src": "199:13:133",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37277,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "199:7:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37280,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 37291,
                  "src": "214:11:133",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37279,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "214:7:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "198:28:133"
            },
            "returnParameters": {
              "id": 37284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37283,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37291,
                  "src": "272:7:133",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37282,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "272:7:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "271:9:133"
            },
            "scope": 37318,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "id": 37317,
            "nodeType": "FunctionDefinition",
            "src": "362:251:133",
            "nodes": [],
            "body": {
              "id": 37316,
              "nodeType": "Block",
              "src": "455:158:133",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    37301
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37301,
                      "name": "poolId",
                      "nodeType": "VariableDeclaration",
                      "scope": 37316,
                      "src": "465:14:133",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 37300,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "465:7:133",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 37305,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 37303,
                        "name": "_poolToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37293,
                        "src": "493:10:133",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 37302,
                      "name": "_getPoolId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9597,
                      "src": "482:10:133",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 37304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "482:22:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "465:39:133"
                },
                {
                  "assignments": [
                    37307
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37307,
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "scope": 37316,
                      "src": "514:21:133",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$10093_storage_ptr",
                        "typeString": "struct LiquidityMiningStorage.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 37306,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 10093,
                        "src": "514:8:133",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$10093_storage_ptr",
                          "typeString": "struct LiquidityMiningStorage.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 37311,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 37308,
                      "name": "poolInfoList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10106,
                      "src": "538:12:133",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$10093_storage_$dyn_storage",
                        "typeString": "struct LiquidityMiningStorage.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 37310,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 37309,
                      "name": "poolId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37301,
                      "src": "551:6:133",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "538:20:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$10093_storage",
                      "typeString": "struct LiquidityMiningStorage.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "514:44:133"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 37313,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37307,
                        "src": "601:4:133",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$10093_storage_ptr",
                          "typeString": "struct LiquidityMiningStorage.PoolInfo storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PoolInfo_$10093_storage_ptr",
                          "typeString": "struct LiquidityMiningStorage.PoolInfo storage pointer"
                        }
                      ],
                      "id": 37312,
                      "name": "_getPoolAccumulatedReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8798,
                        8866
                      ],
                      "referencedDeclaration": 8798,
                      "src": "575:25:133",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_PoolInfo_$10093_storage_ptr_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (struct LiquidityMiningStorage.PoolInfo storage pointer) view returns (uint256,uint256)"
                      }
                    },
                    "id": 37314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "575:31:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 37299,
                  "id": 37315,
                  "nodeType": "Return",
                  "src": "568:38:133"
                }
              ]
            },
            "documentation": null,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPoolAccumulatedReward",
            "parameters": {
              "id": 37294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37293,
                  "name": "_poolToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 37317,
                  "src": "396:18:133",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37292,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "396:7:133",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "395:20:133"
            },
            "returnParameters": {
              "id": 37299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37296,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37317,
                  "src": "437:7:133",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37295,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "437:7:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37298,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37317,
                  "src": "446:7:133",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37297,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "446:7:133",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "436:18:133"
            },
            "scope": 37318,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 37275,
              "name": "LiquidityMining",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9985,
              "src": "133:15:133",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LiquidityMining_$9985",
                "typeString": "contract LiquidityMining"
              }
            },
            "id": 37276,
            "nodeType": "InheritanceSpecifier",
            "src": "133:15:133"
          }
        ],
        "contractDependencies": [
          7861,
          9985,
          10131,
          54471,
          55144,
          62766
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          37318,
          9985,
          10131,
          62766,
          55144,
          54471,
          7861
        ],
        "name": "LiquidityMiningMockup",
        "scope": 37319
      }
    ]
  },
  "id": 133
}