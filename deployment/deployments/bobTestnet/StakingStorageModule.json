{
  "address": "0x9A8073A350De5c2159fA49629d91A1C14657d628",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DELEGATION_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DOMAIN_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MAX_DURATION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MAX_VOTING_WEIGHT",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "SOVToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "WEIGHT_FACTOR",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "admins",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "allUnlocked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "name": "delegateStakingCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "fromBlock",
          "type": "uint32"
        },
        {
          "internalType": "uint96",
          "name": "stake",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "delegates",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "feeSharing",
      "outputs": [
        {
          "internalType": "contract IFeeSharingCollector",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "frozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getFunctionsList",
      "outputs": [
        {
          "internalType": "bytes4[]",
          "name": "",
          "type": "bytes4[]"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getMaxVestingWithdrawIterations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStorageDefaulWeightScaling",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStorageDefaultWeightScaling",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStorageDelegationTypehash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStorageDomainTypehash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStorageMaxDurationToStakeTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStorageMaxVotingWeight",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStorageName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStorageRangeForWeightScaling",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "minWeightScaling",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxWeightScaling",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStorageWeightFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "kickoffTS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "newStakingContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "numDelegateStakingCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "numTotalStakingCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "numUserStakingCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "numVestingCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pausers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "name": "totalStakingCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "fromBlock",
          "type": "uint32"
        },
        {
          "internalType": "uint96",
          "name": "stake",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "name": "userStakingCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "fromBlock",
          "type": "uint32"
        },
        {
          "internalType": "uint96",
          "name": "stake",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "name": "vestingCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "fromBlock",
          "type": "uint32"
        },
        {
          "internalType": "uint96",
          "name": "stake",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "vestingCodeHashes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "vestingRegistryLogic",
      "outputs": [
        {
          "internalType": "contract IVestingRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "vestingWhitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weightScaling",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x9277e0ee92468e8c303035b1f3c02020f8ba2b56866dd142f9a80787dc80b829",
  "receipt": {
    "to": null,
    "from": "0xCF311E7375083b9513566a47B9f3e93F1FcdCfBF",
    "contractAddress": "0x9A8073A350De5c2159fA49629d91A1C14657d628",
    "transactionIndex": 1,
    "gasUsed": "1281540",
    "logsBloom": "0x
    "blockHash": "0x3260b8f75fe59dc9b477261d900e3164163acb94ba1578375eeba161c59c1890",
    "transactionHash": "0x9277e0ee92468e8c303035b1f3c02020f8ba2b56866dd142f9a80787dc80b829",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 6444029,
        "transactionHash": "0x9277e0ee92468e8c303035b1f3c02020f8ba2b56866dd142f9a80787dc80b829",
        "address": "0x9A8073A350De5c2159fA49629d91A1C14657d628",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000cf311e7375083b9513566a47b9f3e93f1fcdcfbf"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x3260b8f75fe59dc9b477261d900e3164163acb94ba1578375eeba161c59c1890"
      }
    ],
    "blockNumber": 6444029,
    "cumulativeGasUsed": "1325391",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "2c93ebf59c8148f10476453f6cdb8bb8",
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DELEGATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_VOTING_WEIGHT\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SOVToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"WEIGHT_FACTOR\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allUnlocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"delegateStakingCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeSharing\",\"outputs\":[{\"internalType\":\"contract IFeeSharingCollector\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"frozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getFunctionsList\",\"outputs\":[{\"internalType\":\"bytes4[]\",\"name\":\"\",\"type\":\"bytes4[]\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMaxVestingWithdrawIterations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStorageDefaulWeightScaling\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStorageDefaultWeightScaling\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStorageDelegationTypehash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStorageDomainTypehash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStorageMaxDurationToStakeTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStorageMaxVotingWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStorageName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStorageRangeForWeightScaling\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minWeightScaling\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWeightScaling\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStorageWeightFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kickoffTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newStakingContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"numDelegateStakingCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"numTotalStakingCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"numUserStakingCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"numVestingCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pausers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"totalStakingCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"userStakingCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"vestingCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"vestingCodeHashes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"vestingRegistryLogic\",\"outputs\":[{\"internalType\":\"contract IVestingRegistry\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vestingWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weightScaling\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"getMaxVestingWithdrawIterations()\":{\"return\":\"max iteration value.\"},\"getStorageMaxDurationToStakeTokens()\":{\"return\":\"MAX_DURATION to stake tokens\"},\"getStorageWeightFactor()\":{\"details\":\"MAX_VOTING_WEIGHT * WEIGHT_FACTOR needs to be < 792, because there are 100,000,000 SOV with 18 decimals\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Staking Storage Module\"},\"userdoc\":{\"methods\":{\"getMaxVestingWithdrawIterations()\":{\"notice\":\"Max iteration for direct withdrawal from staking to prevent out of gas issue.\"},\"getStorageDefaulWeightScaling()\":{\"notice\":\"Default weight scaling.\"},\"getStorageDelegationTypehash()\":{\"notice\":\"The EIP-712 typehash for the delegation struct used by the contract.\"},\"getStorageDomainTypehash()\":{\"notice\":\"The EIP-712 typehash for the contract's domain.\"},\"getStorageMaxDurationToStakeTokens()\":{\"notice\":\"The maximum duration to stake tokens\"},\"getStorageMaxVotingWeight()\":{\"notice\":\"The maximum possible voting weight before adding +1 (actually 10, but need 9 for computation).\"},\"getStorageWeightFactor()\":{\"notice\":\"weight is multiplied with this factor (for allowing decimals, like 1.2x).\"}},\"notice\":\"Provides getters for public storage variables*\"}},\"settings\":{\"compilationTarget\":{\"contracts/governance/Staking/modules/StakingStorageModule.sol\":\"StakingStorageModule\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/governance/IFeeSharingCollector.sol\":{\"content\":\"pragma solidity ^0.5.17;\\n\\n/**\\n * @title Interface for contract governance/FeeSharingCollector/FeeSharingCollector.sol\\n * @dev Interfaces are used to cast a contract address into a callable instance.\\n * */\\ninterface IFeeSharingCollector {\\n    function withdrawFees(address[] calldata _token) external;\\n\\n    function transferTokens(address _token, uint96 _amount) external;\\n\\n    function withdraw(address _loanPoolToken, uint32 _maxCheckpoints, address _receiver) external;\\n}\\n\",\"keccak256\":\"0x5ba403de9fd9062070463e8c48eeee480eb16919cac3a15f3e27167c0474697f\"},\"contracts/governance/Staking/modules/StakingStorageModule.sol\":{\"content\":\"pragma solidity ^0.5.17;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"../../../proxy/modules/interfaces/IFunctionsList.sol\\\";\\nimport \\\"./shared/StakingStorageShared.sol\\\";\\n\\n/**\\n * @title Staking Storage Module\\n * @notice Provides getters for public storage variables\\n **/\\ncontract StakingStorageModule is IFunctionsList, StakingStorageShared {\\n    function getStorageDefaultWeightScaling() external pure returns (uint256) {\\n        return uint256(DEFAULT_WEIGHT_SCALING);\\n    }\\n\\n    /// @notice The maximum duration to stake tokens\\n    /// @return MAX_DURATION to stake tokens\\n    function getStorageMaxDurationToStakeTokens() external pure returns (uint256) {\\n        return MAX_DURATION;\\n    }\\n\\n    /// @notice The maximum possible voting weight before adding +1 (actually 10, but need 9 for computation).\\n    function getStorageMaxVotingWeight() external pure returns (uint256) {\\n        return uint256(MAX_VOTING_WEIGHT);\\n    }\\n\\n    /// @notice weight is multiplied with this factor (for allowing decimals, like 1.2x).\\n    /// @dev MAX_VOTING_WEIGHT * WEIGHT_FACTOR needs to be < 792, because there are 100,000,000 SOV with 18 decimals\\n    function getStorageWeightFactor() external pure returns (uint256) {\\n        return uint256(WEIGHT_FACTOR);\\n    }\\n\\n    /// @notice Default weight scaling.\\n    function getStorageDefaulWeightScaling() external pure returns (uint256) {\\n        return uint256(DEFAULT_WEIGHT_SCALING);\\n    }\\n\\n    function getStorageRangeForWeightScaling()\\n        external\\n        pure\\n        returns (uint256 minWeightScaling, uint256 maxWeightScaling)\\n    {\\n        return (uint256(MIN_WEIGHT_SCALING), uint256(MAX_WEIGHT_SCALING));\\n    }\\n\\n    /// @notice The EIP-712 typehash for the contract's domain.\\n    function getStorageDomainTypehash() external pure returns (uint256) {\\n        return uint256(DOMAIN_TYPEHASH);\\n    }\\n\\n    /// @notice The EIP-712 typehash for the delegation struct used by the contract.\\n    function getStorageDelegationTypehash() external pure returns (uint256) {\\n        return uint256(DELEGATION_TYPEHASH);\\n    }\\n\\n    function getStorageName() external view returns (string memory) {\\n        return name;\\n    }\\n\\n    /**\\n     * @notice Max iteration for direct withdrawal from staking to prevent out of gas issue.\\n     *\\n     * @return max iteration value.\\n     */\\n    function getMaxVestingWithdrawIterations() public view returns (uint256) {\\n        return maxVestingWithdrawIterations;\\n    }\\n\\n    function getFunctionsList() external pure returns (bytes4[] memory) {\\n        bytes4[] memory functionsList = new bytes4[](32);\\n        functionsList[0] = this.getStorageMaxDurationToStakeTokens.selector;\\n        functionsList[1] = this.getStorageMaxVotingWeight.selector;\\n        functionsList[2] = this.getStorageWeightFactor.selector;\\n        functionsList[3] = this.getStorageDefaulWeightScaling.selector;\\n        functionsList[4] = this.getStorageRangeForWeightScaling.selector;\\n        functionsList[5] = this.getStorageDomainTypehash.selector;\\n        functionsList[6] = this.getStorageDelegationTypehash.selector;\\n        functionsList[7] = this.getStorageName.selector;\\n        functionsList[8] = this.kickoffTS.selector;\\n        functionsList[9] = this.SOVToken.selector;\\n        functionsList[10] = this.delegates.selector;\\n        functionsList[11] = this.allUnlocked.selector;\\n        functionsList[12] = this.newStakingContract.selector;\\n        functionsList[13] = this.totalStakingCheckpoints.selector;\\n        functionsList[14] = this.numTotalStakingCheckpoints.selector;\\n        functionsList[15] = this.delegateStakingCheckpoints.selector;\\n        functionsList[16] = this.numDelegateStakingCheckpoints.selector;\\n        functionsList[17] = this.userStakingCheckpoints.selector;\\n        functionsList[18] = this.numUserStakingCheckpoints.selector;\\n        functionsList[19] = this.nonces.selector;\\n        functionsList[20] = this.feeSharing.selector;\\n        functionsList[21] = this.weightScaling.selector;\\n        functionsList[22] = this.vestingWhitelist.selector;\\n        functionsList[23] = this.admins.selector;\\n        functionsList[24] = this.vestingCodeHashes.selector;\\n        functionsList[25] = this.vestingCheckpoints.selector;\\n        functionsList[26] = this.numVestingCheckpoints.selector;\\n        functionsList[27] = this.vestingRegistryLogic.selector;\\n        functionsList[28] = this.pausers.selector;\\n        functionsList[29] = this.paused.selector;\\n        functionsList[30] = this.frozen.selector;\\n        functionsList[31] = this.getMaxVestingWithdrawIterations.selector;\\n\\n        return functionsList;\\n    }\\n}\\n\",\"keccak256\":\"0x12f1213aa45def0fdb5ca50ff5b7f791ed986897c830076641aeaf190a46c9de\"},\"contracts/governance/Staking/modules/shared/StakingStorageShared.sol\":{\"content\":\"pragma solidity ^0.5.17;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"../../../../openzeppelin/Ownable.sol\\\";\\nimport \\\"../../../../interfaces/IERC20.sol\\\";\\nimport \\\"../../../IFeeSharingCollector.sol\\\";\\nimport \\\"../../../Vesting/IVestingRegistry.sol\\\";\\n\\n/**\\n * @title StakingStorageShared contract is inherited by Staking modules.\\n * @notice Just the storage part of stacking contract, no functions,\\n * only constant, variables and required structures (mappings).\\n * Used by StackingProxy and Checkpoints contracts.\\n *\\n * What is SOV staking?\\n * The purpose of the SOV token is to provide a pseudonymous,\\n * censorship-resistant mechanism for governing the parameters of the Sovryn\\n * protocol, while aligning the incentives of protocol governors with the\\n * long-term success of the protocol. Any SOV token holder can choose to\\n * stake (lock up) their tokens for a fixed period of time in return for\\n * voting rights in the Bitocracy. Stakers are further incentivised through\\n * fee and slashing rewards.\\n * */\\ncontract StakingStorageShared is Ownable {\\n    /// @notice 2 weeks in seconds.\\n    uint256 constant TWO_WEEKS = 1209600;\\n\\n    /// @notice The maximum possible voting weight before adding +1 (actually 10, but need 9 for computation).\\n    uint96 public constant MAX_VOTING_WEIGHT = 9;\\n\\n    /// @notice weight is multiplied with this factor (for allowing decimals, like 1.2x).\\n    /// @dev MAX_VOTING_WEIGHT * WEIGHT_FACTOR needs to be < 792, because there are 100,000,000 SOV with 18 decimals\\n    uint96 public constant WEIGHT_FACTOR = 10;\\n\\n    /// @notice The maximum duration to stake tokens for.\\n    uint256 public constant MAX_DURATION = 1092 days;\\n\\n    /// @notice The maximum duration ^2\\n    uint96 constant MAX_DURATION_POW_2 = 1092 * 1092;\\n\\n    /// @notice Default weight scaling.\\n    uint96 constant DEFAULT_WEIGHT_SCALING = 3;\\n\\n    /// @notice Range for weight scaling.\\n    uint96 constant MIN_WEIGHT_SCALING = 1;\\n    uint96 constant MAX_WEIGHT_SCALING = 9;\\n\\n    /// @notice The timestamp of contract creation. Base for the staking period calculation.\\n    uint256 public kickoffTS;\\n\\n    string name = \\\"SOVStaking\\\";\\n\\n    /// @notice The token to be staked.\\n    IERC20 public SOVToken;\\n\\n    /// @notice A record of each accounts delegate.\\n    mapping(address => mapping(uint256 => address)) public delegates;\\n\\n    /// @notice If this flag is set to true, all tokens are unlocked immediately.\\n    bool public allUnlocked = false;\\n\\n    /// @notice The EIP-712 typehash for the contract's domain.\\n    bytes32 public constant DOMAIN_TYPEHASH =\\n        keccak256(\\\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\\\");\\n\\n    /// @notice The EIP-712 typehash for the delegation struct used by the contract.\\n    bytes32 public constant DELEGATION_TYPEHASH =\\n        keccak256(\\\"Delegation(address delegatee,uint256 lockDate,uint256 nonce,uint256 expiry)\\\");\\n\\n    /// @notice Used for stake migrations to a new staking contract with a different storage structure.\\n    address public newStakingContract;\\n\\n    /*************************** Checkpoints *******************************/\\n\\n    /// @notice A checkpoint for marking the stakes from a given block\\n    struct Checkpoint {\\n        uint32 fromBlock;\\n        uint96 stake;\\n    }\\n\\n    /// @notice A record of tokens to be unstaked at a given time in total.\\n    /// For total voting power computation. Voting weights get adjusted bi-weekly.\\n    /// @dev totalStakingCheckpoints[date][index] is a checkpoint.\\n    mapping(uint256 => mapping(uint32 => Checkpoint)) public totalStakingCheckpoints;\\n\\n    /// @notice The number of total staking checkpoints for each date.\\n    /// @dev numTotalStakingCheckpoints[date] is a number.\\n    mapping(uint256 => uint32) public numTotalStakingCheckpoints;\\n\\n    /// @notice A record of tokens to be unstaked at a given time which were delegated to a certain address.\\n    /// For delegatee voting power computation. Voting weights get adjusted bi-weekly.\\n    /// @dev delegateStakingCheckpoints[delegatee][date][index] is a checkpoint.\\n    mapping(address => mapping(uint256 => mapping(uint32 => Checkpoint)))\\n        public delegateStakingCheckpoints;\\n\\n    /// @notice The number of total staking checkpoints for each date per delegate.\\n    /// @dev numDelegateStakingCheckpoints[delegatee][date] is a number.\\n    mapping(address => mapping(uint256 => uint32)) public numDelegateStakingCheckpoints;\\n\\n    /// @notice A record of tokens to be unstaked at a given time which per user address (address -> lockDate -> stake checkpoint)\\n    /// @dev userStakingCheckpoints[user][date][index] is a checkpoint.\\n    mapping(address => mapping(uint256 => mapping(uint32 => Checkpoint)))\\n        public userStakingCheckpoints;\\n\\n    /// @notice The number of total staking checkpoints for each date per user.\\n    /// @dev numUserStakingCheckpoints[user][date] is a number.\\n    mapping(address => mapping(uint256 => uint32)) public numUserStakingCheckpoints;\\n\\n    /// @notice A record of states for signing / validating signatures\\n    /// @dev nonces[user] is a number.\\n    mapping(address => uint256) public nonces;\\n\\n    /*************************** Slashing *******************************/\\n\\n    /// @notice the address of FeeSharingCollectorProxy contract, we need it for unstaking with slashing.\\n    IFeeSharingCollector public feeSharing;\\n\\n    /// @notice used for weight scaling when unstaking with slashing.\\n    uint96 public weightScaling = DEFAULT_WEIGHT_SCALING;\\n\\n    /// @notice List of vesting contracts, tokens for these contracts won't be slashed if unstaked by governance.\\n    /// @dev vestingWhitelist[contract] is true/false.\\n    mapping(address => bool) public vestingWhitelist;\\n\\n    /// @dev user => flag whether user has admin role.\\n    /// @dev multisig should be an admin, admin can invoke only governanceWithdrawVesting function,\\n    /// \\tthis function works only with Team Vesting contracts\\n    mapping(address => bool) public admins;\\n\\n    /// @dev vesting contract code hash => flag whether it's registered code hash\\n    mapping(bytes32 => bool) public vestingCodeHashes;\\n\\n    /// @notice A record of tokens to be unstaked from vesting contract at a given time (lockDate -> vest checkpoint)\\n    /// @dev vestingCheckpoints[date][index] is a checkpoint.\\n    mapping(uint256 => mapping(uint32 => Checkpoint)) public vestingCheckpoints;\\n\\n    /// @notice The number of total vesting checkpoints for each date.\\n    /// @dev numVestingCheckpoints[date] is a number.\\n    mapping(uint256 => uint32) public numVestingCheckpoints;\\n\\n    ///@notice vesting registry contract\\n    IVestingRegistry public vestingRegistryLogic;\\n\\n    /// @dev user => flag whether user has pauser role.\\n    mapping(address => bool) public pausers;\\n\\n    /// @dev Staking contract is paused\\n    bool public paused;\\n\\n    /// @dev Staking contract is frozen\\n    bool public frozen;\\n\\n    /// @dev max iterations that can be supported in 1 tx for the withdrawal\\n    uint256 internal maxVestingWithdrawIterations;\\n\\n    constructor() internal {\\n        //abstract\\n    }\\n}\\n\",\"keccak256\":\"0xf83eb462825c77f9c0629d15a52c8248cd1e9ce1e947c6ea93102d952790dca4\"},\"contracts/governance/Vesting/IVestingRegistry.sol\":{\"content\":\"pragma solidity ^0.5.17;\\n\\n/**\\n * @title Interface for upgradable Vesting Registry contract.\\n * @dev Interfaces are used to cast a contract address into a callable instance.\\n */\\ninterface IVestingRegistry {\\n    function getVesting(address _tokenOwner) external view returns (address);\\n\\n    function getTeamVesting(address _tokenOwner) external view returns (address);\\n\\n    function setVestingRegistry(address _vestingRegistryProxy) external;\\n\\n    function isVestingAddress(address _vestingAddress) external view returns (bool);\\n\\n    function isTeamVesting(address _vestingAddress) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x08bf5badf1813b59f8b06d3bb9280f4b35d3d07947c728dad79e43fcc1d4130e\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"/**\\n * Copyright 2017-2021, bZeroX, LLC. All Rights Reserved.\\n * Licensed under the Apache License, Version 2.0.\\n */\\n\\npragma solidity >=0.5.0 <0.6.0;\\n\\ncontract IERC20 {\\n    string public name;\\n    uint8 public decimals;\\n    string public symbol;\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address _who) external view returns (uint256);\\n\\n    function allowance(address _owner, address _spender) external view returns (uint256);\\n\\n    function approve(address _spender, uint256 _value) external returns (bool);\\n\\n    function transfer(address _to, uint256 _value) external returns (bool);\\n\\n    function transferFrom(address _from, address _to, uint256 _value) external returns (bool);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xac035e47e8a8f7e694cc6a90790bbfcaa8ae90d072d30832fc851ab6f1b19145\"},\"contracts/openzeppelin/Context.sol\":{\"content\":\"pragma solidity >=0.5.0 <0.6.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\ncontract Context {\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\n    // an instance of this contract, which should be used via inheritance.\\n    constructor() internal {}\\n\\n    // solhint-disable-previous-line no-empty-blocks\\n\\n    function _msgSender() internal view returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x7860cb1591dbd66bb497c60c46866d9fcdb56c73306ed86b25801000af1c7b2b\"},\"contracts/openzeppelin/Ownable.sol\":{\"content\":\"pragma solidity >=0.5.0 <0.6.0;\\n\\nimport \\\"./Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() internal {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(isOwner(), \\\"unauthorized\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the caller is the current owner.\\n     */\\n    function isOwner() public view returns (bool) {\\n        return _msgSender() == _owner;\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     */\\n    function _transferOwnership(address newOwner) internal {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x94496c375b3e82d87d7f01ce1577f008fab374312cf93012a0eca716e6aadb3a\"},\"contracts/proxy/modules/interfaces/IFunctionsList.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.5.17;\\n\\ninterface IFunctionsList {\\n    function getFunctionsList() external pure returns (bytes4[] memory functionSignatures);\\n}\\n\",\"keccak256\":\"0x38fb0166042329bc9ffcab69742f215efd135cdcf2d48b2202cb7f1546709101\"}},\"version\":1}",
  "bytecode": "0x60c0604052600a608081905269534f565374616b696e6760b01b60a09081526200002d9160029190620000ae565b506005805460ff19169055600d80546001600160a01b0316600360a01b179055600062000059620000a9565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35062000150565b335b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620000f157805160ff191683800117855562000121565b8280016001018555821562000121579182015b828111156200012157825182559160200191906001019062000104565b506200012f92915062000133565b5090565b620000ab91905b808211156200012f57600081556001016200013a565b6114d780620001606000396000f3fe608060405234801561001057600080fd5b506004361061025d5760003560e01c80639436e7d411610146578063bf626ec1116100c3578063dfb267c211610087578063dfb267c214610493578063e7a324dc146104a6578063ec8e0b29146104ae578063f2fde38b146104b6578063f3f19731146104cb578063f93fc2af146103895761025d565b8063bf626ec114610453578063d27569e71461045b578063d8ad326d14610463578063d8fc90e814610478578063db27ec18146104805761025d565b8063a9d3ad1c1161010a578063a9d3ad1c14610415578063adae90021461041d578063ae81dfe414610430578063b1724b4614610438578063bb533cf2146104405761025d565b80639436e7d4146103ca57806394c2ce58146103ea5780639929e886146103fd5780639e5ff1eb14610405578063a58848c51461040d5761025d565b8063332647b6116101df5780637ecebe00116101a35780637ecebe0014610376578063805c49f31461038957806380f51c12146103915780638cdf855f146103a45780638da5cb5b146103ba5780638f32d59b146103c25761025d565b8063332647b61461031f578063429b62e5146103275780635c975abb1461033a57806368cefccc146103425780636b6fde0e146103635761025d565b8063104932cf11610226578063104932cf146102c557806317748adc146102cd5780631ca6cbeb146102e257806320606b70146102f757806327dd1b00146102ff5761025d565b8062073f991461026257806303a18fa314610280578063048c958814610295578063054f7d9c1461029d57806307392cc0146102b2575b600080fd5b61026a6104de565b6040516102779190611331565b60405180910390f35b6102886104e4565b604051610277919061133f565b61026a6104f3565b6102a56104f8565b6040516102779190611323565b6102a56102c0366004611061565b610506565b61028861051b565b6102d561052a565b60405161027791906113c2565b6102ea61052f565b604051610277919061134d565b61026a6105c2565b61031261030d366004610fda565b6105d9565b60405161027791906112fd565b61026a6105ff565b6102a5610335366004610fb4565b61061b565b6102a5610630565b610355610350366004611014565b610639565b6040516102779291906113a7565b610355610371366004611014565b610675565b61026a610384366004610fb4565b6106b1565b61026a6106c3565b6102a561039f366004610fb4565b6106c8565b6103ac6106dd565b60405161027792919061137e565b6103126106e5565b6102a56106f4565b6103dd6103d8366004611061565b610718565b6040516102779190611399565b6103dd6103f8366004610fda565b610730565b6102a5610753565b61026a61075c565b610288610764565b61026a610773565b6102a561042b366004610fb4565b610781565b610312610796565b61026a6107aa565b6103dd61044e366004611061565b6107b2565b6102d56107ca565b6102d56107e0565b61046b6107e5565b604051610277919061130b565b61026a610e29565b6103dd61048e366004610fda565b610e2e565b6103556104a136600461107f565b610e51565b61026a610e87565b61026a610e93565b6104c96104c4366004610fb4565b610e99565b005b6103556104d936600461107f565b610ed2565b60015481565b600d546001600160a01b031681565b600a90565b601554610100900460ff1681565b60106020526000908152604090205460ff1681565b6013546001600160a01b031681565b600981565b60028054604080516020601f60001961010060018716150201909416859004938401819004810282018101909252828152606093909290918301828280156105b85780601f1061058d576101008083540402835291602001916105b8565b820191906000526020600020905b81548152906001019060200180831161059b57829003601f168201915b5050505050905090565b6040516105ce906112e7565b604051809103902081565b60046020908152600092835260408084209091529082529020546001600160a01b031681565b600060405161060d906112f2565b604051908190039020905090565b600f6020526000908152604090205460ff1681565b60155460ff1681565b600a60209081526000938452604080852082529284528284209052825290205463ffffffff81169064010000000090046001600160601b031682565b600860209081526000938452604080852082529284528284209052825290205463ffffffff81169064010000000090046001600160601b031682565b600c6020526000908152604090205481565b600390565b60146020526000908152604090205460ff1681565b600160099091565b6000546001600160a01b031690565b600080546001600160a01b0316610709610f08565b6001600160a01b031614905090565b60076020526000908152604090205463ffffffff1681565b600960209081526000928352604080842090915290825290205463ffffffff1681565b60055460ff1681565b63059fa60090565b6003546001600160a01b031681565b600060405161060d906112e7565b600e6020526000908152604090205460ff1681565b60055461010090046001600160a01b031681565b63059fa60081565b60126020526000908152604090205463ffffffff1681565b600d54600160a01b90046001600160601b031681565b600a81565b604080516020808252610420820190925260609182919080820161040080388339019050509050639e5ff1eb60e01b8160008151811061082157fe5b6001600160e01b0319909216602092830291909101909101528051631b1f921d60e31b908290600190811061085257fe5b6001600160e01b0319909216602092830291909101909101528051629192b160e31b908290600290811061088257fe5b6001600160e01b031990921660209283029190910190910152805163f93fc2af60e01b90829060039081106108b357fe5b6001600160e01b0319909216602092830291909101909101528051638cdf855f60e01b90829060049081106108e457fe5b6001600160e01b0319909216602092830291909101909101528051632a74eb4760e21b908290600590811061091557fe5b6001600160e01b031990921660209283029190910190910152805163199323db60e11b908290600690811061094657fe5b6001600160e01b0319909216602092830291909101909101528051631ca6cbeb60e01b908290600790811061097757fe5b6001600160e01b031990921660209283029190910190910152805162073f9960e01b90829060089081106109a757fe5b6001600160e01b031990921660209283029190910190910152805163a58848c560e01b90829060099081106109d857fe5b6001600160e01b03199092166020928302919091019091015280516227dd1b60e81b908290600a908110610a0857fe5b6001600160e01b0319909216602092830291909101909101528051634c94f44360e11b908290600b908110610a3957fe5b6001600160e01b0319909216602092830291909101909101528051632ba077f960e21b908290600c908110610a6a57fe5b6001600160e01b0319909216602092830291909101909101528051636fd933e160e11b908290600d908110610a9b57fe5b6001600160e01b031990921660209283029190910190910152805163250db9f560e21b908290600e908110610acc57fe5b6001600160e01b03199092166020928302919091019091015280516335b7ef0760e11b908290600f908110610afd57fe5b6001600160e01b031990921660209283029190910190910152805163129859cb60e31b9082906010908110610b2e57fe5b6001600160e01b0319909216602092830291909101909101528051631a33bf3360e21b9082906011908110610b5f57fe5b6001600160e01b0319909216602092830291909101909101528051631b64fd8360e31b9082906012908110610b9057fe5b6001600160e01b0319909216602092830291909101909101528051623f675f60e91b9082906013908110610bc057fe5b6001600160e01b03199092166020928302919091019091015280516303a18fa360e01b9082906014908110610bf157fe5b6001600160e01b031990921660209283029190910190910152805163bf626ec160e01b9082906015908110610c2257fe5b6001600160e01b03199092166020928302919091019091015280516356d7480160e11b9082906016908110610c5357fe5b6001600160e01b031990921660209283029190910190910152805163429b62e560e01b9082906017908110610c8457fe5b6001600160e01b0319909216602092830291909101909101528051621ce4b360e61b9082906018908110610cb457fe5b6001600160e01b031990921660209283029190910190910152805163f3f1973160e01b9082906019908110610ce557fe5b6001600160e01b0319909216602092830291909101909101528051635da99e7960e11b908290601a908110610d1657fe5b6001600160e01b031990921660209283029190910190910152805163104932cf60e01b908290601b908110610d4757fe5b6001600160e01b031990921660209283029190910190910152805163407a8e0960e11b908290601c908110610d7857fe5b6001600160e01b0319909216602092830291909101909101528051635c975abb60e01b908290601d908110610da957fe5b6001600160e01b0319909216602092830291909101909101528051630153df6760e21b908290601e908110610dda57fe5b6001600160e01b031990921660209283029190910190910152805163ec8e0b2960e01b908290601f908110610e0b57fe5b6001600160e01b031990921660209283029190910190910152905090565b600990565b600b60209081526000928352604080842090915290825290205463ffffffff1681565b600660209081526000928352604080842090915290825290205463ffffffff81169064010000000090046001600160601b031682565b6040516105ce906112f2565b60165490565b610ea16106f4565b610ec65760405162461bcd60e51b8152600401610ebd9061136e565b60405180910390fd5b610ecf81610f0c565b50565b601160209081526000928352604080842090915290825290205463ffffffff81169064010000000090046001600160601b031682565b3390565b6001600160a01b038116610f325760405162461bcd60e51b8152600401610ebd9061135e565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b8035610f988161146e565b92915050565b8035610f9881611482565b8035610f988161148b565b600060208284031215610fc657600080fd5b6000610fd28484610f8d565b949350505050565b60008060408385031215610fed57600080fd5b6000610ff98585610f8d565b925050602061100a85828601610f9e565b9150509250929050565b60008060006060848603121561102957600080fd5b60006110358686610f8d565b935050602061104686828701610f9e565b925050604061105786828701610fa9565b9150509250925092565b60006020828403121561107357600080fd5b6000610fd28484610f9e565b6000806040838503121561109257600080fd5b600061109e8585610f9e565b925050602061100a85828601610fa9565b60006110bb838361113d565b505060200190565b6110cc816113e8565b82525050565b60006110dd826113d6565b6110e781856113da565b93506110f2836113d0565b8060005b8381101561112057815161110a88826110af565b9750611115836113d0565b9250506001016110f6565b509495945050505050565b6110cc816113f3565b6110cc816113f8565b6110cc816113fb565b6110cc81611429565b600061115a826113d6565b61116481856113da565b9350611174818560208601611434565b61117d81611464565b9093019392505050565b60006111946026836113da565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015260400192915050565b60006111dc6043836113e3565b7f454950373132446f6d61696e28737472696e67206e616d652c75696e7432353681527f20636861696e49642c6164647265737320766572696679696e67436f6e74726160208201526263742960e81b604082015260430192915050565b6000611247600c836113da565b6b1d5b985d5d1a1bdc9a5e995960a21b815260200192915050565b600061126f604b836113e3565b7f44656c65676174696f6e28616464726573732064656c6567617465652c75696e81527f74323536206c6f636b446174652c75696e74323536206e6f6e63652c75696e7460208201526a323536206578706972792960a81b6040820152604b0192915050565b6110cc81611414565b6110cc8161141d565b6000610f98826111cf565b6000610f9882611262565b60208101610f9882846110c3565b6020808252810161131c81846110d2565b9392505050565b60208101610f98828461112b565b60208101610f988284611134565b60208101610f988284611146565b6020808252810161131c818461114f565b60208082528101610f9881611187565b60208082528101610f988161123a565b6040810161138c8285611134565b61131c6020830184611134565b60208101610f9882846112d5565b604081016113b582856112d5565b61131c60208301846112de565b60208101610f9882846112de565b60200190565b5190565b90815260200190565b919050565b6000610f9882611408565b151590565b90565b6001600160e01b03191690565b6001600160a01b031690565b63ffffffff1690565b6001600160601b031690565b6000610f98826113e8565b60005b8381101561144f578181015183820152602001611437565b8381111561145e576000848401525b50505050565b601f01601f191690565b611477816113e8565b8114610ecf57600080fd5b611477816113f8565b6114778161141456fea365627a7a7231582002802e4bb217dfc80b09b1f5a2fea4faeda7bb3553312a3e9a8f082ebf5ac82f6c6578706572696d656e74616cf564736f6c63430005110040",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061025d5760003560e01c80639436e7d411610146578063bf626ec1116100c3578063dfb267c211610087578063dfb267c214610493578063e7a324dc146104a6578063ec8e0b29146104ae578063f2fde38b146104b6578063f3f19731146104cb578063f93fc2af146103895761025d565b8063bf626ec114610453578063d27569e71461045b578063d8ad326d14610463578063d8fc90e814610478578063db27ec18146104805761025d565b8063a9d3ad1c1161010a578063a9d3ad1c14610415578063adae90021461041d578063ae81dfe414610430578063b1724b4614610438578063bb533cf2146104405761025d565b80639436e7d4146103ca57806394c2ce58146103ea5780639929e886146103fd5780639e5ff1eb14610405578063a58848c51461040d5761025d565b8063332647b6116101df5780637ecebe00116101a35780637ecebe0014610376578063805c49f31461038957806380f51c12146103915780638cdf855f146103a45780638da5cb5b146103ba5780638f32d59b146103c25761025d565b8063332647b61461031f578063429b62e5146103275780635c975abb1461033a57806368cefccc146103425780636b6fde0e146103635761025d565b8063104932cf11610226578063104932cf146102c557806317748adc146102cd5780631ca6cbeb146102e257806320606b70146102f757806327dd1b00146102ff5761025d565b8062073f991461026257806303a18fa314610280578063048c958814610295578063054f7d9c1461029d57806307392cc0146102b2575b600080fd5b61026a6104de565b6040516102779190611331565b60405180910390f35b6102886104e4565b604051610277919061133f565b61026a6104f3565b6102a56104f8565b6040516102779190611323565b6102a56102c0366004611061565b610506565b61028861051b565b6102d561052a565b60405161027791906113c2565b6102ea61052f565b604051610277919061134d565b61026a6105c2565b61031261030d366004610fda565b6105d9565b60405161027791906112fd565b61026a6105ff565b6102a5610335366004610fb4565b61061b565b6102a5610630565b610355610350366004611014565b610639565b6040516102779291906113a7565b610355610371366004611014565b610675565b61026a610384366004610fb4565b6106b1565b61026a6106c3565b6102a561039f366004610fb4565b6106c8565b6103ac6106dd565b60405161027792919061137e565b6103126106e5565b6102a56106f4565b6103dd6103d8366004611061565b610718565b6040516102779190611399565b6103dd6103f8366004610fda565b610730565b6102a5610753565b61026a61075c565b610288610764565b61026a610773565b6102a561042b366004610fb4565b610781565b610312610796565b61026a6107aa565b6103dd61044e366004611061565b6107b2565b6102d56107ca565b6102d56107e0565b61046b6107e5565b604051610277919061130b565b61026a610e29565b6103dd61048e366004610fda565b610e2e565b6103556104a136600461107f565b610e51565b61026a610e87565b61026a610e93565b6104c96104c4366004610fb4565b610e99565b005b6103556104d936600461107f565b610ed2565b60015481565b600d546001600160a01b031681565b600a90565b601554610100900460ff1681565b60106020526000908152604090205460ff1681565b6013546001600160a01b031681565b600981565b60028054604080516020601f60001961010060018716150201909416859004938401819004810282018101909252828152606093909290918301828280156105b85780601f1061058d576101008083540402835291602001916105b8565b820191906000526020600020905b81548152906001019060200180831161059b57829003601f168201915b5050505050905090565b6040516105ce906112e7565b604051809103902081565b60046020908152600092835260408084209091529082529020546001600160a01b031681565b600060405161060d906112f2565b604051908190039020905090565b600f6020526000908152604090205460ff1681565b60155460ff1681565b600a60209081526000938452604080852082529284528284209052825290205463ffffffff81169064010000000090046001600160601b031682565b600860209081526000938452604080852082529284528284209052825290205463ffffffff81169064010000000090046001600160601b031682565b600c6020526000908152604090205481565b600390565b60146020526000908152604090205460ff1681565b600160099091565b6000546001600160a01b031690565b600080546001600160a01b0316610709610f08565b6001600160a01b031614905090565b60076020526000908152604090205463ffffffff1681565b600960209081526000928352604080842090915290825290205463ffffffff1681565b60055460ff1681565b63059fa60090565b6003546001600160a01b031681565b600060405161060d906112e7565b600e6020526000908152604090205460ff1681565b60055461010090046001600160a01b031681565b63059fa60081565b60126020526000908152604090205463ffffffff1681565b600d54600160a01b90046001600160601b031681565b600a81565b604080516020808252610420820190925260609182919080820161040080388339019050509050639e5ff1eb60e01b8160008151811061082157fe5b6001600160e01b0319909216602092830291909101909101528051631b1f921d60e31b908290600190811061085257fe5b6001600160e01b0319909216602092830291909101909101528051629192b160e31b908290600290811061088257fe5b6001600160e01b031990921660209283029190910190910152805163f93fc2af60e01b90829060039081106108b357fe5b6001600160e01b0319909216602092830291909101909101528051638cdf855f60e01b90829060049081106108e457fe5b6001600160e01b0319909216602092830291909101909101528051632a74eb4760e21b908290600590811061091557fe5b6001600160e01b031990921660209283029190910190910152805163199323db60e11b908290600690811061094657fe5b6001600160e01b0319909216602092830291909101909101528051631ca6cbeb60e01b908290600790811061097757fe5b6001600160e01b031990921660209283029190910190910152805162073f9960e01b90829060089081106109a757fe5b6001600160e01b031990921660209283029190910190910152805163a58848c560e01b90829060099081106109d857fe5b6001600160e01b03199092166020928302919091019091015280516227dd1b60e81b908290600a908110610a0857fe5b6001600160e01b0319909216602092830291909101909101528051634c94f44360e11b908290600b908110610a3957fe5b6001600160e01b0319909216602092830291909101909101528051632ba077f960e21b908290600c908110610a6a57fe5b6001600160e01b0319909216602092830291909101909101528051636fd933e160e11b908290600d908110610a9b57fe5b6001600160e01b031990921660209283029190910190910152805163250db9f560e21b908290600e908110610acc57fe5b6001600160e01b03199092166020928302919091019091015280516335b7ef0760e11b908290600f908110610afd57fe5b6001600160e01b031990921660209283029190910190910152805163129859cb60e31b9082906010908110610b2e57fe5b6001600160e01b0319909216602092830291909101909101528051631a33bf3360e21b9082906011908110610b5f57fe5b6001600160e01b0319909216602092830291909101909101528051631b64fd8360e31b9082906012908110610b9057fe5b6001600160e01b0319909216602092830291909101909101528051623f675f60e91b9082906013908110610bc057fe5b6001600160e01b03199092166020928302919091019091015280516303a18fa360e01b9082906014908110610bf157fe5b6001600160e01b031990921660209283029190910190910152805163bf626ec160e01b9082906015908110610c2257fe5b6001600160e01b03199092166020928302919091019091015280516356d7480160e11b9082906016908110610c5357fe5b6001600160e01b031990921660209283029190910190910152805163429b62e560e01b9082906017908110610c8457fe5b6001600160e01b0319909216602092830291909101909101528051621ce4b360e61b9082906018908110610cb457fe5b6001600160e01b031990921660209283029190910190910152805163f3f1973160e01b9082906019908110610ce557fe5b6001600160e01b0319909216602092830291909101909101528051635da99e7960e11b908290601a908110610d1657fe5b6001600160e01b031990921660209283029190910190910152805163104932cf60e01b908290601b908110610d4757fe5b6001600160e01b031990921660209283029190910190910152805163407a8e0960e11b908290601c908110610d7857fe5b6001600160e01b0319909216602092830291909101909101528051635c975abb60e01b908290601d908110610da957fe5b6001600160e01b0319909216602092830291909101909101528051630153df6760e21b908290601e908110610dda57fe5b6001600160e01b031990921660209283029190910190910152805163ec8e0b2960e01b908290601f908110610e0b57fe5b6001600160e01b031990921660209283029190910190910152905090565b600990565b600b60209081526000928352604080842090915290825290205463ffffffff1681565b600660209081526000928352604080842090915290825290205463ffffffff81169064010000000090046001600160601b031682565b6040516105ce906112f2565b60165490565b610ea16106f4565b610ec65760405162461bcd60e51b8152600401610ebd9061136e565b60405180910390fd5b610ecf81610f0c565b50565b601160209081526000928352604080842090915290825290205463ffffffff81169064010000000090046001600160601b031682565b3390565b6001600160a01b038116610f325760405162461bcd60e51b8152600401610ebd9061135e565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b8035610f988161146e565b92915050565b8035610f9881611482565b8035610f988161148b565b600060208284031215610fc657600080fd5b6000610fd28484610f8d565b949350505050565b60008060408385031215610fed57600080fd5b6000610ff98585610f8d565b925050602061100a85828601610f9e565b9150509250929050565b60008060006060848603121561102957600080fd5b60006110358686610f8d565b935050602061104686828701610f9e565b925050604061105786828701610fa9565b9150509250925092565b60006020828403121561107357600080fd5b6000610fd28484610f9e565b6000806040838503121561109257600080fd5b600061109e8585610f9e565b925050602061100a85828601610fa9565b60006110bb838361113d565b505060200190565b6110cc816113e8565b82525050565b60006110dd826113d6565b6110e781856113da565b93506110f2836113d0565b8060005b8381101561112057815161110a88826110af565b9750611115836113d0565b9250506001016110f6565b509495945050505050565b6110cc816113f3565b6110cc816113f8565b6110cc816113fb565b6110cc81611429565b600061115a826113d6565b61116481856113da565b9350611174818560208601611434565b61117d81611464565b9093019392505050565b60006111946026836113da565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015260400192915050565b60006111dc6043836113e3565b7f454950373132446f6d61696e28737472696e67206e616d652c75696e7432353681527f20636861696e49642c6164647265737320766572696679696e67436f6e74726160208201526263742960e81b604082015260430192915050565b6000611247600c836113da565b6b1d5b985d5d1a1bdc9a5e995960a21b815260200192915050565b600061126f604b836113e3565b7f44656c65676174696f6e28616464726573732064656c6567617465652c75696e81527f74323536206c6f636b446174652c75696e74323536206e6f6e63652c75696e7460208201526a323536206578706972792960a81b6040820152604b0192915050565b6110cc81611414565b6110cc8161141d565b6000610f98826111cf565b6000610f9882611262565b60208101610f9882846110c3565b6020808252810161131c81846110d2565b9392505050565b60208101610f98828461112b565b60208101610f988284611134565b60208101610f988284611146565b6020808252810161131c818461114f565b60208082528101610f9881611187565b60208082528101610f988161123a565b6040810161138c8285611134565b61131c6020830184611134565b60208101610f9882846112d5565b604081016113b582856112d5565b61131c60208301846112de565b60208101610f9882846112de565b60200190565b5190565b90815260200190565b919050565b6000610f9882611408565b151590565b90565b6001600160e01b03191690565b6001600160a01b031690565b63ffffffff1690565b6001600160601b031690565b6000610f98826113e8565b60005b8381101561144f578181015183820152602001611437565b8381111561145e576000848401525b50505050565b601f01601f191690565b611477816113e8565b8114610ecf57600080fd5b611477816113f8565b6114778161141456fea365627a7a7231582002802e4bb217dfc80b09b1f5a2fea4faeda7bb3553312a3e9a8f082ebf5ac82f6c6578706572696d656e74616cf564736f6c63430005110040",
  "devdoc": {
    "methods": {
      "getMaxVestingWithdrawIterations()": {
        "return": "max iteration value."
      },
      "getStorageMaxDurationToStakeTokens()": {
        "return": "MAX_DURATION to stake tokens"
      },
      "getStorageWeightFactor()": {
        "details": "MAX_VOTING_WEIGHT * WEIGHT_FACTOR needs to be < 792, because there are 100,000,000 SOV with 18 decimals"
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Staking Storage Module"
  },
  "userdoc": {
    "methods": {
      "getMaxVestingWithdrawIterations()": {
        "notice": "Max iteration for direct withdrawal from staking to prevent out of gas issue."
      },
      "getStorageDefaulWeightScaling()": {
        "notice": "Default weight scaling."
      },
      "getStorageDelegationTypehash()": {
        "notice": "The EIP-712 typehash for the delegation struct used by the contract."
      },
      "getStorageDomainTypehash()": {
        "notice": "The EIP-712 typehash for the contract's domain."
      },
      "getStorageMaxDurationToStakeTokens()": {
        "notice": "The maximum duration to stake tokens"
      },
      "getStorageMaxVotingWeight()": {
        "notice": "The maximum possible voting weight before adding +1 (actually 10, but need 9 for computation)."
      },
      "getStorageWeightFactor()": {
        "notice": "weight is multiplied with this factor (for allowing decimals, like 1.2x)."
      }
    },
    "notice": "Provides getters for public storage variables*"
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 54807,
        "contract": "contracts/governance/Staking/modules/StakingStorageModule.sol:StakingStorageModule",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 23799,
        "contract": "contracts/governance/Staking/modules/StakingStorageModule.sol:StakingStorageModule",
        "label": "kickoffTS",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 23802,
        "contract": "contracts/governance/Staking/modules/StakingStorageModule.sol:StakingStorageModule",
        "label": "name",
        "offset": 0,
        "slot": "2",
        "type": "t_string_storage"
      },
      {
        "astId": 23804,
        "contract": "contracts/governance/Staking/modules/StakingStorageModule.sol:StakingStorageModule",
        "label": "SOVToken",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(IERC20)33453"
      },
      {
        "astId": 23810,
        "contract": "contracts/governance/Staking/modules/StakingStorageModule.sol:StakingStorageModule",
        "label": "delegates",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))"
      },
      {
        "astId": 23813,
        "contract": "contracts/governance/Staking/modules/StakingStorageModule.sol:StakingStorageModule",
        "label": "allUnlocked",
        "offset": 0,
        "slot": "5",
        "type": "t_bool"
      },
      {
        "astId": 23825,
        "contract": "contracts/governance/Staking/modules/StakingStorageModule.sol:StakingStorageModule",
        "label": "newStakingContract",
        "offset": 1,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 23836,
        "contract": "contracts/governance/Staking/modules/StakingStorageModule.sol:StakingStorageModule",
        "label": "totalStakingCheckpoints",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_mapping(t_uint32,t_struct(Checkpoint)23830_storage))"
      },
      {
        "astId": 23840,
        "contract": "contracts/governance/Staking/modules/StakingStorageModule.sol:StakingStorageModule",
        "label": "numTotalStakingCheckpoints",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_uint32)"
      },
      {
        "astId": 23848,
        "contract": "contracts/governance/Staking/modules/StakingStorageModule.sol:StakingStorageModule",
        "label": "delegateStakingCheckpoints",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint32,t_struct(Checkpoint)23830_storage)))"
      },
      {
        "astId": 23854,
        "contract": "contracts/governance/Staking/modules/StakingStorageModule.sol:StakingStorageModule",
        "label": "numDelegateStakingCheckpoints",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint32))"
      },
      {
        "astId": 23862,
        "contract": "contracts/governance/Staking/modules/StakingStorageModule.sol:StakingStorageModule",
        "label": "userStakingCheckpoints",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint32,t_struct(Checkpoint)23830_storage)))"
      },
      {
        "astId": 23868,
        "contract": "contracts/governance/Staking/modules/StakingStorageModule.sol:StakingStorageModule",
        "label": "numUserStakingCheckpoints",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint32))"
      },
      {
        "astId": 23872,
        "contract": "contracts/governance/Staking/modules/StakingStorageModule.sol:StakingStorageModule",
        "label": "nonces",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 23874,
        "contract": "contracts/governance/Staking/modules/StakingStorageModule.sol:StakingStorageModule",
        "label": "feeSharing",
        "offset": 0,
        "slot": "13",
        "type": "t_contract(IFeeSharingCollector)17012"
      },
      {
        "astId": 23877,
        "contract": "contracts/governance/Staking/modules/StakingStorageModule.sol:StakingStorageModule",
        "label": "weightScaling",
        "offset": 20,
        "slot": "13",
        "type": "t_uint96"
      },
      {
        "astId": 23881,
        "contract": "contracts/governance/Staking/modules/StakingStorageModule.sol:StakingStorageModule",
        "label": "vestingWhitelist",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 23885,
        "contract": "contracts/governance/Staking/modules/StakingStorageModule.sol:StakingStorageModule",
        "label": "admins",
        "offset": 0,
        "slot": "15",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 23889,
        "contract": "contracts/governance/Staking/modules/StakingStorageModule.sol:StakingStorageModule",
        "label": "vestingCodeHashes",
        "offset": 0,
        "slot": "16",
        "type": "t_mapping(t_bytes32,t_bool)"
      },
      {
        "astId": 23895,
        "contract": "contracts/governance/Staking/modules/StakingStorageModule.sol:StakingStorageModule",
        "label": "vestingCheckpoints",
        "offset": 0,
        "slot": "17",
        "type": "t_mapping(t_uint256,t_mapping(t_uint32,t_struct(Checkpoint)23830_storage))"
      },
      {
        "astId": 23899,
        "contract": "contracts/governance/Staking/modules/StakingStorageModule.sol:StakingStorageModule",
        "label": "numVestingCheckpoints",
        "offset": 0,
        "slot": "18",
        "type": "t_mapping(t_uint256,t_uint32)"
      },
      {
        "astId": 23901,
        "contract": "contracts/governance/Staking/modules/StakingStorageModule.sol:StakingStorageModule",
        "label": "vestingRegistryLogic",
        "offset": 0,
        "slot": "19",
        "type": "t_contract(IVestingRegistry)26194"
      },
      {
        "astId": 23905,
        "contract": "contracts/governance/Staking/modules/StakingStorageModule.sol:StakingStorageModule",
        "label": "pausers",
        "offset": 0,
        "slot": "20",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 23907,
        "contract": "contracts/governance/Staking/modules/StakingStorageModule.sol:StakingStorageModule",
        "label": "paused",
        "offset": 0,
        "slot": "21",
        "type": "t_bool"
      },
      {
        "astId": 23909,
        "contract": "contracts/governance/Staking/modules/StakingStorageModule.sol:StakingStorageModule",
        "label": "frozen",
        "offset": 1,
        "slot": "21",
        "type": "t_bool"
      },
      {
        "astId": 23911,
        "contract": "contracts/governance/Staking/modules/StakingStorageModule.sol:StakingStorageModule",
        "label": "maxVestingWithdrawIterations",
        "offset": 0,
        "slot": "22",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(IERC20)33453": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IFeeSharingCollector)17012": {
        "encoding": "inplace",
        "label": "contract IFeeSharingCollector",
        "numberOfBytes": "20"
      },
      "t_contract(IVestingRegistry)26194": {
        "encoding": "inplace",
        "label": "contract IVestingRegistry",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => address))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_address)"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint32,t_struct(Checkpoint)23830_storage)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => mapping(uint32 => struct StakingStorageShared.Checkpoint)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_mapping(t_uint32,t_struct(Checkpoint)23830_storage))"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_uint32))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => uint32))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint32)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_mapping(t_uint32,t_struct(Checkpoint)23830_storage))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint32 => struct StakingStorageShared.Checkpoint))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint32,t_struct(Checkpoint)23830_storage)"
      },
      "t_mapping(t_uint256,t_uint32)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint32)",
        "numberOfBytes": "32",
        "value": "t_uint32"
      },
      "t_mapping(t_uint32,t_struct(Checkpoint)23830_storage)": {
        "encoding": "mapping",
        "key": "t_uint32",
        "label": "mapping(uint32 => struct StakingStorageShared.Checkpoint)",
        "numberOfBytes": "32",
        "value": "t_struct(Checkpoint)23830_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Checkpoint)23830_storage": {
        "encoding": "inplace",
        "label": "struct StakingStorageShared.Checkpoint",
        "members": [
          {
            "astId": 23827,
            "contract": "contracts/governance/Staking/modules/StakingStorageModule.sol:StakingStorageModule",
            "label": "fromBlock",
            "offset": 0,
            "slot": "0",
            "type": "t_uint32"
          },
          {
            "astId": 23829,
            "contract": "contracts/governance/Staking/modules/StakingStorageModule.sol:StakingStorageModule",
            "label": "stake",
            "offset": 4,
            "slot": "0",
            "type": "t_uint96"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      },
      "t_uint96": {
        "encoding": "inplace",
        "label": "uint96",
        "numberOfBytes": "12"
      }
    }
  }
}