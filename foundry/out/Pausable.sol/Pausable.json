{
  "abi": [],
  "bytecode": {
    "object": "0x6080604052348015600f57600080fd5b50603e80601d6000396000f3fe6080604052600080fdfea265627a7a72315820d1d796120235836854f14c5cd86e0f81cfcd7000893785c64a805c89bde4777b64736f6c63430005110032",
    "sourceMap": "455:849:8:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;455:849:8;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600080fdfea265627a7a72315820d1d796120235836854f14c5cd86e0f81cfcd7000893785c64a805c89bde4777b64736f6c63430005110032",
    "sourceMap": "455:849:8:-;;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "rawMetadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{},\"title\":\"Pausable contract.\"},\"userdoc\":{\"methods\":{},\"notice\":\"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * The contract implements pausable functionality by reading on slots the pause state of contract functions.\"}},\"settings\":{\"compilationTarget\":{\"contracts/connectors/loantoken/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@ethereum-waffle/=node_modules/@ethereum-waffle/\",\":ds-test/=foundry/lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=foundry/lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":truffle/=node_modules/truffle/\"]},\"sources\":{\"contracts/connectors/loantoken/Pausable.sol\":{\"keccak256\":\"0x54f95b041e66fbcadb867bfba626373b681e0000ecea2b19f521de89c3020690\",\"urls\":[\"bzz-raw://4e7ef0893bfcad7960c84dc41504218cf65edb7cb44263055eccc321b515df13\",\"dweb:/ipfs/QmPk7qj658ha5SvWLtsrS5okGaYWwuPHVaL86pJr6hQyjX\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.5.17+commit.d19bba13"
    },
    "language": "Solidity",
    "output": {
      "abi": [],
      "devdoc": {
        "methods": {}
      },
      "userdoc": {
        "methods": {}
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@ethereum-waffle/=node_modules/@ethereum-waffle/",
        ":ds-test/=foundry/lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=foundry/lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":truffle/=node_modules/truffle/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "compilationTarget": {
        "contracts/connectors/loantoken/Pausable.sol": "Pausable"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/connectors/loantoken/Pausable.sol": {
        "keccak256": "0x54f95b041e66fbcadb867bfba626373b681e0000ecea2b19f521de89c3020690",
        "urls": [
          "bzz-raw://4e7ef0893bfcad7960c84dc41504218cf65edb7cb44263055eccc321b515df13",
          "dweb:/ipfs/QmPk7qj658ha5SvWLtsrS5okGaYWwuPHVaL86pJr6hQyjX"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/connectors/loantoken/Pausable.sol",
    "id": 4016,
    "exportedSymbols": {
      "Pausable": [
        4015
      ]
    },
    "nodeType": "SourceUnit",
    "src": "118:1187:8",
    "nodes": [
      {
        "id": 3978,
        "nodeType": "PragmaDirective",
        "src": "118:23:8",
        "nodes": [],
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ]
      },
      {
        "id": 4015,
        "nodeType": "ContractDefinition",
        "src": "455:849:8",
        "nodes": [
          {
            "id": 3981,
            "nodeType": "VariableDeclaration",
            "src": "523:125:8",
            "nodes": [],
            "constant": true,
            "name": "Pausable_FunctionPause",
            "scope": 4015,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 3979,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "523:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307861373134336338346437393361313535303364613666313962663931313961326461633934343438636134356437376338626630386635376232653931303437",
              "id": 3980,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "582:66:8",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_75572000340897696294543103955945217926089709234207854382066236200855276163143_by_1",
                "typeString": "int_const 7557...(69 digits omitted)...3143"
              },
              "value": "0xa7143c84d793a15503da6f19bf9119a2dac94448ca45d77c8bf08f57b2e91047"
            },
            "visibility": "internal"
          },
          {
            "id": 3995,
            "nodeType": "ModifierDefinition",
            "src": "655:98:8",
            "nodes": [],
            "body": {
              "id": 3994,
              "nodeType": "Block",
              "src": "685:68:8",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "703:15:8",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3987,
                              "name": "sig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3983,
                              "src": "714:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "id": 3986,
                            "name": "_isPaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4014,
                            "src": "704:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                              "typeString": "function (bytes4) view returns (bool)"
                            }
                          },
                          "id": 3988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "704:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "756e617574686f72697a6564",
                        "id": 3990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "720:14:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_926a1b84b861d31f2d45224162461e1d5ff4377725d977d8f792bb84825a0348",
                          "typeString": "literal_string \"unauthorized\""
                        },
                        "value": "unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_926a1b84b861d31f2d45224162461e1d5ff4377725d977d8f792bb84825a0348",
                          "typeString": "literal_string \"unauthorized\""
                        }
                      ],
                      "id": 3985,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        62994,
                        62995
                      ],
                      "referencedDeclaration": 62995,
                      "src": "695:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "695:40:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3992,
                  "nodeType": "ExpressionStatement",
                  "src": "695:40:8"
                },
                {
                  "id": 3993,
                  "nodeType": "PlaceholderStatement",
                  "src": "745:1:8"
                }
              ]
            },
            "documentation": null,
            "name": "pausable",
            "parameters": {
              "id": 3984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3983,
                  "name": "sig",
                  "nodeType": "VariableDeclaration",
                  "scope": 3995,
                  "src": "673:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 3982,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "673:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "672:12:8"
            },
            "visibility": "internal"
          },
          {
            "id": 4014,
            "nodeType": "FunctionDefinition",
            "src": "1080:222:8",
            "nodes": [],
            "body": {
              "id": 4013,
              "nodeType": "Block",
              "src": "1149:153:8",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    4003
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4003,
                      "name": "slot",
                      "nodeType": "VariableDeclaration",
                      "scope": 4013,
                      "src": "1159:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 4002,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1159:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4011,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4007,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3997,
                            "src": "1201:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 4008,
                            "name": "Pausable_FunctionPause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3981,
                            "src": "1206:22:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 4005,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62978,
                            "src": "1184:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 4006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1184:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 4009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1184:45:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 4004,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62985,
                      "src": "1174:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 4010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1174:56:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1159:71:8"
                },
                {
                  "externalReferences": [
                    {
                      "isPaused": {
                        "declaration": 4000,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1263:8:8",
                        "valueSize": 1
                      }
                    },
                    {
                      "slot": {
                        "declaration": 4003,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1281:4:8",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 4012,
                  "nodeType": "InlineAssembly",
                  "operations": "{ isPaused := sload(slot) }",
                  "src": "1240:56:8"
                }
              ]
            },
            "documentation": "@notice Check whether a function is paused.\n     * @dev Used to read externally from the smart contract to see if a\n  function is paused.\n     * @param sig The function ID, the selector on bytes4.\n     * @return isPaused Whether the function is paused: true or false.\n",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isPaused",
            "parameters": {
              "id": 3998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3997,
                  "name": "sig",
                  "nodeType": "VariableDeclaration",
                  "scope": 4014,
                  "src": "1099:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 3996,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1099:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1098:12:8"
            },
            "returnParameters": {
              "id": 4001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4000,
                  "name": "isPaused",
                  "nodeType": "VariableDeclaration",
                  "scope": 4014,
                  "src": "1134:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3999,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1134:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1133:15:8"
            },
            "scope": 4015,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Pausable contract.\n@notice This contract code comes from bZx. bZx is a protocol for tokenized margin\ntrading and lending https://bzx.network similar to the dYdX protocol.\n * The contract implements pausable functionality by reading on slots the\npause state of contract functions.\n",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          4015
        ],
        "name": "Pausable",
        "scope": 4016
      }
    ]
  },
  "id": 8
}