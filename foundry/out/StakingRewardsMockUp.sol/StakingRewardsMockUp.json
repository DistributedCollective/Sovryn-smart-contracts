{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RewardWithdrawn",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "BASE_RATE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DIVISOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "SOV",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "TWO_WEEKS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "averageBlockTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "blockMockUp",
      "outputs": [
        {
          "internalType": "contract BlockMockUp",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "checkpointBlockDetails",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "claimedBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "restartTime",
          "type": "uint256"
        }
      ],
      "name": "collectReward",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "deploymentBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bool",
          "name": "considerMaxDuration",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "restartTime",
          "type": "uint256"
        }
      ],
      "name": "getStakerCurrentReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "lastWithdrawalInterval",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_SOV",
          "type": "address"
        },
        {
          "internalType": "contract IStaking",
          "name": "_staking",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_averageBlockTime",
          "type": "uint256"
        }
      ],
      "name": "setAverageBlockTime",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "setBlock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_blockMockUp",
          "type": "address"
        }
      ],
      "name": "setBlockMockUpAddr",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_time",
          "type": "uint256"
        }
      ],
      "name": "setHistoricalBlock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "name": "setMaxDuration",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "staking",
      "outputs": [
        {
          "internalType": "contract IStaking",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "startTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "stop",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "stopBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiverAddress",
          "type": "address"
        }
      ],
      "name": "withdrawTokensByOwner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "withdrawals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260006100176001600160e01b0361006616565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006a565b3390565b61160e806100796000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80637a9262a2116100f9578063ceee685511610097578063dffd356211610071578063dffd3562146103b4578063e62a9f1e146103d1578063f2fde38b146103f7578063fe5afe511461041d576101a9565b8063ceee685514610333578063cf0f34c414610371578063d42b779d1461038e576101a9565b80638f32d59b116100d35780638f32d59b146102cc578063934d1fa4146102e8578063a377f244146102f0578063bd3507da14610316576101a9565b80637a9262a21461029657806382100e3f146102bc5780638da5cb5b146102c4576101a9565b806341910f90116101665780634cf088d9116101405780634cf088d9146102765780635004b6e41461027e5780636db5c8fd1461028657806378e979251461028e576101a9565b806341910f901461023857806344bb3b2f14610240578063485cc95514610248576101a9565b806307da68f5146101ae57806308dcb360146101b857806312671c26146101dc578063233dedf11461020b5780633410fe6e146102135780633736d8531461021b575b600080fd5b6101b6610425565b005b6101c06104c1565b604080516001600160a01b039092168252519081900360200190f35b6101f9600480360360208110156101f257600080fd5b50356104d0565b60408051918252519081900360200190f35b6101f96104e2565b6101f96104e8565b6101b66004803603602081101561023157600080fd5b50356104ef565b6101f961053c565b6101f9610542565b6101b66004803603604081101561025e57600080fd5b506001600160a01b0381358116916020013516610548565b6101c06106ed565b6101c06106fc565b6101f961070b565b6101f9610711565b6101f9600480360360208110156102ac57600080fd5b50356001600160a01b0316610717565b6101f9610729565b6101c061072f565b6102d461073e565b604080519115158252519081900360200190f35b6101f9610762565b6101b66004803603602081101561030657600080fd5b50356001600160a01b0316610769565b6101b66004803603602081101561032c57600080fd5b503561082e565b6103586004803603604081101561034957600080fd5b508035151590602001356108b4565b6040805192835260208301919091528051918290030190f35b6101b66004803603602081101561038757600080fd5b5035610b75565b6101f9600480360360208110156103a457600080fd5b50356001600160a01b0316610bc2565b6101b6600480360360208110156103ca57600080fd5b5035610bd4565b6101b6600480360360208110156103e757600080fd5b50356001600160a01b0316610be0565b6101b66004803603602081101561040d57600080fd5b50356001600160a01b0316610caf565b6101b6610d00565b61042d61073e565b61046d576040805162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b604482015290519081900360640190fd5b600554156104b4576040805162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e481cdd1bdc1c1959608a1b604482015290519081900360640190fd5b6104bc610d82565b600555565b6001546001600160a01b031681565b600a6020526000908152604090205481565b600b5481565b6227ac4081565b6104f761073e565b610537576040805162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b604482015290519081900360640190fd5b600b55565b610b9f81565b60055481565b61055061073e565b610590576040805162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b604482015290519081900360640190fd5b6001600160a01b0382166105e2576040805162461bcd60e51b815260206004820152601460248201527324b73b30b634b21029a7ab1020b2323932b9b99760611b604482015290519081900360640190fd5b6105eb82610df8565b610632576040805162461bcd60e51b815260206004820152601360248201527217d4d3d5881b9bdd08184818dbdb9d1c9858dd606a1b604482015290519081900360640190fd5b600180546001600160a01b038085166001600160a01b0319928316179092556002805484841692169190911790819055604080516372ec979560e01b8152426004820152905191909216916372ec9795916024808301926020929190829003018186803b1580156106a257600080fd5b505afa1580156106b6573d6000803e3d6000fd5b505050506040513d60208110156106cc57600080fd5b50516004556106de630114db00610b75565b6106e6610d82565b6008555050565b6002546001600160a01b031681565b600c546001600160a01b031681565b60035481565b60045481565b60066020526000908152604090205481565b60085481565b6000546001600160a01b031690565b600080546001600160a01b0316610753610e34565b6001600160a01b031614905090565b6212750081565b61077161073e565b6107b1576040805162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b604482015290519081900360640190fd5b6001600160a01b03811661080c576040805162461bcd60e51b815260206004820152601c60248201527f626c6f636b206d6f636b7570206164647265737320696e76616c696400000000604482015290519081900360640190fd5b600c80546001600160a01b0319166001600160a01b0392909216919091179055565b60008061083c6001846108b4565b915091506000821180156108505750600081115b610893576040805162461bcd60e51b815260206004820152600f60248201526e1b9bc81d985b1a59081c995dd85c99608a1b604482015290519081900360640190fd5b3360008181526006602052604090208390556108af9082610e38565b505050565b60008060008060016108c4610d82565b3360008181526006602090815260408083205460025482516372ec979560e01b81524260048201819052935198909703985091969395909386936001600160a01b03909316926372ec97959260248082019391829003018186803b15801561092b57600080fd5b505afa15801561093f573d6000803e3d6000fd5b505050506040513d602081101561095557600080fd5b505190508161096657600454610968565b815b9850888111610985575060009750879650610b6e95505050505050565b888a10610a0857600254604080516372ec979560e01b8152600481018d905290516000926001600160a01b0316916372ec9795916024808301926020929190829003018186803b1580156109d857600080fd5b505afa1580156109ec573d6000803e3d6000fd5b505050506040513d6020811015610a0257600080fd5b50519950505b8a15610ab5576000610a256003548b610f4d90919063ffffffff16565b9050858110610a345781610aad565b600254604080516372ec979560e01b81526004810184905290516001600160a01b03909216916372ec979591602480820192602092909190829003018186803b158015610a8057600080fd5b505afa158015610a94573d6000803e3d6000fd5b505050506040513d6020811015610aaa57600080fd5b50515b945050610ab9565b8093505b885b84811015610b45576000818152600a602052604090205480610b0e57600b54610b0b90610afe90610af28a8663ffffffff610fb016565b9063ffffffff610ff216565b899063ffffffff610fb016565b90505b600854811015610b1d57506008545b610b38610b2b868385611034565b8a9063ffffffff610f4d16565b9850506212750001610abb565b509297508792610b646227ac40610af289610b9f63ffffffff61119c16565b9750505050505050505b9250929050565b610b7d61073e565b610bbd576040805162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b604482015290519081900360640190fd5b600355565b60076020526000908152604090205481565b610bdd816111f5565b50565b610be861073e565b610c28576040805162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b604482015290519081900360640190fd5b600154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015610c7357600080fd5b505afa158015610c87573d6000803e3d6000fd5b505050506040513d6020811015610c9d57600080fd5b50519050610cab82826112ab565b5050565b610cb761073e565b610cf7576040805162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b604482015290519081900360640190fd5b610bdd816113f6565b600254604080516372ec979560e01b815242600482015290516000926001600160a01b0316916372ec9795916024808301926020929190829003018186803b158015610d4b57600080fd5b505afa158015610d5f573d6000803e3d6000fd5b505050506040513d6020811015610d7557600080fd5b50519050610bdd816111f5565b600c54604080516307f6c6f160e41b815290516000926001600160a01b031691637f6c6f10916004808301926020929190829003018186803b158015610dc757600080fd5b505afa158015610ddb573d6000803e3d6000fd5b505050506040513d6020811015610df157600080fd5b5051905090565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610e2c57508115155b949350505050565b3390565b600154604080516370a0823160e01b8152306004820152905183926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015610e8257600080fd5b505afa158015610e96573d6000803e3d6000fd5b505050506040513d6020811015610eac57600080fd5b50511015610f01576040805162461bcd60e51b815260206004820152601f60248201527f6e6f7420656e6f7567682066756e647320746f20726577617264207573657200604482015290519081900360640190fd5b6001600160a01b038216600090815260076020526040902054610f2a908263ffffffff610f4d16565b6001600160a01b038316600090815260076020526040902055610cab82826112ab565b600082820183811015610fa7576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b90505b92915050565b6000610fa783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611496565b6000610fa783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061152d565b600254604080516337e6b1c160e01b81526001600160a01b0386811660048301526024820186905260448201859052915160009392909216916337e6b1c191606480820192602092909190829003018186803b15801561109357600080fd5b505afa1580156110a7573d6000803e3d6000fd5b505050506040513d60208110156110bd57600080fd5b50516005546bffffffffffffffffffffffff9091169150158015906110e3575082600554105b1561119557600254600554604080516337e6b1c160e01b81526001600160a01b038881166004830152602482019390935260448101869052905160009392909216916337e6b1c191606480820192602092909190829003018186803b15801561114b57600080fd5b505afa15801561115f573d6000803e3d6000fd5b505050506040513d602081101561117557600080fd5b50516bffffffffffffffffffffffff16905081811015611193578091505b505b9392505050565b6000826111ab57506000610faa565b828202828482816111b857fe5b0414610fa75760405162461bcd60e51b81526004018080602001828103825260218152602001806115b96021913960400191505060405180910390fd5b4260006001611202610d82565b6000858152600a6020526040902054919003915015611268576040805162461bcd60e51b815260206004820152601860248201527f626c6f636b206e756d62657220616c7265616479207365740000000000000000604482015290519081900360640190fd5b6000611293611286600b54610af28787610fb090919063ffffffff16565b839063ffffffff610fb016565b6000948552600a602052604090942093909355505050565b806112ee576040805162461bcd60e51b815260206004820152600e60248201526d185b5bdd5b9d081a5b9d985b1a5960921b604482015290519081900360640190fd5b6001546040805163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529151919092169163a9059cbb9160448083019260209291908290030181600087803b15801561134457600080fd5b505af1158015611358573d6000803e3d6000fd5b505050506040513d602081101561136e57600080fd5b50516113b3576040805162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b604482015290519081900360640190fd5b6040805182815290516001600160a01b038416917f1d3eee4ca001cff39eec6ec7615aacf2f2bd61791273830728ba00ccbd6e1337919081900360200190a25050565b6001600160a01b03811661143b5760405162461bcd60e51b81526004018080602001828103825260268152602001806115936026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600081848411156115255760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156114ea5781810151838201526020016114d2565b50505050905090810190601f1680156115175780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000818361157c5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156114ea5781810151838201526020016114d2565b50600083858161158857fe5b049594505050505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a265627a7a723158207cc410c8130d7dcd81ddd6a168a5acad6e2a1b49ba64b1920f45021a0af0c92264736f6c63430005110032",
    "sourceMap": "201:694:147:-;;;701:17:184;721:12;-1:-1:-1;;;;;721:10:184;:12;:::i;:::-;743:6;:18;;-1:-1:-1;;;;;;743:18:184;-1:-1:-1;;;;;743:18:184;;;;;;;776:43;;743:18;;-1:-1:-1;743:18:184;776:43;;743:6;;776:43;668:158;201:694:147;;795:96:179;874:10;795:96;:::o;201:694:147:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101a95760003560e01c80637a9262a2116100f9578063ceee685511610097578063dffd356211610071578063dffd3562146103b4578063e62a9f1e146103d1578063f2fde38b146103f7578063fe5afe511461041d576101a9565b8063ceee685514610333578063cf0f34c414610371578063d42b779d1461038e576101a9565b80638f32d59b116100d35780638f32d59b146102cc578063934d1fa4146102e8578063a377f244146102f0578063bd3507da14610316576101a9565b80637a9262a21461029657806382100e3f146102bc5780638da5cb5b146102c4576101a9565b806341910f90116101665780634cf088d9116101405780634cf088d9146102765780635004b6e41461027e5780636db5c8fd1461028657806378e979251461028e576101a9565b806341910f901461023857806344bb3b2f14610240578063485cc95514610248576101a9565b806307da68f5146101ae57806308dcb360146101b857806312671c26146101dc578063233dedf11461020b5780633410fe6e146102135780633736d8531461021b575b600080fd5b6101b6610425565b005b6101c06104c1565b604080516001600160a01b039092168252519081900360200190f35b6101f9600480360360208110156101f257600080fd5b50356104d0565b60408051918252519081900360200190f35b6101f96104e2565b6101f96104e8565b6101b66004803603602081101561023157600080fd5b50356104ef565b6101f961053c565b6101f9610542565b6101b66004803603604081101561025e57600080fd5b506001600160a01b0381358116916020013516610548565b6101c06106ed565b6101c06106fc565b6101f961070b565b6101f9610711565b6101f9600480360360208110156102ac57600080fd5b50356001600160a01b0316610717565b6101f9610729565b6101c061072f565b6102d461073e565b604080519115158252519081900360200190f35b6101f9610762565b6101b66004803603602081101561030657600080fd5b50356001600160a01b0316610769565b6101b66004803603602081101561032c57600080fd5b503561082e565b6103586004803603604081101561034957600080fd5b508035151590602001356108b4565b6040805192835260208301919091528051918290030190f35b6101b66004803603602081101561038757600080fd5b5035610b75565b6101f9600480360360208110156103a457600080fd5b50356001600160a01b0316610bc2565b6101b6600480360360208110156103ca57600080fd5b5035610bd4565b6101b6600480360360208110156103e757600080fd5b50356001600160a01b0316610be0565b6101b66004803603602081101561040d57600080fd5b50356001600160a01b0316610caf565b6101b6610d00565b61042d61073e565b61046d576040805162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b604482015290519081900360640190fd5b600554156104b4576040805162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e481cdd1bdc1c1959608a1b604482015290519081900360640190fd5b6104bc610d82565b600555565b6001546001600160a01b031681565b600a6020526000908152604090205481565b600b5481565b6227ac4081565b6104f761073e565b610537576040805162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b604482015290519081900360640190fd5b600b55565b610b9f81565b60055481565b61055061073e565b610590576040805162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b604482015290519081900360640190fd5b6001600160a01b0382166105e2576040805162461bcd60e51b815260206004820152601460248201527324b73b30b634b21029a7ab1020b2323932b9b99760611b604482015290519081900360640190fd5b6105eb82610df8565b610632576040805162461bcd60e51b815260206004820152601360248201527217d4d3d5881b9bdd08184818dbdb9d1c9858dd606a1b604482015290519081900360640190fd5b600180546001600160a01b038085166001600160a01b0319928316179092556002805484841692169190911790819055604080516372ec979560e01b8152426004820152905191909216916372ec9795916024808301926020929190829003018186803b1580156106a257600080fd5b505afa1580156106b6573d6000803e3d6000fd5b505050506040513d60208110156106cc57600080fd5b50516004556106de630114db00610b75565b6106e6610d82565b6008555050565b6002546001600160a01b031681565b600c546001600160a01b031681565b60035481565b60045481565b60066020526000908152604090205481565b60085481565b6000546001600160a01b031690565b600080546001600160a01b0316610753610e34565b6001600160a01b031614905090565b6212750081565b61077161073e565b6107b1576040805162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b604482015290519081900360640190fd5b6001600160a01b03811661080c576040805162461bcd60e51b815260206004820152601c60248201527f626c6f636b206d6f636b7570206164647265737320696e76616c696400000000604482015290519081900360640190fd5b600c80546001600160a01b0319166001600160a01b0392909216919091179055565b60008061083c6001846108b4565b915091506000821180156108505750600081115b610893576040805162461bcd60e51b815260206004820152600f60248201526e1b9bc81d985b1a59081c995dd85c99608a1b604482015290519081900360640190fd5b3360008181526006602052604090208390556108af9082610e38565b505050565b60008060008060016108c4610d82565b3360008181526006602090815260408083205460025482516372ec979560e01b81524260048201819052935198909703985091969395909386936001600160a01b03909316926372ec97959260248082019391829003018186803b15801561092b57600080fd5b505afa15801561093f573d6000803e3d6000fd5b505050506040513d602081101561095557600080fd5b505190508161096657600454610968565b815b9850888111610985575060009750879650610b6e95505050505050565b888a10610a0857600254604080516372ec979560e01b8152600481018d905290516000926001600160a01b0316916372ec9795916024808301926020929190829003018186803b1580156109d857600080fd5b505afa1580156109ec573d6000803e3d6000fd5b505050506040513d6020811015610a0257600080fd5b50519950505b8a15610ab5576000610a256003548b610f4d90919063ffffffff16565b9050858110610a345781610aad565b600254604080516372ec979560e01b81526004810184905290516001600160a01b03909216916372ec979591602480820192602092909190829003018186803b158015610a8057600080fd5b505afa158015610a94573d6000803e3d6000fd5b505050506040513d6020811015610aaa57600080fd5b50515b945050610ab9565b8093505b885b84811015610b45576000818152600a602052604090205480610b0e57600b54610b0b90610afe90610af28a8663ffffffff610fb016565b9063ffffffff610ff216565b899063ffffffff610fb016565b90505b600854811015610b1d57506008545b610b38610b2b868385611034565b8a9063ffffffff610f4d16565b9850506212750001610abb565b509297508792610b646227ac40610af289610b9f63ffffffff61119c16565b9750505050505050505b9250929050565b610b7d61073e565b610bbd576040805162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b604482015290519081900360640190fd5b600355565b60076020526000908152604090205481565b610bdd816111f5565b50565b610be861073e565b610c28576040805162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b604482015290519081900360640190fd5b600154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015610c7357600080fd5b505afa158015610c87573d6000803e3d6000fd5b505050506040513d6020811015610c9d57600080fd5b50519050610cab82826112ab565b5050565b610cb761073e565b610cf7576040805162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b604482015290519081900360640190fd5b610bdd816113f6565b600254604080516372ec979560e01b815242600482015290516000926001600160a01b0316916372ec9795916024808301926020929190829003018186803b158015610d4b57600080fd5b505afa158015610d5f573d6000803e3d6000fd5b505050506040513d6020811015610d7557600080fd5b50519050610bdd816111f5565b600c54604080516307f6c6f160e41b815290516000926001600160a01b031691637f6c6f10916004808301926020929190829003018186803b158015610dc757600080fd5b505afa158015610ddb573d6000803e3d6000fd5b505050506040513d6020811015610df157600080fd5b5051905090565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610e2c57508115155b949350505050565b3390565b600154604080516370a0823160e01b8152306004820152905183926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015610e8257600080fd5b505afa158015610e96573d6000803e3d6000fd5b505050506040513d6020811015610eac57600080fd5b50511015610f01576040805162461bcd60e51b815260206004820152601f60248201527f6e6f7420656e6f7567682066756e647320746f20726577617264207573657200604482015290519081900360640190fd5b6001600160a01b038216600090815260076020526040902054610f2a908263ffffffff610f4d16565b6001600160a01b038316600090815260076020526040902055610cab82826112ab565b600082820183811015610fa7576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b90505b92915050565b6000610fa783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611496565b6000610fa783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061152d565b600254604080516337e6b1c160e01b81526001600160a01b0386811660048301526024820186905260448201859052915160009392909216916337e6b1c191606480820192602092909190829003018186803b15801561109357600080fd5b505afa1580156110a7573d6000803e3d6000fd5b505050506040513d60208110156110bd57600080fd5b50516005546bffffffffffffffffffffffff9091169150158015906110e3575082600554105b1561119557600254600554604080516337e6b1c160e01b81526001600160a01b038881166004830152602482019390935260448101869052905160009392909216916337e6b1c191606480820192602092909190829003018186803b15801561114b57600080fd5b505afa15801561115f573d6000803e3d6000fd5b505050506040513d602081101561117557600080fd5b50516bffffffffffffffffffffffff16905081811015611193578091505b505b9392505050565b6000826111ab57506000610faa565b828202828482816111b857fe5b0414610fa75760405162461bcd60e51b81526004018080602001828103825260218152602001806115b96021913960400191505060405180910390fd5b4260006001611202610d82565b6000858152600a6020526040902054919003915015611268576040805162461bcd60e51b815260206004820152601860248201527f626c6f636b206e756d62657220616c7265616479207365740000000000000000604482015290519081900360640190fd5b6000611293611286600b54610af28787610fb090919063ffffffff16565b839063ffffffff610fb016565b6000948552600a602052604090942093909355505050565b806112ee576040805162461bcd60e51b815260206004820152600e60248201526d185b5bdd5b9d081a5b9d985b1a5960921b604482015290519081900360640190fd5b6001546040805163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529151919092169163a9059cbb9160448083019260209291908290030181600087803b15801561134457600080fd5b505af1158015611358573d6000803e3d6000fd5b505050506040513d602081101561136e57600080fd5b50516113b3576040805162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b604482015290519081900360640190fd5b6040805182815290516001600160a01b038416917f1d3eee4ca001cff39eec6ec7615aacf2f2bd61791273830728ba00ccbd6e1337919081900360200190a25050565b6001600160a01b03811661143b5760405162461bcd60e51b81526004018080602001828103825260268152602001806115936026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600081848411156115255760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156114ea5781810151838201526020016114d2565b50505050905090810190601f1680156115175780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000818361157c5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156114ea5781810151838201526020016114d2565b50600083858161158857fe5b049594505050505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a265627a7a723158207cc410c8130d7dcd81ddd6a168a5acad6e2a1b49ba64b1920f45021a0af0c92264736f6c63430005110032",
    "sourceMap": "201:694:147:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;201:694:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2058:140:73;;;:::i;:::-;;714:17:75;;;:::i;:::-;;;;-1:-1:-1;;;;;714:17:75;;;;;;;;;;;;;;2241:57;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2241:57:75;;:::i;:::-;;;;;;;;;;;;;;;;2361:31;;;:::i;1143:41::-;;;:::i;3824:128:73:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3824:128:73;;:::i;976:40:75:-;;;:::i;1463:24::-;;;:::i;1388:420:73:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1388:420:73;;;;;;;;;;:::i;788:23:75:-;;;:::i;297:30:147:-;;;:::i;1253:26:75:-;;;:::i;1352:24::-;;;:::i;1551:46::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1551:46:75;-1:-1:-1;;;;;1551:46:75;;:::i;1788:30::-;;;:::i;902:77:184:-;;;:::i;1233:92::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;854:43:75;;;:::i;487:200:147:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;487:200:147;-1:-1:-1;;;;;487:200:147;;:::i;2953:314:73:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2953:314:73;;:::i;8541:2156::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8541:2156:73;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5161:100;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5161:100:73;;:::i;1652:50:75:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1652:50:75;-1:-1:-1;;;;;1652:50:75;;:::i;4594:85:73:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4594:85:73;;:::i;3438:184::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3438:184:73;-1:-1:-1;;;;;3438:184:73;;:::i;1474:107:184:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1474:107:184;-1:-1:-1;;;;;1474:107:184;;:::i;4183:158:73:-;;;:::i;2058:140::-;1106:9:184;:7;:9::i;:::-;1098:34;;;;;-1:-1:-1;;;1098:34:184;;;;;;;;;;;;-1:-1:-1;;;1098:34:184;;;;;;;;;;;;;;;2111:9:73;;:14;2103:42;;;;;-1:-1:-1;;;2103:42:73;;;;;;;;;;;;-1:-1:-1;;;2103:42:73;;;;;;;;;;;;;;;2167:24;:22;:24::i;:::-;2155:9;:36;2058:140::o;714:17:75:-;;;-1:-1:-1;;;;;714:17:75;;:::o;2241:57::-;;;;;;;;;;;;;:::o;2361:31::-;;;;:::o;1143:41::-;1177:7;1143:41;:::o;3824:128:73:-;1106:9:184;:7;:9::i;:::-;1098:34;;;;;-1:-1:-1;;;1098:34:184;;;;;;;;;;;;-1:-1:-1;;;1098:34:184;;;;;;;;;;;;;;;3909:16:73;:36;3824:128::o;976:40:75:-;1012:4;976:40;:::o;1463:24::-;;;;:::o;1388:420:73:-;1106:9:184;:7;:9::i;:::-;1098:34;;;;;-1:-1:-1;;;1098:34:184;;;;;;;;;;;;-1:-1:-1;;;1098:34:184;;;;;;;;;;;;;;;-1:-1:-1;;;;;1478:18:73;;1470:51;;;;;-1:-1:-1;;;1470:51:73;;;;;;;;;;;;-1:-1:-1;;;1470:51:73;;;;;;;;;;;;;;;1539:24;1558:4;1539:18;:24::i;:::-;1531:56;;;;;-1:-1:-1;;;1531:56:73;;;;;;;;;;;;-1:-1:-1;;;1531:56:73;;;;;;;;;;;;;;;1597:3;:18;;-1:-1:-1;;;;;1597:18:73;;;-1:-1:-1;;;;;;1597:18:73;;;;;;;1625:7;:18;;;;;;;;;;;;;;;1665:44;;;-1:-1:-1;;;1665:44:73;;1693:15;1665:44;;;;;;:7;;;;;:27;;:44;;;;;;;;;;;;;;:7;:44;;;5:2:-1;;;;30:1;27;20:12;5:2;1665:44:73;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1665:44:73;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1665:44:73;1653:9;:56;1719:30;1734:14;1719;:30::i;:::-;1777:24;:22;:24::i;:::-;1759:15;:42;-1:-1:-1;;1388:420:73:o;788:23:75:-;;;-1:-1:-1;;;;;788:23:75;;:::o;297:30:147:-;;;-1:-1:-1;;;;;297:30:147;;:::o;1253:26:75:-;;;;:::o;1352:24::-;;;;:::o;1551:46::-;;;;;;;;;;;;;:::o;1788:30::-;;;;:::o;902:77:184:-;940:7;966:6;-1:-1:-1;;;;;966:6:184;902:77;:::o;1233:92::-;1273:4;1312:6;;-1:-1:-1;;;;;1312:6:184;1296:12;:10;:12::i;:::-;-1:-1:-1;;;;;1296:22:184;;1289:29;;1233:92;:::o;854:43:75:-;890:7;854:43;:::o;487:200:147:-;1106:9:184;:7;:9::i;:::-;1098:34;;;;;-1:-1:-1;;;1098:34:184;;;;;;;;;;;;-1:-1:-1;;;1098:34:184;;;;;;;;;;;;;;;-1:-1:-1;;;;;572:26:147;;564:67;;;;;-1:-1:-1;;;564:67:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;641:11;:39;;-1:-1:-1;;;;;;641:39:147;-1:-1:-1;;;;;641:39:147;;;;;;;;;;487:200::o;2953:314:73:-;3017:22;3041:14;3059:41;3082:4;3088:11;3059:22;:41::i;:::-;3016:84;;;;3135:1;3118:14;:18;:32;;;;;3149:1;3140:6;:10;3118:32;3110:60;;;;;-1:-1:-1;;;3110:60:73;;;;;;;;;;;;-1:-1:-1;;;3110:60:73;;;;;;;;;;;;;;;3192:10;3180:23;;;;:11;:23;;;;;:40;;;3230:30;;3253:6;3230:10;:30::i;:::-;2953:314;;;:::o;8541:2156::-;8665:30;8697:14;8727:21;8758:26;8814:1;8787:24;:22;:24::i;:::-;8913:10;8825:17;8958:19;;;:11;:19;;;;;;;;;9018:7;;:38;;-1:-1:-1;;;9018:38:73;;8845:15;9018:38;;;;;;;;8787:28;;;;;-1:-1:-1;8845:15:73;;8825:17;;8958:19;;8825:17;;-1:-1:-1;;;;;9018:7:73;;;;:27;;:38;;;;;;;;;;;:7;:38;;;5:2:-1;;;;30:1;27;20:12;5:2;9018:38:73;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9018:38:73;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9018:38:73;;-1:-1:-1;9091:18:73;:47;;9129:9;;9091:47;;;9112:14;9091:47;9066:72;;9175:22;9152:19;:45;9148:64;;-1:-1:-1;9207:1:73;;-1:-1:-1;9207:1:73;;-1:-1:-1;9199:13:73;;-1:-1:-1;;;;;;9199:13:73;9148:64;9545:22;9530:11;:37;9526:192;;9611:7;;:40;;;-1:-1:-1;;;9611:40:73;;;;;;;;;;9583:25;;-1:-1:-1;;;;;9611:7:73;;:27;;:40;;;;;;;;;;;;;;:7;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;9611:40:73;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9611:40:73;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9611:40:73;;-1:-1:-1;;9526:192:73;9732:19;9728:332;;;9767:24;9794:39;9821:11;;9794:22;:26;;:39;;;;:::i;:::-;9767:66;;9877:9;9858:16;:28;:130;;9969:19;9858:130;;;9905:7;;:45;;;-1:-1:-1;;;9905:45:73;;;;;;;;;;-1:-1:-1;;;;;9905:7:73;;;;:27;;:45;;;;;;;;;;;;;;;:7;:45;;;5:2:-1;;;;30:1;27;20:12;5:2;9905:45:73;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9905:45:73;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9905:45:73;9858:130;9847:141;;9728:332;;;;10030:19;10019:30;;9728:332;10086:22;10069:519;10114:8;10110:1;:12;10069:519;;;10154:22;10179:25;;;:22;:25;;;;;;10222:19;10218:179;;10346:16;;10278:104;;10323:40;;10324:16;:9;10338:1;10324:16;:13;:16;:::i;:::-;10323:22;:40;:22;:40;:::i;:::-;10278:18;;:104;:22;:104;:::i;:::-;10261:121;;10218:179;10431:15;;10414:14;:32;10410:70;;;-1:-1:-1;10465:15:73;;10410:70;10510:67;10528:48;10550:6;10558:14;10574:1;10528:21;:48::i;:::-;10510:13;;:67;:17;:67;:::i;:::-;10494:83;-1:-1:-1;;890:7:75;10124:14:73;10069:519;;;-1:-1:-1;10622:8:73;;-1:-1:-1;10622:8:73;;10649:41;1177:7:75;10649:28:73;:13;1012:4:75;10649:28:73;:17;:28;:::i;:41::-;10640:50;;8541:2156;;;;;;;;;;;;;:::o;5161:100::-;1106:9:184;:7;:9::i;:::-;1098:34;;;;;-1:-1:-1;;;1098:34:184;;;;;;;;;;;;-1:-1:-1;;;1098:34:184;;;;;;;;;;;;;;;5231:11:73;:23;5161:100::o;1652:50:75:-;;;;;;;;;;;;;:::o;4594:85:73:-;4656:16;4666:5;4656:9;:16::i;:::-;4594:85;:::o;3438:184::-;1106:9:184;:7;:9::i;:::-;1098:34;;;;;-1:-1:-1;;;1098:34:184;;;;;;;;;;;;-1:-1:-1;;;1098:34:184;;;;;;;;;;;;;;;3540:3:73;;:28;;;-1:-1:-1;;;3540:28:73;;3562:4;3540:28;;;;;;3524:13;;-1:-1:-1;;;;;3540:3:73;;:13;;:28;;;;;;;;;;;;;;:3;:28;;;5:2:-1;;;;30:1;27;20:12;5:2;3540:28:73;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3540:28:73;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3540:28:73;;-1:-1:-1;3578:37:73;3591:16;3540:28;3578:12;:37::i;:::-;1142:1:184;3438:184:73;:::o;1474:107:184:-;1106:9;:7;:9::i;:::-;1098:34;;;;;-1:-1:-1;;;1098:34:184;;;;;;;;;;;;-1:-1:-1;;;1098:34:184;;;;;;;;;;;;;;;1546:28;1565:8;1546:18;:28::i;4183:158:73:-;4251:7;;:44;;;-1:-1:-1;;;4251:44:73;;4279:15;4251:44;;;;;;4222:26;;-1:-1:-1;;;;;4251:7:73;;:27;;:44;;;;;;;;;;;;;;:7;:44;;;5:2:-1;;;;30:1;27;20:12;5:2;4251:44:73;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4251:44:73;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4251:44:73;;-1:-1:-1;4305:29:73;4251:44;4305:9;:29::i;778:115:147:-;861:11;;:25;;;-1:-1:-1;;;861:25:147;;;;835:7;;-1:-1:-1;;;;;861:11:147;;:23;;:25;;;;;;;;;;;;;;:11;:25;;;5:2:-1;;;;30:1;27;20:12;5:2;861:25:147;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;861:25:147;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;861:25:147;;-1:-1:-1;778:115:147;:::o;693:630:178:-;753:4;1226:20;;1059:66;1273:23;;;;;;:42;;-1:-1:-1;1300:15:178;;;1273:42;1265:51;693:630;-1:-1:-1;;;;693:630:178:o;795:96:179:-;874:10;795:96;:::o;6479:273:73:-;6559:3;;:28;;;-1:-1:-1;;;6559:28:73;;6581:4;6559:28;;;;;;6591:6;;-1:-1:-1;;;;;6559:3:73;;:13;;:28;;;;;;;;;;;;;;:3;:28;;;5:2:-1;;;;30:1;27;20:12;5:2;6559:28:73;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6559:28:73;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6559:28:73;:38;;6551:82;;;;;-1:-1:-1;;;6551:82:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6670:24:73;;;;;;:15;:24;;;;;;:36;;6699:6;6670:36;:28;:36;:::i;:::-;-1:-1:-1;;;;;6643:24:73;;;;;;:15;:24;;;;;:63;6716:29;6659:7;6738:6;6716:12;:29::i;842:176:188:-;900:7;931:5;;;954:6;;;;946:46;;;;;-1:-1:-1;;;946:46:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;1010:1;-1:-1:-1;842:176:188;;;;;:::o;1282:134::-;1340:7;1366:43;1370:1;1373;1366:43;;;;;;;;;;;;;;;;;:3;:43::i;3111:130::-;3169:7;3195:39;3199:1;3202;3195:39;;;;;;;;;;;;;;;;;:3;:39::i;5668:546:73:-;5849:7;;:53;;;-1:-1:-1;;;5849:53:73;;-1:-1:-1;;;;;5849:53:73;;;;;;;;;;;;;;;;;;;;;5800:21;;5849:7;;;;;:29;;:53;;;;;;;;;;;;;;;:7;:53;;;5:2:-1;;;;30:1;27;20:12;5:2;5849:53:73;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5849:53:73;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5849:53:73;5916:9;;5833:69;;;;;-1:-1:-1;5916:13:73;;;;:35;;;5945:6;5933:9;;:18;5916:35;5912:296;;;6015:7;;6054:9;;6015:56;;;-1:-1:-1;;;6015:56:73;;-1:-1:-1;;;;;6015:56:73;;;;;;;;;;;;;;;;;;;;;;5967:29;;6015:7;;;;;:29;;:56;;;;;;;;;;;;;;;:7;:56;;;5:2:-1;;;;30:1;27;20:12;5:2;6015:56:73;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6015:56:73;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6015:56:73;5967:104;;;-1:-1:-1;6089:37:73;;;6085:113;;;6162:21;6146:37;;6085:113;5912:296;;5668:546;;;;;:::o;2197:459:188:-;2255:7;2496:6;2492:45;;-1:-1:-1;2525:1:188;2518:8;;2492:45;2559:5;;;2563:1;2559;:5;:1;2582:5;;;;;:10;2574:56;;;;-1:-1:-1;;;2574:56:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7585:458:73;7668:15;7648:17;7749:1;7722:24;:22;:24::i;:::-;7768:39;;;;:22;:39;;;;;;7722:28;;;;-1:-1:-1;7768:44:73;7760:81;;;;;-1:-1:-1;;;7760:81:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;7851:23;7889:80;7913:54;7950:16;;7914:30;7928:15;7914:9;:13;;:30;;;;:::i;7913:54::-;7889:18;;:80;:22;:80;:::i;:::-;7979:39;;;;:22;:39;;;;;;:57;;;;-1:-1:-1;;;7585:458:73:o;6934:243::-;7019:12;7011:39;;;;;-1:-1:-1;;;7011:39:73;;;;;;;;;;;;-1:-1:-1;;;7011:39:73;;;;;;;;;;;;;;;7068:3;;:32;;;-1:-1:-1;;;7068:32:73;;-1:-1:-1;;;;;7068:32:73;;;;;;;;;;;;;;;:3;;;;;:12;;:32;;;;;;;;;;;;;;:3;;:32;;;5:2:-1;;;;30:1;27;20:12;5:2;7068:32:73;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7068:32:73;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7068:32:73;7060:60;;;;;-1:-1:-1;;;7060:60:73;;;;;;;;;;;;-1:-1:-1;;;7060:60:73;;;;;;;;;;;;;;;7135:35;;;;;;;;-1:-1:-1;;;;;7135:35:73;;;;;;;;;;;;;6934:243;;:::o;1682:225:184:-;-1:-1:-1;;;;;1755:22:184;;1747:73;;;;-1:-1:-1;;;1747:73:184;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1856:6;;;1835:38;;-1:-1:-1;;;;;1835:38:184;;;;1856:6;;;1835:38;;;1883:6;:17;;-1:-1:-1;;;;;;1883:17:184;-1:-1:-1;;;;;1883:17:184;;;;;;;;;;1682:225::o;1740:217:188:-;1856:7;1891:12;1883:6;;;;1875:29;;;;-1:-1:-1;;;1875:29:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1875:29:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1926:5:188;;;1740:217::o;3756:369::-;3872:7;3973:12;3965:6;3957:29;;;;-1:-1:-1;;;3957:29:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;3957:29:188;;3996:9;4012:1;4008;:5;;;;;;;3756:369;-1:-1:-1;;;;;3756:369:188:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "BASE_RATE()": "41910f90",
    "DIVISOR()": "3410fe6e",
    "SOV()": "08dcb360",
    "TWO_WEEKS()": "934d1fa4",
    "averageBlockTime()": "233dedf1",
    "blockMockUp()": "5004b6e4",
    "checkpointBlockDetails(uint256)": "12671c26",
    "claimedBalances(address)": "d42b779d",
    "collectReward(uint256)": "bd3507da",
    "deploymentBlock()": "82100e3f",
    "getStakerCurrentReward(bool,uint256)": "ceee6855",
    "initialize(address,address)": "485cc955",
    "isOwner()": "8f32d59b",
    "maxDuration()": "6db5c8fd",
    "owner()": "8da5cb5b",
    "setAverageBlockTime(uint256)": "3736d853",
    "setBlock()": "fe5afe51",
    "setBlockMockUpAddr(address)": "a377f244",
    "setHistoricalBlock(uint256)": "dffd3562",
    "setMaxDuration(uint256)": "cf0f34c4",
    "staking()": "4cf088d9",
    "startTime()": "78e97925",
    "stop()": "07da68f5",
    "stopBlock()": "44bb3b2f",
    "transferOwnership(address)": "f2fde38b",
    "withdrawTokensByOwner(address)": "e62a9f1e",
    "withdrawals(address)": "7a9262a2"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardWithdrawn\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"BASE_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DIVISOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SOV\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TWO_WEEKS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"averageBlockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"blockMockUp\",\"outputs\":[{\"internalType\":\"contract BlockMockUp\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"checkpointBlockDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimedBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"restartTime\",\"type\":\"uint256\"}],\"name\":\"collectReward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deploymentBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"considerMaxDuration\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"restartTime\",\"type\":\"uint256\"}],\"name\":\"getStakerCurrentReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lastWithdrawalInterval\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_SOV\",\"type\":\"address\"},{\"internalType\":\"contract IStaking\",\"name\":\"_staking\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_averageBlockTime\",\"type\":\"uint256\"}],\"name\":\"setAverageBlockTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setBlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_blockMockUp\",\"type\":\"address\"}],\"name\":\"setBlockMockUpAddr\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"setHistoricalBlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"setMaxDuration\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"staking\",\"outputs\":[{\"internalType\":\"contract IStaking\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiverAddress\",\"type\":\"address\"}],\"name\":\"withdrawTokensByOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"withdrawals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"collectReward(uint256)\":{\"details\":\"User calls this function to collect SOV staking rewards as per the SIP-0024 program. The weighted stake is calculated using getPriorWeightedStake. Block number sent to the functon must be a finalised block, hence we deduct 1 from the current block. User is only allowed to withdraw after intervals of 14 days.\",\"params\":{\"restartTime\":\"The time from which the staking rewards calculation shall restart. The issue is that we can only run for a max duration and if someone stakes for the first time after the max duration is over, the reward will always return 0. Thus, we need to restart from the duration that elapsed without generating rewards.\"}},\"getStakerCurrentReward(bool,uint256)\":{\"details\":\"The collectReward() function internally calls this function to calculate reward amount\",\"params\":{\"considerMaxDuration\":\"True: Runs for the maximum duration - used in tx not to run out of gas False - to query total rewards\",\"restartTime\":\"The time from which the staking rewards calculation shall restart.\"},\"return\":\"The timestamp of last withdrawalThe accumulated reward\"},\"initialize(address,address)\":{\"params\":{\"_SOV\":\"SOV token address\",\"_staking\":\"StakingProxy address should be passed\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"setAverageBlockTime(uint256)\":{\"details\":\"If average block time significantly changes, we can update it here and use for block number calculation\"},\"setBlockMockUpAddr(address)\":{\"params\":{\"_blockMockUp\":\"the address of BlockMockUp\"}},\"setHistoricalBlock(uint256)\":{\"params\":{\"_time\":\"Exact staking checkpoint time\"}},\"setMaxDuration(uint256)\":{\"details\":\"Rewards can be collected for a maximum duration at a time. This is to avoid Block Gas Limit failures. Setting it zero would mean that it will loop through the entire duration since the start of rewards program. It should ideally be set to a value, for which the rewards can be easily processed.\",\"params\":{\"_duration\":\"Max duration for which rewards can be collected at a go (in seconds)\"}},\"stop()\":{\"details\":\"All stakes existing on the contract at the point in time of cancellation continue accruing rewards until the end of the staking period being rewarded\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawTokensByOwner(address)\":{\"params\":{\"_receiverAddress\":\"The address where the tokens has to be transferred.\"}}},\"title\":\"Staking Rewards Contract MockUp\"},\"userdoc\":{\"methods\":{\"collectReward(uint256)\":{\"notice\":\"Collect rewards\"},\"getStakerCurrentReward(bool,uint256)\":{\"notice\":\"Get staker's current accumulated reward\"},\"initialize(address,address)\":{\"notice\":\"Replacement of constructor by initialize function for Upgradable Contracts This function will be called only once by the owner.\"},\"setAverageBlockTime(uint256)\":{\"notice\":\"Changes average block time - based on blockchain\"},\"setBlock()\":{\"notice\":\"This function computes the last staking checkpoint and calculates the corresponding block number using the average block time which is then added to the mapping `checkpointBlockDetails`.\"},\"setBlockMockUpAddr(address)\":{\"notice\":\"gets block number from BlockMockUp\"},\"setHistoricalBlock(uint256)\":{\"notice\":\"This function computes the block number using the average block time for a given historical checkpoint which is added to the mapping `checkpointBlockDetails`.\"},\"setMaxDuration(uint256)\":{\"notice\":\"Sets the max duration\"},\"stop()\":{\"notice\":\"Stops the current rewards program.\"},\"withdrawTokensByOwner(address)\":{\"notice\":\"Withdraws all token from the contract by Multisig.\"}},\"notice\":\"This is used for Testing\"}},\"settings\":{\"compilationTarget\":{\"contracts/mockup/StakingRewardsMockUp.sol\":\"StakingRewardsMockUp\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@ethereum-waffle/=node_modules/@ethereum-waffle/\",\":ds-test/=foundry/lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=foundry/lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":truffle/=node_modules/truffle/\"]},\"sources\":{\"contracts/governance/Staking/interfaces/IStaking.sol\":{\"keccak256\":\"0x91c38931d2bc625ced52bfe0bedd0d9ad412d032d9841124a98e17cfcb9f646b\",\"urls\":[\"bzz-raw://d5a533e8c8ee3a08689d9a2c2975ee35b53fa75ed2078821e718019b0b63f861\",\"dweb:/ipfs/QmdT45TJBwSrD6vL87kN1hWSXdujM85sQcejWeRr4L1ztr\"]},\"contracts/governance/StakingRewards/StakingRewards.sol\":{\"keccak256\":\"0xb9d3f057967f01a6a5c8e708151bc31ce7a051b8871fede541676213aa1ca57a\",\"urls\":[\"bzz-raw://6bbe4aec6d5c284aaf5d9d892c12f26ac85f83a0f372ca7ae61f04a72e6d07bf\",\"dweb:/ipfs/QmTGyQNcwoNiVak7H7Y89DLSHQyRBCqY58NjA3bdDpGabk\"]},\"contracts/governance/StakingRewards/StakingRewardsStorage.sol\":{\"keccak256\":\"0xb0f1c61332b0e083be1812f0729bde43e40d40e03d4bbff4141f1784ee4b4b5c\",\"urls\":[\"bzz-raw://37db108d711b1e4ef23dfa3f5aa8db7b5c2da71a6ac7a9326d9de66c16afe308\",\"dweb:/ipfs/QmPZuidFnjbSa2aqmdsW6qGLpD3pWCqrhQHZzJ4t3miCpU\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xea0bb1bf7d022130bb42a4efdfd875ef76ac5ac730a94ddd7b8c9949d4253855\",\"urls\":[\"bzz-raw://2050b03a2a1d4203698261daf2f46749bf5b72e3d23c272553e047e6bea4af40\",\"dweb:/ipfs/QmPY8bbNv3KxnyQ4Z6DtHkYu2U1Kfd7ooRDRUWNuw6v4Jt\"]},\"contracts/mockup/BlockMockUp.sol\":{\"keccak256\":\"0x71900b9ec438044a2df243aced9c8895b1720de6fc1ee7c101535a61cbca0eaf\",\"urls\":[\"bzz-raw://b88004197340003caaed064d07df884b0412a5f08684fbf1a469963752cc129f\",\"dweb:/ipfs/QmVMrwhRviW7AhFV2vR6mR6eEu3CnDDsqYHsbtRw21Rpvk\"]},\"contracts/mockup/StakingRewardsMockUp.sol\":{\"keccak256\":\"0x61f23d1db3f28e99eeb7c9e1881e74e9b838684e04fd7c078181b882f7a600f8\",\"urls\":[\"bzz-raw://ce2715fccf012778ba8bde6e76164c50ae9389e86d03143a0c69d320d2e3c63e\",\"dweb:/ipfs/QmacasiHSRN1R3Px9wPqUkE5hD8Vao1G5i17t6xdziGHmn\"]},\"contracts/openzeppelin/Address.sol\":{\"keccak256\":\"0x23df48a01dbac9b25e86c9131174fb7752bbc7e741e63f1aa982de22e055ad54\",\"urls\":[\"bzz-raw://0928673cfdca6f6917432e1cff628b726b4396ed0f4b08d3281a7ebbdb2380e3\",\"dweb:/ipfs/QmY12enUUEaE7sC5PZAdqJo63JxaH2FqVJtHZxxB9HzVYE\"]},\"contracts/openzeppelin/Context.sol\":{\"keccak256\":\"0x7860cb1591dbd66bb497c60c46866d9fcdb56c73306ed86b25801000af1c7b2b\",\"urls\":[\"bzz-raw://79e480eab5cb03c034f7fb2c177f23874fddebbb3514d773729bb094a0fda826\",\"dweb:/ipfs/QmTfDHE4fnQE3gfycu7NePREWfWFgJgmaEmHDn4uyTnMBP\"]},\"contracts/openzeppelin/Ownable.sol\":{\"keccak256\":\"0x94496c375b3e82d87d7f01ce1577f008fab374312cf93012a0eca716e6aadb3a\",\"urls\":[\"bzz-raw://ea268f87bc9d256b99aae4d98f23931f485295b5720f505e0554223c9b54431a\",\"dweb:/ipfs/QmWCLqTijearegiDuWyhrkRQXXACT1sVUG6cF3L9pszb6Y\"]},\"contracts/openzeppelin/SafeMath.sol\":{\"keccak256\":\"0xbff8d6273e1a6870d1a142c0c23acd63a4dd47760f250390f49ee56333bcb6e8\",\"urls\":[\"bzz-raw://379880c293771d9db34b4db282bd22f0536d41f1db2a7fb887124984a5bcd719\",\"dweb:/ipfs/QmUrUzEJPp9WxyvFFZSaqv7qjnSwrkApNUkMny5cCcY2a6\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.5.17+commit.d19bba13"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardWithdrawn",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BASE_RATE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DIVISOR",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SOV",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TWO_WEEKS",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "averageBlockTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "blockMockUp",
          "outputs": [
            {
              "internalType": "contract BlockMockUp",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkpointBlockDetails",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "claimedBalances",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "restartTime",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "collectReward"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "deploymentBlock",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "considerMaxDuration",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "restartTime",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakerCurrentReward",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "lastWithdrawalInterval",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_SOV",
              "type": "address"
            },
            {
              "internalType": "contract IStaking",
              "name": "_staking",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isOwner",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxDuration",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_averageBlockTime",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAverageBlockTime"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setBlock"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_blockMockUp",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setBlockMockUpAddr"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_time",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setHistoricalBlock"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_duration",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMaxDuration"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "staking",
          "outputs": [
            {
              "internalType": "contract IStaking",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "startTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stop"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stopBlock",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiverAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawTokensByOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "withdrawals",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "methods": {
          "collectReward(uint256)": {
            "details": "User calls this function to collect SOV staking rewards as per the SIP-0024 program. The weighted stake is calculated using getPriorWeightedStake. Block number sent to the functon must be a finalised block, hence we deduct 1 from the current block. User is only allowed to withdraw after intervals of 14 days.",
            "params": {
              "restartTime": "The time from which the staking rewards calculation shall restart. The issue is that we can only run for a max duration and if someone stakes for the first time after the max duration is over, the reward will always return 0. Thus, we need to restart from the duration that elapsed without generating rewards."
            }
          },
          "getStakerCurrentReward(bool,uint256)": {
            "details": "The collectReward() function internally calls this function to calculate reward amount",
            "params": {
              "considerMaxDuration": "True: Runs for the maximum duration - used in tx not to run out of gas False - to query total rewards",
              "restartTime": "The time from which the staking rewards calculation shall restart."
            },
            "return": "The timestamp of last withdrawalThe accumulated reward"
          },
          "initialize(address,address)": {
            "params": {
              "_SOV": "SOV token address",
              "_staking": "StakingProxy address should be passed"
            }
          },
          "isOwner()": {
            "details": "Returns true if the caller is the current owner."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "setAverageBlockTime(uint256)": {
            "details": "If average block time significantly changes, we can update it here and use for block number calculation"
          },
          "setBlockMockUpAddr(address)": {
            "params": {
              "_blockMockUp": "the address of BlockMockUp"
            }
          },
          "setHistoricalBlock(uint256)": {
            "params": {
              "_time": "Exact staking checkpoint time"
            }
          },
          "setMaxDuration(uint256)": {
            "details": "Rewards can be collected for a maximum duration at a time. This is to avoid Block Gas Limit failures. Setting it zero would mean that it will loop through the entire duration since the start of rewards program. It should ideally be set to a value, for which the rewards can be easily processed.",
            "params": {
              "_duration": "Max duration for which rewards can be collected at a go (in seconds)"
            }
          },
          "stop()": {
            "details": "All stakes existing on the contract at the point in time of cancellation continue accruing rewards until the end of the staking period being rewarded"
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "withdrawTokensByOwner(address)": {
            "params": {
              "_receiverAddress": "The address where the tokens has to be transferred."
            }
          }
        }
      },
      "userdoc": {
        "methods": {
          "collectReward(uint256)": {
            "notice": "Collect rewards"
          },
          "getStakerCurrentReward(bool,uint256)": {
            "notice": "Get staker's current accumulated reward"
          },
          "initialize(address,address)": {
            "notice": "Replacement of constructor by initialize function for Upgradable Contracts This function will be called only once by the owner."
          },
          "setAverageBlockTime(uint256)": {
            "notice": "Changes average block time - based on blockchain"
          },
          "setBlock()": {
            "notice": "This function computes the last staking checkpoint and calculates the corresponding block number using the average block time which is then added to the mapping `checkpointBlockDetails`."
          },
          "setBlockMockUpAddr(address)": {
            "notice": "gets block number from BlockMockUp"
          },
          "setHistoricalBlock(uint256)": {
            "notice": "This function computes the block number using the average block time for a given historical checkpoint which is added to the mapping `checkpointBlockDetails`."
          },
          "setMaxDuration(uint256)": {
            "notice": "Sets the max duration"
          },
          "stop()": {
            "notice": "Stops the current rewards program."
          },
          "withdrawTokensByOwner(address)": {
            "notice": "Withdraws all token from the contract by Multisig."
          }
        }
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@ethereum-waffle/=node_modules/@ethereum-waffle/",
        ":ds-test/=foundry/lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=foundry/lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":truffle/=node_modules/truffle/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "compilationTarget": {
        "contracts/mockup/StakingRewardsMockUp.sol": "StakingRewardsMockUp"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/governance/Staking/interfaces/IStaking.sol": {
        "keccak256": "0x91c38931d2bc625ced52bfe0bedd0d9ad412d032d9841124a98e17cfcb9f646b",
        "urls": [
          "bzz-raw://d5a533e8c8ee3a08689d9a2c2975ee35b53fa75ed2078821e718019b0b63f861",
          "dweb:/ipfs/QmdT45TJBwSrD6vL87kN1hWSXdujM85sQcejWeRr4L1ztr"
        ],
        "license": null
      },
      "contracts/governance/StakingRewards/StakingRewards.sol": {
        "keccak256": "0xb9d3f057967f01a6a5c8e708151bc31ce7a051b8871fede541676213aa1ca57a",
        "urls": [
          "bzz-raw://6bbe4aec6d5c284aaf5d9d892c12f26ac85f83a0f372ca7ae61f04a72e6d07bf",
          "dweb:/ipfs/QmTGyQNcwoNiVak7H7Y89DLSHQyRBCqY58NjA3bdDpGabk"
        ],
        "license": null
      },
      "contracts/governance/StakingRewards/StakingRewardsStorage.sol": {
        "keccak256": "0xb0f1c61332b0e083be1812f0729bde43e40d40e03d4bbff4141f1784ee4b4b5c",
        "urls": [
          "bzz-raw://37db108d711b1e4ef23dfa3f5aa8db7b5c2da71a6ac7a9326d9de66c16afe308",
          "dweb:/ipfs/QmPZuidFnjbSa2aqmdsW6qGLpD3pWCqrhQHZzJ4t3miCpU"
        ],
        "license": null
      },
      "contracts/interfaces/IERC20.sol": {
        "keccak256": "0xea0bb1bf7d022130bb42a4efdfd875ef76ac5ac730a94ddd7b8c9949d4253855",
        "urls": [
          "bzz-raw://2050b03a2a1d4203698261daf2f46749bf5b72e3d23c272553e047e6bea4af40",
          "dweb:/ipfs/QmPY8bbNv3KxnyQ4Z6DtHkYu2U1Kfd7ooRDRUWNuw6v4Jt"
        ],
        "license": null
      },
      "contracts/mockup/BlockMockUp.sol": {
        "keccak256": "0x71900b9ec438044a2df243aced9c8895b1720de6fc1ee7c101535a61cbca0eaf",
        "urls": [
          "bzz-raw://b88004197340003caaed064d07df884b0412a5f08684fbf1a469963752cc129f",
          "dweb:/ipfs/QmVMrwhRviW7AhFV2vR6mR6eEu3CnDDsqYHsbtRw21Rpvk"
        ],
        "license": null
      },
      "contracts/mockup/StakingRewardsMockUp.sol": {
        "keccak256": "0x61f23d1db3f28e99eeb7c9e1881e74e9b838684e04fd7c078181b882f7a600f8",
        "urls": [
          "bzz-raw://ce2715fccf012778ba8bde6e76164c50ae9389e86d03143a0c69d320d2e3c63e",
          "dweb:/ipfs/QmacasiHSRN1R3Px9wPqUkE5hD8Vao1G5i17t6xdziGHmn"
        ],
        "license": null
      },
      "contracts/openzeppelin/Address.sol": {
        "keccak256": "0x23df48a01dbac9b25e86c9131174fb7752bbc7e741e63f1aa982de22e055ad54",
        "urls": [
          "bzz-raw://0928673cfdca6f6917432e1cff628b726b4396ed0f4b08d3281a7ebbdb2380e3",
          "dweb:/ipfs/QmY12enUUEaE7sC5PZAdqJo63JxaH2FqVJtHZxxB9HzVYE"
        ],
        "license": null
      },
      "contracts/openzeppelin/Context.sol": {
        "keccak256": "0x7860cb1591dbd66bb497c60c46866d9fcdb56c73306ed86b25801000af1c7b2b",
        "urls": [
          "bzz-raw://79e480eab5cb03c034f7fb2c177f23874fddebbb3514d773729bb094a0fda826",
          "dweb:/ipfs/QmTfDHE4fnQE3gfycu7NePREWfWFgJgmaEmHDn4uyTnMBP"
        ],
        "license": null
      },
      "contracts/openzeppelin/Ownable.sol": {
        "keccak256": "0x94496c375b3e82d87d7f01ce1577f008fab374312cf93012a0eca716e6aadb3a",
        "urls": [
          "bzz-raw://ea268f87bc9d256b99aae4d98f23931f485295b5720f505e0554223c9b54431a",
          "dweb:/ipfs/QmWCLqTijearegiDuWyhrkRQXXACT1sVUG6cF3L9pszb6Y"
        ],
        "license": null
      },
      "contracts/openzeppelin/SafeMath.sol": {
        "keccak256": "0xbff8d6273e1a6870d1a142c0c23acd63a4dd47760f250390f49ee56333bcb6e8",
        "urls": [
          "bzz-raw://379880c293771d9db34b4db282bd22f0536d41f1db2a7fb887124984a5bcd719",
          "dweb:/ipfs/QmUrUzEJPp9WxyvFFZSaqv7qjnSwrkApNUkMny5cCcY2a6"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/mockup/StakingRewardsMockUp.sol",
    "id": 39636,
    "exportedSymbols": {
      "StakingRewardsMockUp": [
        39635
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:896:147",
    "nodes": [
      {
        "id": 39592,
        "nodeType": "PragmaDirective",
        "src": "0:24:147",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".17"
        ]
      },
      {
        "id": 39593,
        "nodeType": "ImportDirective",
        "src": "26:57:147",
        "nodes": [],
        "absolutePath": "contracts/governance/StakingRewards/StakingRewards.sol",
        "file": "../governance/StakingRewards/StakingRewards.sol",
        "scope": 39636,
        "sourceUnit": 23552,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 39594,
        "nodeType": "ImportDirective",
        "src": "84:27:147",
        "nodes": [],
        "absolutePath": "contracts/mockup/BlockMockUp.sol",
        "file": "./BlockMockUp.sol",
        "scope": 39636,
        "sourceUnit": 37151,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 39635,
        "nodeType": "ContractDefinition",
        "src": "201:694:147",
        "nodes": [
          {
            "id": 39598,
            "nodeType": "VariableDeclaration",
            "src": "297:30:147",
            "nodes": [],
            "constant": false,
            "name": "blockMockUp",
            "scope": 39635,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BlockMockUp_$37150",
              "typeString": "contract BlockMockUp"
            },
            "typeName": {
              "contractScope": null,
              "id": 39597,
              "name": "BlockMockUp",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 37150,
              "src": "297:11:147",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BlockMockUp_$37150",
                "typeString": "contract BlockMockUp"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "id": 39601,
            "nodeType": "UsingForDirective",
            "src": "334:27:147",
            "nodes": [],
            "libraryName": {
              "contractScope": null,
              "id": 39599,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 55835,
              "src": "340:8:147",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$55835",
                "typeString": "library SafeMath"
              }
            },
            "typeName": {
              "id": 39600,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "353:7:147",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 39624,
            "nodeType": "FunctionDefinition",
            "src": "487:200:147",
            "nodes": [],
            "body": {
              "id": 39623,
              "nodeType": "Block",
              "src": "554:133:147",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 39613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 39609,
                          "name": "_blockMockUp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39603,
                          "src": "572:12:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 39611,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "596:1:147",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 39610,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "588:7:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 39612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "588:10:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "572:26:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "626c6f636b206d6f636b7570206164647265737320696e76616c6964",
                        "id": 39614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "600:30:147",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baab075332c3955894af0dfe7dd6f42f519093901bb2a97b9392a6eaa3b6218d",
                          "typeString": "literal_string \"block mockup address invalid\""
                        },
                        "value": "block mockup address invalid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baab075332c3955894af0dfe7dd6f42f519093901bb2a97b9392a6eaa3b6218d",
                          "typeString": "literal_string \"block mockup address invalid\""
                        }
                      ],
                      "id": 39608,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        62994,
                        62995
                      ],
                      "referencedDeclaration": 62995,
                      "src": "564:7:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 39615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "564:67:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39616,
                  "nodeType": "ExpressionStatement",
                  "src": "564:67:147"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 39621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 39617,
                      "name": "blockMockUp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39598,
                      "src": "641:11:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BlockMockUp_$37150",
                        "typeString": "contract BlockMockUp"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 39619,
                          "name": "_blockMockUp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39603,
                          "src": "667:12:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 39618,
                        "name": "BlockMockUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37150,
                        "src": "655:11:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BlockMockUp_$37150_$",
                          "typeString": "type(contract BlockMockUp)"
                        }
                      },
                      "id": 39620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "655:25:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BlockMockUp_$37150",
                        "typeString": "contract BlockMockUp"
                      }
                    },
                    "src": "641:39:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BlockMockUp_$37150",
                      "typeString": "contract BlockMockUp"
                    }
                  },
                  "id": 39622,
                  "nodeType": "ExpressionStatement",
                  "src": "641:39:147"
                }
              ]
            },
            "documentation": "@notice gets block number from BlockMockUp\n@param _blockMockUp the address of BlockMockUp",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 39606,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 39605,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 55195,
                  "src": "544:9:147",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "544:9:147"
              }
            ],
            "name": "setBlockMockUpAddr",
            "parameters": {
              "id": 39604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39603,
                  "name": "_blockMockUp",
                  "nodeType": "VariableDeclaration",
                  "scope": 39624,
                  "src": "515:20:147",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39602,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "515:7:147",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "514:22:147"
            },
            "returnParameters": {
              "id": 39607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "554:0:147"
            },
            "scope": 39635,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "id": 39634,
            "nodeType": "FunctionDefinition",
            "src": "778:115:147",
            "nodes": [],
            "body": {
              "id": 39633,
              "nodeType": "Block",
              "src": "844:49:147",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 39629,
                        "name": "blockMockUp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39598,
                        "src": "861:11:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BlockMockUp_$37150",
                          "typeString": "contract BlockMockUp"
                        }
                      },
                      "id": 39630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getBlockNum",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37139,
                      "src": "861:23:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 39631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "861:25:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 39628,
                  "id": 39632,
                  "nodeType": "Return",
                  "src": "854:32:147"
                }
              ]
            },
            "documentation": "@notice Determine the current Block Number from BlockMockUp\n",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getCurrentBlockNumber",
            "parameters": {
              "id": 39625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "809:2:147"
            },
            "returnParameters": {
              "id": 39628,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39627,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 39634,
                  "src": "835:7:147",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39626,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "835:7:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "834:9:147"
            },
            "scope": 39635,
            "stateMutability": "view",
            "superFunction": 23322,
            "visibility": "internal"
          }
        ],
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 39595,
              "name": "StakingRewards",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 23551,
              "src": "234:14:147",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingRewards_$23551",
                "typeString": "contract StakingRewards"
              }
            },
            "id": 39596,
            "nodeType": "InheritanceSpecifier",
            "src": "234:14:147"
          }
        ],
        "contractDependencies": [
          23551,
          23607,
          54570,
          55243
        ],
        "contractKind": "contract",
        "documentation": "@title Staking Rewards Contract MockUp\n@notice This is used for Testing\n",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          39635,
          23551,
          23607,
          55243,
          54570
        ],
        "name": "StakingRewardsMockUp",
        "scope": 39636
      }
    ]
  },
  "id": 147
}