{
  "address": "0x93B1F35d9c9F5abED48E44782D58A6804B967Ee3",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "prevModuleContractAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newModuleContractAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "module",
          "type": "bytes32"
        }
      ],
      "name": "ProtocolModuleContractReplaced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sourceTokenAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "destTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20[]",
          "name": "defaultPath",
          "type": "address[]"
        }
      ],
      "name": "RemoveDefaultPathConversion",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "SetAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "SetAffiliateFeePercent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "SetAffiliateTradingTokenFeePercent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "SetBorrowingFeePercent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sourceTokenAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "destTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20[]",
          "name": "defaultPath",
          "type": "address[]"
        }
      ],
      "name": "SetDefaultPathConversion",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldController",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newController",
          "type": "address"
        }
      ],
      "name": "SetFeesController",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "SetLendingFeePercent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "SetLiquidationIncentivePercent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "loanPool",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "underlying",
          "type": "address"
        }
      ],
      "name": "SetLoanPool",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "SetLockedSOVAddress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "SetMaxSwapSize",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldMinReferrals",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newMinReferrals",
          "type": "uint256"
        }
      ],
      "name": "SetMinReferralsToPayoutAffiliates",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldPauser",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newPauser",
          "type": "address"
        }
      ],
      "name": "SetPauser",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldValue",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newValue",
          "type": "address"
        }
      ],
      "name": "SetPriceFeedContract",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldProtocol",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newProtocol",
          "type": "address"
        }
      ],
      "name": "SetProtocolAddress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldProtocolToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newProtocolToken",
          "type": "address"
        }
      ],
      "name": "SetProtocolTokenAddress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldRebatePercent",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRebatePercent",
          "type": "uint256"
        }
      ],
      "name": "SetRebatePercent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "SetRolloverBaseReward",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldRolloverFlexFeePercent",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRolloverFlexFeePercent",
          "type": "uint256"
        }
      ],
      "name": "SetRolloverFlexFeePercent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldTokenAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newTokenAddress",
          "type": "address"
        }
      ],
      "name": "SetSOVTokenAddress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldSovrynSwapContractRegistryAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newSovrynSwapContractRegistryAddress",
          "type": "address"
        }
      ],
      "name": "SetSovrynSwapContractRegistryAddress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sourceToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "destToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldSpecialRebatesPercent",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newSpecialRebatesPercent",
          "type": "uint256"
        }
      ],
      "name": "SetSpecialRebates",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "name": "SetSupportedTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "SetSwapExternalFeePercent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldValue",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newValue",
          "type": "address"
        }
      ],
      "name": "SetSwapsImplContract",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "SetTradingFeePercent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldBasisPoint",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newBasisPoint",
          "type": "uint256"
        }
      ],
      "name": "SetTradingRebateRewardsBasisPoint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldWethToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newWethToken",
          "type": "address"
        }
      ],
      "name": "SetWrbtcToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bool",
          "name": "oldFlag",
          "type": "bool"
        },
        {
          "indexed": true,
          "internalType": "bool",
          "name": "newFlag",
          "type": "bool"
        }
      ],
      "name": "TogglePaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawBorrowingFees",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lendingAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tradingAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "borrowingAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wRBTCConverted",
          "type": "uint256"
        }
      ],
      "name": "WithdrawFees",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawLendingFees",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawTradingFees",
      "type": "event"
    },
    {
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "affiliateFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "affiliateRewardsHeld",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "affiliateTradingTokenFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "affiliatesReferrerBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "affiliatesUserReferrer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "borrowerNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "borrowerOrders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "lockedAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "interestRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minLoanTerm",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxLoanTerm",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "createdTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expirationTimestamp",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "borrowingFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "borrowingFeeTokensHeld",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "borrowingFeeTokensPaid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "delegatedManagers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "depositProtocolToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "feeRebatePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "feesController",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDedicatedSOVRebate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "sourceTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "destTokenAddress",
          "type": "address"
        }
      ],
      "name": "getDefaultPathConversion",
      "outputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getFeeRebatePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "name": "getLoanPoolsList",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLockedSOVAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPauser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getProtocolAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSovTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "sourceTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "destTokenAddress",
          "type": "address"
        }
      ],
      "name": "getSpecialRebates",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "specialRebatesPercent",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSwapExternalFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTradingRebateRewardsBasisPoint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "loanPool",
          "type": "address"
        }
      ],
      "name": "isLoanPool",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isProtocolPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lenderInterest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "principalTotal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "owedPerDay",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "owedTotal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "paidTotal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "updatedTimestamp",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "lenderOrders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "lockedAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "interestRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minLoanTerm",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxLoanTerm",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "createdTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expirationTimestamp",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lendingFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lendingFeeTokensHeld",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lendingFeeTokensPaid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "liquidationIncentivePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "loanInterest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "owedPerDay",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "depositTotal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "updatedTimestamp",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "loanParams",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "loanToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minInitialMargin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maintenanceMargin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxLoanTerm",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "loanPoolToUnderlying",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "loans",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "loanParamsId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "pendingTradesId",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "principal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startMargin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startRate",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "lender",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lockedSOVAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "name": "logicTargets",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxDisagreement",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxSwapSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "minReferralsToPayout",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pause",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "priceFeeds",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "protocolAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "protocolTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "protocolTokenHeld",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "protocolTokenPaid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sourceTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "destTokenAddress",
          "type": "address"
        }
      ],
      "name": "removeDefaultPathConversion",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rolloverBaseReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rolloverFlexFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "setAffiliateFeePercent",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "setAffiliateTradingTokenFeePercent",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "setBorrowingFeePercent",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "defaultPath",
          "type": "address[]"
        }
      ],
      "name": "setDefaultPathConversion",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newController",
          "type": "address"
        }
      ],
      "name": "setFeesController",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "setLendingFeePercent",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "setLiquidationIncentivePercent",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "pools",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "assets",
          "type": "address[]"
        }
      ],
      "name": "setLoanPool",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newLockedSOVAddress",
          "type": "address"
        }
      ],
      "name": "setLockedSOVAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "setMaxDisagreement",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "setMaxSwapSize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMinReferrals",
          "type": "uint256"
        }
      ],
      "name": "setMinReferralsToPayoutAffiliates",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newPauser",
          "type": "address"
        }
      ],
      "name": "setPauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newContract",
          "type": "address"
        }
      ],
      "name": "setPriceFeedContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_protocolTokenAddress",
          "type": "address"
        }
      ],
      "name": "setProtocolTokenAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rebatePercent",
          "type": "uint256"
        }
      ],
      "name": "setRebatePercent",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "baseRewardValue",
          "type": "uint256"
        }
      ],
      "name": "setRolloverBaseReward",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newRolloverFlexFeePercent",
          "type": "uint256"
        }
      ],
      "name": "setRolloverFlexFeePercent",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newSovTokenAddress",
          "type": "address"
        }
      ],
      "name": "setSOVTokenAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "setSourceBuffer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newProtocolAddress",
          "type": "address"
        }
      ],
      "name": "setSovrynProtocolAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "setSovrynSwapContractRegistryAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sourceToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "destToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "specialRebatesPercent",
          "type": "uint256"
        }
      ],
      "name": "setSpecialRebates",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "addrs",
          "type": "address[]"
        },
        {
          "internalType": "bool[]",
          "name": "toggles",
          "type": "bool[]"
        }
      ],
      "name": "setSupportedTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "setSwapExternalFeePercent",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newContract",
          "type": "address"
        }
      ],
      "name": "setSwapsImplContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "setTradingFeePercent",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newBasisPoint",
          "type": "uint256"
        }
      ],
      "name": "setTradingRebateRewardsBasisPoint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "wrbtcTokenAddress",
          "type": "address"
        }
      ],
      "name": "setWrbtcToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "sourceBuffer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "sovTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "sovrynSwapContractRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "specialRebates",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "supportedTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "swapsImpl",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        }
      ],
      "name": "togglePaused",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tradingFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tradingFeeTokensHeld",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tradingFeeTokensPaid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "underlyingToLoanPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userNotFirstTradeFlag",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawBorrowingFees",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "withdrawFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalWRBTCWithdrawn",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawLendingFees",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawProtocolToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTradingFees",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wrbtcToken",
      "outputs": [
        {
          "internalType": "contract IWrbtcERC20",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xe0356928ce5bc9d657901b32bb718c58ed4833ad47869066102b2052d911a3bf",
  "receipt": {
    "to": null,
    "from": "0x13Be55487D37FE3C66EE7305e1e9C1ac85de75Ae",
    "contractAddress": "0x93B1F35d9c9F5abED48E44782D58A6804B967Ee3",
    "transactionIndex": 0,
    "gasUsed": "6540595",
    "logsBloom": "0x
    "blockHash": "0x96cff456501fe3d376450bf622af1e9e38da93a9deda46cbae4176561f7fd1db",
    "transactionHash": "0xe0356928ce5bc9d657901b32bb718c58ed4833ad47869066102b2052d911a3bf",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 5889042,
        "transactionHash": "0xe0356928ce5bc9d657901b32bb718c58ed4833ad47869066102b2052d911a3bf",
        "address": "0x93B1F35d9c9F5abED48E44782D58A6804B967Ee3",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000013be55487d37fe3c66ee7305e1e9c1ac85de75ae"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x96cff456501fe3d376450bf622af1e9e38da93a9deda46cbae4176561f7fd1db"
      }
    ],
    "blockNumber": 5889042,
    "cumulativeGasUsed": "6540595",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "9310031b42d2950fea7a6220c73f2cc4",
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"prevModuleContractAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newModuleContractAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"module\",\"type\":\"bytes32\"}],\"name\":\"ProtocolModuleContractReplaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sourceTokenAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"destTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"defaultPath\",\"type\":\"address[]\"}],\"name\":\"RemoveDefaultPathConversion\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"SetAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"SetAffiliateFeePercent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"SetAffiliateTradingTokenFeePercent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"SetBorrowingFeePercent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sourceTokenAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"destTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"defaultPath\",\"type\":\"address[]\"}],\"name\":\"SetDefaultPathConversion\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"SetFeesController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"SetLendingFeePercent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"SetLiquidationIncentivePercent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"loanPool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"}],\"name\":\"SetLoanPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"SetLockedSOVAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"SetMaxSwapSize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldMinReferrals\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMinReferrals\",\"type\":\"uint256\"}],\"name\":\"SetMinReferralsToPayoutAffiliates\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldPauser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPauser\",\"type\":\"address\"}],\"name\":\"SetPauser\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldValue\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newValue\",\"type\":\"address\"}],\"name\":\"SetPriceFeedContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldProtocol\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newProtocol\",\"type\":\"address\"}],\"name\":\"SetProtocolAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldProtocolToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newProtocolToken\",\"type\":\"address\"}],\"name\":\"SetProtocolTokenAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldRebatePercent\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRebatePercent\",\"type\":\"uint256\"}],\"name\":\"SetRebatePercent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"SetRolloverBaseReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldRolloverFlexFeePercent\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRolloverFlexFeePercent\",\"type\":\"uint256\"}],\"name\":\"SetRolloverFlexFeePercent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldTokenAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newTokenAddress\",\"type\":\"address\"}],\"name\":\"SetSOVTokenAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldSovrynSwapContractRegistryAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSovrynSwapContractRegistryAddress\",\"type\":\"address\"}],\"name\":\"SetSovrynSwapContractRegistryAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sourceToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"destToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldSpecialRebatesPercent\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSpecialRebatesPercent\",\"type\":\"uint256\"}],\"name\":\"SetSpecialRebates\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"SetSupportedTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"SetSwapExternalFeePercent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldValue\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newValue\",\"type\":\"address\"}],\"name\":\"SetSwapsImplContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"SetTradingFeePercent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldBasisPoint\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBasisPoint\",\"type\":\"uint256\"}],\"name\":\"SetTradingRebateRewardsBasisPoint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldWethToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newWethToken\",\"type\":\"address\"}],\"name\":\"SetWrbtcToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"oldFlag\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"newFlag\",\"type\":\"bool\"}],\"name\":\"TogglePaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawBorrowingFees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lendingAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tradingAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowingAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wRBTCConverted\",\"type\":\"uint256\"}],\"name\":\"WithdrawFees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawLendingFees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawTradingFees\",\"type\":\"event\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"affiliateFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"affiliateRewardsHeld\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"affiliateTradingTokenFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"affiliatesReferrerBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"affiliatesUserReferrer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"borrowerNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"borrowerOrders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lockedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLoanTerm\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLoanTerm\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimestamp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"borrowingFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"borrowingFeeTokensHeld\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"borrowingFeeTokensPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"delegatedManagers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositProtocolToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeRebatePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feesController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDedicatedSOVRebate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sourceTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destTokenAddress\",\"type\":\"address\"}],\"name\":\"getDefaultPathConversion\",\"outputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getFeeRebatePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"getLoanPoolsList\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLockedSOVAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPauser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getProtocolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSovTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sourceTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destTokenAddress\",\"type\":\"address\"}],\"name\":\"getSpecialRebates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"specialRebatesPercent\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSwapExternalFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTradingRebateRewardsBasisPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"loanPool\",\"type\":\"address\"}],\"name\":\"isLoanPool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isProtocolPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lenderInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"principalTotal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedPerDay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedTotal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paidTotal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedTimestamp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"lenderOrders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lockedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLoanTerm\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLoanTerm\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimestamp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lendingFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lendingFeeTokensHeld\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lendingFeeTokensPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"liquidationIncentivePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"loanInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"owedPerDay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositTotal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedTimestamp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"loanParams\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"loanToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minInitialMargin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maintenanceMargin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLoanTerm\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"loanPoolToUnderlying\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"loans\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"loanParamsId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"pendingTradesId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startMargin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startRate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lockedSOVAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"name\":\"logicTargets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxDisagreement\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxSwapSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minReferralsToPayout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"priceFeeds\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"protocolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"protocolTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"protocolTokenHeld\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"protocolTokenPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sourceTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destTokenAddress\",\"type\":\"address\"}],\"name\":\"removeDefaultPathConversion\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rolloverBaseReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rolloverFlexFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"setAffiliateFeePercent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"setAffiliateTradingTokenFeePercent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"setBorrowingFeePercent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"defaultPath\",\"type\":\"address[]\"}],\"name\":\"setDefaultPathConversion\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setFeesController\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"setLendingFeePercent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"setLiquidationIncentivePercent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"pools\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"setLoanPool\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newLockedSOVAddress\",\"type\":\"address\"}],\"name\":\"setLockedSOVAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"setMaxDisagreement\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"setMaxSwapSize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMinReferrals\",\"type\":\"uint256\"}],\"name\":\"setMinReferralsToPayoutAffiliates\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPauser\",\"type\":\"address\"}],\"name\":\"setPauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"name\":\"setPriceFeedContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_protocolTokenAddress\",\"type\":\"address\"}],\"name\":\"setProtocolTokenAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rebatePercent\",\"type\":\"uint256\"}],\"name\":\"setRebatePercent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"baseRewardValue\",\"type\":\"uint256\"}],\"name\":\"setRolloverBaseReward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newRolloverFlexFeePercent\",\"type\":\"uint256\"}],\"name\":\"setRolloverFlexFeePercent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newSovTokenAddress\",\"type\":\"address\"}],\"name\":\"setSOVTokenAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"setSourceBuffer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newProtocolAddress\",\"type\":\"address\"}],\"name\":\"setSovrynProtocolAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"setSovrynSwapContractRegistryAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sourceToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"specialRebatesPercent\",\"type\":\"uint256\"}],\"name\":\"setSpecialRebates\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addrs\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"toggles\",\"type\":\"bool[]\"}],\"name\":\"setSupportedTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"setSwapExternalFeePercent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"name\":\"setSwapsImplContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"setTradingFeePercent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBasisPoint\",\"type\":\"uint256\"}],\"name\":\"setTradingRebateRewardsBasisPoint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"wrbtcTokenAddress\",\"type\":\"address\"}],\"name\":\"setWrbtcToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sourceBuffer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sovTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sovrynSwapContractRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"specialRebates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"supportedTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"swapsImpl\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"togglePaused\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tradingFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tradingFeeTokensHeld\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tradingFeeTokensPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"underlyingToLoanPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userNotFirstTradeFlag\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawBorrowingFees\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"withdrawFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalWRBTCWithdrawn\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawLendingFees\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawProtocolToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTradingFees\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wrbtcToken\",\"outputs\":[{\"internalType\":\"contract IWrbtcERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"depositProtocolToken(uint256)\":{\"params\":{\"amount\":\"The tokens of fees to send.\"}},\"getAdmin()\":{\"details\":\"Get admin address.     *\",\"return\":\"admin address.\"},\"getDedicatedSOVRebate()\":{\"details\":\"Get how much SOV that is dedicated to pay the trading rebate rewards.\",\"return\":\"total dedicated SOV.\"},\"getDefaultPathConversion(address,address)\":{\"details\":\"Get default path conversion for pairs.\",\"params\":{\"destTokenAddress\":\"destination token address.\",\"sourceTokenAddress\":\"source token address.\"},\"return\":\"default path of the conversion.\"},\"getLoanPoolsList(uint256,uint256)\":{\"params\":{\"count\":\"The limit.\",\"start\":\"The offset.\"},\"return\":\"The array of loan pools.\"},\"getPauser()\":{\"details\":\"Get pauser address.     *\",\"return\":\"pauser address.\"},\"getSpecialRebates(address,address)\":{\"params\":{\"destTokenAddress\":\"The dest of pairs.\",\"sourceTokenAddress\":\"The source of pairs.\"},\"return\":\"The percent rebates of the pairs.\"},\"getTradingRebateRewardsBasisPoint()\":{\"return\":\"The basis point value.\"},\"initialize(address)\":{\"params\":{\"target\":\"The address of the target contract.\"}},\"isLoanPool(address)\":{\"details\":\"By querying its underlying token.\",\"params\":{\"loanPool\":\"The token address to check.\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeDefaultPathConversion(address,address)\":{\"details\":\"Remove the default path conversion for pairs\",\"params\":{\"destTokenAddress\":\"destination token address\",\"sourceTokenAddress\":\"source token address.\"}},\"setAffiliateFeePercent(uint256)\":{\"params\":{\"newValue\":\"The new value for affiliateFeePercent.\"}},\"setAffiliateTradingTokenFeePercent(uint256)\":{\"params\":{\"newValue\":\"The new value for affiliateTradingTokenFeePercent.\"}},\"setBorrowingFeePercent(uint256)\":{\"params\":{\"newValue\":\"The new value for borrowingFeePercent.\"}},\"setDefaultPathConversion(address[])\":{\"details\":\"Set default path conversion for pairs.\",\"params\":{\"defaultPath\":\"array of addresses for the default path.     \"}},\"setFeesController(address)\":{\"details\":\"The fee sharing proxy must be the feesController of the protocol contract. This allows the fee sharing proxy to withdraw the fees.\",\"params\":{\"newController\":\"The new address of the feesController.\"}},\"setLendingFeePercent(uint256)\":{\"params\":{\"newValue\":\"The new value for lendingFeePercent.\"}},\"setLiquidationIncentivePercent(uint256)\":{\"params\":{\"newValue\":\"The new value for liquidationIncentivePercent.\"}},\"setLoanPool(address[],address[])\":{\"params\":{\"assets\":\"The array of addresses of the corresponding underlying tokens.\",\"pools\":\"The array of addresses of new loan pool instances.\"}},\"setMaxDisagreement(uint256)\":{\"params\":{\"newValue\":\"The new value for maxDisagreement.\"}},\"setMaxSwapSize(uint256)\":{\"params\":{\"newValue\":\"The new value for the maximum swap size.\"}},\"setMinReferralsToPayoutAffiliates(uint256)\":{\"params\":{\"newMinReferrals\":\"The new minimum number of referrals.\"}},\"setPauser(address)\":{\"params\":{\"newPauser\":\"The new address of the pauser.\"}},\"setPriceFeedContract(address)\":{\"params\":{\"newContract\":\"The address of the Price Feed new instance.\"}},\"setProtocolTokenAddress(address)\":{\"params\":{\"_protocolTokenAddress\":\"The address of the protocol token contract.\"}},\"setRebatePercent(uint256)\":{\"params\":{\"rebatePercent\":\"The fee rebate percent.\"}},\"setRolloverBaseReward(uint256)\":{\"params\":{\"baseRewardValue\":\"The base reward.\"}},\"setRolloverFlexFeePercent(uint256)\":{\"params\":{\"newRolloverFlexFeePercent\":\"uint256 value of new rollover flex fee percentage (0.1 ether = 0.1%)\"}},\"setSourceBuffer(uint256)\":{\"details\":\"To avoid rounding issues on the swap rate a small buffer is implemented.\",\"params\":{\"newValue\":\"The new value for the maximum source buffer.\"}},\"setSovrynSwapContractRegistryAddress(address)\":{\"params\":{\"registryAddress\":\"the address of the registry contract.\"}},\"setSpecialRebates(address,address,uint256)\":{\"params\":{\"specialRebatesPercent\":\"The new special fee rebate percent.\"}},\"setSupportedTokens(address[],bool[])\":{\"params\":{\"addrs\":\"The array of addresses of the tokens.\",\"toggles\":\"The array of flags indicating whether  the corresponding token is supported or not.\"}},\"setSwapExternalFeePercent(uint256)\":{\"params\":{\"newValue\":\"the new value for swapExternalFeePercent\"}},\"setSwapsImplContract(address)\":{\"params\":{\"newContract\":\"The address of the asset swapper new instance.\"}},\"setTradingFeePercent(uint256)\":{\"params\":{\"newValue\":\"The new value for tradingFeePercent.\"}},\"setTradingRebateRewardsBasisPoint(uint256)\":{\"params\":{\"newBasisPoint\":\"Basis point value.\"}},\"setWrbtcToken(address)\":{\"params\":{\"wrbtcTokenAddress\":\"The address of the wrBTC contract.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawBorrowingFees(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of fees to get, ignored if greater than balance.\",\"receiver\":\"The address of the withdrawal recipient.\",\"token\":\"The address of the token instance.\"},\"return\":\"Whether withdrawal was successful.\"},\"withdrawFees(address[],address)\":{\"params\":{\"receiver\":\"The address of the withdrawal recipient.\",\"tokens\":\"The array of address of the token instance.\"},\"return\":\"The withdrawn total amount in wRBTC\"},\"withdrawLendingFees(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of fees to get, ignored if greater than balance.\",\"receiver\":\"The address of the withdrawal recipient.\",\"token\":\"The address of the token instance.\"},\"return\":\"Whether withdrawal was successful.\"},\"withdrawProtocolToken(address,uint256)\":{\"details\":\"Wrapper for ProtocolTokenUser::_withdrawProtocolToken internal function.\",\"params\":{\"amount\":\"The amount of tokens to get.\",\"receiver\":\"The address of the withdrawal recipient.\"},\"return\":\"The protocol token address.Withdrawal success (true/false).\"},\"withdrawTradingFees(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of fees to get, ignored if greater than balance.\",\"receiver\":\"The address of the withdrawal recipient.\",\"token\":\"The address of the token instance.\"},\"return\":\"Whether withdrawal was successful.\"}},\"title\":\"Protocol Settings contract.\"},\"userdoc\":{\"methods\":{\"constructor\":\"Empty public constructor.\",\"depositProtocolToken(uint256)\":{\"notice\":\"The owner calls this function to deposit protocol tokens.\"},\"getDedicatedSOVRebate()\":{\"notice\":\"If SOV balance is less than the fees held, it will return 0.\"},\"getLoanPoolsList(uint256,uint256)\":{\"notice\":\"Get a list of loan pools.\"},\"getSpecialRebates(address,address)\":{\"notice\":\"Get a rebate percent of specific pairs.\"},\"getTradingRebateRewardsBasisPoint()\":{\"notice\":\"Get the basis point of trading rebate rewards.\"},\"initialize(address)\":{\"notice\":\"Set function selectors on target contract.\"},\"isLoanPool(address)\":{\"notice\":\"Check whether a token is a pool token.\"},\"setAffiliateFeePercent(uint256)\":{\"notice\":\"Set the value of affiliateFeePercent storage variable.\"},\"setAffiliateTradingTokenFeePercent(uint256)\":{\"notice\":\"Set the value of affiliateTradingTokenFeePercent storage variable.\"},\"setBorrowingFeePercent(uint256)\":{\"notice\":\"Set the value of borrowingFeePercent storage variable.\"},\"setFeesController(address)\":{\"notice\":\"Set the address of the feesController instance.\"},\"setLendingFeePercent(uint256)\":{\"notice\":\"Set the value of lendingFeePercent storage variable.\"},\"setLiquidationIncentivePercent(uint256)\":{\"notice\":\"Set the value of liquidationIncentivePercent storage variable.\"},\"setLoanPool(address[],address[])\":{\"notice\":\"Set a list of loan pools and its tokens.\"},\"setMaxDisagreement(uint256)\":{\"notice\":\"Set the value of the maximum swap spread.\"},\"setMaxSwapSize(uint256)\":{\"notice\":\"Set the value of the swap size limit.\"},\"setMinReferralsToPayoutAffiliates(uint256)\":{\"notice\":\"Update the minimum number of referrals to get affiliates rewards.\"},\"setPauser(address)\":{\"notice\":\"Set the pauser address of sovryn protocol.     * only pauser or owner can perform this action.\"},\"setPriceFeedContract(address)\":{\"notice\":\"Set the address of the Price Feed instance.\"},\"setProtocolTokenAddress(address)\":{\"notice\":\"Set the protocol token contract address.\"},\"setRebatePercent(uint256)\":{\"notice\":\"Set the fee rebate percent.\"},\"setRolloverBaseReward(uint256)\":{\"notice\":\"Set rollover base reward. It should be denominated in wrBTC.\"},\"setRolloverFlexFeePercent(uint256)\":{\"notice\":\"Set rolloverFlexFeePercent (max value is 1%)\"},\"setSourceBuffer(uint256)\":{\"notice\":\"Set the value of the maximum source buffer.\"},\"setSovrynProtocolAddress(address)\":{\"notice\":\"setting wrong address will break inter module functions calling should be set once\"},\"setSovrynSwapContractRegistryAddress(address)\":{\"notice\":\"Set the contract registry address of the SovrynSwap network.\"},\"setSpecialRebates(address,address,uint256)\":{\"notice\":\"Set the special fee rebate percent for specific pair\"},\"setSupportedTokens(address[],bool[])\":{\"notice\":\"Set a list of supported tokens by populating the  storage supportedTokens mapping.\"},\"setSwapExternalFeePercent(uint256)\":{\"notice\":\"Set the value of swapExtrernalFeePercent storage variable\"},\"setSwapsImplContract(address)\":{\"notice\":\"Set the address of the asset swapper instance.\"},\"setTradingFeePercent(uint256)\":{\"notice\":\"Set the value of tradingFeePercent storage variable.\"},\"setTradingRebateRewardsBasisPoint(uint256)\":{\"notice\":\"Set the basis point of trading rebate rewards (SOV), max value is 9999 (99.99% liquid, 0.01% vested).\"},\"setWrbtcToken(address)\":{\"notice\":\"Set the wrBTC contract address.\"},\"withdrawBorrowingFees(address,address,uint256)\":{\"notice\":\"The feesController calls this function to withdraw fees accrued from borrowing operations.\"},\"withdrawFees(address[],address)\":{\"notice\":\"The feesController calls this function to withdraw fees from three sources: lending, trading and borrowing. The fees (except SOV) will be converted to wRBTC. For SOV, it will be deposited directly to feeSharingCollector from the protocol.\"},\"withdrawLendingFees(address,address,uint256)\":{\"notice\":\"The feesController calls this function to withdraw fees accrued from lending operations.\"},\"withdrawProtocolToken(address,uint256)\":{\"notice\":\"The owner calls this function to withdraw protocol tokens.\"},\"withdrawTradingFees(address,address,uint256)\":{\"notice\":\"The feesController calls this function to withdraw fees accrued from trading operations.\"}},\"notice\":\"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * This contract contains functions to customize protocol settings.\"}},\"settings\":{\"compilationTarget\":{\"contracts/modules/ProtocolSettings.sol\":\"ProtocolSettings\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/Objects.sol\":{\"content\":\"/**\\n * Copyright 2017-2021, bZeroX, LLC. All Rights Reserved.\\n * Licensed under the Apache License, Version 2.0.\\n */\\n\\npragma solidity 0.5.17;\\n\\nimport \\\"./objects/LoanStruct.sol\\\";\\nimport \\\"./objects/LoanParamsStruct.sol\\\";\\nimport \\\"./objects/OrderStruct.sol\\\";\\nimport \\\"./objects/LenderInterestStruct.sol\\\";\\nimport \\\"./objects/LoanInterestStruct.sol\\\";\\n\\n/**\\n * @title Objects contract.\\n * @notice This contract code comes from bZx. bZx is a protocol for tokenized\\n * margin trading and lending https://bzx.network similar to the dYdX protocol.\\n *\\n * This contract inherints and aggregates several structures needed to handle\\n * loans on the protocol.\\n * */\\ncontract Objects is\\n    LoanStruct,\\n    LoanParamsStruct,\\n    OrderStruct,\\n    LenderInterestStruct,\\n    LoanInterestStruct\\n{\\n\\n}\\n\",\"keccak256\":\"0xa30b8887af813997ebb480f0aa296245f9f3bd728382060059aa087cd9ee332c\"},\"contracts/core/State.sol\":{\"content\":\"/**\\n * Copyright 2017-2020, bZeroX, LLC. All Rights Reserved.\\n * Licensed under the Apache License, Version 2.0.\\n */\\n\\npragma solidity 0.5.17;\\n\\nimport \\\"./Objects.sol\\\";\\nimport \\\"../mixins/EnumerableAddressSet.sol\\\";\\nimport \\\"../mixins/EnumerableBytes32Set.sol\\\";\\nimport \\\"../openzeppelin/ReentrancyGuard.sol\\\";\\nimport \\\"../openzeppelin/Ownable.sol\\\";\\nimport \\\"../openzeppelin/SafeMath.sol\\\";\\nimport \\\"../interfaces/IWrbtcERC20.sol\\\";\\nimport \\\"../reentrancy/SharedReentrancyGuard.sol\\\";\\n\\n/**\\n * @title State contract.\\n * @notice This contract code comes from bZx. bZx is a protocol for tokenized\\n * margin trading and lending https://bzx.network similar to the dYdX protocol.\\n *\\n * This contract contains the storage values of the Protocol.\\n * */\\ncontract State is Objects, ReentrancyGuard, SharedReentrancyGuard, Ownable {\\n    using SafeMath for uint256;\\n    using EnumerableAddressSet for EnumerableAddressSet.AddressSet; // enumerable map of addresses\\n    using EnumerableBytes32Set for EnumerableBytes32Set.Bytes32Set; // enumerable map of bytes32 or addresses\\n\\n    /// Handles asset reference price lookups.\\n    address public priceFeeds;\\n\\n    /// Handles asset swaps using dex liquidity.\\n    address public swapsImpl;\\n\\n    /// Contract registry address of the Sovryn swap network.\\n    address public sovrynSwapContractRegistryAddress;\\n\\n    /// Implementations of protocol functions.\\n    mapping(bytes4 => address) public logicTargets;\\n\\n    /// Loans: loanId => Loan\\n    mapping(bytes32 => Loan) public loans;\\n\\n    /// Loan parameters: loanParamsId => LoanParams\\n    mapping(bytes32 => LoanParams) public loanParams;\\n\\n    /// lender => orderParamsId => Order\\n    mapping(address => mapping(bytes32 => Order)) public lenderOrders;\\n\\n    /// borrower => orderParamsId => Order\\n    mapping(address => mapping(bytes32 => Order)) public borrowerOrders;\\n\\n    /// loanId => delegated => approved\\n    mapping(bytes32 => mapping(address => bool)) public delegatedManagers;\\n\\n    /**\\n     *** Interest ***\\n     **/\\n\\n    /// lender => loanToken => LenderInterest object\\n    mapping(address => mapping(address => LenderInterest)) public lenderInterest;\\n\\n    /// loanId => LoanInterest object\\n    mapping(bytes32 => LoanInterest) public loanInterest;\\n\\n    /**\\n     *** Internals ***\\n     **/\\n\\n    /// Implementations set.\\n    EnumerableBytes32Set.Bytes32Set internal logicTargetsSet;\\n\\n    /// Active loans set.\\n    EnumerableBytes32Set.Bytes32Set internal activeLoansSet;\\n\\n    /// Lender loans set.\\n    mapping(address => EnumerableBytes32Set.Bytes32Set) internal lenderLoanSets;\\n\\n    /// Borrow loans set.\\n    mapping(address => EnumerableBytes32Set.Bytes32Set) internal borrowerLoanSets;\\n\\n    /// User loan params set.\\n    mapping(address => EnumerableBytes32Set.Bytes32Set) internal userLoanParamSets;\\n\\n    /// Address controlling fee withdrawals.\\n    address public feesController;\\n\\n    /// 10% fee /// Fee taken from lender interest payments.\\n    uint256 public lendingFeePercent = 10**19;\\n\\n    /// Total interest fees received and not withdrawn per asset.\\n    mapping(address => uint256) public lendingFeeTokensHeld;\\n\\n    /// Total interest fees withdraw per asset.\\n    /// lifetime fees = lendingFeeTokensHeld + lendingFeeTokensPaid\\n    mapping(address => uint256) public lendingFeeTokensPaid;\\n\\n    /// 0.15% fee /// Fee paid for each trade.\\n    uint256 public tradingFeePercent = 15 * 10**16;\\n\\n    /// Total trading fees received and not withdrawn per asset.\\n    mapping(address => uint256) public tradingFeeTokensHeld;\\n\\n    /// Total trading fees withdraw per asset\\n    /// lifetime fees = tradingFeeTokensHeld + tradingFeeTokensPaid\\n    mapping(address => uint256) public tradingFeeTokensPaid;\\n\\n    /// 0.09% fee /// Origination fee paid for each loan.\\n    uint256 public borrowingFeePercent = 9 * 10**16;\\n\\n    /// Total borrowing fees received and not withdrawn per asset.\\n    mapping(address => uint256) public borrowingFeeTokensHeld;\\n\\n    /// Total borrowing fees withdraw per asset.\\n    /// lifetime fees = borrowingFeeTokensHeld + borrowingFeeTokensPaid\\n    mapping(address => uint256) public borrowingFeeTokensPaid;\\n\\n    /// Current protocol token deposit balance.\\n    uint256 public protocolTokenHeld;\\n\\n    /// Lifetime total payout of protocol token.\\n    uint256 public protocolTokenPaid;\\n\\n    /// 5% fee share in form of SOV /// Fee share for affiliate program.\\n    uint256 public affiliateFeePercent = 5 * 10**18;\\n\\n    /// 5% collateral discount /// Discount on collateral for liquidators.\\n    uint256 public liquidationIncentivePercent = 5 * 10**18;\\n\\n    /// loanPool => underlying\\n    mapping(address => address) public loanPoolToUnderlying;\\n\\n    /// underlying => loanPool\\n    mapping(address => address) public underlyingToLoanPool;\\n\\n    /// Loan pools set.\\n    EnumerableBytes32Set.Bytes32Set internal loanPoolsSet;\\n\\n    /// Supported tokens for swaps.\\n    mapping(address => bool) public supportedTokens;\\n\\n    /// % disagreement between swap rate and reference rate.\\n    uint256 public maxDisagreement = 5 * 10**18;\\n\\n    /// Used as buffer for swap source amount estimations.\\n    uint256 public sourceBuffer = 10000;\\n\\n    /// Maximum support swap size in rBTC\\n    uint256 public maxSwapSize = 50 ether;\\n\\n    /// Nonce per borrower. Used for loan id creation.\\n    mapping(address => uint256) public borrowerNonce;\\n\\n    /// Rollover transaction costs around 0.0000168 rBTC, it is denominated in wrBTC.\\n    uint256 public rolloverBaseReward = 16800000000000;\\n    uint256 public rolloverFlexFeePercent = 0.1 ether; /// 0.1%\\n\\n    IWrbtcERC20 public wrbtcToken;\\n    address public protocolTokenAddress;\\n\\n    /// 50% fee rebate\\n    /// potocolToken reward to user, it is worth % of trading/borrowing fee.\\n    uint256 public feeRebatePercent = 50 * 10**18;\\n\\n    address public admin;\\n\\n    /// For modules interaction.\\n    address public protocolAddress;\\n\\n    /**\\n     *** Affiliates ***\\n     **/\\n\\n    /// The flag is set on the user's first trade.\\n    mapping(address => bool) public userNotFirstTradeFlag;\\n\\n    /// User => referrer (affiliate).\\n    mapping(address => address) public affiliatesUserReferrer;\\n\\n    /// List of referral addresses affiliated to the referrer.\\n    mapping(address => EnumerableAddressSet.AddressSet) internal referralsList;\\n\\n    /// @dev Referral threshold for paying out to the referrer.\\n    ///   The referrer reward is being accumulated and locked until the threshold is passed.\\n    uint256 public minReferralsToPayout = 3;\\n\\n    /// @dev Total affiliate SOV rewards that held in the protocol\\n    ///   (Because the minimum referrals is less than the rule)\\n    mapping(address => uint256) public affiliateRewardsHeld;\\n\\n    /// @dev For affiliates SOV Bonus proccess.\\n    address public sovTokenAddress;\\n    address public lockedSOVAddress;\\n\\n    /// @dev 20% fee share of trading token fee.\\n    ///   Fee share of trading token fee for affiliate program.\\n    uint256 public affiliateTradingTokenFeePercent = 20 * 10**18;\\n\\n    /// @dev Addresses of tokens in which commissions were paid to referrers.\\n    mapping(address => EnumerableAddressSet.AddressSet) internal affiliatesReferrerTokensList;\\n\\n    /// @dev [referrerAddress][tokenAddress] is a referrer's token balance of accrued fees.\\n    mapping(address => mapping(address => uint256)) public affiliatesReferrerBalances;\\n\\n    mapping(address => mapping(address => uint256)) public specialRebates; // Special rate rebates for spesific pair -- if not set, then use the default one\\n    bool public pause; //Flag to pause all protocol modules\\n\\n    uint256 internal swapExtrernalFeePercent; /// Fee percentage for protocol swap\\n\\n    /// @dev Defines the portion of the trading rebate rewards (SOV) which is to be paid out in a liquid form in basis points. The rest is vested. The max value is 9999 (means 99.99% liquid, 0.01% vested)\\n    uint256 internal tradingRebateRewardsBasisPoint;\\n\\n    /// @dev Defines the defaultPath of conversion swap. This is created to prevent the non-rbtc pairs returning the shortest path which will not give the best rate.\\n    /// Will be used in internal swap.\\n    mapping(address => mapping(address => IERC20[])) internal defaultPathConversion;\\n\\n    address internal pauser;\\n\\n    /**\\n     * @notice Add signature and target to storage.\\n     * @dev Protocol is a proxy and requires a way to add every\\n     *   module function dynamically during deployment.\\n     * */\\n    function _setTarget(bytes4 sig, address target) internal {\\n        logicTargets[sig] = target;\\n\\n        if (target != address(0)) {\\n            logicTargetsSet.addBytes32(bytes32(sig));\\n        } else {\\n            logicTargetsSet.removeBytes32(bytes32(sig));\\n        }\\n    }\\n\\n    modifier onlyAdminOrOwner() {\\n        require(isOwner() || admin == (msg.sender), \\\"unauthorized\\\");\\n        _;\\n    }\\n\\n    modifier onlyPauserOrOwner() {\\n        require(isOwner() || pauser == (msg.sender), \\\"unauthorized\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xf8dfc02f3dc790c73b390a69898d0281c4473487bc91fec1f28fbebceacd3b3c\"},\"contracts/core/objects/LenderInterestStruct.sol\":{\"content\":\"/**\\n * Copyright 2017-2021, bZeroX, LLC. All Rights Reserved.\\n * Licensed under the Apache License, Version 2.0.\\n */\\n\\npragma solidity 0.5.17;\\n\\n/**\\n * @title The Lender Interest.\\n * @notice This contract code comes from bZx. bZx is a protocol for tokenized\\n * margin trading and lending https://bzx.network similar to the dYdX protocol.\\n *\\n * This contract contains the storage structure of the Lender Interest.\\n * */\\ncontract LenderInterestStruct {\\n    struct LenderInterest {\\n        uint256 principalTotal; /// Total borrowed amount outstanding of asset.\\n        uint256 owedPerDay; /// Interest owed per day for all loans of asset.\\n        uint256 owedTotal; /// Total interest owed for all loans of asset (assuming they go to full term).\\n        uint256 paidTotal; /// Total interest paid so far for asset.\\n        uint256 updatedTimestamp; /// Last update.\\n    }\\n}\\n\",\"keccak256\":\"0x6583baadddded384836cec469980e7973ec09310ae505b4a2ec67fb7bc19e452\"},\"contracts/core/objects/LoanInterestStruct.sol\":{\"content\":\"/**\\n * Copyright 2017-2021, bZeroX, LLC. All Rights Reserved.\\n * Licensed under the Apache License, Version 2.0.\\n */\\n\\npragma solidity 0.5.17;\\n\\n/**\\n * @title The Loan Interest.\\n * @notice This contract code comes from bZx. bZx is a protocol for tokenized\\n * margin trading and lending https://bzx.network similar to the dYdX protocol.\\n *\\n * This contract contains the storage structure of the Loan Interest.\\n * */\\ncontract LoanInterestStruct {\\n    struct LoanInterest {\\n        uint256 owedPerDay; /// Interest owed per day for loan.\\n        uint256 depositTotal; /// Total escrowed interest for loan.\\n        uint256 updatedTimestamp; /// Last update.\\n    }\\n}\\n\",\"keccak256\":\"0xd9034c6adb1b72e1593589dca024dc4730a1ee8bf6b2dca9d22283f2e7159590\"},\"contracts/core/objects/LoanParamsStruct.sol\":{\"content\":\"/**\\n * Copyright 2017-2021, bZeroX, LLC. All Rights Reserved.\\n * Licensed under the Apache License, Version 2.0.\\n */\\n\\npragma solidity 0.5.17;\\n\\n/**\\n * @title The Loan Parameters.\\n * @notice This contract code comes from bZx. bZx is a protocol for tokenized\\n * margin trading and lending https://bzx.network similar to the dYdX protocol.\\n *\\n * This contract contains the storage structure of the Loan Parameters.\\n * */\\ncontract LoanParamsStruct {\\n    struct LoanParams {\\n        /// @dev ID of loan params object.\\n        bytes32 id;\\n        /// @dev If false, this object has been disabled by the owner and can't\\n        ///   be used for future loans.\\n        bool active;\\n        /// @dev Owner of this object.\\n        address owner;\\n        /// @dev The token being loaned.\\n        address loanToken;\\n        /// @dev The required collateral token.\\n        address collateralToken;\\n        /// @dev The minimum allowed initial margin.\\n        uint256 minInitialMargin;\\n        /// @dev An unhealthy loan when current margin is at or below this value.\\n        uint256 maintenanceMargin;\\n        /// @dev The maximum term for new loans (0 means there's no max term).\\n        uint256 maxLoanTerm;\\n    }\\n}\\n\",\"keccak256\":\"0xe15aa97713521da7f501e5225af9d92cf34bd68d286dbfed86aa75aabb323945\"},\"contracts/core/objects/LoanStruct.sol\":{\"content\":\"/**\\n * Copyright 2017-2021, bZeroX, LLC. All Rights Reserved.\\n * Licensed under the Apache License, Version 2.0.\\n */\\n\\npragma solidity 0.5.17;\\n\\n/**\\n * @title The Loan Object.\\n * @notice This contract code comes from bZx. bZx is a protocol for tokenized\\n * margin trading and lending https://bzx.network similar to the dYdX protocol.\\n *\\n * This contract contains the storage structure of the Loan Object.\\n * */\\ncontract LoanStruct {\\n    struct Loan {\\n        bytes32 id; /// ID of the loan.\\n        bytes32 loanParamsId; /// The linked loan params ID.\\n        bytes32 pendingTradesId; /// The linked pending trades ID.\\n        bool active; /// If false, the loan has been fully closed.\\n        uint256 principal; /// Total borrowed amount outstanding.\\n        uint256 collateral; /// Total collateral escrowed for the loan.\\n        uint256 startTimestamp; /// Loan start time.\\n        uint256 endTimestamp; /// For active loans, this is the expected loan end time, for in-active loans, is the actual (past) end time.\\n        uint256 startMargin; /// Initial margin when the loan opened.\\n        uint256 startRate; /// Reference rate when the loan opened for converting collateralToken to loanToken.\\n        address borrower; /// Borrower of this loan.\\n        address lender; /// Lender of this loan.\\n    }\\n}\\n\",\"keccak256\":\"0x7d05c3096a86d5892e4e72f3a01a5a806f13a5ac90ca6339c611e75c603637b4\"},\"contracts/core/objects/OrderStruct.sol\":{\"content\":\"/**\\n * Copyright 2017-2021, bZeroX, LLC. All Rights Reserved.\\n * Licensed under the Apache License, Version 2.0.\\n */\\n\\npragma solidity 0.5.17;\\n\\n/**\\n * @title The Loan Order.\\n * @notice This contract code comes from bZx. bZx is a protocol for tokenized\\n * margin trading and lending https://bzx.network similar to the dYdX protocol.\\n *\\n * This contract contains the storage structure of the Loan Order.\\n * */\\ncontract OrderStruct {\\n    struct Order {\\n        uint256 lockedAmount; /// Escrowed amount waiting for a counterparty.\\n        uint256 interestRate; /// Interest rate defined by the creator of this order.\\n        uint256 minLoanTerm; /// Minimum loan term allowed.\\n        uint256 maxLoanTerm; /// Maximum loan term allowed.\\n        uint256 createdTimestamp; /// Timestamp when this order was created.\\n        uint256 expirationTimestamp; /// Timestamp when this order expires.\\n    }\\n}\\n\",\"keccak256\":\"0xcc053c5da34a5927041162259bf856ba913f3524ca03e63ad0c5877777d17e0f\"},\"contracts/events/ModulesCommonEvents.sol\":{\"content\":\"pragma solidity 0.5.17;\\n\\n/**\\n * @title The common events for all modules\\n * @notice This contract contains the events which will be used by all modules\\n **/\\n\\ncontract ModulesCommonEvents {\\n    event ProtocolModuleContractReplaced(\\n        address indexed prevModuleContractAddress,\\n        address indexed newModuleContractAddress,\\n        bytes32 indexed module\\n    );\\n}\\n\",\"keccak256\":\"0xb07af42d7e6b0fe983889b883691b662a58d2ef8d75b3f32f17faff1871c8b8f\"},\"contracts/events/ProtocolSettingsEvents.sol\":{\"content\":\"/**\\n * Copyright 2017-2021, bZeroX, LLC. All Rights Reserved.\\n * Licensed under the Apache License, Version 2.0.\\n */\\n\\npragma solidity 0.5.17;\\n\\nimport \\\"./ModulesCommonEvents.sol\\\";\\nimport \\\"../interfaces/IERC20.sol\\\";\\n\\n/**\\n * @title The Protocol Settings Events contract.\\n * @notice This contract code comes from bZx. bZx is a protocol for tokenized\\n * margin trading and lending https://bzx.network similar to the dYdX protocol.\\n *\\n * This contract contains the events for protocol settings operations.\\n * */\\ncontract ProtocolSettingsEvents is ModulesCommonEvents {\\n    event SetPriceFeedContract(address indexed sender, address oldValue, address newValue);\\n\\n    event SetSwapsImplContract(address indexed sender, address oldValue, address newValue);\\n\\n    event SetLoanPool(\\n        address indexed sender,\\n        address indexed loanPool,\\n        address indexed underlying\\n    );\\n\\n    event SetSupportedTokens(address indexed sender, address indexed token, bool isActive);\\n\\n    event SetLendingFeePercent(address indexed sender, uint256 oldValue, uint256 newValue);\\n\\n    event SetTradingFeePercent(address indexed sender, uint256 oldValue, uint256 newValue);\\n\\n    event SetBorrowingFeePercent(address indexed sender, uint256 oldValue, uint256 newValue);\\n\\n    event SetSwapExternalFeePercent(address indexed sender, uint256 oldValue, uint256 newValue);\\n\\n    event SetAffiliateFeePercent(address indexed sender, uint256 oldValue, uint256 newValue);\\n\\n    event SetAffiliateTradingTokenFeePercent(\\n        address indexed sender,\\n        uint256 oldValue,\\n        uint256 newValue\\n    );\\n\\n    event SetLiquidationIncentivePercent(\\n        address indexed sender,\\n        uint256 oldValue,\\n        uint256 newValue\\n    );\\n\\n    event SetMaxSwapSize(address indexed sender, uint256 oldValue, uint256 newValue);\\n\\n    event SetFeesController(\\n        address indexed sender,\\n        address indexed oldController,\\n        address indexed newController\\n    );\\n\\n    event SetWrbtcToken(\\n        address indexed sender,\\n        address indexed oldWethToken,\\n        address indexed newWethToken\\n    );\\n\\n    event SetSovrynSwapContractRegistryAddress(\\n        address indexed sender,\\n        address indexed oldSovrynSwapContractRegistryAddress,\\n        address indexed newSovrynSwapContractRegistryAddress\\n    );\\n\\n    event SetProtocolTokenAddress(\\n        address indexed sender,\\n        address indexed oldProtocolToken,\\n        address indexed newProtocolToken\\n    );\\n\\n    event WithdrawFees(\\n        address indexed sender,\\n        address indexed token,\\n        address indexed receiver,\\n        uint256 lendingAmount,\\n        uint256 tradingAmount,\\n        uint256 borrowingAmount,\\n        uint256 wRBTCConverted\\n    );\\n\\n    event WithdrawLendingFees(\\n        address indexed sender,\\n        address indexed token,\\n        address indexed receiver,\\n        uint256 amount\\n    );\\n\\n    event WithdrawTradingFees(\\n        address indexed sender,\\n        address indexed token,\\n        address indexed receiver,\\n        uint256 amount\\n    );\\n\\n    event WithdrawBorrowingFees(\\n        address indexed sender,\\n        address indexed token,\\n        address indexed receiver,\\n        uint256 amount\\n    );\\n\\n    event SetRolloverBaseReward(address indexed sender, uint256 oldValue, uint256 newValue);\\n\\n    event SetRebatePercent(\\n        address indexed sender,\\n        uint256 oldRebatePercent,\\n        uint256 newRebatePercent\\n    );\\n\\n    event SetSpecialRebates(\\n        address indexed sender,\\n        address indexed sourceToken,\\n        address indexed destToken,\\n        uint256 oldSpecialRebatesPercent,\\n        uint256 newSpecialRebatesPercent\\n    );\\n\\n    event SetProtocolAddress(\\n        address indexed sender,\\n        address indexed oldProtocol,\\n        address indexed newProtocol\\n    );\\n\\n    event SetMinReferralsToPayoutAffiliates(\\n        address indexed sender,\\n        uint256 oldMinReferrals,\\n        uint256 newMinReferrals\\n    );\\n\\n    event SetSOVTokenAddress(\\n        address indexed sender,\\n        address indexed oldTokenAddress,\\n        address indexed newTokenAddress\\n    );\\n\\n    event SetLockedSOVAddress(\\n        address indexed sender,\\n        address indexed oldAddress,\\n        address indexed newAddress\\n    );\\n\\n    event TogglePaused(address indexed sender, bool indexed oldFlag, bool indexed newFlag);\\n\\n    event SetTradingRebateRewardsBasisPoint(\\n        address indexed sender,\\n        uint256 oldBasisPoint,\\n        uint256 newBasisPoint\\n    );\\n\\n    event SetRolloverFlexFeePercent(\\n        address indexed sender,\\n        uint256 oldRolloverFlexFeePercent,\\n        uint256 newRolloverFlexFeePercent\\n    );\\n\\n    event SetDefaultPathConversion(\\n        address indexed sender,\\n        address indexed sourceTokenAddress,\\n        address indexed destTokenAddress,\\n        IERC20[] defaultPath\\n    );\\n\\n    event RemoveDefaultPathConversion(\\n        address indexed sender,\\n        address indexed sourceTokenAddress,\\n        address indexed destTokenAddress,\\n        IERC20[] defaultPath\\n    );\\n\\n    event SetAdmin(address indexed sender, address indexed oldAdmin, address indexed newAdmin);\\n\\n    event SetPauser(address indexed sender, address indexed oldPauser, address indexed newPauser);\\n}\\n\",\"keccak256\":\"0x20ca66a2c53669aa33379bf5233e3bcdddbba3504cd430a0143f0ee3ce1c2641\"},\"contracts/feeds/IPriceFeeds.sol\":{\"content\":\"/**\\n * Copyright 2017-2021, bZeroX, LLC. All Rights Reserved.\\n * Licensed under the Apache License, Version 2.0.\\n */\\n\\npragma solidity 0.5.17;\\n\\ninterface IPriceFeeds {\\n    function queryRate(address sourceToken, address destToken)\\n        external\\n        view\\n        returns (uint256 rate, uint256 precision);\\n\\n    function queryPrecision(address sourceToken, address destToken)\\n        external\\n        view\\n        returns (uint256 precision);\\n\\n    function queryReturn(\\n        address sourceToken,\\n        address destToken,\\n        uint256 sourceAmount\\n    ) external view returns (uint256 destAmount);\\n\\n    function checkPriceDisagreement(\\n        address sourceToken,\\n        address destToken,\\n        uint256 sourceAmount,\\n        uint256 destAmount,\\n        uint256 maxSlippage\\n    ) external view returns (uint256 sourceToDestSwapRate);\\n\\n    function amountInEth(address Token, uint256 amount) external view returns (uint256 ethAmount);\\n\\n    function getMaxDrawdown(\\n        address loanToken,\\n        address collateralToken,\\n        uint256 loanAmount,\\n        uint256 collateralAmount,\\n        uint256 maintenanceMargin\\n    ) external view returns (uint256);\\n\\n    function getCurrentMarginAndCollateralSize(\\n        address loanToken,\\n        address collateralToken,\\n        uint256 loanAmount,\\n        uint256 collateralAmount\\n    ) external view returns (uint256 currentMargin, uint256 collateralInEthAmount);\\n\\n    function getCurrentMargin(\\n        address loanToken,\\n        address collateralToken,\\n        uint256 loanAmount,\\n        uint256 collateralAmount\\n    ) external view returns (uint256 currentMargin, uint256 collateralToLoanRate);\\n\\n    function shouldLiquidate(\\n        address loanToken,\\n        address collateralToken,\\n        uint256 loanAmount,\\n        uint256 collateralAmount,\\n        uint256 maintenanceMargin\\n    ) external view returns (bool);\\n\\n    function getFastGasPrice(address payToken) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x2e2c2b393336efedb97659a2fc21c8dfb75b70e15d2422a3bcbf7ebd5fc83c82\"},\"contracts/governance/IFeeSharingCollector.sol\":{\"content\":\"pragma solidity ^0.5.17;\\n\\n/**\\n * @title Interface for contract governance/FeeSharingCollector/FeeSharingCollector.sol\\n * @dev Interfaces are used to cast a contract address into a callable instance.\\n * */\\ninterface IFeeSharingCollector {\\n    function withdrawFees(address[] calldata _token) external;\\n\\n    function transferTokens(address _token, uint96 _amount) external;\\n\\n    function withdraw(\\n        address _loanPoolToken,\\n        uint32 _maxCheckpoints,\\n        address _receiver\\n    ) external;\\n}\\n\",\"keccak256\":\"0x7794cb434d9395ea983dcf8ded48db5b68897a338429320f60172c4caa47fb40\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"/**\\n * Copyright 2017-2021, bZeroX, LLC. All Rights Reserved.\\n * Licensed under the Apache License, Version 2.0.\\n */\\n\\npragma solidity >=0.5.0 <0.6.0;\\n\\ncontract IERC20 {\\n    string public name;\\n    uint8 public decimals;\\n    string public symbol;\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address _who) external view returns (uint256);\\n\\n    function allowance(address _owner, address _spender) external view returns (uint256);\\n\\n    function approve(address _spender, uint256 _value) external returns (bool);\\n\\n    function transfer(address _to, uint256 _value) external returns (bool);\\n\\n    function transferFrom(\\n        address _from,\\n        address _to,\\n        uint256 _value\\n    ) external returns (bool);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbc0c9bb48f19651930ec9aff366b2e11a1abf89c846e4b2d52d8102b15ce6721\"},\"contracts/interfaces/IWrbtc.sol\":{\"content\":\"/**\\n * Copyright 2017-2020, bZeroX, LLC. All Rights Reserved.\\n * Licensed under the Apache License, Version 2.0.\\n */\\n\\npragma solidity >=0.5.0 <0.6.0;\\n\\ninterface IWrbtc {\\n    function deposit() external payable;\\n\\n    function withdraw(uint256 wad) external;\\n}\\n\",\"keccak256\":\"0x20fdfe4b5e32fd7f863b3fa128e3c80bd4ccf090a4ffba56186ef3b7f2a80492\"},\"contracts/interfaces/IWrbtcERC20.sol\":{\"content\":\"/**\\n * Copyright 2017-2020, bZeroX, LLC. All Rights Reserved.\\n * Licensed under the Apache License, Version 2.0.\\n */\\n\\npragma solidity >=0.5.0 <0.6.0;\\n\\nimport \\\"./IWrbtc.sol\\\";\\nimport \\\"./IERC20.sol\\\";\\n\\ncontract IWrbtcERC20 is IWrbtc, IERC20 {}\\n\",\"keccak256\":\"0x7301a8c8ca7aa016ec94268a16d07366875f2e406442e929968dd745b1ee5be5\"},\"contracts/mixins/EnumerableAddressSet.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/**\\n * @dev Based on Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * As of v2.5.0, only `address` sets are supported.\\n *\\n * Include with `using EnumerableSet for EnumerableSet.AddressSet;`.\\n *\\n * _Available since v2.5.0._\\n */\\nlibrary EnumerableAddressSet {\\n    struct AddressSet {\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping(address => uint256) index;\\n        address[] values;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     * Returns false if the value was already in the set.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        if (!contains(set, value)) {\\n            set.index[value] = set.values.push(value);\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     * Returns false if the value was not present in the set.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        if (contains(set, value)) {\\n            uint256 toDeleteIndex = set.index[value] - 1;\\n            uint256 lastIndex = set.values.length - 1;\\n\\n            // If the element we're deleting is the last one, we can just remove it without doing a swap\\n            if (lastIndex != toDeleteIndex) {\\n                address lastValue = set.values[lastIndex];\\n\\n                // Move the last value to the index where the deleted value is\\n                set.values[toDeleteIndex] = lastValue;\\n                // Update the index for the moved value\\n                set.index[lastValue] = toDeleteIndex + 1; // All indexes are 1-based\\n            }\\n\\n            // Delete the index entry for the deleted value\\n            delete set.index[value];\\n\\n            // Delete the old entry for the moved value\\n            set.values.pop();\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return set.index[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns an array with all values in the set. O(N).\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n\\n     * WARNING: This function may run out of gas on large sets: use {length} and\\n     * {get} instead in these cases.\\n     */\\n    function enumerate(AddressSet storage set) internal view returns (address[] memory) {\\n        address[] memory output = new address[](set.values.length);\\n        for (uint256 i; i < set.values.length; i++) {\\n            output[i] = set.values[i];\\n        }\\n        return output;\\n    }\\n\\n    /**\\n     * @dev Returns a chunk of array as recommended in enumerate() to avoid running of gas.\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n\\n     * WARNING: This function may run out of gas on large sets: use {length} and\\n     * {get} instead in these cases.\\n     \\n     * @param start start index of chunk\\n     * @param count num of element to return; if count == 0 then returns all the elements from the @param start\\n     */\\n    function enumerateChunk(\\n        AddressSet storage set,\\n        uint256 start,\\n        uint256 count\\n    ) internal view returns (address[] memory output) {\\n        uint256 end = start + count;\\n        require(end >= start, \\\"addition overflow\\\");\\n        end = (set.values.length < end || count == 0) ? set.values.length : end;\\n        if (end == 0 || start >= end) {\\n            return output;\\n        }\\n\\n        output = new address[](end - start);\\n        for (uint256 i; i < end - start; i++) {\\n            output[i] = set.values[i + start];\\n        }\\n        return output;\\n    }\\n\\n    /**\\n     * @dev Returns the number of elements on the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return set.values.length;\\n    }\\n\\n    /** @dev Returns the element stored at position `index` in the set. O(1).\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function get(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return set.values[index];\\n    }\\n}\\n\",\"keccak256\":\"0xea6fba941ec8502aa11a7ab37e74b917d0dc47bb254e359a2870a87ef97d9872\"},\"contracts/mixins/EnumerableBytes32Set.sol\":{\"content\":\"/**\\n * Copyright 2017-2021, bZeroX, LLC. All Rights Reserved.\\n * Licensed under the Apache License, Version 2.0.\\n */\\n\\npragma solidity 0.5.17;\\n\\n/**\\n * @title Library for managing loan sets.\\n *\\n * @notice Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * Include with `using EnumerableBytes32Set for EnumerableBytes32Set.Bytes32Set;`.\\n * */\\nlibrary EnumerableBytes32Set {\\n    struct Bytes32Set {\\n        /// Position of the value in the `values` array, plus 1 because index 0\\n        /// means a value is not in the set.\\n        mapping(bytes32 => uint256) index;\\n        bytes32[] values;\\n    }\\n\\n    /**\\n     * @notice Add an address value to a set. O(1).\\n     *\\n     * @param set The set of values.\\n     * @param addrvalue The address to add.\\n     *\\n     * @return False if the value was already in the set.\\n     */\\n    function addAddress(Bytes32Set storage set, address addrvalue) internal returns (bool) {\\n        bytes32 value;\\n        assembly {\\n            value := addrvalue\\n        }\\n        return addBytes32(set, value);\\n    }\\n\\n    /**\\n     * @notice Add a value to a set. O(1).\\n     *\\n     * @param set The set of values.\\n     * @param value The new value to add.\\n     *\\n     * @return False if the value was already in the set.\\n     */\\n    function addBytes32(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        if (!contains(set, value)) {\\n            set.index[value] = set.values.push(value);\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @notice Remove an address value from a set. O(1).\\n     *\\n     * @param set The set of values.\\n     * @param addrvalue The address to remove.\\n     *\\n     * @return False if the address was not present in the set.\\n     */\\n    function removeAddress(Bytes32Set storage set, address addrvalue) internal returns (bool) {\\n        bytes32 value;\\n        assembly {\\n            value := addrvalue\\n        }\\n        return removeBytes32(set, value);\\n    }\\n\\n    /**\\n     * @notice Remove a value from a set. O(1).\\n     *\\n     * @param set The set of values.\\n     * @param value The value to remove.\\n     *\\n     * @return False if the value was not present in the set.\\n     */\\n    function removeBytes32(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        if (contains(set, value)) {\\n            uint256 toDeleteIndex = set.index[value] - 1;\\n            uint256 lastIndex = set.values.length - 1;\\n\\n            /// If the element we're deleting is the last one,\\n            /// we can just remove it without doing a swap.\\n            if (lastIndex != toDeleteIndex) {\\n                bytes32 lastValue = set.values[lastIndex];\\n\\n                /// Move the last value to the index where the deleted value is.\\n                set.values[toDeleteIndex] = lastValue;\\n\\n                /// Update the index for the moved value.\\n                set.index[lastValue] = toDeleteIndex + 1; // All indexes are 1-based\\n            }\\n\\n            /// Delete the index entry for the deleted value.\\n            delete set.index[value];\\n\\n            /// Delete the old entry for the moved value.\\n            set.values.pop();\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @notice Find out whether a value exists in the set.\\n     *\\n     * @param set The set of values.\\n     * @param value The value to find.\\n     *\\n     * @return True if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return set.index[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function containsAddress(Bytes32Set storage set, address addrvalue)\\n        internal\\n        view\\n        returns (bool)\\n    {\\n        bytes32 value;\\n        assembly {\\n            value := addrvalue\\n        }\\n        return set.index[value] != 0;\\n    }\\n\\n    /**\\n     * @notice Get all set values.\\n     *\\n     * @param set The set of values.\\n     * @param start The offset of the returning set.\\n     * @param count The limit of number of values to return.\\n     *\\n     * @return An array with all values in the set. O(N).\\n     *\\n     * @dev Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * WARNING: This function may run out of gas on large sets: use {length} and\\n     * {get} instead in these cases.\\n     */\\n    function enumerate(\\n        Bytes32Set storage set,\\n        uint256 start,\\n        uint256 count\\n    ) internal view returns (bytes32[] memory output) {\\n        uint256 end = start + count;\\n        require(end >= start, \\\"addition overflow\\\");\\n        end = set.values.length < end ? set.values.length : end;\\n        if (end == 0 || start >= end) {\\n            return output;\\n        }\\n\\n        output = new bytes32[](end - start);\\n        for (uint256 i; i < end - start; i++) {\\n            output[i] = set.values[i + start];\\n        }\\n        return output;\\n    }\\n\\n    /**\\n     * @notice Get the legth of the set.\\n     *\\n     * @param set The set of values.\\n     *\\n     * @return the number of elements on the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return set.values.length;\\n    }\\n\\n    /**\\n     * @notice Get an item from the set by its index.\\n     *\\n     * @dev Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     *\\n     * @param set The set of values.\\n     * @param index The index of the value to return.\\n     *\\n     * @return the element stored at position `index` in the set. O(1).\\n     */\\n    function get(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return set.values[index];\\n    }\\n}\\n\",\"keccak256\":\"0xa2801a585c566e07f21c1ebccd0cd0447dd5fd9fe6c1ff2b58d4d979d88a6db0\"},\"contracts/mixins/ModuleCommonFunctionalities.sol\":{\"content\":\"pragma solidity 0.5.17;\\n\\nimport \\\"../core/State.sol\\\";\\n\\ncontract ModuleCommonFunctionalities is State {\\n    modifier whenNotPaused() {\\n        require(!pause, \\\"Paused\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x9ed7a6a635ef960b53888b28a2a6bed8b071255cad8cd33f00386a634cbddb74\"},\"contracts/mixins/ProtocolTokenUser.sol\":{\"content\":\"/**\\n * Copyright 2017-2020, bZeroX, LLC. All Rights Reserved.\\n * Licensed under the Apache License, Version 2.0.\\n */\\n\\npragma solidity 0.5.17;\\n\\nimport \\\"../core/State.sol\\\";\\nimport \\\"../openzeppelin/SafeERC20.sol\\\";\\n\\n/**\\n * @title The Protocol Token User contract.\\n * @notice This contract code comes from bZx. bZx is a protocol for tokenized margin\\n * trading and lending https://bzx.network similar to the dYdX protocol.\\n *\\n * This contract implements functionality to withdraw protocol tokens.\\n * */\\ncontract ProtocolTokenUser is State {\\n    using SafeERC20 for IERC20;\\n\\n    /**\\n     * @notice Internal function to withdraw an amount of protocol tokens from this contract.\\n     *\\n     * @param receiver The address of the recipient.\\n     * @param amount The amount of tokens to withdraw.\\n     *\\n     * @return The protocol token address.\\n     * @return Withdrawal success (true/false).\\n     * */\\n    function _withdrawProtocolToken(address receiver, uint256 amount)\\n        internal\\n        returns (address, bool)\\n    {\\n        uint256 withdrawAmount = amount;\\n\\n        uint256 tokenBalance = protocolTokenHeld;\\n        if (withdrawAmount > tokenBalance) {\\n            withdrawAmount = tokenBalance;\\n        }\\n        if (withdrawAmount == 0) {\\n            return (protocolTokenAddress, false);\\n        }\\n\\n        protocolTokenHeld = tokenBalance.sub(withdrawAmount);\\n\\n        IERC20(protocolTokenAddress).safeTransfer(receiver, withdrawAmount);\\n\\n        return (protocolTokenAddress, true);\\n    }\\n}\\n\",\"keccak256\":\"0x4afe44fd9498c35a4f76f22527a9d956b0729d9a5f7fa807192c6592a3c53489\"},\"contracts/modules/ProtocolSettings.sol\":{\"content\":\"/**\\n * Copyright 2017-2020, bZeroX, LLC. All Rights Reserved.\\n * Licensed under the Apache License, Version 2.0.\\n */\\n\\npragma solidity 0.5.17;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"../core/State.sol\\\";\\nimport \\\"../events/ProtocolSettingsEvents.sol\\\";\\nimport \\\"../openzeppelin/SafeERC20.sol\\\";\\nimport \\\"../mixins/ProtocolTokenUser.sol\\\";\\nimport \\\"../modules/interfaces/ProtocolSwapExternalInterface.sol\\\";\\nimport \\\"../mixins/ModuleCommonFunctionalities.sol\\\";\\nimport \\\"../governance/IFeeSharingCollector.sol\\\";\\nimport \\\"../feeds/IPriceFeeds.sol\\\";\\n\\n/**\\n * @title Protocol Settings contract.\\n *\\n * @notice This contract code comes from bZx. bZx is a protocol for tokenized\\n * margin trading and lending https://bzx.network similar to the dYdX protocol.\\n *\\n * This contract contains functions to customize protocol settings.\\n * */\\ncontract ProtocolSettings is\\n    State,\\n    ProtocolTokenUser,\\n    ProtocolSettingsEvents,\\n    ModuleCommonFunctionalities\\n{\\n    using SafeERC20 for IERC20;\\n    using SafeMath for uint256;\\n\\n    /**\\n     * @notice Empty public constructor.\\n     * */\\n    constructor() public {}\\n\\n    /**\\n     * @notice Fallback function is to react to receiving value (rBTC).\\n     * */\\n    function() external {\\n        revert(\\\"fallback not allowed\\\");\\n    }\\n\\n    /**\\n     * @notice Set function selectors on target contract.\\n     *\\n     * @param target The address of the target contract.\\n     * */\\n    function initialize(address target) external onlyAdminOrOwner {\\n        address prevModuleContractAddress = logicTargets[this.setPriceFeedContract.selector];\\n        _setTarget(this.setPriceFeedContract.selector, target);\\n        _setTarget(this.setSwapsImplContract.selector, target);\\n        _setTarget(this.setLoanPool.selector, target);\\n        _setTarget(this.setSupportedTokens.selector, target);\\n        _setTarget(this.setLendingFeePercent.selector, target);\\n        _setTarget(this.setTradingFeePercent.selector, target);\\n        _setTarget(this.setBorrowingFeePercent.selector, target);\\n        _setTarget(this.setSwapExternalFeePercent.selector, target);\\n        _setTarget(this.setAffiliateFeePercent.selector, target);\\n        _setTarget(this.setAffiliateTradingTokenFeePercent.selector, target);\\n        _setTarget(this.setLiquidationIncentivePercent.selector, target);\\n        _setTarget(this.setMaxDisagreement.selector, target);\\n        _setTarget(this.setSourceBuffer.selector, target);\\n        _setTarget(this.setMaxSwapSize.selector, target);\\n        _setTarget(this.setFeesController.selector, target);\\n        _setTarget(this.withdrawFees.selector, target);\\n        _setTarget(this.withdrawLendingFees.selector, target);\\n        _setTarget(this.withdrawTradingFees.selector, target);\\n        _setTarget(this.withdrawBorrowingFees.selector, target);\\n        _setTarget(this.withdrawProtocolToken.selector, target);\\n        _setTarget(this.depositProtocolToken.selector, target);\\n        _setTarget(this.getLoanPoolsList.selector, target);\\n        _setTarget(this.isLoanPool.selector, target);\\n        _setTarget(this.setSovrynSwapContractRegistryAddress.selector, target);\\n        _setTarget(this.setWrbtcToken.selector, target);\\n        _setTarget(this.setProtocolTokenAddress.selector, target);\\n        _setTarget(this.setRolloverBaseReward.selector, target);\\n        _setTarget(this.setRebatePercent.selector, target);\\n        _setTarget(this.setSpecialRebates.selector, target);\\n        _setTarget(this.setSovrynProtocolAddress.selector, target);\\n        _setTarget(this.setSOVTokenAddress.selector, target);\\n        _setTarget(this.setLockedSOVAddress.selector, target);\\n        _setTarget(this.setMinReferralsToPayoutAffiliates.selector, target);\\n        _setTarget(this.getSpecialRebates.selector, target);\\n        _setTarget(this.getProtocolAddress.selector, target);\\n        _setTarget(this.getSovTokenAddress.selector, target);\\n        _setTarget(this.getLockedSOVAddress.selector, target);\\n        _setTarget(this.getFeeRebatePercent.selector, target);\\n        _setTarget(this.togglePaused.selector, target);\\n        _setTarget(this.isProtocolPaused.selector, target);\\n        _setTarget(this.getSwapExternalFeePercent.selector, target);\\n        _setTarget(this.setTradingRebateRewardsBasisPoint.selector, target);\\n        _setTarget(this.getTradingRebateRewardsBasisPoint.selector, target);\\n        _setTarget(this.getDedicatedSOVRebate.selector, target);\\n        _setTarget(this.setRolloverFlexFeePercent.selector, target);\\n        _setTarget(this.getDefaultPathConversion.selector, target);\\n        _setTarget(this.setDefaultPathConversion.selector, target);\\n        _setTarget(this.removeDefaultPathConversion.selector, target);\\n        _setTarget(this.setAdmin.selector, target);\\n        _setTarget(this.getAdmin.selector, target);\\n        _setTarget(this.setPauser.selector, target);\\n        _setTarget(this.getPauser.selector, target);\\n        emit ProtocolModuleContractReplaced(prevModuleContractAddress, target, \\\"ProtocolSettings\\\");\\n    }\\n\\n    /**\\n     * setting wrong address will break inter module functions calling\\n     * should be set once\\n     */\\n    function setSovrynProtocolAddress(address newProtocolAddress)\\n        external\\n        onlyAdminOrOwner\\n        whenNotPaused\\n    {\\n        address oldProtocolAddress = protocolAddress;\\n        protocolAddress = newProtocolAddress;\\n\\n        emit SetProtocolAddress(msg.sender, oldProtocolAddress, newProtocolAddress);\\n    }\\n\\n    function setSOVTokenAddress(address newSovTokenAddress)\\n        external\\n        onlyAdminOrOwner\\n        whenNotPaused\\n    {\\n        require(Address.isContract(newSovTokenAddress), \\\"newSovTokenAddress not a contract\\\");\\n\\n        address oldTokenAddress = sovTokenAddress;\\n        sovTokenAddress = newSovTokenAddress;\\n\\n        emit SetSOVTokenAddress(msg.sender, oldTokenAddress, newSovTokenAddress);\\n    }\\n\\n    function setLockedSOVAddress(address newLockedSOVAddress)\\n        external\\n        onlyAdminOrOwner\\n        whenNotPaused\\n    {\\n        require(Address.isContract(newLockedSOVAddress), \\\"newLockSOVAddress not a contract\\\");\\n\\n        address oldLockedSOVAddress = lockedSOVAddress;\\n        lockedSOVAddress = newLockedSOVAddress;\\n\\n        emit SetLockedSOVAddress(msg.sender, oldLockedSOVAddress, newLockedSOVAddress);\\n    }\\n\\n    /**\\n     * @notice Set the basis point of trading rebate rewards (SOV), max value is 9999 (99.99% liquid, 0.01% vested).\\n     *\\n     * @param newBasisPoint Basis point value.\\n     */\\n    function setTradingRebateRewardsBasisPoint(uint256 newBasisPoint)\\n        external\\n        onlyAdminOrOwner\\n        whenNotPaused\\n    {\\n        require(newBasisPoint <= 9999, \\\"value too high\\\");\\n\\n        uint256 oldBasisPoint = tradingRebateRewardsBasisPoint;\\n        tradingRebateRewardsBasisPoint = newBasisPoint;\\n\\n        emit SetTradingRebateRewardsBasisPoint(msg.sender, oldBasisPoint, newBasisPoint);\\n    }\\n\\n    /**\\n     * @notice Update the minimum number of referrals to get affiliates rewards.\\n     *\\n     * @param newMinReferrals The new minimum number of referrals.\\n     * */\\n    function setMinReferralsToPayoutAffiliates(uint256 newMinReferrals)\\n        external\\n        onlyAdminOrOwner\\n        whenNotPaused\\n    {\\n        uint256 oldMinReferrals = minReferralsToPayout;\\n        minReferralsToPayout = newMinReferrals;\\n\\n        emit SetMinReferralsToPayoutAffiliates(msg.sender, oldMinReferrals, newMinReferrals);\\n    }\\n\\n    /**\\n     * @notice Set the address of the Price Feed instance.\\n     *\\n     * @param newContract The address of the Price Feed new instance.\\n     * */\\n    function setPriceFeedContract(address newContract) external onlyAdminOrOwner whenNotPaused {\\n        address oldContract = priceFeeds;\\n        priceFeeds = newContract;\\n\\n        emit SetPriceFeedContract(msg.sender, oldContract, newContract);\\n    }\\n\\n    /**\\n     * @notice Set the address of the asset swapper instance.\\n     *\\n     * @param newContract The address of the asset swapper new instance.\\n     * */\\n    function setSwapsImplContract(address newContract) external onlyAdminOrOwner whenNotPaused {\\n        address oldContract = swapsImpl;\\n        swapsImpl = newContract;\\n\\n        emit SetSwapsImplContract(msg.sender, oldContract, newContract);\\n    }\\n\\n    /**\\n     * @notice Set a list of loan pools and its tokens.\\n     *\\n     * @param pools The array of addresses of new loan pool instances.\\n     * @param assets The array of addresses of the corresponding underlying tokens.\\n     * */\\n    function setLoanPool(address[] calldata pools, address[] calldata assets)\\n        external\\n        onlyAdminOrOwner\\n        whenNotPaused\\n    {\\n        require(pools.length == assets.length, \\\"count mismatch\\\");\\n\\n        for (uint256 i = 0; i < pools.length; i++) {\\n            require(pools[i] != assets[i], \\\"pool == asset\\\");\\n            require(pools[i] != address(0), \\\"pool == 0\\\");\\n            require(\\n                assets[i] != address(0) || loanPoolToUnderlying[pools[i]] != address(0),\\n                \\\"pool not exists\\\"\\n            );\\n            if (assets[i] == address(0)) {\\n                underlyingToLoanPool[loanPoolToUnderlying[pools[i]]] = address(0);\\n                loanPoolToUnderlying[pools[i]] = address(0);\\n                loanPoolsSet.removeAddress(pools[i]);\\n            } else {\\n                loanPoolToUnderlying[pools[i]] = assets[i];\\n                underlyingToLoanPool[assets[i]] = pools[i];\\n                loanPoolsSet.addAddress(pools[i]);\\n            }\\n\\n            emit SetLoanPool(msg.sender, pools[i], assets[i]);\\n        }\\n    }\\n\\n    /**\\n     * @notice Set a list of supported tokens by populating the\\n     *   storage supportedTokens mapping.\\n     *\\n     * @param addrs The array of addresses of the tokens.\\n     * @param toggles The array of flags indicating whether\\n     *   the corresponding token is supported or not.\\n     * */\\n    function setSupportedTokens(address[] calldata addrs, bool[] calldata toggles)\\n        external\\n        onlyAdminOrOwner\\n        whenNotPaused\\n    {\\n        require(addrs.length == toggles.length, \\\"count mismatch\\\");\\n\\n        for (uint256 i = 0; i < addrs.length; i++) {\\n            supportedTokens[addrs[i]] = toggles[i];\\n\\n            emit SetSupportedTokens(msg.sender, addrs[i], toggles[i]);\\n        }\\n    }\\n\\n    /**\\n     * @notice Set the value of lendingFeePercent storage variable.\\n     *\\n     * @param newValue The new value for lendingFeePercent.\\n     * */\\n    function setLendingFeePercent(uint256 newValue) external onlyAdminOrOwner whenNotPaused {\\n        require(newValue <= 10**20, \\\"value too high\\\");\\n        uint256 oldValue = lendingFeePercent;\\n        lendingFeePercent = newValue;\\n\\n        emit SetLendingFeePercent(msg.sender, oldValue, newValue);\\n    }\\n\\n    /**\\n     * @notice Set the value of tradingFeePercent storage variable.\\n     *\\n     * @param newValue The new value for tradingFeePercent.\\n     * */\\n    function setTradingFeePercent(uint256 newValue) external onlyAdminOrOwner whenNotPaused {\\n        require(newValue <= 10**20, \\\"value too high\\\");\\n        uint256 oldValue = tradingFeePercent;\\n        tradingFeePercent = newValue;\\n\\n        emit SetTradingFeePercent(msg.sender, oldValue, newValue);\\n    }\\n\\n    /**\\n     * @notice Set the value of borrowingFeePercent storage variable.\\n     *\\n     * @param newValue The new value for borrowingFeePercent.\\n     * */\\n    function setBorrowingFeePercent(uint256 newValue) external onlyAdminOrOwner whenNotPaused {\\n        require(newValue <= 10**20, \\\"value too high\\\");\\n        uint256 oldValue = borrowingFeePercent;\\n        borrowingFeePercent = newValue;\\n\\n        emit SetBorrowingFeePercent(msg.sender, oldValue, newValue);\\n    }\\n\\n    /**\\n     * @notice Set the value of swapExtrernalFeePercent storage variable\\n     *\\n     * @param newValue the new value for swapExternalFeePercent\\n     */\\n    function setSwapExternalFeePercent(uint256 newValue) external onlyAdminOrOwner whenNotPaused {\\n        require(newValue <= 10**20, \\\"value too high\\\");\\n        uint256 oldValue = swapExtrernalFeePercent;\\n        swapExtrernalFeePercent = newValue;\\n\\n        emit SetSwapExternalFeePercent(msg.sender, oldValue, newValue);\\n    }\\n\\n    /**\\n     * @notice Set the value of affiliateFeePercent storage variable.\\n     *\\n     * @param newValue The new value for affiliateFeePercent.\\n     * */\\n    function setAffiliateFeePercent(uint256 newValue) external onlyAdminOrOwner whenNotPaused {\\n        require(newValue <= 10**20, \\\"value too high\\\");\\n        uint256 oldValue = affiliateFeePercent;\\n        affiliateFeePercent = newValue;\\n\\n        emit SetAffiliateFeePercent(msg.sender, oldValue, newValue);\\n    }\\n\\n    /**\\n     * @notice Set the value of affiliateTradingTokenFeePercent storage variable.\\n     *\\n     * @param newValue The new value for affiliateTradingTokenFeePercent.\\n     * */\\n    function setAffiliateTradingTokenFeePercent(uint256 newValue)\\n        external\\n        onlyAdminOrOwner\\n        whenNotPaused\\n    {\\n        require(newValue <= 10**20, \\\"value too high\\\");\\n        uint256 oldValue = affiliateTradingTokenFeePercent;\\n        affiliateTradingTokenFeePercent = newValue;\\n\\n        emit SetAffiliateTradingTokenFeePercent(msg.sender, oldValue, newValue);\\n    }\\n\\n    /**\\n     * @notice Set the value of liquidationIncentivePercent storage variable.\\n     *\\n     * @param newValue The new value for liquidationIncentivePercent.\\n     * */\\n    function setLiquidationIncentivePercent(uint256 newValue)\\n        external\\n        onlyAdminOrOwner\\n        whenNotPaused\\n    {\\n        require(newValue <= 10**20, \\\"value too high\\\");\\n        uint256 oldValue = liquidationIncentivePercent;\\n        liquidationIncentivePercent = newValue;\\n\\n        emit SetLiquidationIncentivePercent(msg.sender, oldValue, newValue);\\n    }\\n\\n    /**\\n     * @notice Set the value of the maximum swap spread.\\n     *\\n     * @param newValue The new value for maxDisagreement.\\n     * */\\n    function setMaxDisagreement(uint256 newValue) external onlyAdminOrOwner whenNotPaused {\\n        maxDisagreement = newValue;\\n    }\\n\\n    /**\\n     * @notice Set the value of the maximum source buffer.\\n     *\\n     * @dev To avoid rounding issues on the swap rate a small buffer is implemented.\\n     *\\n     * @param newValue The new value for the maximum source buffer.\\n     * */\\n    function setSourceBuffer(uint256 newValue) external onlyAdminOrOwner whenNotPaused {\\n        sourceBuffer = newValue;\\n    }\\n\\n    /**\\n     * @notice Set the value of the swap size limit.\\n     *\\n     * @param newValue The new value for the maximum swap size.\\n     * */\\n    function setMaxSwapSize(uint256 newValue) external onlyAdminOrOwner whenNotPaused {\\n        uint256 oldValue = maxSwapSize;\\n        maxSwapSize = newValue;\\n\\n        emit SetMaxSwapSize(msg.sender, oldValue, newValue);\\n    }\\n\\n    /**\\n     * @notice Set the address of the feesController instance.\\n     *\\n     * @dev The fee sharing proxy must be the feesController of the\\n     * protocol contract. This allows the fee sharing proxy\\n     * to withdraw the fees.\\n     *\\n     * @param newController The new address of the feesController.\\n     * */\\n    function setFeesController(address newController) external onlyAdminOrOwner whenNotPaused {\\n        address oldController = feesController;\\n        feesController = newController;\\n\\n        emit SetFeesController(msg.sender, oldController, newController);\\n    }\\n\\n    /**\\n     * @notice Set the pauser address of sovryn protocol.\\n     *\\n     * only pauser or owner can perform this action.\\n     *\\n     * @param newPauser The new address of the pauser.\\n     * */\\n    function setPauser(address newPauser) external onlyOwner {\\n        address oldPauser = pauser;\\n        pauser = newPauser;\\n\\n        emit SetPauser(msg.sender, oldPauser, newPauser);\\n    }\\n\\n    /**\\n     * @dev Get pauser address.\\n     *\\n     *\\n     * @return pauser address.\\n     */\\n    function getPauser() external view returns (address) {\\n        return pauser;\\n    }\\n\\n    /*\\n     * @notice Set the admin address of sovryn protocol.\\n     *\\n     * only owner can perform this action.\\n     *\\n     * @param newAdmin The new address of the admin.\\n     * */\\n    function setAdmin(address newAdmin) external onlyOwner {\\n        emit SetAdmin(msg.sender, admin, newAdmin);\\n        admin = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Get admin address.\\n     *\\n     *\\n     * @return admin address.\\n     */\\n    function getAdmin() external view returns (address) {\\n        return admin;\\n    }\\n\\n    /**\\n     * @notice The feesController calls this function to withdraw fees\\n     * from three sources: lending, trading and borrowing.\\n     * The fees (except SOV) will be converted to wRBTC.\\n     * For SOV, it will be deposited directly to feeSharingCollector from the protocol.\\n     *\\n     * @param tokens The array of address of the token instance.\\n     * @param receiver The address of the withdrawal recipient.\\n     *\\n     * @return The withdrawn total amount in wRBTC\\n     * */\\n    function withdrawFees(address[] calldata tokens, address receiver)\\n        external\\n        whenNotPaused\\n        returns (uint256 totalWRBTCWithdrawn)\\n    {\\n        require(msg.sender == feesController, \\\"unauthorized\\\");\\n\\n        for (uint256 i = 0; i < tokens.length; i++) {\\n            uint256 lendingBalance = lendingFeeTokensHeld[tokens[i]];\\n            if (lendingBalance > 0) {\\n                lendingFeeTokensHeld[tokens[i]] = 0;\\n                lendingFeeTokensPaid[tokens[i]] = lendingFeeTokensPaid[tokens[i]].add(\\n                    lendingBalance\\n                );\\n            }\\n\\n            uint256 tradingBalance = tradingFeeTokensHeld[tokens[i]];\\n            if (tradingBalance > 0) {\\n                tradingFeeTokensHeld[tokens[i]] = 0;\\n                tradingFeeTokensPaid[tokens[i]] = tradingFeeTokensPaid[tokens[i]].add(\\n                    tradingBalance\\n                );\\n            }\\n\\n            uint256 borrowingBalance = borrowingFeeTokensHeld[tokens[i]];\\n            if (borrowingBalance > 0) {\\n                borrowingFeeTokensHeld[tokens[i]] = 0;\\n                borrowingFeeTokensPaid[tokens[i]] = borrowingFeeTokensPaid[tokens[i]].add(\\n                    borrowingBalance\\n                );\\n            }\\n\\n            uint256 tempAmount = lendingBalance.add(tradingBalance).add(borrowingBalance);\\n\\n            if (tempAmount == 0) {\\n                continue;\\n            }\\n\\n            uint256 amountConvertedToWRBTC;\\n            if (tokens[i] == address(sovTokenAddress)) {\\n                IERC20(tokens[i]).approve(feesController, tempAmount);\\n                IFeeSharingCollector(feesController).transferTokens(\\n                    address(sovTokenAddress),\\n                    uint96(tempAmount)\\n                );\\n                amountConvertedToWRBTC = 0;\\n            } else {\\n                if (tokens[i] == address(wrbtcToken)) {\\n                    amountConvertedToWRBTC = tempAmount;\\n\\n                    IERC20(address(wrbtcToken)).safeTransfer(receiver, amountConvertedToWRBTC);\\n                } else {\\n                    IERC20(tokens[i]).approve(protocolAddress, tempAmount);\\n\\n                    (amountConvertedToWRBTC, ) = ProtocolSwapExternalInterface(protocolAddress)\\n                        .swapExternal(\\n                        tokens[i], // source token address\\n                        address(wrbtcToken), // dest token address\\n                        feesController, // set feeSharingCollector as receiver\\n                        protocolAddress, // protocol as the sender\\n                        tempAmount, // source token amount\\n                        0, // reqDestToken\\n                        0, // minReturn\\n                        \\\"\\\" // loan data bytes\\n                    );\\n\\n                    /// Will revert if disagreement found.\\n                    IPriceFeeds(priceFeeds).checkPriceDisagreement(\\n                        tokens[i],\\n                        address(wrbtcToken),\\n                        tempAmount,\\n                        amountConvertedToWRBTC,\\n                        maxDisagreement\\n                    );\\n                }\\n\\n                totalWRBTCWithdrawn = totalWRBTCWithdrawn.add(amountConvertedToWRBTC);\\n            }\\n\\n            emit WithdrawFees(\\n                msg.sender,\\n                tokens[i],\\n                receiver,\\n                lendingBalance,\\n                tradingBalance,\\n                borrowingBalance,\\n                amountConvertedToWRBTC\\n            );\\n        }\\n\\n        return totalWRBTCWithdrawn;\\n    }\\n\\n    /**\\n     * @notice The feesController calls this function to withdraw fees\\n     * accrued from lending operations.\\n     *\\n     * @param token The address of the token instance.\\n     * @param receiver The address of the withdrawal recipient.\\n     * @param amount The amount of fees to get, ignored if greater than balance.\\n     *\\n     * @return Whether withdrawal was successful.\\n     * */\\n    function withdrawLendingFees(\\n        address token,\\n        address receiver,\\n        uint256 amount\\n    ) external whenNotPaused returns (bool) {\\n        require(msg.sender == feesController, \\\"unauthorized\\\");\\n\\n        uint256 withdrawAmount = amount;\\n\\n        uint256 balance = lendingFeeTokensHeld[token];\\n        if (withdrawAmount > balance) {\\n            withdrawAmount = balance;\\n        }\\n        if (withdrawAmount == 0) {\\n            return false;\\n        }\\n\\n        lendingFeeTokensHeld[token] = balance.sub(withdrawAmount);\\n        lendingFeeTokensPaid[token] = lendingFeeTokensPaid[token].add(withdrawAmount);\\n\\n        IERC20(token).safeTransfer(receiver, withdrawAmount);\\n\\n        emit WithdrawLendingFees(msg.sender, token, receiver, withdrawAmount);\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @notice The feesController calls this function to withdraw fees\\n     * accrued from trading operations.\\n     *\\n     * @param token The address of the token instance.\\n     * @param receiver The address of the withdrawal recipient.\\n     * @param amount The amount of fees to get, ignored if greater than balance.\\n     *\\n     * @return Whether withdrawal was successful.\\n     * */\\n    function withdrawTradingFees(\\n        address token,\\n        address receiver,\\n        uint256 amount\\n    ) external whenNotPaused returns (bool) {\\n        require(msg.sender == feesController, \\\"unauthorized\\\");\\n\\n        uint256 withdrawAmount = amount;\\n\\n        uint256 balance = tradingFeeTokensHeld[token];\\n        if (withdrawAmount > balance) {\\n            withdrawAmount = balance;\\n        }\\n        if (withdrawAmount == 0) {\\n            return false;\\n        }\\n\\n        tradingFeeTokensHeld[token] = balance.sub(withdrawAmount);\\n        tradingFeeTokensPaid[token] = tradingFeeTokensPaid[token].add(withdrawAmount);\\n\\n        IERC20(token).safeTransfer(receiver, withdrawAmount);\\n\\n        emit WithdrawTradingFees(msg.sender, token, receiver, withdrawAmount);\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @notice The feesController calls this function to withdraw fees\\n     * accrued from borrowing operations.\\n     *\\n     * @param token The address of the token instance.\\n     * @param receiver The address of the withdrawal recipient.\\n     * @param amount The amount of fees to get, ignored if greater than balance.\\n     *\\n     * @return Whether withdrawal was successful.\\n     * */\\n    function withdrawBorrowingFees(\\n        address token,\\n        address receiver,\\n        uint256 amount\\n    ) external whenNotPaused returns (bool) {\\n        require(msg.sender == feesController, \\\"unauthorized\\\");\\n\\n        uint256 withdrawAmount = amount;\\n\\n        uint256 balance = borrowingFeeTokensHeld[token];\\n        if (withdrawAmount > balance) {\\n            withdrawAmount = balance;\\n        }\\n        if (withdrawAmount == 0) {\\n            return false;\\n        }\\n\\n        borrowingFeeTokensHeld[token] = balance.sub(withdrawAmount);\\n        borrowingFeeTokensPaid[token] = borrowingFeeTokensPaid[token].add(withdrawAmount);\\n\\n        IERC20(token).safeTransfer(receiver, withdrawAmount);\\n\\n        emit WithdrawBorrowingFees(msg.sender, token, receiver, withdrawAmount);\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @notice The owner calls this function to withdraw protocol tokens.\\n     *\\n     * @dev Wrapper for ProtocolTokenUser::_withdrawProtocolToken internal function.\\n     *\\n     * @param receiver The address of the withdrawal recipient.\\n     * @param amount The amount of tokens to get.\\n     *\\n     * @return The protocol token address.\\n     * @return Withdrawal success (true/false).\\n     * */\\n    function withdrawProtocolToken(address receiver, uint256 amount)\\n        external\\n        onlyAdminOrOwner\\n        whenNotPaused\\n        returns (address, bool)\\n    {\\n        return _withdrawProtocolToken(receiver, amount);\\n    }\\n\\n    /**\\n     * @notice The owner calls this function to deposit protocol tokens.\\n     *\\n     * @param amount The tokens of fees to send.\\n     * */\\n    function depositProtocolToken(uint256 amount) external onlyAdminOrOwner whenNotPaused {\\n        /// @dev Update local balance\\n        protocolTokenHeld = protocolTokenHeld.add(amount);\\n\\n        /// @dev Send the tokens\\n        IERC20(protocolTokenAddress).safeTransferFrom(msg.sender, address(this), amount);\\n    }\\n\\n    /**\\n     * @notice Get a list of loan pools.\\n     *\\n     * @param start The offset.\\n     * @param count The limit.\\n     *\\n     * @return The array of loan pools.\\n     * */\\n    function getLoanPoolsList(uint256 start, uint256 count)\\n        external\\n        view\\n        returns (bytes32[] memory)\\n    {\\n        return loanPoolsSet.enumerate(start, count);\\n    }\\n\\n    /**\\n     * @notice Check whether a token is a pool token.\\n     *\\n     * @dev By querying its underlying token.\\n     *\\n     * @param loanPool The token address to check.\\n     * */\\n    function isLoanPool(address loanPool) external view returns (bool) {\\n        return loanPoolToUnderlying[loanPool] != address(0);\\n    }\\n\\n    /**\\n     * @notice Set the contract registry address of the SovrynSwap network.\\n     *\\n     * @param registryAddress the address of the registry contract.\\n     * */\\n    function setSovrynSwapContractRegistryAddress(address registryAddress)\\n        external\\n        onlyAdminOrOwner\\n        whenNotPaused\\n    {\\n        require(Address.isContract(registryAddress), \\\"registryAddress not a contract\\\");\\n\\n        address oldSovrynSwapContractRegistryAddress = sovrynSwapContractRegistryAddress;\\n        sovrynSwapContractRegistryAddress = registryAddress;\\n\\n        emit SetSovrynSwapContractRegistryAddress(\\n            msg.sender,\\n            oldSovrynSwapContractRegistryAddress,\\n            sovrynSwapContractRegistryAddress\\n        );\\n    }\\n\\n    /**\\n     * @notice Set the wrBTC contract address.\\n     *\\n     * @param wrbtcTokenAddress The address of the wrBTC contract.\\n     * */\\n    function setWrbtcToken(address wrbtcTokenAddress) external onlyAdminOrOwner whenNotPaused {\\n        require(Address.isContract(wrbtcTokenAddress), \\\"wrbtcTokenAddress not a contract\\\");\\n\\n        address oldwrbtcToken = address(wrbtcToken);\\n        wrbtcToken = IWrbtcERC20(wrbtcTokenAddress);\\n\\n        emit SetWrbtcToken(msg.sender, oldwrbtcToken, wrbtcTokenAddress);\\n    }\\n\\n    /**\\n     * @notice Set the protocol token contract address.\\n     *\\n     * @param _protocolTokenAddress The address of the protocol token contract.\\n     * */\\n    function setProtocolTokenAddress(address _protocolTokenAddress)\\n        external\\n        onlyAdminOrOwner\\n        whenNotPaused\\n    {\\n        require(Address.isContract(_protocolTokenAddress), \\\"_protocolTokenAddress not a contract\\\");\\n\\n        address oldProtocolTokenAddress = protocolTokenAddress;\\n        protocolTokenAddress = _protocolTokenAddress;\\n\\n        emit SetProtocolTokenAddress(msg.sender, oldProtocolTokenAddress, _protocolTokenAddress);\\n    }\\n\\n    /**\\n     * @notice Set rollover base reward. It should be denominated in wrBTC.\\n     *\\n     * @param baseRewardValue The base reward.\\n     * */\\n    function setRolloverBaseReward(uint256 baseRewardValue)\\n        external\\n        onlyAdminOrOwner\\n        whenNotPaused\\n    {\\n        require(baseRewardValue > 0, \\\"Base reward is zero\\\");\\n\\n        uint256 oldValue = rolloverBaseReward;\\n        rolloverBaseReward = baseRewardValue;\\n\\n        emit SetRolloverBaseReward(msg.sender, oldValue, rolloverBaseReward);\\n    }\\n\\n    /**\\n     * @notice Set the fee rebate percent.\\n     *\\n     * @param rebatePercent The fee rebate percent.\\n     * */\\n    function setRebatePercent(uint256 rebatePercent) external onlyAdminOrOwner whenNotPaused {\\n        require(rebatePercent <= 10**20, \\\"Fee rebate is too high\\\");\\n\\n        uint256 oldRebatePercent = feeRebatePercent;\\n        feeRebatePercent = rebatePercent;\\n\\n        emit SetRebatePercent(msg.sender, oldRebatePercent, rebatePercent);\\n    }\\n\\n    /**\\n     * @notice Set the special fee rebate percent for specific pair\\n     *\\n     * @param specialRebatesPercent The new special fee rebate percent.\\n     * */\\n    function setSpecialRebates(\\n        address sourceToken,\\n        address destToken,\\n        uint256 specialRebatesPercent\\n    ) external onlyAdminOrOwner whenNotPaused {\\n        // Set max special rebates to 1000%\\n        require(specialRebatesPercent <= 1000e18, \\\"Special fee rebate is too high\\\");\\n\\n        uint256 oldSpecialRebatesPercent = specialRebates[sourceToken][destToken];\\n        specialRebates[sourceToken][destToken] = specialRebatesPercent;\\n\\n        emit SetSpecialRebates(\\n            msg.sender,\\n            sourceToken,\\n            destToken,\\n            oldSpecialRebatesPercent,\\n            specialRebatesPercent\\n        );\\n    }\\n\\n    /**\\n     * @notice Get a rebate percent of specific pairs.\\n     *\\n     * @param sourceTokenAddress The source of pairs.\\n     * @param destTokenAddress The dest of pairs.\\n     *\\n     * @return The percent rebates of the pairs.\\n     * */\\n    function getSpecialRebates(address sourceTokenAddress, address destTokenAddress)\\n        external\\n        view\\n        returns (uint256 specialRebatesPercent)\\n    {\\n        return specialRebates[sourceTokenAddress][destTokenAddress];\\n    }\\n\\n    function getProtocolAddress() external view returns (address) {\\n        return protocolAddress;\\n    }\\n\\n    function getSovTokenAddress() external view returns (address) {\\n        return sovTokenAddress;\\n    }\\n\\n    function getLockedSOVAddress() external view returns (address) {\\n        return lockedSOVAddress;\\n    }\\n\\n    function getFeeRebatePercent() external view returns (uint256) {\\n        return feeRebatePercent;\\n    }\\n\\n    function togglePaused(bool paused) external onlyPauserOrOwner {\\n        require(paused != pause, \\\"Can't toggle\\\");\\n        pause = paused;\\n        emit TogglePaused(msg.sender, !paused, paused);\\n    }\\n\\n    function isProtocolPaused() external view returns (bool) {\\n        return pause;\\n    }\\n\\n    function getSwapExternalFeePercent() external view returns (uint256) {\\n        return swapExtrernalFeePercent;\\n    }\\n\\n    /**\\n     * @notice Get the basis point of trading rebate rewards.\\n     *\\n     * @return The basis point value.\\n     */\\n    function getTradingRebateRewardsBasisPoint() external view returns (uint256) {\\n        return tradingRebateRewardsBasisPoint;\\n    }\\n\\n    /**\\n     * @dev Get how much SOV that is dedicated to pay the trading rebate rewards.\\n     * @notice If SOV balance is less than the fees held, it will return 0.\\n     *\\n     * @return total dedicated SOV.\\n     */\\n    function getDedicatedSOVRebate() public view returns (uint256) {\\n        uint256 sovProtocolBalance = IERC20(sovTokenAddress).balanceOf(address(this));\\n        uint256 sovFees =\\n            lendingFeeTokensHeld[sovTokenAddress].add(tradingFeeTokensHeld[sovTokenAddress]).add(\\n                borrowingFeeTokensHeld[sovTokenAddress]\\n            );\\n\\n        return sovProtocolBalance >= sovFees ? sovProtocolBalance.sub(sovFees) : 0;\\n    }\\n\\n    /**\\n     * @notice Set rolloverFlexFeePercent (max value is 1%)\\n     *\\n     * @param newRolloverFlexFeePercent uint256 value of new rollover flex fee percentage (0.1 ether = 0.1%)\\n     */\\n    function setRolloverFlexFeePercent(uint256 newRolloverFlexFeePercent)\\n        external\\n        onlyAdminOrOwner\\n        whenNotPaused\\n    {\\n        require(newRolloverFlexFeePercent <= 1e18, \\\"value too high\\\");\\n        uint256 oldRolloverFlexFeePercent = rolloverFlexFeePercent;\\n        rolloverFlexFeePercent = newRolloverFlexFeePercent;\\n\\n        emit SetRolloverFlexFeePercent(\\n            msg.sender,\\n            oldRolloverFlexFeePercent,\\n            newRolloverFlexFeePercent\\n        );\\n    }\\n\\n    /**\\n     * @dev Get default path conversion for pairs.\\n     *\\n     * @param sourceTokenAddress source token address.\\n     * @param destTokenAddress destination token address.\\n     *\\n     * @return default path of the conversion.\\n     */\\n    function getDefaultPathConversion(address sourceTokenAddress, address destTokenAddress)\\n        external\\n        view\\n        returns (IERC20[] memory)\\n    {\\n        return defaultPathConversion[sourceTokenAddress][destTokenAddress];\\n    }\\n\\n    /**\\n     * @dev Set default path conversion for pairs.\\n     *\\n     * @param defaultPath array of addresses for the default path.\\n     *\\n     */\\n    function setDefaultPathConversion(IERC20[] calldata defaultPath)\\n        external\\n        onlyAdminOrOwner\\n        whenNotPaused\\n    {\\n        address sourceTokenAddress = address(defaultPath[0]);\\n        address destTokenAddress = address(defaultPath[defaultPath.length - 1]);\\n\\n        uint256 defaultPathLength = defaultPath.length;\\n        require(defaultPathLength >= 3, \\\"ERR_PATH_LENGTH\\\");\\n\\n        for (uint256 i = 0; i < defaultPathLength; i++) {\\n            require(Address.isContract(address(defaultPath[i])), \\\"ERR_PATH_NON_CONTRACT_ADDR\\\");\\n        }\\n\\n        defaultPathConversion[sourceTokenAddress][destTokenAddress] = defaultPath;\\n\\n        emit SetDefaultPathConversion(\\n            msg.sender,\\n            sourceTokenAddress,\\n            destTokenAddress,\\n            defaultPath\\n        );\\n    }\\n\\n    /**\\n     * @dev Remove the default path conversion for pairs\\n     *\\n     * @param sourceTokenAddress source token address.\\n     * @param destTokenAddress destination token address\\n     */\\n    function removeDefaultPathConversion(address sourceTokenAddress, address destTokenAddress)\\n        external\\n        onlyAdminOrOwner\\n        whenNotPaused\\n    {\\n        require(\\n            defaultPathConversion[sourceTokenAddress][destTokenAddress].length > 0,\\n            \\\"DEFAULT_PATH_EMPTY\\\"\\n        );\\n\\n        IERC20[] memory defaultPathValue =\\n            defaultPathConversion[sourceTokenAddress][destTokenAddress];\\n        delete defaultPathConversion[sourceTokenAddress][destTokenAddress];\\n\\n        emit RemoveDefaultPathConversion(\\n            msg.sender,\\n            sourceTokenAddress,\\n            destTokenAddress,\\n            defaultPathValue\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x47bb3f4c56a46760de56f77cc852068d530cbec0d7a5b74b83ddfec8a6a25255\"},\"contracts/modules/interfaces/ProtocolSwapExternalInterface.sol\":{\"content\":\"/**\\n * Copyright 2020, Denis Savelev. All Rights Reserved.\\n * Licensed under the Apache License, Version 2.0.\\n */\\n\\npragma solidity 0.5.17;\\n\\ninterface ProtocolSwapExternalInterface {\\n    function swapExternal(\\n        address sourceToken,\\n        address destToken,\\n        address receiver,\\n        address returnToSender,\\n        uint256 sourceTokenAmount,\\n        uint256 requiredDestTokenAmount,\\n        uint256 minReturn,\\n        bytes calldata swapData\\n    ) external returns (uint256 destTokenAmountReceived, uint256 sourceTokenAmountUsed);\\n}\\n\",\"keccak256\":\"0xf8c7d1e47102501890d6431a3810db9652666c0f12b2c6832c5d505da8142cfe\"},\"contracts/openzeppelin/Address.sol\":{\"content\":\"pragma solidity >=0.5.0 <0.6.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\\n        // for accounts without code, i.e. `keccak256('')`\\n        bytes32 codehash;\\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            codehash := extcodehash(account)\\n        }\\n        return (codehash != accountHash && codehash != 0x0);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` into `address payable`. Note that this is\\n     * simply a type cast: the actual underlying value is not changed.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function toPayable(address account) internal pure returns (address payable) {\\n        return address(uint160(account));\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html\\n     *   #use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function sendValue(address recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-call-value\\n        (bool success, ) = recipient.call.value(amount)(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x23df48a01dbac9b25e86c9131174fb7752bbc7e741e63f1aa982de22e055ad54\"},\"contracts/openzeppelin/Context.sol\":{\"content\":\"pragma solidity >=0.5.0 <0.6.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\ncontract Context {\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\n    // an instance of this contract, which should be used via inheritance.\\n    constructor() internal {}\\n\\n    // solhint-disable-previous-line no-empty-blocks\\n\\n    function _msgSender() internal view returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x7860cb1591dbd66bb497c60c46866d9fcdb56c73306ed86b25801000af1c7b2b\"},\"contracts/openzeppelin/Ownable.sol\":{\"content\":\"pragma solidity >=0.5.0 <0.6.0;\\n\\nimport \\\"./Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() internal {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(isOwner(), \\\"unauthorized\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the caller is the current owner.\\n     */\\n    function isOwner() public view returns (bool) {\\n        return _msgSender() == _owner;\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     */\\n    function _transferOwnership(address newOwner) internal {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x94496c375b3e82d87d7f01ce1577f008fab374312cf93012a0eca716e6aadb3a\"},\"contracts/openzeppelin/ReentrancyGuard.sol\":{\"content\":\"pragma solidity >=0.5.0 <0.6.0;\\n\\n/**\\n * @title Helps contracts guard against reentrancy attacks.\\n * @author Remco Bloemen <remco@2\\u03c0.com>, Eenae <alexey@mixbytes.io>\\n * @dev If you mark a function `nonReentrant`, you should also\\n * mark it `external`.\\n */\\ncontract ReentrancyGuard {\\n    /// @dev Constant for unlocked guard state - non-zero to prevent extra gas costs.\\n    /// See: https://github.com/OpenZeppelin/openzeppelin-solidity/issues/1056\\n    uint256 internal constant REENTRANCY_GUARD_FREE = 1;\\n\\n    /// @dev Constant for locked guard state\\n    uint256 internal constant REENTRANCY_GUARD_LOCKED = 2;\\n\\n    /**\\n     * @dev We use a single lock for the whole contract.\\n     */\\n    uint256 internal reentrancyLock = REENTRANCY_GUARD_FREE;\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * If you mark a function `nonReentrant`, you should also\\n     * mark it `external`. Calling one `nonReentrant` function from\\n     * another is not supported. Instead, you can implement a\\n     * `private` function doing the actual work, and an `external`\\n     * wrapper marked as `nonReentrant`.\\n     */\\n    modifier nonReentrant() {\\n        require(reentrancyLock == REENTRANCY_GUARD_FREE, \\\"nonReentrant\\\");\\n        reentrancyLock = REENTRANCY_GUARD_LOCKED;\\n        _;\\n        reentrancyLock = REENTRANCY_GUARD_FREE;\\n    }\\n}\\n\",\"keccak256\":\"0xd347de96ad57d1e45b07a2efe3050c1bd4b809236bbf354acb593de56d21a5c9\"},\"contracts/openzeppelin/SafeERC20.sol\":{\"content\":\"pragma solidity >=0.5.0 <0.6.0;\\n\\nimport \\\"./SafeMath.sol\\\";\\nimport \\\"./Address.sol\\\";\\nimport \\\"../interfaces/IERC20.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        callOptionalReturn(\\n            token,\\n            abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\\n        );\\n    }\\n\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        callOptionalReturn(\\n            token,\\n            abi.encodeWithSelector(token.approve.selector, spender, newAllowance)\\n        );\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance =\\n            token.allowance(address(this), spender).sub(\\n                value,\\n                \\\"SafeERC20: decreased allowance below zero\\\"\\n            );\\n        callOptionalReturn(\\n            token,\\n            abi.encodeWithSelector(token.approve.selector, spender, newAllowance)\\n        );\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves.\\n\\n        // A Solidity high level call has three parts:\\n        //  1. The target address is checked to verify it contains contract code\\n        //  2. The call itself is made, and success asserted\\n        //  3. The return value is decoded, which in turn checks the size of the returned data.\\n        // solhint-disable-next-line max-line-length\\n        require(address(token).isContract(), \\\"SafeERC20: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        require(success, \\\"SafeERC20: low-level call failed\\\");\\n\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe99b4d979cb976a6b70e297600242afe38b8cd8f1b1ba6ee373f39f7abb3ca79\"},\"contracts/openzeppelin/SafeMath.sol\":{\"content\":\"pragma solidity >=0.5.0 <0.6.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b != 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Integer division of two numbers, rounding up and truncating the quotient\\n     */\\n    function divCeil(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return divCeil(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Integer division of two numbers, rounding up and truncating the quotient\\n     */\\n    function divCeil(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b != 0, errorMessage);\\n\\n        if (a == 0) {\\n            return 0;\\n        }\\n        uint256 c = ((a - 1) / b) + 1;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n\\n    function min256(uint256 _a, uint256 _b) internal pure returns (uint256) {\\n        return _a < _b ? _a : _b;\\n    }\\n}\\n\",\"keccak256\":\"0xbff8d6273e1a6870d1a142c0c23acd63a4dd47760f250390f49ee56333bcb6e8\"},\"contracts/reentrancy/Mutex.sol\":{\"content\":\"pragma solidity ^0.5.17;\\n\\n/*\\n * @title Global Mutex contract\\n *\\n * @notice A mutex contract that allows only one function to be called at a time out\\n * of a large set of functions. *Anyone* in the network can freely use any instance\\n * of this contract to add a universal mutex to any function in any contract.\\n */\\ncontract Mutex {\\n    /*\\n     * We use an uint to store the mutex state.\\n     */\\n    uint256 public value;\\n\\n    /*\\n     * @notice Increment the mutex state and return the new value.\\n     *\\n     * @dev This is the function that will be called by anyone to change the mutex\\n     * state. It is purposely not protected by any access control\\n     */\\n    function incrementAndGetValue() external returns (uint256) {\\n        /*\\n         * increment value using unsafe math. This is safe because we are\\n         * pretty certain no one will ever increment the value 2^256 times\\n         * in a single transaction.\\n         */\\n        return ++value;\\n    }\\n}\\n\",\"keccak256\":\"0xd10b0fd07d5fed1ae1237e7c87e6501970fce2a86e2b8862e502258b0d3aeb2c\"},\"contracts/reentrancy/SharedReentrancyGuard.sol\":{\"content\":\"pragma solidity ^0.5.17;\\n\\nimport \\\"./Mutex.sol\\\";\\n\\n/*\\n * @title Abstract contract for shared reentrancy guards\\n *\\n * @notice Exposes a single modifier `globallyNonReentrant` that can be used to ensure\\n * that there's no reentrancy between *any* functions marked with the modifier.\\n *\\n * @dev The Mutex contract address is hardcoded because the address is deployed using a\\n * special deployment method (similar to ERC1820Registry). This contract therefore has no\\n * state and is thus safe to add to the inheritance chain of upgradeable contracts.\\n */\\ncontract SharedReentrancyGuard {\\n    /*\\n     * This is the address of the mutex contract that will be used as the\\n     * reentrancy guard.\\n     *\\n     * The address is hardcoded to avoid changing the memory layout of\\n     * derived contracts (possibly upgradable). Hardcoding the address is possible,\\n     * because the Mutex contract is always deployed to the same address, with the\\n     * same method used in the deployment of ERC1820Registry.\\n     */\\n    Mutex private constant MUTEX = Mutex(0xba10edD6ABC7696Eae685839217BdcC42139612b);\\n\\n    /*\\n     * This is the modifier that will be used to protect functions from\\n     * reentrancy. It will call the mutex contract to increment the mutex\\n     * state and then revert if the mutex state was changed by another\\n     * nested call.\\n     */\\n    modifier globallyNonReentrant() {\\n        uint256 previous = MUTEX.incrementAndGetValue();\\n\\n        _;\\n\\n        /*\\n         * If the mutex state was changed by a nested function call, then\\n         * the value of the state variable will be different from the previous value.\\n         */\\n        require(previous == MUTEX.value(), \\\"reentrancy violation\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x2d0e61b104b91c1764f20fbeb381ba0f8a8889934ba7f6e8a167ed542ec2c124\"}},\"version\":1}",
  "bytecode": "0x60806040526001600055678ac7230489e80000601555670214e8348c4f000060185567013fbe85edc90000601b55674563918244f40000602055674563918244f40000602155674563918244f400006027556127106028556802b5e3af16b1880000602955650f478e084000602b5567016345785d8a0000602c556802b5e3af16b1880000602f5560036035556801158e460913d00000603955348015620000a657600080fd5b506000620000bc6001600160e01b036200011016565b600180546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35062000114565b3390565b615a2680620001246000396000f3fe608060405234801561001057600080fd5b50600436106106235760003560e01c80638da5cb5b11610336578063cb6eacd1116101c3578063e41964801161010f578063f44942ec116100ad578063f6ddc8b311610087578063f6ddc8b314610d07578063f706b1f214610d0f578063f7e7aab014610d17578063f851a44014610d2a57610623565b8063f44942ec14610ce4578063f589a3e714610cec578063f695379a14610cf457610623565b8063ea0e3930116100e9578063ea0e393014610cae578063edab119f14610cc1578063f0e085f514610cc9578063f2fde38b14610cd157610623565b8063e419648014610c8b578063e8997dbd14610c93578063e8f6276414610ca657610623565b8063d485045e1161017c578063da541e0911610156578063da541e0914610c4a578063dac8856114610c5d578063dfdddc9914610c65578063e3ff937014610c7857610623565b8063d485045e14610c11578063d7480e2114610c24578063d9eaaa6414610c3757610623565b8063cb6eacd114610ba1578063cd5d808d14610bc8578063d21f8e2414610bdb578063d238db2214610bee578063d288208c14610c01578063d473c2da14610c0957610623565b8063ae0a853011610282578063b9cffa3e1161023b578063c22552f711610215578063c22552f714610b48578063c4a9081514610b50578063c4d66de814610b7b578063c7c333f014610b8e57610623565b8063b9cffa3e14610b25578063ba4861e914610b2d578063bdee453c14610b3557610623565b8063ae0a853014610abc578063afe8400914610ac4578063b1558b7214610ad9578063b1ac89ca14610aec578063b30643d914610aff578063b7e1524114610b1257610623565b806396881857116102ef578063a2ab1ba1116102c9578063a2ab1ba114610a7b578063a32bb68314610a8e578063a6e7cc2814610aa1578063acc0434814610ab457610623565b80639688185714610a345780639c53874f14610a55578063a1eb568314610a6857610623565b80638da5cb5b146109e35780638dc48ba5146109eb5780638f32d59b146109fe5780639254e6bf14610a0657806392d894f814610a19578063959083d314610a2c57610623565b8063462096f3116104b45780636fbae33b1161040057806374626404116103b95780637fb202e5116103935780637fb202e5146109955780638456cb59146109a857806384eaa9e0146109b057806386540429146109c357610623565b8063746264041461097257806378d849ed146109855780637a8faeb81461098d57610623565b80636fbae33b146109215780637008b54814610934578063704b6c021461093c5780637420ca3e1461094f578063742e67981461095757806374326e8f1461095f57610623565b8063574442cc1161046d57806362fff3f61161044757806362fff3f6146108cf57806368c4ac26146108f35780636e663730146109065780636e9960c31461091957610623565b8063574442cc146108a157806359d0d9ec146108a957806359e49e0f146108bc57610623565b8063462096f31461084c5780634699f846146108545780634bcfe7261461085c5780634dd053a5146108645780634f28cac214610877578063569fc1fb1461087f57610623565b80632d77d0d011610573578063355a395f1161052c5780633fca506e116105065780633fca506e146107f3578063402946b9146108065780634115a2b6146108265780634203e3951461083957610623565b8063355a395f146107c55780633c56ae1b146107d85780633f1ae8b9146107eb57610623565b80632d77d0d01461075e5780632d88af4a146107715780632f4707641461078457806332e4706f1461078c5780633432423c1461079f5780633452d2d4146107b257610623565b806317f8b788116105e0578063218b39c6116105ba578063218b39c61461071d57806324cc57491461073057806329f9986d146107435780632a3240271461075657610623565b806317f8b788146106d75780631a81c191146106ea5780631b7bde74146106fd57610623565b8063065d810f146106445780630676c1b71461067257806307024c25146106875780630c615ee91461068f578063115dd4b1146106a457806317548b79146106c4575b60405162461bcd60e51b815260040161063b90615794565b60405180910390fd5b610657610652366004614a33565b610d32565b604051610669969594939291906158a4565b60405180910390f35b61067a610d72565b604051610669919061538d565b61067a610d81565b6106a261069d366004614b9c565b610d91565b005b6106b76106b236600461498e565b610e5e565b604051610669919061552a565b61067a6106d2366004614bd9565b610e7e565b6106a26106e5366004614b9c565b610e99565b6106a26106f836600461498e565b610f5a565b61071061070b3660046149ac565b61100b565b6040516106699190615814565b61067a61072b36600461498e565b611028565b6106b761073e36600461498e565b611043565b6106a2610751366004614b9c565b611058565b610710611119565b6106a261076c36600461498e565b61111f565b6106a261077f36600461498e565b6111f6565b61071061126e565b6106b761079a3660046149e6565b611274565b6106576107ad366004614a33565b6113d0565b6107106107c036600461498e565b611410565b6106a26107d3366004614b9c565b611422565b6106a26107e6366004614b9c565b6114ba565b61071061154d565b61071061080136600461498e565b611553565b610819610814366004614c33565b611565565b60405161066991906154f6565b6106b7610834366004614bba565b611582565b61071061084736600461498e565b6115a2565b6107106115b4565b6107106115ba565b61067a6115c0565b6106a261087236600461498e565b6115cf565b6107106116a4565b61089261088d366004614b9c565b6116aa565b60405161066993929190615830565b6107106116cb565b6107106108b73660046149ac565b6116d1565b6106a26108ca366004614aae565b6116fc565b6108e26108dd3660046149ac565b611bc1565b604051610669959493929190615889565b6106b761090136600461498e565b611bfb565b61067a61091436600461498e565b611c10565b61067a611c2b565b6106a261092f36600461498e565b611c3a565b61067a611d0f565b6106a261094a36600461498e565b611d1e565b61067a611da0565b610710611daf565b6106b761096d3660046149e6565b611db5565b6106a261098036600461498e565b611efb565b61067a611fac565b610710611fbb565b6106a26109a3366004614b9c565b611fc1565b6106b7612022565b6106a26109be366004614aae565b61202b565b6109d66109d13660046149ac565b6121a9565b6040516106699190615519565b61067a612229565b61067a6109f936600461498e565b612238565b6106b7612253565b6106a2610a1436600461498e565b612279565b610710610a2736600461498e565b612329565b61071061233b565b610a47610a42366004614a33565b612341565b6040516106699291906154a5565b6106a2610a63366004614b9c565b6123b6565b6106a2610a76366004614b9c565b612477565b6106a2610a89366004614b9c565b612531565b6106a2610a9c366004614b9c565b6125f2565b6106a2610aaf366004614b9c565b6126b3565b610710612714565b61071061271a565b610acc612720565b6040516106699190615655565b6106a2610ae7366004614b9c565b61272f565b6106b7610afa3660046149e6565b6127e7565b610710610b0d36600461498e565b61292d565b610710610b2036600461498e565b61293f565b61067a612951565b61067a612960565b610710610b4336600461498e565b61296f565b610710612981565b610b63610b5e366004614b9c565b612a83565b6040516106699c9b9a999897969594939291906155a2565b6106a2610b8936600461498e565b612af5565b6106a2610b9c366004614b9c565b612f31565b610bb4610baf366004614b9c565b612fc9565b604051610669989796959493929190615538565b610710610bd63660046149ac565b61301b565b6106a2610be9366004614b9c565b613038565b6106a2610bfc366004614b9c565b6130f9565b61067a6131ba565b6107106131c9565b610710610c1f36600461498e565b6131cf565b6106a2610c32366004614b1e565b6131e1565b6106a2610c4536600461498e565b613395565b6106a2610c58366004614b60565b613469565b6106b761350e565b6106a2610c733660046149ac565b613517565b6106a2610c8636600461498e565b6136b9565b61071061378e565b6106a2610ca136600461498e565b613794565b61067a613844565b6106a2610cbc3660046149e6565b613853565b61071061394d565b610710613953565b6106a2610cdf36600461498e565b613959565b61067a613986565b610710613995565b6106a2610d02366004614b9c565b61399b565b610710613a5b565b61067a613a61565b610710610d25366004614a63565b613a70565b61067a61426a565b6009602090815260009283526040808420909152908252902080546001820154600283015460038401546004850154600590950154939492939192909186565b6031546001600160a01b031681565b6031546001600160a01b03165b90565b610d99612253565b80610dae57506030546001600160a01b031633145b610dca5760405162461bcd60e51b815260040161063b90615784565b603d5460ff1615610ded5760405162461bcd60e51b815260040161063b90615684565b68056bc75e2d63100000811115610e165760405162461bcd60e51b815260040161063b90615744565b601880549082905560405133907f0628070e9ccbc70e8be34a2fa969f8d314ec049f17bfcb4c2020df4bccd2bf5290610e529084908690615822565b60405180910390a25050565b6001600160a01b0390811660009081526022602052604090205416151590565b6005602052600090815260409020546001600160a01b031681565b610ea1612253565b80610eb657506030546001600160a01b031633145b610ed25760405162461bcd60e51b815260040161063b90615784565b603d5460ff1615610ef55760405162461bcd60e51b815260040161063b90615684565b68056bc75e2d63100000811115610f1e5760405162461bcd60e51b815260040161063b90615744565b601b80549082905560405133907f5c61c9c51cb2781bc120817a851f7f27c134d5d191bc5a2b0ea971ba638425e490610e529084908690615822565b610f62612253565b80610f7757506030546001600160a01b031633145b610f935760405162461bcd60e51b815260040161063b90615784565b603d5460ff1615610fb65760405162461bcd60e51b815260040161063b90615684565b600380546001600160a01b038381166001600160a01b031983161790925560405191169033907f480cc6e59585343a9e9d6fe591dad0f80ce93bb2399ca672910f380671b46ba890610e52908490869061539b565b603b60209081526000928352604080842090915290825290205481565b6023602052600090815260409020546001600160a01b031681565b60326020526000908152604090205460ff1681565b611060612253565b8061107557506030546001600160a01b031633145b6110915760405162461bcd60e51b815260040161063b90615784565b603d5460ff16156110b45760405162461bcd60e51b815260040161063b90615684565b68056bc75e2d631000008111156110dd5760405162461bcd60e51b815260040161063b90615744565b603e80549082905560405133907f02bd69d9975fcf3b39b6ab502d77983a0cfce893e47073f502d094c6a94da33b90610e529084908690615822565b60185481565b611127612253565b8061113c57506030546001600160a01b031633145b6111585760405162461bcd60e51b815260040161063b90615784565b603d5460ff161561117b5760405162461bcd60e51b815260040161063b90615684565b61118481614279565b6111a05760405162461bcd60e51b815260040161063b90615754565b600480546001600160a01b038381166001600160a01b031983161792839055604051918116921690829033907f54c538f1d732806e1bfc25ec56236dac39e6070dd856c0e7efb2bc274709467d90600090a45050565b6111fe612253565b61121a5760405162461bcd60e51b815260040161063b90615784565b604180546001600160a01b038381166001600160a01b03198316811790935560405191169190829033907f5c2719f5971dd7f2a96ca230f606a73203fc01c5db7731bde30a4e5c0387817290600090a45050565b601f5481565b603d5460009060ff161561129a5760405162461bcd60e51b815260040161063b90615684565b6014546001600160a01b031633146112c45760405162461bcd60e51b815260040161063b90615784565b6001600160a01b0384166000908152601c60205260409020548290808211156112eb578091505b816112fb576000925050506113c9565b61130b818363ffffffff6142b516565b6001600160a01b0387166000908152601c6020908152604080832093909355601d90522054611340908363ffffffff6142f716565b6001600160a01b0387166000818152601d602052604090209190915561136d90868463ffffffff61431c16565b846001600160a01b0316866001600160a01b0316336001600160a01b03167f2bfaa669aeee298bc85fe2b7dddc312fc28b78622f086063b9a410d7ba9939cf856040516113ba9190615814565b60405180910390a46001925050505b9392505050565b6008602090815260009283526040808420909152908252902080546001820154600283015460038401546004850154600590950154939492939192909186565b601a6020526000908152604090205481565b61142a612253565b8061143f57506030546001600160a01b031633145b61145b5760405162461bcd60e51b815260040161063b90615784565b603d5460ff161561147e5760405162461bcd60e51b815260040161063b90615684565b602980549082905560405133907fa645d7b227c34f1f218d53bc3b3ccb9a43eaf2231b33925194f1de755aa3acc390610e529084908690615822565b6114c2612253565b806114d757506030546001600160a01b031633145b6114f35760405162461bcd60e51b815260040161063b90615784565b603d5460ff16156115165760405162461bcd60e51b815260040161063b90615684565b601e54611529908263ffffffff6142f716565b601e55602e5461154a906001600160a01b031633308463ffffffff61437a16565b50565b602f5490565b602a6020526000908152604090205481565b60606115796024848463ffffffff6143a416565b90505b92915050565b600a60209081526000928352604080842090915290825290205460ff1681565b60166020526000908152604090205481565b603e5490565b60155481565b6037546001600160a01b031690565b6115d7612253565b806115ec57506030546001600160a01b031633145b6116085760405162461bcd60e51b815260040161063b90615784565b603d5460ff161561162b5760405162461bcd60e51b815260040161063b90615684565b61163481614279565b6116505760405162461bcd60e51b815260040161063b906156a4565b603880546001600160a01b038381166001600160a01b03198316811790935560405191169190829033907fea3cad8b6739a7a73616cb585fe48a8e8f61d1fd7f9822ccd7580a805357aa7090600090a45050565b60295481565b600c6020526000908152604090208054600182015460029092015490919083565b602b5481565b6001600160a01b039182166000908152603c6020908152604080832093909416825291909152205490565b611704612253565b8061171957506030546001600160a01b031633145b6117355760405162461bcd60e51b815260040161063b90615784565b603d5460ff16156117585760405162461bcd60e51b815260040161063b90615684565b8281146117775760405162461bcd60e51b815260040161063b90615714565b60005b83811015611bba5782828281811061178e57fe5b90506020020160206117a3919081019061498e565b6001600160a01b03168585838181106117b857fe5b90506020020160206117cd919081019061498e565b6001600160a01b031614156117f45760405162461bcd60e51b815260040161063b906157b4565b600085858381811061180257fe5b9050602002016020611817919081019061498e565b6001600160a01b0316141561183e5760405162461bcd60e51b815260040161063b90615804565b600083838381811061184c57fe5b9050602002016020611861919081019061498e565b6001600160a01b03161415806118b85750600060228187878581811061188357fe5b9050602002016020611898919081019061498e565b6001600160a01b0390811682526020820192909252604001600020541614155b6118d45760405162461bcd60e51b815260040161063b90615764565b60008383838181106118e257fe5b90506020020160206118f7919081019061498e565b6001600160a01b03161415611a06576000602360006022600089898781811061191c57fe5b9050602002016020611931919081019061498e565b6001600160a01b0390811682526020808301939093526040918201600090812054821685529284019490945291909101812080546001600160a01b0319169390921692909217905560228187878581811061198857fe5b905060200201602061199d919081019061498e565b6001600160a01b039081168252602082019290925260400160002080546001600160a01b03191692909116919091179055611a008585838181106119dd57fe5b90506020020160206119f2919081019061498e565b60249063ffffffff61447a16565b50611b28565b828282818110611a1257fe5b9050602002016020611a27919081019061498e565b60226000878785818110611a3757fe5b9050602002016020611a4c919081019061498e565b6001600160a01b039081168252602082019290925260400160002080546001600160a01b03191692909116919091179055848482818110611a8957fe5b9050602002016020611a9e919081019061498e565b60236000858585818110611aae57fe5b9050602002016020611ac3919081019061498e565b6001600160a01b039081168252602082019290925260400160002080546001600160a01b03191692909116919091179055611b26858583818110611b0357fe5b9050602002016020611b18919081019061498e565b60249063ffffffff61448716565b505b828282818110611b3457fe5b9050602002016020611b49919081019061498e565b6001600160a01b0316858583818110611b5e57fe5b9050602002016020611b73919081019061498e565b6001600160a01b0316336001600160a01b03167f919223d371e0ad76f1f32dcbe0750166810bff9a9e4b2735bfcd01c5686c8d8960405160405180910390a460010161177a565b5050505050565b600b602090815260009283526040808420909152908252902080546001820154600283015460038401546004909401549293919290919085565b60266020526000908152604090205460ff1681565b6033602052600090815260409020546001600160a01b031681565b6030546001600160a01b031690565b611c42612253565b80611c5757506030546001600160a01b031633145b611c735760405162461bcd60e51b815260040161063b90615784565b603d5460ff1615611c965760405162461bcd60e51b815260040161063b90615684565b611c9f81614279565b611cbb5760405162461bcd60e51b815260040161063b90615704565b603780546001600160a01b038381166001600160a01b03198316811790935560405191169190829033907f6105cbfb5494a79f89745763767914b7b60b00defac5e94c7eb28cc5e44c479f90600090a45050565b6041546001600160a01b031690565b611d26612253565b611d425760405162461bcd60e51b815260040161063b90615784565b6030546040516001600160a01b0380841692169033907fc51248b3e510a1244e01043dffdc0132d10194bd4506382cbcf83d05f6ec57ef90600090a4603080546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031681565b60355481565b603d5460009060ff1615611ddb5760405162461bcd60e51b815260040161063b90615684565b6014546001600160a01b03163314611e055760405162461bcd60e51b815260040161063b90615784565b6001600160a01b038416600090815260196020526040902054829080821115611e2c578091505b81611e3c576000925050506113c9565b611e4c818363ffffffff6142b516565b6001600160a01b038716600090815260196020908152604080832093909355601a90522054611e81908363ffffffff6142f716565b6001600160a01b0387166000818152601a6020526040902091909155611eae90868463ffffffff61431c16565b846001600160a01b0316866001600160a01b0316336001600160a01b03167f951f1856a4d1d8c0081f50a1aee9fdc008f729d0f22849618016e353179b8dda856040516113ba9190615814565b611f03612253565b80611f1857506030546001600160a01b031633145b611f345760405162461bcd60e51b815260040161063b90615784565b603d5460ff1615611f575760405162461bcd60e51b815260040161063b90615684565b600280546001600160a01b038381166001600160a01b031983161790925560405191169033907f05621ab0b721f217895f5337ac1283251172d175ef3dc8c9a0287155f6024ce890610e52908490869061539b565b6002546001600160a01b031681565b601e5481565b611fc9612253565b80611fde57506030546001600160a01b031633145b611ffa5760405162461bcd60e51b815260040161063b90615784565b603d5460ff161561201d5760405162461bcd60e51b815260040161063b90615684565b602755565b603d5460ff1681565b612033612253565b8061204857506030546001600160a01b031633145b6120645760405162461bcd60e51b815260040161063b90615784565b603d5460ff16156120875760405162461bcd60e51b815260040161063b90615684565b8281146120a65760405162461bcd60e51b815260040161063b90615714565b60005b83811015611bba578282828181106120bd57fe5b90506020020160206120d29190810190614b60565b602660008787858181106120e257fe5b90506020020160206120f7919081019061498e565b6001600160a01b031681526020810191909152604001600020805460ff191691151591909117905584848281811061212b57fe5b9050602002016020612140919081019061498e565b6001600160a01b0316337f24cecc90c7d4bc8c6765b75eedcc61d4e1cc4e4d49cd0756c6dfb5f6cc259b5085858581811061217757fe5b905060200201602061218c9190810190614b60565b604051612199919061552a565b60405180910390a36001016120a9565b6001600160a01b03808316600090815260406020818152818320938516835292835290819020805482518185028101850190935280835260609383018282801561221c57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116121fe575b5050505050905092915050565b6001546001600160a01b031690565b6022602052600090815260409020546001600160a01b031681565b6001546000906001600160a01b031661226a614494565b6001600160a01b031614905090565b612281612253565b8061229657506030546001600160a01b031633145b6122b25760405162461bcd60e51b815260040161063b90615784565b603d5460ff16156122d55760405162461bcd60e51b815260040161063b90615684565b603180546001600160a01b038381166001600160a01b03198316811790935560405191169190829033907fe48b1893efaee62da0749dd98dbf0ea62ee472b37f7205114aca36cc9de1122890600090a45050565b60176020526000908152604090205481565b602c5481565b60008061234c612253565b8061236157506030546001600160a01b031633145b61237d5760405162461bcd60e51b815260040161063b90615784565b603d5460ff16156123a05760405162461bcd60e51b815260040161063b90615684565b6123aa8484614498565b915091505b9250929050565b6123be612253565b806123d357506030546001600160a01b031633145b6123ef5760405162461bcd60e51b815260040161063b90615784565b603d5460ff16156124125760405162461bcd60e51b815260040161063b90615684565b68056bc75e2d6310000081111561243b5760405162461bcd60e51b815260040161063b906156d4565b602f80549082905560405133907fb12d68e20e5279e25ff10edfc0f82deaa858ea2ac9874cf58518f4e5f942201390610e529084908690615822565b61247f612253565b8061249457506030546001600160a01b031633145b6124b05760405162461bcd60e51b815260040161063b90615784565b603d5460ff16156124d35760405162461bcd60e51b815260040161063b90615684565b61270f8111156124f55760405162461bcd60e51b815260040161063b90615744565b603f80549082905560405133907fc6d322dc6668f20ff04ac11b217aae8e8704e6388bd1dececeab1059db806bf690610e529084908690615822565b612539612253565b8061254e57506030546001600160a01b031633145b61256a5760405162461bcd60e51b815260040161063b90615784565b603d5460ff161561258d5760405162461bcd60e51b815260040161063b90615684565b68056bc75e2d631000008111156125b65760405162461bcd60e51b815260040161063b90615744565b602180549082905560405133907fa06d9b7b1c979150dcbf5b050626cc7d06c764a12ebf76ec8d16b8d3d7c9ee5390610e529084908690615822565b6125fa612253565b8061260f57506030546001600160a01b031633145b61262b5760405162461bcd60e51b815260040161063b90615784565b603d5460ff161561264e5760405162461bcd60e51b815260040161063b90615684565b68056bc75e2d631000008111156126775760405162461bcd60e51b815260040161063b90615744565b603980549082905560405133907f61d3e840cf1074298f10fa77edb788b4e5e554d7d135c93ac5f38f2ce0f6b52d90610e529084908690615822565b6126bb612253565b806126d057506030546001600160a01b031633145b6126ec5760405162461bcd60e51b815260040161063b90615784565b603d5460ff161561270f5760405162461bcd60e51b815260040161063b90615684565b602855565b602f5481565b60205481565b602d546001600160a01b031681565b612737612253565b8061274c57506030546001600160a01b031633145b6127685760405162461bcd60e51b815260040161063b90615784565b603d5460ff161561278b5760405162461bcd60e51b815260040161063b90615684565b600081116127ab5760405162461bcd60e51b815260040161063b90615694565b602b80549082905560405133907f13cb748cec5c5021a23ec7994522a0911f24f10fdabc909281fbe95914b782f090610e529084908690615822565b603d5460009060ff161561280d5760405162461bcd60e51b815260040161063b90615684565b6014546001600160a01b031633146128375760405162461bcd60e51b815260040161063b90615784565b6001600160a01b03841660009081526016602052604090205482908082111561285e578091505b8161286e576000925050506113c9565b61287e818363ffffffff6142b516565b6001600160a01b0387166000908152601660209081526040808320939093556017905220546128b3908363ffffffff6142f716565b6001600160a01b0387166000818152601760205260409020919091556128e090868463ffffffff61431c16565b846001600160a01b0316866001600160a01b0316336001600160a01b03167fabc20bdd02de91df32a6e4a11684e26e0a34dc5a895a314ae51a919bc9f62c60856040516113ba9190615814565b601d6020526000908152604090205481565b601c6020526000908152604090205481565b6037546001600160a01b031681565b6004546001600160a01b031681565b60366020526000908152604090205481565b6037546040516370a0823160e01b815260009182916001600160a01b03909116906370a08231906129b690309060040161538d565b60206040518083038186803b1580156129ce57600080fd5b505afa1580156129e2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612a069190810190614c15565b6037546001600160a01b03166000908152601c602090815260408083205460198352818420546016909352908320549394509192612a5b9291612a4f919063ffffffff6142f716565b9063ffffffff6142f716565b905080821015612a6c576000612a7c565b612a7c828263ffffffff6142b516565b9250505090565b600660208190526000918252604090912080546001820154600283015460038401546004850154600586015496860154600787015460088801546009890154600a8a0154600b909a0154989a9799969860ff909616979496949593949293919290916001600160a01b0391821691168c565b612afd612253565b80612b1257506030546001600160a01b031633145b612b2e5760405162461bcd60e51b815260040161063b90615784565b631d18990160e21b600081905260056020527fe1ae43de9a4a3eb1abb1a58087a8aff0717a77c07be9f83ced74911b33b030e3546001600160a01b031690612b769083614515565b612b87631a81c19160e01b83614515565b612b986359e49e0f60e01b83614515565b612ba9630427554f60e51b83614515565b612bba63691c6d9160e11b83614515565b612bcb630c615ee960e01b83614515565b612bdc6302ff16f160e31b83614515565b612bed6329f9986d60e01b83614515565b612bfe633487e38960e21b83614515565b612c0f63a32bb68360e01b83614515565b612c2063a2ab1ba160e01b83614515565b612c31637fb202e560e01b83614515565b612c426314dcf98560e31b83614515565b612c5363355a395f60e01b83614515565b612c6463e8997dbd60e01b83614515565b612c75630f7e7aab60e41b83614515565b612c866358d644e560e11b83614515565b612c976374326e8f60e01b83614515565b612ca86332e4706f60e01b83614515565b612cb9639688185760e01b83614515565b612cca633c56ae1b60e01b83614515565b612cdb63402946b960e01b83614515565b612cec63115dd4b160e01b83614515565b612cfd6302d77d0d60e41b83614515565b612d0e63367aaa9960e21b83614515565b612d1f630e3ff93760e41b83614515565b612d306358aac5b960e11b83614515565b612d41639c53874f60e01b83614515565b612d52630ea0e39360e41b83614515565b612d63639254e6bf60e01b83614515565b612d74636fbae33b60e01b83614515565b612d85634dd053a560e01b83614515565b612d96630c7c333f60e41b83614515565b612da7631674367b60e21b83614515565b612db86307024c2560e01b83614515565b612dc96325e7f39360e11b83614515565b612dda633d1250bb60e21b83614515565b612deb633f1ae8b960e01b83614515565b612dfc63da541e0960e01b83614515565b612e0d63dac8856160e01b83614515565b612e1e63462096f360e01b83614515565b612e2f63a1eb568360e01b83614515565b612e406301c832c960e71b83614515565b612e5163c22552f760e01b83614515565b612e62637b4a9bcd60e11b83614515565b612e73638654042960e01b83614515565b612e8463d7480e2160e01b83614515565b612e9563dfdddc9960e01b83614515565b612ea6633825b60160e11b83614515565b612eb7636e9960c360e01b83614515565b612ec86316c457a560e11b83614515565b612ed9630e0116a960e31b83614515565b6f50726f746f636f6c53657474696e677360801b826001600160a01b0316826001600160a01b03167f1420e3a2094d671bc2eb897941fa3d94ffa37f0cb6d530651946250a2151cb7f60405160405180910390a45050565b612f39612253565b80612f4e57506030546001600160a01b031633145b612f6a5760405162461bcd60e51b815260040161063b90615784565b603d5460ff1615612f8d5760405162461bcd60e51b815260040161063b90615684565b603580549082905560405133907f5b3b73dcee2d869937089aa5282989415bc607389ab2d4164ae83e7a9e1da08490610e529084908690615822565b6007602052600090815260409020805460018201546002830154600384015460048501546005860154600690960154949560ff8516956101009095046001600160a01b03908116959481169493169288565b603c60209081526000928352604080842090915290825290205481565b613040612253565b8061305557506030546001600160a01b031633145b6130715760405162461bcd60e51b815260040161063b90615784565b603d5460ff16156130945760405162461bcd60e51b815260040161063b90615684565b68056bc75e2d631000008111156130bd5760405162461bcd60e51b815260040161063b90615744565b602080549082905560405133907f7f47cc725826cba6f43b2c0a013328b47d5f16aa9d27d6f0196a37a35c8e53f590610e529084908690615822565b613101612253565b8061311657506030546001600160a01b031633145b6131325760405162461bcd60e51b815260040161063b90615784565b603d5460ff16156131555760405162461bcd60e51b815260040161063b90615684565b68056bc75e2d6310000081111561317e5760405162461bcd60e51b815260040161063b90615744565b601580549082905560405133907fa6c5bd6650afa784494efd877ecd8b7505efbbbaed74b7dd29f1472d6cd0c49290610e529084908690615822565b6038546001600160a01b031681565b60275481565b60196020526000908152604090205481565b6131e9612253565b806131fe57506030546001600160a01b031633145b61321a5760405162461bcd60e51b815260040161063b90615784565b603d5460ff161561323d5760405162461bcd60e51b815260040161063b90615684565b60008282600081811061324c57fe5b90506020020160206132619190810190614bf7565b905060008383600019810181811061327557fe5b905060200201602061328a9190810190614bf7565b90508260038110156132ae5760405162461bcd60e51b815260040161063b90615724565b60005b81811015613306576132e28686838181106132c857fe5b90506020020160206132dd9190810190614bf7565b614279565b6132fe5760405162461bcd60e51b815260040161063b90615674565b6001016132b1565b506001600160a01b0380841660009081526040602081815281832093861683529290925220613336908686614840565b50816001600160a01b0316836001600160a01b0316336001600160a01b03167f129b9c235ee9080c61000669529ef5e13890b4d0baa3f9fd78a24755e6977e848888604051613386929190615507565b60405180910390a45050505050565b61339d612253565b806133b257506030546001600160a01b031633145b6133ce5760405162461bcd60e51b815260040161063b90615784565b603d5460ff16156133f15760405162461bcd60e51b815260040161063b90615684565b6133fa81614279565b6134165760405162461bcd60e51b815260040161063b90615734565b602d80546001600160a01b038381166001600160a01b03198316811790935560405191169190829033907ec53b30140bc38db3a9070249d614e03304ada9e458b2d2f01d23feed00985a90600090a45050565b613471612253565b8061348657506041546001600160a01b031633145b6134a25760405162461bcd60e51b815260040161063b90615784565b603d5460ff16151581151514156134cb5760405162461bcd60e51b815260040161063b906157e4565b603d805460ff19168215801591821790925560405190919033907f575725fa4843b62a71608b620f6d2a15792407ae40e019230a0500109782f66090600090a450565b603d5460ff1690565b61351f612253565b8061353457506030546001600160a01b031633145b6135505760405162461bcd60e51b815260040161063b90615784565b603d5460ff16156135735760405162461bcd60e51b815260040161063b90615684565b6001600160a01b0380831660009081526040602081815281832093851683529290925220546135b45760405162461bcd60e51b815260040161063b906156f4565b6001600160a01b03808316600090815260406020818152818320938516835292835290819020805482518185028101850190935280835260609383018282801561362757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311613609575b505050506001600160a01b0385811660009081526040602081815281832093881683529290925290812092935061365f9291506148a3565b816001600160a01b0316836001600160a01b0316336001600160a01b03167f1a4d14c8795096885326639e56c528b0fbb308e1b94146c8515c41042681121d846040516136ac9190615519565b60405180910390a4505050565b6136c1612253565b806136d657506030546001600160a01b031633145b6136f25760405162461bcd60e51b815260040161063b90615784565b603d5460ff16156137155760405162461bcd60e51b815260040161063b90615684565b61371e81614279565b61373a5760405162461bcd60e51b815260040161063b906157d4565b602e80546001600160a01b038381166001600160a01b03198316811790935560405191169190829033907fffdeb9a96d6e1f867bcbb8a64815e576b65141995ab197cf02f7bb34fc186b7590600090a45050565b603f5490565b61379c612253565b806137b157506030546001600160a01b031633145b6137cd5760405162461bcd60e51b815260040161063b90615784565b603d5460ff16156137f05760405162461bcd60e51b815260040161063b90615684565b601480546001600160a01b038381166001600160a01b03198316811790935560405191169190829033907f83e92cb95ec836f94e25e0a7b31c39f750833a8ce24eaa227a7050aafea08a8490600090a45050565b6014546001600160a01b031681565b61385b612253565b8061387057506030546001600160a01b031633145b61388c5760405162461bcd60e51b815260040161063b90615784565b603d5460ff16156138af5760405162461bcd60e51b815260040161063b90615684565b683635c9adc5dea000008111156138d85760405162461bcd60e51b815260040161063b906157a4565b6001600160a01b038381166000818152603c60209081526040808320948716808452949091529081902080549085905590519092919033907fd2d3c121d3439420f50efd36f0a01ebdac87111ec00360641c32aea3c6fc32139061393f9086908890615822565b60405180910390a450505050565b601b5481565b60285481565b613961612253565b61397d5760405162461bcd60e51b815260040161063b90615784565b61154a8161458f565b6038546001600160a01b031690565b60395481565b6139a3612253565b806139b857506030546001600160a01b031633145b6139d45760405162461bcd60e51b815260040161063b90615784565b603d5460ff16156139f75760405162461bcd60e51b815260040161063b90615684565b670de0b6b3a7640000811115613a1f5760405162461bcd60e51b815260040161063b90615744565b602c80549082905560405133907f864303b3e76c8edf19227d9acce896145b83212c6e38243e827b652d226bc9d690610e529084908690615822565b60215481565b602e546001600160a01b031681565b603d5460009060ff1615613a965760405162461bcd60e51b815260040161063b90615684565b6014546001600160a01b03163314613ac05760405162461bcd60e51b815260040161063b90615784565b60005b8381101561426257600060166000878785818110613add57fe5b9050602002016020613af2919081019061498e565b6001600160a01b0316815260208101919091526040016000205490508015613bee57600060166000888886818110613b2657fe5b9050602002016020613b3b919081019061498e565b6001600160a01b03166001600160a01b0316815260200190815260200160002081905550613bae8160176000898987818110613b7357fe5b9050602002016020613b88919081019061498e565b6001600160a01b031681526020810191909152604001600020549063ffffffff6142f716565b60176000888886818110613bbe57fe5b9050602002016020613bd3919081019061498e565b6001600160a01b031681526020810191909152604001600020555b600060196000888886818110613c0057fe5b9050602002016020613c15919081019061498e565b6001600160a01b0316815260208101919091526040016000205490508015613cd657600060196000898987818110613c4957fe5b9050602002016020613c5e919081019061498e565b6001600160a01b03166001600160a01b0316815260200190815260200160002081905550613c9681601a60008a8a88818110613b7357fe5b601a6000898987818110613ca657fe5b9050602002016020613cbb919081019061498e565b6001600160a01b031681526020810191909152604001600020555b6000601c6000898987818110613ce857fe5b9050602002016020613cfd919081019061498e565b6001600160a01b0316815260208101919091526040016000205490508015613dbe576000601c60008a8a88818110613d3157fe5b9050602002016020613d46919081019061498e565b6001600160a01b03166001600160a01b0316815260200190815260200160002081905550613d7e81601d60008b8b89818110613b7357fe5b601d60008a8a88818110613d8e57fe5b9050602002016020613da3919081019061498e565b6001600160a01b031681526020810191909152604001600020555b6000613dd482612a4f868663ffffffff6142f716565b905080613de4575050505061425a565b6037546000906001600160a01b03168a8a88818110613dff57fe5b9050602002016020613e14919081019061498e565b6001600160a01b03161415613f3b57898987818110613e2f57fe5b9050602002016020613e44919081019061498e565b60145460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392613e779291169086906004016154c0565b602060405180830381600087803b158015613e9157600080fd5b505af1158015613ea5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613ec99190810190614b7e565b5060145460375460405163abe979e160e01b81526001600160a01b039283169263abe979e192613f009291169086906004016154db565b600060405180830381600087803b158015613f1a57600080fd5b505af1158015613f2e573d6000803e3d6000fd5b50505050600090506141d9565b602d546001600160a01b03168a8a88818110613f5357fe5b9050602002016020613f68919081019061498e565b6001600160a01b03161415613f9c5750602d548190613f97906001600160a01b0316898363ffffffff61431c16565b6141c6565b898987818110613fa857fe5b9050602002016020613fbd919081019061498e565b60315460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392613ff09291169086906004016154c0565b602060405180830381600087803b15801561400a57600080fd5b505af115801561401e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506140429190810190614b7e565b506031546001600160a01b031663e321b5408b8b8981811061406057fe5b9050602002016020614075919081019061498e565b602d546014546031546040516001600160e01b031960e087901b1681526140b794936001600160a01b03908116938116921690899060009081906004016153b6565b6040805180830381600087803b1580156140d057600080fd5b505af11580156140e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506141089190810190614c52565b506002549091506001600160a01b0316631e2c62d38b8b8981811061412957fe5b905060200201602061413e919081019061498e565b602d546027546040516001600160e01b031960e086901b16815261417493926001600160a01b0316918891889190600401615459565b60206040518083038186803b15801561418c57600080fd5b505afa1580156141a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506141c49190810190614c15565b505b6141d6878263ffffffff6142f716565b96505b876001600160a01b03168a8a888181106141ef57fe5b9050602002016020614204919081019061498e565b6001600160a01b0316336001600160a01b03167ffc669a9c6050d8c313b540e2a2bd63f5f8965e4d267a0683ba6fb55114e868cc8888888760405161424c949392919061584b565b60405180910390a450505050505b600101613ac3565b509392505050565b6030546001600160a01b031681565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906142ad57508115155b949350505050565b600061157983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250614611565b6000828201838110156115795760405162461bcd60e51b815260040161063b906156c4565b60405161437590849063a9059cbb60e01b9061433e90869086906024016154c0565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261463d565b505050565b60405161439e9085906323b872dd60e01b9061433e90879087908790602401615431565b50505050565b6060828201838110156143c95760405162461bcd60e51b815260040161063b90615774565b600185015481116143da57806143e0565b60018501545b90508015806143ef5750808410155b156143fa57506113c9565b838103604051908082528060200260200182016040528015614426578160200160208202803883390190505b50915060005b84820381101561447157856001018582018154811061444757fe5b906000526020600020015483828151811061445e57fe5b602090810291909101015260010161442c565b50509392505050565b6000816142ad8482614722565b6000816142ad84826147eb565b3390565b601e5460009081908390808211156144ae578091505b816144cc575050602e546001600160a01b03169150600090506123af565b6144dc818363ffffffff6142b516565b601e55602e546144fc906001600160a01b0316878463ffffffff61431c16565b5050602e546001600160a01b0316946001945092505050565b6001600160e01b03198216600090815260056020526040902080546001600160a01b0319166001600160a01b038316908117909155156145705761456a600d6001600160e01b0319841663ffffffff6147eb16565b5061458b565b614375600d6001600160e01b0319841663ffffffff61472216565b5050565b6001600160a01b0381166145b55760405162461bcd60e51b815260040161063b906156b4565b6001546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b600081848411156146355760405162461bcd60e51b815260040161063b9190615663565b505050900390565b61464f826001600160a01b0316614279565b61466b5760405162461bcd60e51b815260040161063b906157f4565b60006060836001600160a01b0316836040516146879190615381565b6000604051808303816000865af19150503d80600081146146c4576040519150601f19603f3d011682016040523d82523d6000602084013e6146c9565b606091505b5091509150816146eb5760405162461bcd60e51b815260040161063b906156e4565b80511561439e57808060200190516147069190810190614b7e565b61439e5760405162461bcd60e51b815260040161063b906157c4565b600061472e838361482b565b156147e357600082815260208490526040902054600184015460001991820191018082146147a657600085600101828154811061476757fe5b906000526020600020015490508086600101848154811061478457fe5b6000918252602080832090910192909255918252869052604090206001830190555b600084815260208690526040812055600185018054806147c257fe5b6001900381819060005260206000200160009055905560019250505061157c565b50600061157c565b60006147f7838361482b565b6147e3575060018083018054808301808355600092835260208084209092018590558483529085905260409091205561157c565b60009081526020919091526040902054151590565b828054828255906000526020600020908101928215614893579160200282015b828111156148935781546001600160a01b0319166001600160a01b03843516178255602090920191600190910190614860565b5061489f9291506148c1565b5090565b508054600082559060005260206000209081019061154a91906148e5565b610d8e91905b8082111561489f5780546001600160a01b03191681556001016148c7565b610d8e91905b8082111561489f57600081556001016148eb565b803561157c816159ab565b60008083601f84011261491c57600080fd5b50813567ffffffffffffffff81111561493457600080fd5b6020830191508360208202830111156123af57600080fd5b803561157c816159bf565b805161157c816159bf565b803561157c816159c8565b803561157c816159d1565b803561157c816159da565b805161157c816159c8565b6000602082840312156149a057600080fd5b60006142ad84846148ff565b600080604083850312156149bf57600080fd5b60006149cb85856148ff565b92505060206149dc858286016148ff565b9150509250929050565b6000806000606084860312156149fb57600080fd5b6000614a0786866148ff565b9350506020614a18868287016148ff565b9250506040614a2986828701614962565b9150509250925092565b60008060408385031215614a4657600080fd5b6000614a5285856148ff565b92505060206149dc85828601614962565b600080600060408486031215614a7857600080fd5b833567ffffffffffffffff811115614a8f57600080fd5b614a9b8682870161490a565b93509350506020614a29868287016148ff565b60008060008060408587031215614ac457600080fd5b843567ffffffffffffffff811115614adb57600080fd5b614ae78782880161490a565b9450945050602085013567ffffffffffffffff811115614b0657600080fd5b614b128782880161490a565b95989497509550505050565b60008060208385031215614b3157600080fd5b823567ffffffffffffffff811115614b4857600080fd5b614b548582860161490a565b92509250509250929050565b600060208284031215614b7257600080fd5b60006142ad848461494c565b600060208284031215614b9057600080fd5b60006142ad8484614957565b600060208284031215614bae57600080fd5b60006142ad8484614962565b60008060408385031215614bcd57600080fd5b60006149cb8585614962565b600060208284031215614beb57600080fd5b60006142ad848461496d565b600060208284031215614c0957600080fd5b60006142ad8484614978565b600060208284031215614c2757600080fd5b60006142ad8484614983565b60008060408385031215614c4657600080fd5b6000614a528585614962565b60008060408385031215614c6557600080fd5b6000614c718585614983565b92505060206149dc85828601614983565b6000614c8e8383614dae565b505060200190565b6000614c8e8383614de6565b614cab81615925565b82525050565b6000614cbc82615904565b614cc68185615908565b9350614cd1836158fe565b8060005b83811015614cff578151614ce98882614c82565b9750614cf4836158fe565b925050600101614cd5565b509495945050505050565b6000614d168385615908565b9350614d2182610d8e565b8060005b85811015614cff57614d378284615916565b614d418882614c96565b9750614d4c836158fe565b925050600101614d25565b6000614d6282615904565b614d6c8185615908565b9350614d77836158fe565b8060005b83811015614cff578151614d8f8882614c96565b9750614d9a836158fe565b925050600101614d7b565b614cab81615930565b614cab81610d8e565b6000614dc282615904565b614dcc8185615911565b9350614ddc818560208601615975565b9290920192915050565b614cab81615942565b614cab8161596a565b6000614e0382615904565b614e0d8185615908565b9350614e1d818560208601615975565b614e26816159a1565b9093019392505050565b6000614e3d601a83615908565b7f4552525f504154485f4e4f4e5f434f4e54524143545f41444452000000000000815260200192915050565b6000614e76600683615908565b6514185d5cd95960d21b815260200192915050565b6000614e98601383615908565b724261736520726577617264206973207a65726f60681b815260200192915050565b6000614ec7602083615908565b7f6e65774c6f636b534f5641646472657373206e6f74206120636f6e7472616374815260200192915050565b6000614f00602683615908565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015260400192915050565b6000614f48601b83615908565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000815260200192915050565b6000614f81601683615908565b7508ccaca40e4cac4c2e8ca40d2e640e8dede40d0d2ced60531b815260200192915050565b6000614fb3602083615908565b7f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815260200192915050565b6000614fec601283615908565b7144454641554c545f504154485f454d50545960701b815260200192915050565b600061501a602183615908565b7f6e6577536f76546f6b656e41646472657373206e6f74206120636f6e747261638152601d60fa1b602082015260400192915050565b600061505d600e83615908565b6d0c6deeadce840dad2e6dac2e8c6d60931b815260200192915050565b6000615087600f83615908565b6e08aa4a4bea082a890be988a9c8ea89608b1b815260200192915050565b60006150b2602083615908565b7f7772627463546f6b656e41646472657373206e6f74206120636f6e7472616374815260200192915050565b60006150eb600e83615908565b6d0ecc2d8eaca40e8dede40d0d2ced60931b815260200192915050565b6000615115601e83615908565b7f726567697374727941646472657373206e6f74206120636f6e74726163740000815260200192915050565b600061514e600f83615908565b6e706f6f6c206e6f742065786973747360881b815260200192915050565b6000615179601183615908565b706164646974696f6e206f766572666c6f7760781b815260200192915050565b60006151a6600c83615908565b6b1d5b985d5d1a1bdc9a5e995960a21b815260200192915050565b60006151ce601483615908565b7319985b1b189858dac81b9bdd08185b1b1bddd95960621b815260200192915050565b600061157c600083615908565b600061520b601e83615908565b7f5370656369616c206665652072656261746520697320746f6f20686967680000815260200192915050565b6000615244600d83615908565b6c1c1bdbdb080f4f48185cdcd95d609a1b815260200192915050565b600061526d602a83615908565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b602082015260400192915050565b60006152b9602483615908565b7f5f70726f746f636f6c546f6b656e41646472657373206e6f74206120636f6e748152631c9858dd60e21b602082015260400192915050565b60006152ff600c83615908565b6b43616e277420746f67676c6560a01b815260200192915050565b6000615327601f83615908565b7f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400815260200192915050565b6000615360600983615908565b680706f6f6c203d3d20360bc1b815260200192915050565b614cab81615959565b60006113c98284614db7565b6020810161157c8284614ca2565b604081016153a98285614ca2565b6113c96020830184614ca2565b61010081016153c5828a614ca2565b6153d26020830189614ca2565b6153df6040830188614ca2565b6153ec6060830187614ca2565b6153f96080830186614dae565b61540660a0830185614def565b61541360c0830184614def565b81810360e0830152615424816151f1565b9998505050505050505050565b6060810161543f8286614ca2565b61544c6020830185614ca2565b6142ad6040830184614dae565b60a081016154678288614ca2565b6154746020830187614ca2565b6154816040830186614dae565b61548e6060830185614dae565b61549b6080830184614dae565b9695505050505050565b604081016154b38285614ca2565b6113c96020830184614da5565b604081016154ce8285614ca2565b6113c96020830184614dae565b604081016154e98285614ca2565b6113c96020830184615378565b602080825281016115798184614cb1565b602080825281016142ad818486614d0a565b602080825281016115798184614d57565b6020810161157c8284614da5565b6101008101615547828b614dae565b615554602083018a614da5565b6155616040830189614ca2565b61556e6060830188614ca2565b61557b6080830187614ca2565b61558860a0830186614dae565b61559560c0830185614dae565b61542460e0830184614dae565b61018081016155b1828f614dae565b6155be602083018e614dae565b6155cb604083018d614dae565b6155d8606083018c614da5565b6155e5608083018b614dae565b6155f260a083018a614dae565b6155ff60c0830189614dae565b61560c60e0830188614dae565b61561a610100830187614dae565b615628610120830186614dae565b615636610140830185614ca2565b615644610160830184614ca2565b9d9c50505050505050505050505050565b6020810161157c8284614de6565b602080825281016115798184614df8565b6020808252810161157c81614e30565b6020808252810161157c81614e69565b6020808252810161157c81614e8b565b6020808252810161157c81614eba565b6020808252810161157c81614ef3565b6020808252810161157c81614f3b565b6020808252810161157c81614f74565b6020808252810161157c81614fa6565b6020808252810161157c81614fdf565b6020808252810161157c8161500d565b6020808252810161157c81615050565b6020808252810161157c8161507a565b6020808252810161157c816150a5565b6020808252810161157c816150de565b6020808252810161157c81615108565b6020808252810161157c81615141565b6020808252810161157c8161516c565b6020808252810161157c81615199565b6020808252810161157c816151c1565b6020808252810161157c816151fe565b6020808252810161157c81615237565b6020808252810161157c81615260565b6020808252810161157c816152ac565b6020808252810161157c816152f2565b6020808252810161157c8161531a565b6020808252810161157c81615353565b6020810161157c8284614dae565b604081016154ce8285614dae565b6060810161583e8286614dae565b61544c6020830185614dae565b608081016158598287614dae565b6158666020830186614dae565b6158736040830185614dae565b6158806060830184614dae565b95945050505050565b60a081016158978288614dae565b6154746020830187614dae565b60c081016158b28289614dae565b6158bf6020830188614dae565b6158cc6040830187614dae565b6158d96060830186614dae565b6158e66080830185614dae565b6158f360a0830184614dae565b979650505050505050565b60200190565b5190565b90815260200190565b919050565b60006115796020840184614978565b600061157c8261594d565b151590565b6001600160e01b03191690565b600061157c82615925565b6001600160a01b031690565b6bffffffffffffffffffffffff1690565b600061157c82610d8e565b60005b83811015615990578181015183820152602001615978565b8381111561439e5750506000910152565b601f01601f191690565b6159b481615925565b811461154a57600080fd5b6159b481615930565b6159b481610d8e565b6159b481615935565b6159b48161594256fea365627a7a723158207c8a98e8573a97b25ef9f00e13525362dd41d602aeede6d473a54f8e7b03ab3a6c6578706572696d656e74616cf564736f6c63430005110040",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106106235760003560e01c80638da5cb5b11610336578063cb6eacd1116101c3578063e41964801161010f578063f44942ec116100ad578063f6ddc8b311610087578063f6ddc8b314610d07578063f706b1f214610d0f578063f7e7aab014610d17578063f851a44014610d2a57610623565b8063f44942ec14610ce4578063f589a3e714610cec578063f695379a14610cf457610623565b8063ea0e3930116100e9578063ea0e393014610cae578063edab119f14610cc1578063f0e085f514610cc9578063f2fde38b14610cd157610623565b8063e419648014610c8b578063e8997dbd14610c93578063e8f6276414610ca657610623565b8063d485045e1161017c578063da541e0911610156578063da541e0914610c4a578063dac8856114610c5d578063dfdddc9914610c65578063e3ff937014610c7857610623565b8063d485045e14610c11578063d7480e2114610c24578063d9eaaa6414610c3757610623565b8063cb6eacd114610ba1578063cd5d808d14610bc8578063d21f8e2414610bdb578063d238db2214610bee578063d288208c14610c01578063d473c2da14610c0957610623565b8063ae0a853011610282578063b9cffa3e1161023b578063c22552f711610215578063c22552f714610b48578063c4a9081514610b50578063c4d66de814610b7b578063c7c333f014610b8e57610623565b8063b9cffa3e14610b25578063ba4861e914610b2d578063bdee453c14610b3557610623565b8063ae0a853014610abc578063afe8400914610ac4578063b1558b7214610ad9578063b1ac89ca14610aec578063b30643d914610aff578063b7e1524114610b1257610623565b806396881857116102ef578063a2ab1ba1116102c9578063a2ab1ba114610a7b578063a32bb68314610a8e578063a6e7cc2814610aa1578063acc0434814610ab457610623565b80639688185714610a345780639c53874f14610a55578063a1eb568314610a6857610623565b80638da5cb5b146109e35780638dc48ba5146109eb5780638f32d59b146109fe5780639254e6bf14610a0657806392d894f814610a19578063959083d314610a2c57610623565b8063462096f3116104b45780636fbae33b1161040057806374626404116103b95780637fb202e5116103935780637fb202e5146109955780638456cb59146109a857806384eaa9e0146109b057806386540429146109c357610623565b8063746264041461097257806378d849ed146109855780637a8faeb81461098d57610623565b80636fbae33b146109215780637008b54814610934578063704b6c021461093c5780637420ca3e1461094f578063742e67981461095757806374326e8f1461095f57610623565b8063574442cc1161046d57806362fff3f61161044757806362fff3f6146108cf57806368c4ac26146108f35780636e663730146109065780636e9960c31461091957610623565b8063574442cc146108a157806359d0d9ec146108a957806359e49e0f146108bc57610623565b8063462096f31461084c5780634699f846146108545780634bcfe7261461085c5780634dd053a5146108645780634f28cac214610877578063569fc1fb1461087f57610623565b80632d77d0d011610573578063355a395f1161052c5780633fca506e116105065780633fca506e146107f3578063402946b9146108065780634115a2b6146108265780634203e3951461083957610623565b8063355a395f146107c55780633c56ae1b146107d85780633f1ae8b9146107eb57610623565b80632d77d0d01461075e5780632d88af4a146107715780632f4707641461078457806332e4706f1461078c5780633432423c1461079f5780633452d2d4146107b257610623565b806317f8b788116105e0578063218b39c6116105ba578063218b39c61461071d57806324cc57491461073057806329f9986d146107435780632a3240271461075657610623565b806317f8b788146106d75780631a81c191146106ea5780631b7bde74146106fd57610623565b8063065d810f146106445780630676c1b71461067257806307024c25146106875780630c615ee91461068f578063115dd4b1146106a457806317548b79146106c4575b60405162461bcd60e51b815260040161063b90615794565b60405180910390fd5b610657610652366004614a33565b610d32565b604051610669969594939291906158a4565b60405180910390f35b61067a610d72565b604051610669919061538d565b61067a610d81565b6106a261069d366004614b9c565b610d91565b005b6106b76106b236600461498e565b610e5e565b604051610669919061552a565b61067a6106d2366004614bd9565b610e7e565b6106a26106e5366004614b9c565b610e99565b6106a26106f836600461498e565b610f5a565b61071061070b3660046149ac565b61100b565b6040516106699190615814565b61067a61072b36600461498e565b611028565b6106b761073e36600461498e565b611043565b6106a2610751366004614b9c565b611058565b610710611119565b6106a261076c36600461498e565b61111f565b6106a261077f36600461498e565b6111f6565b61071061126e565b6106b761079a3660046149e6565b611274565b6106576107ad366004614a33565b6113d0565b6107106107c036600461498e565b611410565b6106a26107d3366004614b9c565b611422565b6106a26107e6366004614b9c565b6114ba565b61071061154d565b61071061080136600461498e565b611553565b610819610814366004614c33565b611565565b60405161066991906154f6565b6106b7610834366004614bba565b611582565b61071061084736600461498e565b6115a2565b6107106115b4565b6107106115ba565b61067a6115c0565b6106a261087236600461498e565b6115cf565b6107106116a4565b61089261088d366004614b9c565b6116aa565b60405161066993929190615830565b6107106116cb565b6107106108b73660046149ac565b6116d1565b6106a26108ca366004614aae565b6116fc565b6108e26108dd3660046149ac565b611bc1565b604051610669959493929190615889565b6106b761090136600461498e565b611bfb565b61067a61091436600461498e565b611c10565b61067a611c2b565b6106a261092f36600461498e565b611c3a565b61067a611d0f565b6106a261094a36600461498e565b611d1e565b61067a611da0565b610710611daf565b6106b761096d3660046149e6565b611db5565b6106a261098036600461498e565b611efb565b61067a611fac565b610710611fbb565b6106a26109a3366004614b9c565b611fc1565b6106b7612022565b6106a26109be366004614aae565b61202b565b6109d66109d13660046149ac565b6121a9565b6040516106699190615519565b61067a612229565b61067a6109f936600461498e565b612238565b6106b7612253565b6106a2610a1436600461498e565b612279565b610710610a2736600461498e565b612329565b61071061233b565b610a47610a42366004614a33565b612341565b6040516106699291906154a5565b6106a2610a63366004614b9c565b6123b6565b6106a2610a76366004614b9c565b612477565b6106a2610a89366004614b9c565b612531565b6106a2610a9c366004614b9c565b6125f2565b6106a2610aaf366004614b9c565b6126b3565b610710612714565b61071061271a565b610acc612720565b6040516106699190615655565b6106a2610ae7366004614b9c565b61272f565b6106b7610afa3660046149e6565b6127e7565b610710610b0d36600461498e565b61292d565b610710610b2036600461498e565b61293f565b61067a612951565b61067a612960565b610710610b4336600461498e565b61296f565b610710612981565b610b63610b5e366004614b9c565b612a83565b6040516106699c9b9a999897969594939291906155a2565b6106a2610b8936600461498e565b612af5565b6106a2610b9c366004614b9c565b612f31565b610bb4610baf366004614b9c565b612fc9565b604051610669989796959493929190615538565b610710610bd63660046149ac565b61301b565b6106a2610be9366004614b9c565b613038565b6106a2610bfc366004614b9c565b6130f9565b61067a6131ba565b6107106131c9565b610710610c1f36600461498e565b6131cf565b6106a2610c32366004614b1e565b6131e1565b6106a2610c4536600461498e565b613395565b6106a2610c58366004614b60565b613469565b6106b761350e565b6106a2610c733660046149ac565b613517565b6106a2610c8636600461498e565b6136b9565b61071061378e565b6106a2610ca136600461498e565b613794565b61067a613844565b6106a2610cbc3660046149e6565b613853565b61071061394d565b610710613953565b6106a2610cdf36600461498e565b613959565b61067a613986565b610710613995565b6106a2610d02366004614b9c565b61399b565b610710613a5b565b61067a613a61565b610710610d25366004614a63565b613a70565b61067a61426a565b6009602090815260009283526040808420909152908252902080546001820154600283015460038401546004850154600590950154939492939192909186565b6031546001600160a01b031681565b6031546001600160a01b03165b90565b610d99612253565b80610dae57506030546001600160a01b031633145b610dca5760405162461bcd60e51b815260040161063b90615784565b603d5460ff1615610ded5760405162461bcd60e51b815260040161063b90615684565b68056bc75e2d63100000811115610e165760405162461bcd60e51b815260040161063b90615744565b601880549082905560405133907f0628070e9ccbc70e8be34a2fa969f8d314ec049f17bfcb4c2020df4bccd2bf5290610e529084908690615822565b60405180910390a25050565b6001600160a01b0390811660009081526022602052604090205416151590565b6005602052600090815260409020546001600160a01b031681565b610ea1612253565b80610eb657506030546001600160a01b031633145b610ed25760405162461bcd60e51b815260040161063b90615784565b603d5460ff1615610ef55760405162461bcd60e51b815260040161063b90615684565b68056bc75e2d63100000811115610f1e5760405162461bcd60e51b815260040161063b90615744565b601b80549082905560405133907f5c61c9c51cb2781bc120817a851f7f27c134d5d191bc5a2b0ea971ba638425e490610e529084908690615822565b610f62612253565b80610f7757506030546001600160a01b031633145b610f935760405162461bcd60e51b815260040161063b90615784565b603d5460ff1615610fb65760405162461bcd60e51b815260040161063b90615684565b600380546001600160a01b038381166001600160a01b031983161790925560405191169033907f480cc6e59585343a9e9d6fe591dad0f80ce93bb2399ca672910f380671b46ba890610e52908490869061539b565b603b60209081526000928352604080842090915290825290205481565b6023602052600090815260409020546001600160a01b031681565b60326020526000908152604090205460ff1681565b611060612253565b8061107557506030546001600160a01b031633145b6110915760405162461bcd60e51b815260040161063b90615784565b603d5460ff16156110b45760405162461bcd60e51b815260040161063b90615684565b68056bc75e2d631000008111156110dd5760405162461bcd60e51b815260040161063b90615744565b603e80549082905560405133907f02bd69d9975fcf3b39b6ab502d77983a0cfce893e47073f502d094c6a94da33b90610e529084908690615822565b60185481565b611127612253565b8061113c57506030546001600160a01b031633145b6111585760405162461bcd60e51b815260040161063b90615784565b603d5460ff161561117b5760405162461bcd60e51b815260040161063b90615684565b61118481614279565b6111a05760405162461bcd60e51b815260040161063b90615754565b600480546001600160a01b038381166001600160a01b031983161792839055604051918116921690829033907f54c538f1d732806e1bfc25ec56236dac39e6070dd856c0e7efb2bc274709467d90600090a45050565b6111fe612253565b61121a5760405162461bcd60e51b815260040161063b90615784565b604180546001600160a01b038381166001600160a01b03198316811790935560405191169190829033907f5c2719f5971dd7f2a96ca230f606a73203fc01c5db7731bde30a4e5c0387817290600090a45050565b601f5481565b603d5460009060ff161561129a5760405162461bcd60e51b815260040161063b90615684565b6014546001600160a01b031633146112c45760405162461bcd60e51b815260040161063b90615784565b6001600160a01b0384166000908152601c60205260409020548290808211156112eb578091505b816112fb576000925050506113c9565b61130b818363ffffffff6142b516565b6001600160a01b0387166000908152601c6020908152604080832093909355601d90522054611340908363ffffffff6142f716565b6001600160a01b0387166000818152601d602052604090209190915561136d90868463ffffffff61431c16565b846001600160a01b0316866001600160a01b0316336001600160a01b03167f2bfaa669aeee298bc85fe2b7dddc312fc28b78622f086063b9a410d7ba9939cf856040516113ba9190615814565b60405180910390a46001925050505b9392505050565b6008602090815260009283526040808420909152908252902080546001820154600283015460038401546004850154600590950154939492939192909186565b601a6020526000908152604090205481565b61142a612253565b8061143f57506030546001600160a01b031633145b61145b5760405162461bcd60e51b815260040161063b90615784565b603d5460ff161561147e5760405162461bcd60e51b815260040161063b90615684565b602980549082905560405133907fa645d7b227c34f1f218d53bc3b3ccb9a43eaf2231b33925194f1de755aa3acc390610e529084908690615822565b6114c2612253565b806114d757506030546001600160a01b031633145b6114f35760405162461bcd60e51b815260040161063b90615784565b603d5460ff16156115165760405162461bcd60e51b815260040161063b90615684565b601e54611529908263ffffffff6142f716565b601e55602e5461154a906001600160a01b031633308463ffffffff61437a16565b50565b602f5490565b602a6020526000908152604090205481565b60606115796024848463ffffffff6143a416565b90505b92915050565b600a60209081526000928352604080842090915290825290205460ff1681565b60166020526000908152604090205481565b603e5490565b60155481565b6037546001600160a01b031690565b6115d7612253565b806115ec57506030546001600160a01b031633145b6116085760405162461bcd60e51b815260040161063b90615784565b603d5460ff161561162b5760405162461bcd60e51b815260040161063b90615684565b61163481614279565b6116505760405162461bcd60e51b815260040161063b906156a4565b603880546001600160a01b038381166001600160a01b03198316811790935560405191169190829033907fea3cad8b6739a7a73616cb585fe48a8e8f61d1fd7f9822ccd7580a805357aa7090600090a45050565b60295481565b600c6020526000908152604090208054600182015460029092015490919083565b602b5481565b6001600160a01b039182166000908152603c6020908152604080832093909416825291909152205490565b611704612253565b8061171957506030546001600160a01b031633145b6117355760405162461bcd60e51b815260040161063b90615784565b603d5460ff16156117585760405162461bcd60e51b815260040161063b90615684565b8281146117775760405162461bcd60e51b815260040161063b90615714565b60005b83811015611bba5782828281811061178e57fe5b90506020020160206117a3919081019061498e565b6001600160a01b03168585838181106117b857fe5b90506020020160206117cd919081019061498e565b6001600160a01b031614156117f45760405162461bcd60e51b815260040161063b906157b4565b600085858381811061180257fe5b9050602002016020611817919081019061498e565b6001600160a01b0316141561183e5760405162461bcd60e51b815260040161063b90615804565b600083838381811061184c57fe5b9050602002016020611861919081019061498e565b6001600160a01b03161415806118b85750600060228187878581811061188357fe5b9050602002016020611898919081019061498e565b6001600160a01b0390811682526020820192909252604001600020541614155b6118d45760405162461bcd60e51b815260040161063b90615764565b60008383838181106118e257fe5b90506020020160206118f7919081019061498e565b6001600160a01b03161415611a06576000602360006022600089898781811061191c57fe5b9050602002016020611931919081019061498e565b6001600160a01b0390811682526020808301939093526040918201600090812054821685529284019490945291909101812080546001600160a01b0319169390921692909217905560228187878581811061198857fe5b905060200201602061199d919081019061498e565b6001600160a01b039081168252602082019290925260400160002080546001600160a01b03191692909116919091179055611a008585838181106119dd57fe5b90506020020160206119f2919081019061498e565b60249063ffffffff61447a16565b50611b28565b828282818110611a1257fe5b9050602002016020611a27919081019061498e565b60226000878785818110611a3757fe5b9050602002016020611a4c919081019061498e565b6001600160a01b039081168252602082019290925260400160002080546001600160a01b03191692909116919091179055848482818110611a8957fe5b9050602002016020611a9e919081019061498e565b60236000858585818110611aae57fe5b9050602002016020611ac3919081019061498e565b6001600160a01b039081168252602082019290925260400160002080546001600160a01b03191692909116919091179055611b26858583818110611b0357fe5b9050602002016020611b18919081019061498e565b60249063ffffffff61448716565b505b828282818110611b3457fe5b9050602002016020611b49919081019061498e565b6001600160a01b0316858583818110611b5e57fe5b9050602002016020611b73919081019061498e565b6001600160a01b0316336001600160a01b03167f919223d371e0ad76f1f32dcbe0750166810bff9a9e4b2735bfcd01c5686c8d8960405160405180910390a460010161177a565b5050505050565b600b602090815260009283526040808420909152908252902080546001820154600283015460038401546004909401549293919290919085565b60266020526000908152604090205460ff1681565b6033602052600090815260409020546001600160a01b031681565b6030546001600160a01b031690565b611c42612253565b80611c5757506030546001600160a01b031633145b611c735760405162461bcd60e51b815260040161063b90615784565b603d5460ff1615611c965760405162461bcd60e51b815260040161063b90615684565b611c9f81614279565b611cbb5760405162461bcd60e51b815260040161063b90615704565b603780546001600160a01b038381166001600160a01b03198316811790935560405191169190829033907f6105cbfb5494a79f89745763767914b7b60b00defac5e94c7eb28cc5e44c479f90600090a45050565b6041546001600160a01b031690565b611d26612253565b611d425760405162461bcd60e51b815260040161063b90615784565b6030546040516001600160a01b0380841692169033907fc51248b3e510a1244e01043dffdc0132d10194bd4506382cbcf83d05f6ec57ef90600090a4603080546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031681565b60355481565b603d5460009060ff1615611ddb5760405162461bcd60e51b815260040161063b90615684565b6014546001600160a01b03163314611e055760405162461bcd60e51b815260040161063b90615784565b6001600160a01b038416600090815260196020526040902054829080821115611e2c578091505b81611e3c576000925050506113c9565b611e4c818363ffffffff6142b516565b6001600160a01b038716600090815260196020908152604080832093909355601a90522054611e81908363ffffffff6142f716565b6001600160a01b0387166000818152601a6020526040902091909155611eae90868463ffffffff61431c16565b846001600160a01b0316866001600160a01b0316336001600160a01b03167f951f1856a4d1d8c0081f50a1aee9fdc008f729d0f22849618016e353179b8dda856040516113ba9190615814565b611f03612253565b80611f1857506030546001600160a01b031633145b611f345760405162461bcd60e51b815260040161063b90615784565b603d5460ff1615611f575760405162461bcd60e51b815260040161063b90615684565b600280546001600160a01b038381166001600160a01b031983161790925560405191169033907f05621ab0b721f217895f5337ac1283251172d175ef3dc8c9a0287155f6024ce890610e52908490869061539b565b6002546001600160a01b031681565b601e5481565b611fc9612253565b80611fde57506030546001600160a01b031633145b611ffa5760405162461bcd60e51b815260040161063b90615784565b603d5460ff161561201d5760405162461bcd60e51b815260040161063b90615684565b602755565b603d5460ff1681565b612033612253565b8061204857506030546001600160a01b031633145b6120645760405162461bcd60e51b815260040161063b90615784565b603d5460ff16156120875760405162461bcd60e51b815260040161063b90615684565b8281146120a65760405162461bcd60e51b815260040161063b90615714565b60005b83811015611bba578282828181106120bd57fe5b90506020020160206120d29190810190614b60565b602660008787858181106120e257fe5b90506020020160206120f7919081019061498e565b6001600160a01b031681526020810191909152604001600020805460ff191691151591909117905584848281811061212b57fe5b9050602002016020612140919081019061498e565b6001600160a01b0316337f24cecc90c7d4bc8c6765b75eedcc61d4e1cc4e4d49cd0756c6dfb5f6cc259b5085858581811061217757fe5b905060200201602061218c9190810190614b60565b604051612199919061552a565b60405180910390a36001016120a9565b6001600160a01b03808316600090815260406020818152818320938516835292835290819020805482518185028101850190935280835260609383018282801561221c57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116121fe575b5050505050905092915050565b6001546001600160a01b031690565b6022602052600090815260409020546001600160a01b031681565b6001546000906001600160a01b031661226a614494565b6001600160a01b031614905090565b612281612253565b8061229657506030546001600160a01b031633145b6122b25760405162461bcd60e51b815260040161063b90615784565b603d5460ff16156122d55760405162461bcd60e51b815260040161063b90615684565b603180546001600160a01b038381166001600160a01b03198316811790935560405191169190829033907fe48b1893efaee62da0749dd98dbf0ea62ee472b37f7205114aca36cc9de1122890600090a45050565b60176020526000908152604090205481565b602c5481565b60008061234c612253565b8061236157506030546001600160a01b031633145b61237d5760405162461bcd60e51b815260040161063b90615784565b603d5460ff16156123a05760405162461bcd60e51b815260040161063b90615684565b6123aa8484614498565b915091505b9250929050565b6123be612253565b806123d357506030546001600160a01b031633145b6123ef5760405162461bcd60e51b815260040161063b90615784565b603d5460ff16156124125760405162461bcd60e51b815260040161063b90615684565b68056bc75e2d6310000081111561243b5760405162461bcd60e51b815260040161063b906156d4565b602f80549082905560405133907fb12d68e20e5279e25ff10edfc0f82deaa858ea2ac9874cf58518f4e5f942201390610e529084908690615822565b61247f612253565b8061249457506030546001600160a01b031633145b6124b05760405162461bcd60e51b815260040161063b90615784565b603d5460ff16156124d35760405162461bcd60e51b815260040161063b90615684565b61270f8111156124f55760405162461bcd60e51b815260040161063b90615744565b603f80549082905560405133907fc6d322dc6668f20ff04ac11b217aae8e8704e6388bd1dececeab1059db806bf690610e529084908690615822565b612539612253565b8061254e57506030546001600160a01b031633145b61256a5760405162461bcd60e51b815260040161063b90615784565b603d5460ff161561258d5760405162461bcd60e51b815260040161063b90615684565b68056bc75e2d631000008111156125b65760405162461bcd60e51b815260040161063b90615744565b602180549082905560405133907fa06d9b7b1c979150dcbf5b050626cc7d06c764a12ebf76ec8d16b8d3d7c9ee5390610e529084908690615822565b6125fa612253565b8061260f57506030546001600160a01b031633145b61262b5760405162461bcd60e51b815260040161063b90615784565b603d5460ff161561264e5760405162461bcd60e51b815260040161063b90615684565b68056bc75e2d631000008111156126775760405162461bcd60e51b815260040161063b90615744565b603980549082905560405133907f61d3e840cf1074298f10fa77edb788b4e5e554d7d135c93ac5f38f2ce0f6b52d90610e529084908690615822565b6126bb612253565b806126d057506030546001600160a01b031633145b6126ec5760405162461bcd60e51b815260040161063b90615784565b603d5460ff161561270f5760405162461bcd60e51b815260040161063b90615684565b602855565b602f5481565b60205481565b602d546001600160a01b031681565b612737612253565b8061274c57506030546001600160a01b031633145b6127685760405162461bcd60e51b815260040161063b90615784565b603d5460ff161561278b5760405162461bcd60e51b815260040161063b90615684565b600081116127ab5760405162461bcd60e51b815260040161063b90615694565b602b80549082905560405133907f13cb748cec5c5021a23ec7994522a0911f24f10fdabc909281fbe95914b782f090610e529084908690615822565b603d5460009060ff161561280d5760405162461bcd60e51b815260040161063b90615684565b6014546001600160a01b031633146128375760405162461bcd60e51b815260040161063b90615784565b6001600160a01b03841660009081526016602052604090205482908082111561285e578091505b8161286e576000925050506113c9565b61287e818363ffffffff6142b516565b6001600160a01b0387166000908152601660209081526040808320939093556017905220546128b3908363ffffffff6142f716565b6001600160a01b0387166000818152601760205260409020919091556128e090868463ffffffff61431c16565b846001600160a01b0316866001600160a01b0316336001600160a01b03167fabc20bdd02de91df32a6e4a11684e26e0a34dc5a895a314ae51a919bc9f62c60856040516113ba9190615814565b601d6020526000908152604090205481565b601c6020526000908152604090205481565b6037546001600160a01b031681565b6004546001600160a01b031681565b60366020526000908152604090205481565b6037546040516370a0823160e01b815260009182916001600160a01b03909116906370a08231906129b690309060040161538d565b60206040518083038186803b1580156129ce57600080fd5b505afa1580156129e2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612a069190810190614c15565b6037546001600160a01b03166000908152601c602090815260408083205460198352818420546016909352908320549394509192612a5b9291612a4f919063ffffffff6142f716565b9063ffffffff6142f716565b905080821015612a6c576000612a7c565b612a7c828263ffffffff6142b516565b9250505090565b600660208190526000918252604090912080546001820154600283015460038401546004850154600586015496860154600787015460088801546009890154600a8a0154600b909a0154989a9799969860ff909616979496949593949293919290916001600160a01b0391821691168c565b612afd612253565b80612b1257506030546001600160a01b031633145b612b2e5760405162461bcd60e51b815260040161063b90615784565b631d18990160e21b600081905260056020527fe1ae43de9a4a3eb1abb1a58087a8aff0717a77c07be9f83ced74911b33b030e3546001600160a01b031690612b769083614515565b612b87631a81c19160e01b83614515565b612b986359e49e0f60e01b83614515565b612ba9630427554f60e51b83614515565b612bba63691c6d9160e11b83614515565b612bcb630c615ee960e01b83614515565b612bdc6302ff16f160e31b83614515565b612bed6329f9986d60e01b83614515565b612bfe633487e38960e21b83614515565b612c0f63a32bb68360e01b83614515565b612c2063a2ab1ba160e01b83614515565b612c31637fb202e560e01b83614515565b612c426314dcf98560e31b83614515565b612c5363355a395f60e01b83614515565b612c6463e8997dbd60e01b83614515565b612c75630f7e7aab60e41b83614515565b612c866358d644e560e11b83614515565b612c976374326e8f60e01b83614515565b612ca86332e4706f60e01b83614515565b612cb9639688185760e01b83614515565b612cca633c56ae1b60e01b83614515565b612cdb63402946b960e01b83614515565b612cec63115dd4b160e01b83614515565b612cfd6302d77d0d60e41b83614515565b612d0e63367aaa9960e21b83614515565b612d1f630e3ff93760e41b83614515565b612d306358aac5b960e11b83614515565b612d41639c53874f60e01b83614515565b612d52630ea0e39360e41b83614515565b612d63639254e6bf60e01b83614515565b612d74636fbae33b60e01b83614515565b612d85634dd053a560e01b83614515565b612d96630c7c333f60e41b83614515565b612da7631674367b60e21b83614515565b612db86307024c2560e01b83614515565b612dc96325e7f39360e11b83614515565b612dda633d1250bb60e21b83614515565b612deb633f1ae8b960e01b83614515565b612dfc63da541e0960e01b83614515565b612e0d63dac8856160e01b83614515565b612e1e63462096f360e01b83614515565b612e2f63a1eb568360e01b83614515565b612e406301c832c960e71b83614515565b612e5163c22552f760e01b83614515565b612e62637b4a9bcd60e11b83614515565b612e73638654042960e01b83614515565b612e8463d7480e2160e01b83614515565b612e9563dfdddc9960e01b83614515565b612ea6633825b60160e11b83614515565b612eb7636e9960c360e01b83614515565b612ec86316c457a560e11b83614515565b612ed9630e0116a960e31b83614515565b6f50726f746f636f6c53657474696e677360801b826001600160a01b0316826001600160a01b03167f1420e3a2094d671bc2eb897941fa3d94ffa37f0cb6d530651946250a2151cb7f60405160405180910390a45050565b612f39612253565b80612f4e57506030546001600160a01b031633145b612f6a5760405162461bcd60e51b815260040161063b90615784565b603d5460ff1615612f8d5760405162461bcd60e51b815260040161063b90615684565b603580549082905560405133907f5b3b73dcee2d869937089aa5282989415bc607389ab2d4164ae83e7a9e1da08490610e529084908690615822565b6007602052600090815260409020805460018201546002830154600384015460048501546005860154600690960154949560ff8516956101009095046001600160a01b03908116959481169493169288565b603c60209081526000928352604080842090915290825290205481565b613040612253565b8061305557506030546001600160a01b031633145b6130715760405162461bcd60e51b815260040161063b90615784565b603d5460ff16156130945760405162461bcd60e51b815260040161063b90615684565b68056bc75e2d631000008111156130bd5760405162461bcd60e51b815260040161063b90615744565b602080549082905560405133907f7f47cc725826cba6f43b2c0a013328b47d5f16aa9d27d6f0196a37a35c8e53f590610e529084908690615822565b613101612253565b8061311657506030546001600160a01b031633145b6131325760405162461bcd60e51b815260040161063b90615784565b603d5460ff16156131555760405162461bcd60e51b815260040161063b90615684565b68056bc75e2d6310000081111561317e5760405162461bcd60e51b815260040161063b90615744565b601580549082905560405133907fa6c5bd6650afa784494efd877ecd8b7505efbbbaed74b7dd29f1472d6cd0c49290610e529084908690615822565b6038546001600160a01b031681565b60275481565b60196020526000908152604090205481565b6131e9612253565b806131fe57506030546001600160a01b031633145b61321a5760405162461bcd60e51b815260040161063b90615784565b603d5460ff161561323d5760405162461bcd60e51b815260040161063b90615684565b60008282600081811061324c57fe5b90506020020160206132619190810190614bf7565b905060008383600019810181811061327557fe5b905060200201602061328a9190810190614bf7565b90508260038110156132ae5760405162461bcd60e51b815260040161063b90615724565b60005b81811015613306576132e28686838181106132c857fe5b90506020020160206132dd9190810190614bf7565b614279565b6132fe5760405162461bcd60e51b815260040161063b90615674565b6001016132b1565b506001600160a01b0380841660009081526040602081815281832093861683529290925220613336908686614840565b50816001600160a01b0316836001600160a01b0316336001600160a01b03167f129b9c235ee9080c61000669529ef5e13890b4d0baa3f9fd78a24755e6977e848888604051613386929190615507565b60405180910390a45050505050565b61339d612253565b806133b257506030546001600160a01b031633145b6133ce5760405162461bcd60e51b815260040161063b90615784565b603d5460ff16156133f15760405162461bcd60e51b815260040161063b90615684565b6133fa81614279565b6134165760405162461bcd60e51b815260040161063b90615734565b602d80546001600160a01b038381166001600160a01b03198316811790935560405191169190829033907ec53b30140bc38db3a9070249d614e03304ada9e458b2d2f01d23feed00985a90600090a45050565b613471612253565b8061348657506041546001600160a01b031633145b6134a25760405162461bcd60e51b815260040161063b90615784565b603d5460ff16151581151514156134cb5760405162461bcd60e51b815260040161063b906157e4565b603d805460ff19168215801591821790925560405190919033907f575725fa4843b62a71608b620f6d2a15792407ae40e019230a0500109782f66090600090a450565b603d5460ff1690565b61351f612253565b8061353457506030546001600160a01b031633145b6135505760405162461bcd60e51b815260040161063b90615784565b603d5460ff16156135735760405162461bcd60e51b815260040161063b90615684565b6001600160a01b0380831660009081526040602081815281832093851683529290925220546135b45760405162461bcd60e51b815260040161063b906156f4565b6001600160a01b03808316600090815260406020818152818320938516835292835290819020805482518185028101850190935280835260609383018282801561362757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311613609575b505050506001600160a01b0385811660009081526040602081815281832093881683529290925290812092935061365f9291506148a3565b816001600160a01b0316836001600160a01b0316336001600160a01b03167f1a4d14c8795096885326639e56c528b0fbb308e1b94146c8515c41042681121d846040516136ac9190615519565b60405180910390a4505050565b6136c1612253565b806136d657506030546001600160a01b031633145b6136f25760405162461bcd60e51b815260040161063b90615784565b603d5460ff16156137155760405162461bcd60e51b815260040161063b90615684565b61371e81614279565b61373a5760405162461bcd60e51b815260040161063b906157d4565b602e80546001600160a01b038381166001600160a01b03198316811790935560405191169190829033907fffdeb9a96d6e1f867bcbb8a64815e576b65141995ab197cf02f7bb34fc186b7590600090a45050565b603f5490565b61379c612253565b806137b157506030546001600160a01b031633145b6137cd5760405162461bcd60e51b815260040161063b90615784565b603d5460ff16156137f05760405162461bcd60e51b815260040161063b90615684565b601480546001600160a01b038381166001600160a01b03198316811790935560405191169190829033907f83e92cb95ec836f94e25e0a7b31c39f750833a8ce24eaa227a7050aafea08a8490600090a45050565b6014546001600160a01b031681565b61385b612253565b8061387057506030546001600160a01b031633145b61388c5760405162461bcd60e51b815260040161063b90615784565b603d5460ff16156138af5760405162461bcd60e51b815260040161063b90615684565b683635c9adc5dea000008111156138d85760405162461bcd60e51b815260040161063b906157a4565b6001600160a01b038381166000818152603c60209081526040808320948716808452949091529081902080549085905590519092919033907fd2d3c121d3439420f50efd36f0a01ebdac87111ec00360641c32aea3c6fc32139061393f9086908890615822565b60405180910390a450505050565b601b5481565b60285481565b613961612253565b61397d5760405162461bcd60e51b815260040161063b90615784565b61154a8161458f565b6038546001600160a01b031690565b60395481565b6139a3612253565b806139b857506030546001600160a01b031633145b6139d45760405162461bcd60e51b815260040161063b90615784565b603d5460ff16156139f75760405162461bcd60e51b815260040161063b90615684565b670de0b6b3a7640000811115613a1f5760405162461bcd60e51b815260040161063b90615744565b602c80549082905560405133907f864303b3e76c8edf19227d9acce896145b83212c6e38243e827b652d226bc9d690610e529084908690615822565b60215481565b602e546001600160a01b031681565b603d5460009060ff1615613a965760405162461bcd60e51b815260040161063b90615684565b6014546001600160a01b03163314613ac05760405162461bcd60e51b815260040161063b90615784565b60005b8381101561426257600060166000878785818110613add57fe5b9050602002016020613af2919081019061498e565b6001600160a01b0316815260208101919091526040016000205490508015613bee57600060166000888886818110613b2657fe5b9050602002016020613b3b919081019061498e565b6001600160a01b03166001600160a01b0316815260200190815260200160002081905550613bae8160176000898987818110613b7357fe5b9050602002016020613b88919081019061498e565b6001600160a01b031681526020810191909152604001600020549063ffffffff6142f716565b60176000888886818110613bbe57fe5b9050602002016020613bd3919081019061498e565b6001600160a01b031681526020810191909152604001600020555b600060196000888886818110613c0057fe5b9050602002016020613c15919081019061498e565b6001600160a01b0316815260208101919091526040016000205490508015613cd657600060196000898987818110613c4957fe5b9050602002016020613c5e919081019061498e565b6001600160a01b03166001600160a01b0316815260200190815260200160002081905550613c9681601a60008a8a88818110613b7357fe5b601a6000898987818110613ca657fe5b9050602002016020613cbb919081019061498e565b6001600160a01b031681526020810191909152604001600020555b6000601c6000898987818110613ce857fe5b9050602002016020613cfd919081019061498e565b6001600160a01b0316815260208101919091526040016000205490508015613dbe576000601c60008a8a88818110613d3157fe5b9050602002016020613d46919081019061498e565b6001600160a01b03166001600160a01b0316815260200190815260200160002081905550613d7e81601d60008b8b89818110613b7357fe5b601d60008a8a88818110613d8e57fe5b9050602002016020613da3919081019061498e565b6001600160a01b031681526020810191909152604001600020555b6000613dd482612a4f868663ffffffff6142f716565b905080613de4575050505061425a565b6037546000906001600160a01b03168a8a88818110613dff57fe5b9050602002016020613e14919081019061498e565b6001600160a01b03161415613f3b57898987818110613e2f57fe5b9050602002016020613e44919081019061498e565b60145460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392613e779291169086906004016154c0565b602060405180830381600087803b158015613e9157600080fd5b505af1158015613ea5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613ec99190810190614b7e565b5060145460375460405163abe979e160e01b81526001600160a01b039283169263abe979e192613f009291169086906004016154db565b600060405180830381600087803b158015613f1a57600080fd5b505af1158015613f2e573d6000803e3d6000fd5b50505050600090506141d9565b602d546001600160a01b03168a8a88818110613f5357fe5b9050602002016020613f68919081019061498e565b6001600160a01b03161415613f9c5750602d548190613f97906001600160a01b0316898363ffffffff61431c16565b6141c6565b898987818110613fa857fe5b9050602002016020613fbd919081019061498e565b60315460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392613ff09291169086906004016154c0565b602060405180830381600087803b15801561400a57600080fd5b505af115801561401e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506140429190810190614b7e565b506031546001600160a01b031663e321b5408b8b8981811061406057fe5b9050602002016020614075919081019061498e565b602d546014546031546040516001600160e01b031960e087901b1681526140b794936001600160a01b03908116938116921690899060009081906004016153b6565b6040805180830381600087803b1580156140d057600080fd5b505af11580156140e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506141089190810190614c52565b506002549091506001600160a01b0316631e2c62d38b8b8981811061412957fe5b905060200201602061413e919081019061498e565b602d546027546040516001600160e01b031960e086901b16815261417493926001600160a01b0316918891889190600401615459565b60206040518083038186803b15801561418c57600080fd5b505afa1580156141a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506141c49190810190614c15565b505b6141d6878263ffffffff6142f716565b96505b876001600160a01b03168a8a888181106141ef57fe5b9050602002016020614204919081019061498e565b6001600160a01b0316336001600160a01b03167ffc669a9c6050d8c313b540e2a2bd63f5f8965e4d267a0683ba6fb55114e868cc8888888760405161424c949392919061584b565b60405180910390a450505050505b600101613ac3565b509392505050565b6030546001600160a01b031681565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906142ad57508115155b949350505050565b600061157983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250614611565b6000828201838110156115795760405162461bcd60e51b815260040161063b906156c4565b60405161437590849063a9059cbb60e01b9061433e90869086906024016154c0565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261463d565b505050565b60405161439e9085906323b872dd60e01b9061433e90879087908790602401615431565b50505050565b6060828201838110156143c95760405162461bcd60e51b815260040161063b90615774565b600185015481116143da57806143e0565b60018501545b90508015806143ef5750808410155b156143fa57506113c9565b838103604051908082528060200260200182016040528015614426578160200160208202803883390190505b50915060005b84820381101561447157856001018582018154811061444757fe5b906000526020600020015483828151811061445e57fe5b602090810291909101015260010161442c565b50509392505050565b6000816142ad8482614722565b6000816142ad84826147eb565b3390565b601e5460009081908390808211156144ae578091505b816144cc575050602e546001600160a01b03169150600090506123af565b6144dc818363ffffffff6142b516565b601e55602e546144fc906001600160a01b0316878463ffffffff61431c16565b5050602e546001600160a01b0316946001945092505050565b6001600160e01b03198216600090815260056020526040902080546001600160a01b0319166001600160a01b038316908117909155156145705761456a600d6001600160e01b0319841663ffffffff6147eb16565b5061458b565b614375600d6001600160e01b0319841663ffffffff61472216565b5050565b6001600160a01b0381166145b55760405162461bcd60e51b815260040161063b906156b4565b6001546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b600081848411156146355760405162461bcd60e51b815260040161063b9190615663565b505050900390565b61464f826001600160a01b0316614279565b61466b5760405162461bcd60e51b815260040161063b906157f4565b60006060836001600160a01b0316836040516146879190615381565b6000604051808303816000865af19150503d80600081146146c4576040519150601f19603f3d011682016040523d82523d6000602084013e6146c9565b606091505b5091509150816146eb5760405162461bcd60e51b815260040161063b906156e4565b80511561439e57808060200190516147069190810190614b7e565b61439e5760405162461bcd60e51b815260040161063b906157c4565b600061472e838361482b565b156147e357600082815260208490526040902054600184015460001991820191018082146147a657600085600101828154811061476757fe5b906000526020600020015490508086600101848154811061478457fe5b6000918252602080832090910192909255918252869052604090206001830190555b600084815260208690526040812055600185018054806147c257fe5b6001900381819060005260206000200160009055905560019250505061157c565b50600061157c565b60006147f7838361482b565b6147e3575060018083018054808301808355600092835260208084209092018590558483529085905260409091205561157c565b60009081526020919091526040902054151590565b828054828255906000526020600020908101928215614893579160200282015b828111156148935781546001600160a01b0319166001600160a01b03843516178255602090920191600190910190614860565b5061489f9291506148c1565b5090565b508054600082559060005260206000209081019061154a91906148e5565b610d8e91905b8082111561489f5780546001600160a01b03191681556001016148c7565b610d8e91905b8082111561489f57600081556001016148eb565b803561157c816159ab565b60008083601f84011261491c57600080fd5b50813567ffffffffffffffff81111561493457600080fd5b6020830191508360208202830111156123af57600080fd5b803561157c816159bf565b805161157c816159bf565b803561157c816159c8565b803561157c816159d1565b803561157c816159da565b805161157c816159c8565b6000602082840312156149a057600080fd5b60006142ad84846148ff565b600080604083850312156149bf57600080fd5b60006149cb85856148ff565b92505060206149dc858286016148ff565b9150509250929050565b6000806000606084860312156149fb57600080fd5b6000614a0786866148ff565b9350506020614a18868287016148ff565b9250506040614a2986828701614962565b9150509250925092565b60008060408385031215614a4657600080fd5b6000614a5285856148ff565b92505060206149dc85828601614962565b600080600060408486031215614a7857600080fd5b833567ffffffffffffffff811115614a8f57600080fd5b614a9b8682870161490a565b93509350506020614a29868287016148ff565b60008060008060408587031215614ac457600080fd5b843567ffffffffffffffff811115614adb57600080fd5b614ae78782880161490a565b9450945050602085013567ffffffffffffffff811115614b0657600080fd5b614b128782880161490a565b95989497509550505050565b60008060208385031215614b3157600080fd5b823567ffffffffffffffff811115614b4857600080fd5b614b548582860161490a565b92509250509250929050565b600060208284031215614b7257600080fd5b60006142ad848461494c565b600060208284031215614b9057600080fd5b60006142ad8484614957565b600060208284031215614bae57600080fd5b60006142ad8484614962565b60008060408385031215614bcd57600080fd5b60006149cb8585614962565b600060208284031215614beb57600080fd5b60006142ad848461496d565b600060208284031215614c0957600080fd5b60006142ad8484614978565b600060208284031215614c2757600080fd5b60006142ad8484614983565b60008060408385031215614c4657600080fd5b6000614a528585614962565b60008060408385031215614c6557600080fd5b6000614c718585614983565b92505060206149dc85828601614983565b6000614c8e8383614dae565b505060200190565b6000614c8e8383614de6565b614cab81615925565b82525050565b6000614cbc82615904565b614cc68185615908565b9350614cd1836158fe565b8060005b83811015614cff578151614ce98882614c82565b9750614cf4836158fe565b925050600101614cd5565b509495945050505050565b6000614d168385615908565b9350614d2182610d8e565b8060005b85811015614cff57614d378284615916565b614d418882614c96565b9750614d4c836158fe565b925050600101614d25565b6000614d6282615904565b614d6c8185615908565b9350614d77836158fe565b8060005b83811015614cff578151614d8f8882614c96565b9750614d9a836158fe565b925050600101614d7b565b614cab81615930565b614cab81610d8e565b6000614dc282615904565b614dcc8185615911565b9350614ddc818560208601615975565b9290920192915050565b614cab81615942565b614cab8161596a565b6000614e0382615904565b614e0d8185615908565b9350614e1d818560208601615975565b614e26816159a1565b9093019392505050565b6000614e3d601a83615908565b7f4552525f504154485f4e4f4e5f434f4e54524143545f41444452000000000000815260200192915050565b6000614e76600683615908565b6514185d5cd95960d21b815260200192915050565b6000614e98601383615908565b724261736520726577617264206973207a65726f60681b815260200192915050565b6000614ec7602083615908565b7f6e65774c6f636b534f5641646472657373206e6f74206120636f6e7472616374815260200192915050565b6000614f00602683615908565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015260400192915050565b6000614f48601b83615908565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000815260200192915050565b6000614f81601683615908565b7508ccaca40e4cac4c2e8ca40d2e640e8dede40d0d2ced60531b815260200192915050565b6000614fb3602083615908565b7f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815260200192915050565b6000614fec601283615908565b7144454641554c545f504154485f454d50545960701b815260200192915050565b600061501a602183615908565b7f6e6577536f76546f6b656e41646472657373206e6f74206120636f6e747261638152601d60fa1b602082015260400192915050565b600061505d600e83615908565b6d0c6deeadce840dad2e6dac2e8c6d60931b815260200192915050565b6000615087600f83615908565b6e08aa4a4bea082a890be988a9c8ea89608b1b815260200192915050565b60006150b2602083615908565b7f7772627463546f6b656e41646472657373206e6f74206120636f6e7472616374815260200192915050565b60006150eb600e83615908565b6d0ecc2d8eaca40e8dede40d0d2ced60931b815260200192915050565b6000615115601e83615908565b7f726567697374727941646472657373206e6f74206120636f6e74726163740000815260200192915050565b600061514e600f83615908565b6e706f6f6c206e6f742065786973747360881b815260200192915050565b6000615179601183615908565b706164646974696f6e206f766572666c6f7760781b815260200192915050565b60006151a6600c83615908565b6b1d5b985d5d1a1bdc9a5e995960a21b815260200192915050565b60006151ce601483615908565b7319985b1b189858dac81b9bdd08185b1b1bddd95960621b815260200192915050565b600061157c600083615908565b600061520b601e83615908565b7f5370656369616c206665652072656261746520697320746f6f20686967680000815260200192915050565b6000615244600d83615908565b6c1c1bdbdb080f4f48185cdcd95d609a1b815260200192915050565b600061526d602a83615908565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b602082015260400192915050565b60006152b9602483615908565b7f5f70726f746f636f6c546f6b656e41646472657373206e6f74206120636f6e748152631c9858dd60e21b602082015260400192915050565b60006152ff600c83615908565b6b43616e277420746f67676c6560a01b815260200192915050565b6000615327601f83615908565b7f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400815260200192915050565b6000615360600983615908565b680706f6f6c203d3d20360bc1b815260200192915050565b614cab81615959565b60006113c98284614db7565b6020810161157c8284614ca2565b604081016153a98285614ca2565b6113c96020830184614ca2565b61010081016153c5828a614ca2565b6153d26020830189614ca2565b6153df6040830188614ca2565b6153ec6060830187614ca2565b6153f96080830186614dae565b61540660a0830185614def565b61541360c0830184614def565b81810360e0830152615424816151f1565b9998505050505050505050565b6060810161543f8286614ca2565b61544c6020830185614ca2565b6142ad6040830184614dae565b60a081016154678288614ca2565b6154746020830187614ca2565b6154816040830186614dae565b61548e6060830185614dae565b61549b6080830184614dae565b9695505050505050565b604081016154b38285614ca2565b6113c96020830184614da5565b604081016154ce8285614ca2565b6113c96020830184614dae565b604081016154e98285614ca2565b6113c96020830184615378565b602080825281016115798184614cb1565b602080825281016142ad818486614d0a565b602080825281016115798184614d57565b6020810161157c8284614da5565b6101008101615547828b614dae565b615554602083018a614da5565b6155616040830189614ca2565b61556e6060830188614ca2565b61557b6080830187614ca2565b61558860a0830186614dae565b61559560c0830185614dae565b61542460e0830184614dae565b61018081016155b1828f614dae565b6155be602083018e614dae565b6155cb604083018d614dae565b6155d8606083018c614da5565b6155e5608083018b614dae565b6155f260a083018a614dae565b6155ff60c0830189614dae565b61560c60e0830188614dae565b61561a610100830187614dae565b615628610120830186614dae565b615636610140830185614ca2565b615644610160830184614ca2565b9d9c50505050505050505050505050565b6020810161157c8284614de6565b602080825281016115798184614df8565b6020808252810161157c81614e30565b6020808252810161157c81614e69565b6020808252810161157c81614e8b565b6020808252810161157c81614eba565b6020808252810161157c81614ef3565b6020808252810161157c81614f3b565b6020808252810161157c81614f74565b6020808252810161157c81614fa6565b6020808252810161157c81614fdf565b6020808252810161157c8161500d565b6020808252810161157c81615050565b6020808252810161157c8161507a565b6020808252810161157c816150a5565b6020808252810161157c816150de565b6020808252810161157c81615108565b6020808252810161157c81615141565b6020808252810161157c8161516c565b6020808252810161157c81615199565b6020808252810161157c816151c1565b6020808252810161157c816151fe565b6020808252810161157c81615237565b6020808252810161157c81615260565b6020808252810161157c816152ac565b6020808252810161157c816152f2565b6020808252810161157c8161531a565b6020808252810161157c81615353565b6020810161157c8284614dae565b604081016154ce8285614dae565b6060810161583e8286614dae565b61544c6020830185614dae565b608081016158598287614dae565b6158666020830186614dae565b6158736040830185614dae565b6158806060830184614dae565b95945050505050565b60a081016158978288614dae565b6154746020830187614dae565b60c081016158b28289614dae565b6158bf6020830188614dae565b6158cc6040830187614dae565b6158d96060830186614dae565b6158e66080830185614dae565b6158f360a0830184614dae565b979650505050505050565b60200190565b5190565b90815260200190565b919050565b60006115796020840184614978565b600061157c8261594d565b151590565b6001600160e01b03191690565b600061157c82615925565b6001600160a01b031690565b6bffffffffffffffffffffffff1690565b600061157c82610d8e565b60005b83811015615990578181015183820152602001615978565b8381111561439e5750506000910152565b601f01601f191690565b6159b481615925565b811461154a57600080fd5b6159b481615930565b6159b481610d8e565b6159b481615935565b6159b48161594256fea365627a7a723158207c8a98e8573a97b25ef9f00e13525362dd41d602aeede6d473a54f8e7b03ab3a6c6578706572696d656e74616cf564736f6c63430005110040",
  "libraries": {},
  "devdoc": {
    "methods": {
      "depositProtocolToken(uint256)": {
        "params": {
          "amount": "The tokens of fees to send."
        }
      },
      "getAdmin()": {
        "details": "Get admin address.     *",
        "return": "admin address."
      },
      "getDedicatedSOVRebate()": {
        "details": "Get how much SOV that is dedicated to pay the trading rebate rewards.",
        "return": "total dedicated SOV."
      },
      "getDefaultPathConversion(address,address)": {
        "details": "Get default path conversion for pairs.",
        "params": {
          "destTokenAddress": "destination token address.",
          "sourceTokenAddress": "source token address."
        },
        "return": "default path of the conversion."
      },
      "getLoanPoolsList(uint256,uint256)": {
        "params": {
          "count": "The limit.",
          "start": "The offset."
        },
        "return": "The array of loan pools."
      },
      "getPauser()": {
        "details": "Get pauser address.     *",
        "return": "pauser address."
      },
      "getSpecialRebates(address,address)": {
        "params": {
          "destTokenAddress": "The dest of pairs.",
          "sourceTokenAddress": "The source of pairs."
        },
        "return": "The percent rebates of the pairs."
      },
      "getTradingRebateRewardsBasisPoint()": {
        "return": "The basis point value."
      },
      "initialize(address)": {
        "params": {
          "target": "The address of the target contract."
        }
      },
      "isLoanPool(address)": {
        "details": "By querying its underlying token.",
        "params": {
          "loanPool": "The token address to check."
        }
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "removeDefaultPathConversion(address,address)": {
        "details": "Remove the default path conversion for pairs",
        "params": {
          "destTokenAddress": "destination token address",
          "sourceTokenAddress": "source token address."
        }
      },
      "setAffiliateFeePercent(uint256)": {
        "params": {
          "newValue": "The new value for affiliateFeePercent."
        }
      },
      "setAffiliateTradingTokenFeePercent(uint256)": {
        "params": {
          "newValue": "The new value for affiliateTradingTokenFeePercent."
        }
      },
      "setBorrowingFeePercent(uint256)": {
        "params": {
          "newValue": "The new value for borrowingFeePercent."
        }
      },
      "setDefaultPathConversion(address[])": {
        "details": "Set default path conversion for pairs.",
        "params": {
          "defaultPath": "array of addresses for the default path.     "
        }
      },
      "setFeesController(address)": {
        "details": "The fee sharing proxy must be the feesController of the protocol contract. This allows the fee sharing proxy to withdraw the fees.",
        "params": {
          "newController": "The new address of the feesController."
        }
      },
      "setLendingFeePercent(uint256)": {
        "params": {
          "newValue": "The new value for lendingFeePercent."
        }
      },
      "setLiquidationIncentivePercent(uint256)": {
        "params": {
          "newValue": "The new value for liquidationIncentivePercent."
        }
      },
      "setLoanPool(address[],address[])": {
        "params": {
          "assets": "The array of addresses of the corresponding underlying tokens.",
          "pools": "The array of addresses of new loan pool instances."
        }
      },
      "setMaxDisagreement(uint256)": {
        "params": {
          "newValue": "The new value for maxDisagreement."
        }
      },
      "setMaxSwapSize(uint256)": {
        "params": {
          "newValue": "The new value for the maximum swap size."
        }
      },
      "setMinReferralsToPayoutAffiliates(uint256)": {
        "params": {
          "newMinReferrals": "The new minimum number of referrals."
        }
      },
      "setPauser(address)": {
        "params": {
          "newPauser": "The new address of the pauser."
        }
      },
      "setPriceFeedContract(address)": {
        "params": {
          "newContract": "The address of the Price Feed new instance."
        }
      },
      "setProtocolTokenAddress(address)": {
        "params": {
          "_protocolTokenAddress": "The address of the protocol token contract."
        }
      },
      "setRebatePercent(uint256)": {
        "params": {
          "rebatePercent": "The fee rebate percent."
        }
      },
      "setRolloverBaseReward(uint256)": {
        "params": {
          "baseRewardValue": "The base reward."
        }
      },
      "setRolloverFlexFeePercent(uint256)": {
        "params": {
          "newRolloverFlexFeePercent": "uint256 value of new rollover flex fee percentage (0.1 ether = 0.1%)"
        }
      },
      "setSourceBuffer(uint256)": {
        "details": "To avoid rounding issues on the swap rate a small buffer is implemented.",
        "params": {
          "newValue": "The new value for the maximum source buffer."
        }
      },
      "setSovrynSwapContractRegistryAddress(address)": {
        "params": {
          "registryAddress": "the address of the registry contract."
        }
      },
      "setSpecialRebates(address,address,uint256)": {
        "params": {
          "specialRebatesPercent": "The new special fee rebate percent."
        }
      },
      "setSupportedTokens(address[],bool[])": {
        "params": {
          "addrs": "The array of addresses of the tokens.",
          "toggles": "The array of flags indicating whether  the corresponding token is supported or not."
        }
      },
      "setSwapExternalFeePercent(uint256)": {
        "params": {
          "newValue": "the new value for swapExternalFeePercent"
        }
      },
      "setSwapsImplContract(address)": {
        "params": {
          "newContract": "The address of the asset swapper new instance."
        }
      },
      "setTradingFeePercent(uint256)": {
        "params": {
          "newValue": "The new value for tradingFeePercent."
        }
      },
      "setTradingRebateRewardsBasisPoint(uint256)": {
        "params": {
          "newBasisPoint": "Basis point value."
        }
      },
      "setWrbtcToken(address)": {
        "params": {
          "wrbtcTokenAddress": "The address of the wrBTC contract."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdrawBorrowingFees(address,address,uint256)": {
        "params": {
          "amount": "The amount of fees to get, ignored if greater than balance.",
          "receiver": "The address of the withdrawal recipient.",
          "token": "The address of the token instance."
        },
        "return": "Whether withdrawal was successful."
      },
      "withdrawFees(address[],address)": {
        "params": {
          "receiver": "The address of the withdrawal recipient.",
          "tokens": "The array of address of the token instance."
        },
        "return": "The withdrawn total amount in wRBTC"
      },
      "withdrawLendingFees(address,address,uint256)": {
        "params": {
          "amount": "The amount of fees to get, ignored if greater than balance.",
          "receiver": "The address of the withdrawal recipient.",
          "token": "The address of the token instance."
        },
        "return": "Whether withdrawal was successful."
      },
      "withdrawProtocolToken(address,uint256)": {
        "details": "Wrapper for ProtocolTokenUser::_withdrawProtocolToken internal function.",
        "params": {
          "amount": "The amount of tokens to get.",
          "receiver": "The address of the withdrawal recipient."
        },
        "return": "The protocol token address.Withdrawal success (true/false)."
      },
      "withdrawTradingFees(address,address,uint256)": {
        "params": {
          "amount": "The amount of fees to get, ignored if greater than balance.",
          "receiver": "The address of the withdrawal recipient.",
          "token": "The address of the token instance."
        },
        "return": "Whether withdrawal was successful."
      }
    },
    "title": "Protocol Settings contract."
  },
  "userdoc": {
    "methods": {
      "constructor": "Empty public constructor.",
      "depositProtocolToken(uint256)": {
        "notice": "The owner calls this function to deposit protocol tokens."
      },
      "getDedicatedSOVRebate()": {
        "notice": "If SOV balance is less than the fees held, it will return 0."
      },
      "getLoanPoolsList(uint256,uint256)": {
        "notice": "Get a list of loan pools."
      },
      "getSpecialRebates(address,address)": {
        "notice": "Get a rebate percent of specific pairs."
      },
      "getTradingRebateRewardsBasisPoint()": {
        "notice": "Get the basis point of trading rebate rewards."
      },
      "initialize(address)": {
        "notice": "Set function selectors on target contract."
      },
      "isLoanPool(address)": {
        "notice": "Check whether a token is a pool token."
      },
      "setAffiliateFeePercent(uint256)": {
        "notice": "Set the value of affiliateFeePercent storage variable."
      },
      "setAffiliateTradingTokenFeePercent(uint256)": {
        "notice": "Set the value of affiliateTradingTokenFeePercent storage variable."
      },
      "setBorrowingFeePercent(uint256)": {
        "notice": "Set the value of borrowingFeePercent storage variable."
      },
      "setFeesController(address)": {
        "notice": "Set the address of the feesController instance."
      },
      "setLendingFeePercent(uint256)": {
        "notice": "Set the value of lendingFeePercent storage variable."
      },
      "setLiquidationIncentivePercent(uint256)": {
        "notice": "Set the value of liquidationIncentivePercent storage variable."
      },
      "setLoanPool(address[],address[])": {
        "notice": "Set a list of loan pools and its tokens."
      },
      "setMaxDisagreement(uint256)": {
        "notice": "Set the value of the maximum swap spread."
      },
      "setMaxSwapSize(uint256)": {
        "notice": "Set the value of the swap size limit."
      },
      "setMinReferralsToPayoutAffiliates(uint256)": {
        "notice": "Update the minimum number of referrals to get affiliates rewards."
      },
      "setPauser(address)": {
        "notice": "Set the pauser address of sovryn protocol.     * only pauser or owner can perform this action."
      },
      "setPriceFeedContract(address)": {
        "notice": "Set the address of the Price Feed instance."
      },
      "setProtocolTokenAddress(address)": {
        "notice": "Set the protocol token contract address."
      },
      "setRebatePercent(uint256)": {
        "notice": "Set the fee rebate percent."
      },
      "setRolloverBaseReward(uint256)": {
        "notice": "Set rollover base reward. It should be denominated in wrBTC."
      },
      "setRolloverFlexFeePercent(uint256)": {
        "notice": "Set rolloverFlexFeePercent (max value is 1%)"
      },
      "setSourceBuffer(uint256)": {
        "notice": "Set the value of the maximum source buffer."
      },
      "setSovrynProtocolAddress(address)": {
        "notice": "setting wrong address will break inter module functions calling should be set once"
      },
      "setSovrynSwapContractRegistryAddress(address)": {
        "notice": "Set the contract registry address of the SovrynSwap network."
      },
      "setSpecialRebates(address,address,uint256)": {
        "notice": "Set the special fee rebate percent for specific pair"
      },
      "setSupportedTokens(address[],bool[])": {
        "notice": "Set a list of supported tokens by populating the  storage supportedTokens mapping."
      },
      "setSwapExternalFeePercent(uint256)": {
        "notice": "Set the value of swapExtrernalFeePercent storage variable"
      },
      "setSwapsImplContract(address)": {
        "notice": "Set the address of the asset swapper instance."
      },
      "setTradingFeePercent(uint256)": {
        "notice": "Set the value of tradingFeePercent storage variable."
      },
      "setTradingRebateRewardsBasisPoint(uint256)": {
        "notice": "Set the basis point of trading rebate rewards (SOV), max value is 9999 (99.99% liquid, 0.01% vested)."
      },
      "setWrbtcToken(address)": {
        "notice": "Set the wrBTC contract address."
      },
      "withdrawBorrowingFees(address,address,uint256)": {
        "notice": "The feesController calls this function to withdraw fees accrued from borrowing operations."
      },
      "withdrawFees(address[],address)": {
        "notice": "The feesController calls this function to withdraw fees from three sources: lending, trading and borrowing. The fees (except SOV) will be converted to wRBTC. For SOV, it will be deposited directly to feeSharingCollector from the protocol."
      },
      "withdrawLendingFees(address,address,uint256)": {
        "notice": "The feesController calls this function to withdraw fees accrued from lending operations."
      },
      "withdrawProtocolToken(address,uint256)": {
        "notice": "The owner calls this function to withdraw protocol tokens."
      },
      "withdrawTradingFees(address,address,uint256)": {
        "notice": "The feesController calls this function to withdraw fees accrued from trading operations."
      }
    },
    "notice": "This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * This contract contains functions to customize protocol settings."
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 54790,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "reentrancyLock",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 54606,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "_owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 6188,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "priceFeeds",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 6190,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "swapsImpl",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 6192,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "sovrynSwapContractRegistryAddress",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 6196,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "logicTargets",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_bytes4,t_address)"
      },
      {
        "astId": 6200,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "loans",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_bytes32,t_struct(Loan)6566_storage)"
      },
      {
        "astId": 6204,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "loanParams",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_bytes32,t_struct(LoanParams)6538_storage)"
      },
      {
        "astId": 6210,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "lenderOrders",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_mapping(t_bytes32,t_struct(Order)6582_storage))"
      },
      {
        "astId": 6216,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "borrowerOrders",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_mapping(t_bytes32,t_struct(Order)6582_storage))"
      },
      {
        "astId": 6222,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "delegatedManagers",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 6228,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "lenderInterest",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_mapping(t_address,t_struct(LenderInterest)6508_storage))"
      },
      {
        "astId": 6232,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "loanInterest",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_bytes32,t_struct(LoanInterest)6518_storage)"
      },
      {
        "astId": 6234,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "logicTargetsSet",
        "offset": 0,
        "slot": "13",
        "type": "t_struct(Bytes32Set)36272_storage"
      },
      {
        "astId": 6236,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "activeLoansSet",
        "offset": 0,
        "slot": "15",
        "type": "t_struct(Bytes32Set)36272_storage"
      },
      {
        "astId": 6240,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "lenderLoanSets",
        "offset": 0,
        "slot": "17",
        "type": "t_mapping(t_address,t_struct(Bytes32Set)36272_storage)"
      },
      {
        "astId": 6244,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "borrowerLoanSets",
        "offset": 0,
        "slot": "18",
        "type": "t_mapping(t_address,t_struct(Bytes32Set)36272_storage)"
      },
      {
        "astId": 6248,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "userLoanParamSets",
        "offset": 0,
        "slot": "19",
        "type": "t_mapping(t_address,t_struct(Bytes32Set)36272_storage)"
      },
      {
        "astId": 6250,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "feesController",
        "offset": 0,
        "slot": "20",
        "type": "t_address"
      },
      {
        "astId": 6255,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "lendingFeePercent",
        "offset": 0,
        "slot": "21",
        "type": "t_uint256"
      },
      {
        "astId": 6259,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "lendingFeeTokensHeld",
        "offset": 0,
        "slot": "22",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 6263,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "lendingFeeTokensPaid",
        "offset": 0,
        "slot": "23",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 6270,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "tradingFeePercent",
        "offset": 0,
        "slot": "24",
        "type": "t_uint256"
      },
      {
        "astId": 6274,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "tradingFeeTokensHeld",
        "offset": 0,
        "slot": "25",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 6278,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "tradingFeeTokensPaid",
        "offset": 0,
        "slot": "26",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 6285,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "borrowingFeePercent",
        "offset": 0,
        "slot": "27",
        "type": "t_uint256"
      },
      {
        "astId": 6289,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "borrowingFeeTokensHeld",
        "offset": 0,
        "slot": "28",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 6293,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "borrowingFeeTokensPaid",
        "offset": 0,
        "slot": "29",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 6295,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "protocolTokenHeld",
        "offset": 0,
        "slot": "30",
        "type": "t_uint256"
      },
      {
        "astId": 6297,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "protocolTokenPaid",
        "offset": 0,
        "slot": "31",
        "type": "t_uint256"
      },
      {
        "astId": 6304,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "affiliateFeePercent",
        "offset": 0,
        "slot": "32",
        "type": "t_uint256"
      },
      {
        "astId": 6311,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "liquidationIncentivePercent",
        "offset": 0,
        "slot": "33",
        "type": "t_uint256"
      },
      {
        "astId": 6315,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "loanPoolToUnderlying",
        "offset": 0,
        "slot": "34",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 6319,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "underlyingToLoanPool",
        "offset": 0,
        "slot": "35",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 6321,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "loanPoolsSet",
        "offset": 0,
        "slot": "36",
        "type": "t_struct(Bytes32Set)36272_storage"
      },
      {
        "astId": 6325,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "supportedTokens",
        "offset": 0,
        "slot": "38",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 6332,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "maxDisagreement",
        "offset": 0,
        "slot": "39",
        "type": "t_uint256"
      },
      {
        "astId": 6335,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "sourceBuffer",
        "offset": 0,
        "slot": "40",
        "type": "t_uint256"
      },
      {
        "astId": 6338,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "maxSwapSize",
        "offset": 0,
        "slot": "41",
        "type": "t_uint256"
      },
      {
        "astId": 6342,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "borrowerNonce",
        "offset": 0,
        "slot": "42",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 6345,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "rolloverBaseReward",
        "offset": 0,
        "slot": "43",
        "type": "t_uint256"
      },
      {
        "astId": 6348,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "rolloverFlexFeePercent",
        "offset": 0,
        "slot": "44",
        "type": "t_uint256"
      },
      {
        "astId": 6350,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "wrbtcToken",
        "offset": 0,
        "slot": "45",
        "type": "t_contract(IWrbtcERC20)35073"
      },
      {
        "astId": 6352,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "protocolTokenAddress",
        "offset": 0,
        "slot": "46",
        "type": "t_address"
      },
      {
        "astId": 6359,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "feeRebatePercent",
        "offset": 0,
        "slot": "47",
        "type": "t_uint256"
      },
      {
        "astId": 6361,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "admin",
        "offset": 0,
        "slot": "48",
        "type": "t_address"
      },
      {
        "astId": 6363,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "protocolAddress",
        "offset": 0,
        "slot": "49",
        "type": "t_address"
      },
      {
        "astId": 6367,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "userNotFirstTradeFlag",
        "offset": 0,
        "slot": "50",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 6371,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "affiliatesUserReferrer",
        "offset": 0,
        "slot": "51",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 6375,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "referralsList",
        "offset": 0,
        "slot": "52",
        "type": "t_mapping(t_address,t_struct(AddressSet)35966_storage)"
      },
      {
        "astId": 6378,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "minReferralsToPayout",
        "offset": 0,
        "slot": "53",
        "type": "t_uint256"
      },
      {
        "astId": 6382,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "affiliateRewardsHeld",
        "offset": 0,
        "slot": "54",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 6384,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "sovTokenAddress",
        "offset": 0,
        "slot": "55",
        "type": "t_address"
      },
      {
        "astId": 6386,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "lockedSOVAddress",
        "offset": 0,
        "slot": "56",
        "type": "t_address"
      },
      {
        "astId": 6393,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "affiliateTradingTokenFeePercent",
        "offset": 0,
        "slot": "57",
        "type": "t_uint256"
      },
      {
        "astId": 6397,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "affiliatesReferrerTokensList",
        "offset": 0,
        "slot": "58",
        "type": "t_mapping(t_address,t_struct(AddressSet)35966_storage)"
      },
      {
        "astId": 6403,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "affiliatesReferrerBalances",
        "offset": 0,
        "slot": "59",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 6409,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "specialRebates",
        "offset": 0,
        "slot": "60",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 6411,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "pause",
        "offset": 0,
        "slot": "61",
        "type": "t_bool"
      },
      {
        "astId": 6413,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "swapExtrernalFeePercent",
        "offset": 0,
        "slot": "62",
        "type": "t_uint256"
      },
      {
        "astId": 6415,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "tradingRebateRewardsBasisPoint",
        "offset": 0,
        "slot": "63",
        "type": "t_uint256"
      },
      {
        "astId": 6422,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "defaultPathConversion",
        "offset": 0,
        "slot": "64",
        "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_contract(IERC20)33292)dyn_storage))"
      },
      {
        "astId": 6424,
        "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
        "label": "pauser",
        "offset": 0,
        "slot": "65",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_array(t_contract(IERC20)33292)dyn_storage": {
        "base": "t_contract(IERC20)33292",
        "encoding": "dynamic_array",
        "label": "contract IERC20[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes4": {
        "encoding": "inplace",
        "label": "bytes4",
        "numberOfBytes": "4"
      },
      "t_contract(IERC20)33292": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IWrbtcERC20)35073": {
        "encoding": "inplace",
        "label": "contract IWrbtcERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_array(t_contract(IERC20)33292)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => contract IERC20[])",
        "numberOfBytes": "32",
        "value": "t_array(t_contract(IERC20)33292)dyn_storage"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_array(t_contract(IERC20)33292)dyn_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => contract IERC20[]))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_array(t_contract(IERC20)33292)dyn_storage)"
      },
      "t_mapping(t_address,t_mapping(t_address,t_struct(LenderInterest)6508_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => struct LenderInterestStruct.LenderInterest))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_struct(LenderInterest)6508_storage)"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_mapping(t_bytes32,t_struct(Order)6582_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes32 => struct OrderStruct.Order))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_struct(Order)6582_storage)"
      },
      "t_mapping(t_address,t_struct(AddressSet)35966_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct EnumerableAddressSet.AddressSet)",
        "numberOfBytes": "32",
        "value": "t_struct(AddressSet)35966_storage"
      },
      "t_mapping(t_address,t_struct(Bytes32Set)36272_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct EnumerableBytes32Set.Bytes32Set)",
        "numberOfBytes": "32",
        "value": "t_struct(Bytes32Set)36272_storage"
      },
      "t_mapping(t_address,t_struct(LenderInterest)6508_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct LenderInterestStruct.LenderInterest)",
        "numberOfBytes": "32",
        "value": "t_struct(LenderInterest)6508_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_bytes32,t_struct(Loan)6566_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct LoanStruct.Loan)",
        "numberOfBytes": "32",
        "value": "t_struct(Loan)6566_storage"
      },
      "t_mapping(t_bytes32,t_struct(LoanInterest)6518_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct LoanInterestStruct.LoanInterest)",
        "numberOfBytes": "32",
        "value": "t_struct(LoanInterest)6518_storage"
      },
      "t_mapping(t_bytes32,t_struct(LoanParams)6538_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct LoanParamsStruct.LoanParams)",
        "numberOfBytes": "32",
        "value": "t_struct(LoanParams)6538_storage"
      },
      "t_mapping(t_bytes32,t_struct(Order)6582_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct OrderStruct.Order)",
        "numberOfBytes": "32",
        "value": "t_struct(Order)6582_storage"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes4,t_address)": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_struct(AddressSet)35966_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableAddressSet.AddressSet",
        "members": [
          {
            "astId": 35962,
            "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
            "label": "index",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 35965,
            "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
            "label": "values",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Bytes32Set)36272_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableBytes32Set.Bytes32Set",
        "members": [
          {
            "astId": 36268,
            "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
            "label": "index",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_uint256)"
          },
          {
            "astId": 36271,
            "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
            "label": "values",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_bytes32)dyn_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(LenderInterest)6508_storage": {
        "encoding": "inplace",
        "label": "struct LenderInterestStruct.LenderInterest",
        "members": [
          {
            "astId": 6499,
            "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
            "label": "principalTotal",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 6501,
            "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
            "label": "owedPerDay",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 6503,
            "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
            "label": "owedTotal",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 6505,
            "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
            "label": "paidTotal",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 6507,
            "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
            "label": "updatedTimestamp",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(Loan)6566_storage": {
        "encoding": "inplace",
        "label": "struct LoanStruct.Loan",
        "members": [
          {
            "astId": 6543,
            "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 6545,
            "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
            "label": "loanParamsId",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          },
          {
            "astId": 6547,
            "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
            "label": "pendingTradesId",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes32"
          },
          {
            "astId": 6549,
            "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
            "label": "active",
            "offset": 0,
            "slot": "3",
            "type": "t_bool"
          },
          {
            "astId": 6551,
            "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
            "label": "principal",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 6553,
            "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
            "label": "collateral",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 6555,
            "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
            "label": "startTimestamp",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 6557,
            "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
            "label": "endTimestamp",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 6559,
            "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
            "label": "startMargin",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 6561,
            "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
            "label": "startRate",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 6563,
            "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
            "label": "borrower",
            "offset": 0,
            "slot": "10",
            "type": "t_address"
          },
          {
            "astId": 6565,
            "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
            "label": "lender",
            "offset": 0,
            "slot": "11",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "384"
      },
      "t_struct(LoanInterest)6518_storage": {
        "encoding": "inplace",
        "label": "struct LoanInterestStruct.LoanInterest",
        "members": [
          {
            "astId": 6513,
            "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
            "label": "owedPerDay",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 6515,
            "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
            "label": "depositTotal",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 6517,
            "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
            "label": "updatedTimestamp",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(LoanParams)6538_storage": {
        "encoding": "inplace",
        "label": "struct LoanParamsStruct.LoanParams",
        "members": [
          {
            "astId": 6523,
            "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 6525,
            "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
            "label": "active",
            "offset": 0,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 6527,
            "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
            "label": "owner",
            "offset": 1,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 6529,
            "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
            "label": "loanToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 6531,
            "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
            "label": "collateralToken",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 6533,
            "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
            "label": "minInitialMargin",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 6535,
            "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
            "label": "maintenanceMargin",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 6537,
            "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
            "label": "maxLoanTerm",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(Order)6582_storage": {
        "encoding": "inplace",
        "label": "struct OrderStruct.Order",
        "members": [
          {
            "astId": 6571,
            "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
            "label": "lockedAmount",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 6573,
            "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
            "label": "interestRate",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 6575,
            "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
            "label": "minLoanTerm",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 6577,
            "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
            "label": "maxLoanTerm",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 6579,
            "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
            "label": "createdTimestamp",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 6581,
            "contract": "contracts/modules/ProtocolSettings.sol:ProtocolSettings",
            "label": "expirationTimestamp",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}