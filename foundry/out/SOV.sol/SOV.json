{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_initialAmount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "approveAndCall",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040516200128738038062001287833981810160405260208110156200003757600080fd5b5051604080518082018252600c81526b29b7bb393cb7102a37b5b2b760a11b6020828101918252835180850190945260038085526229a7ab60e91b9185019190915282519293926012926200008d9291620002a8565b508151620000a3906004906020850190620002a8565b506005805460ff191660ff929092169190911790555060009050620000c762000140565b60058054610100600160a81b0319166101006001600160a01b03841690810291909117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350801562000139576200013933826001600160e01b036200014516565b506200034a565b335b90565b6001600160a01b038216620001a1576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b620001bd816002546200024660201b62000bd41790919060201c565b6002556001600160a01b03821660009081526020818152604090912054620001f091839062000bd462000246821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600082820183811015620002a1576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002eb57805160ff19168380011785556200031b565b828001600101855582156200031b579182015b828111156200031b578251825591602001919060010190620002fe565b50620003299291506200032d565b5090565b6200014291905b8082111562000329576000815560010162000334565b610f2d806200035a6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80638da5cb5b11610097578063a9059cbb11610066578063a9059cbb14610310578063cae9ca511461033c578063dd62ed3e146103f7578063f2fde38b1461042557610100565b80638da5cb5b146102b05780638f32d59b146102d457806395d89b41146102dc578063a457c2d7146102e457610100565b8063313ce567116100d3578063313ce56714610212578063395093511461023057806340c10f191461025c57806370a082311461028a57610100565b806306fdde0314610105578063095ea7b31461018257806318160ddd146101c257806323b872dd146101dc575b600080fd5b61010d61044b565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014757818101518382015260200161012f565b50505050905090810190601f1680156101745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ae6004803603604081101561019857600080fd5b506001600160a01b0381351690602001356104e1565b604080519115158252519081900360200190f35b6101ca6104fe565b60408051918252519081900360200190f35b6101ae600480360360608110156101f257600080fd5b506001600160a01b03813581169160208101359091169060400135610504565b61021a610591565b6040805160ff9092168252519081900360200190f35b6101ae6004803603604081101561024657600080fd5b506001600160a01b03813516906020013561059a565b6102886004803603604081101561027257600080fd5b506001600160a01b0381351690602001356105ee565b005b6101ca600480360360208110156102a057600080fd5b50356001600160a01b0316610644565b6102b861065f565b604080516001600160a01b039092168252519081900360200190f35b6101ae610673565b61010d61069e565b6101ae600480360360408110156102fa57600080fd5b506001600160a01b0381351690602001356106ff565b6101ae6004803603604081101561032657600080fd5b506001600160a01b03813516906020013561076d565b6102886004803603606081101561035257600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561038257600080fd5b82018360208201111561039457600080fd5b803590602001918460018302840111640100000000831117156103b657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610781945050505050565b6101ca6004803603604081101561040d57600080fd5b506001600160a01b0381358116916020013516610872565b6102886004803603602081101561043b57600080fd5b50356001600160a01b031661089d565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104d75780601f106104ac576101008083540402835291602001916104d7565b820191906000526020600020905b8154815290600101906020018083116104ba57829003601f168201915b5050505050905090565b60006104f56104ee6108f1565b84846108f5565b50600192915050565b60025490565b60006105118484846109e1565b6105878461051d6108f1565b61058285604051806060016040528060288152602001610e63602891396001600160a01b038a1660009081526001602052604081209061055b6108f1565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610b3d16565b6108f5565b5060019392505050565b60055460ff1690565b60006104f56105a76108f1565b8461058285600160006105b86108f1565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610bd416565b6105f6610673565b610636576040805162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b604482015290519081900360640190fd5b6106408282610c35565b5050565b6001600160a01b031660009081526020819052604090205490565b60055461010090046001600160a01b031690565b60055460009061010090046001600160a01b031661068f6108f1565b6001600160a01b031614905090565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104d75780601f106104ac576101008083540402835291602001916104d7565b60006104f561070c6108f1565b8461058285604051806060016040528060258152602001610ed460259139600160006107366108f1565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610b3d16565b60006104f561077a6108f1565b84846109e1565b61078b83836104e1565b50604051638f4ffcb160e01b815233600482018181526024830185905230604484018190526080606485019081528551608486015285516001600160a01b03891695638f4ffcb1959489949389939192909160a490910190602085019080838360005b838110156108065781810151838201526020016107ee565b50505050905090810190601f1680156108335780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b15801561085557600080fd5b505af1158015610869573d6000803e3d6000fd5b50505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6108a5610673565b6108e5576040805162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b604482015290519081900360640190fd5b6108ee81610d25565b50565b3390565b6001600160a01b03831661093a5760405162461bcd60e51b8152600401808060200182810382526024815260200180610eb06024913960400191505060405180910390fd5b6001600160a01b03821661097f5760405162461bcd60e51b8152600401808060200182810382526022815260200180610e1b6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610a265760405162461bcd60e51b8152600401808060200182810382526025815260200180610e8b6025913960400191505060405180910390fd5b6001600160a01b038216610a6b5760405162461bcd60e51b8152600401808060200182810382526023815260200180610dd26023913960400191505060405180910390fd5b610aae81604051806060016040528060268152602001610e3d602691396001600160a01b038616600090815260208190526040902054919063ffffffff610b3d16565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610ae3908263ffffffff610bd416565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610bcc5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b91578181015183820152602001610b79565b50505050905090810190601f168015610bbe5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610c2e576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610c90576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600254610ca3908263ffffffff610bd416565b6002556001600160a01b038216600090815260208190526040902054610ccf908263ffffffff610bd416565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038116610d6a5760405162461bcd60e51b8152600401808060200182810382526026815260200180610df56026913960400191505060405180910390fd5b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0390921661010002610100600160a81b031990921691909117905556fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a72315820479e5ba3f67da4f01d8ba7a2d0d069f922f77deb8b02756504ce3fe95c2f02ac64736f6c63430005110032",
    "sourceMap": "530:1794:224:-;;;951:180;8:9:-1;5:2;;;30:1;27;20:12;5:2;951:180:224;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;951:180:224;1008:4;;;;;;;;;;;-1:-1:-1;;;951:180:224;1008:4;;;;;;1014:6;;;;;;;;;;;;-1:-1:-1;;;1014:6:224;;;;;;;535:12:181;;1008:4:224;;1014:6;687:2;;535:12:181;;1014:6:224;535:12:181;:::i;:::-;-1:-1:-1;557:16:181;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;583:9:181;:20;;-1:-1:-1;;583:20:181;;;;;;;;;;;;-1:-1:-1;;;;721:12:184;:10;:12::i;:::-;743:6;:18;;-1:-1:-1;;;;;;743:18:184;;-1:-1:-1;;;;;743:18:184;;;;;;;;;;;;776:43;;743:18;;-1:-1:-1;743:18:184;-1:-1:-1;;776:43:184;;-1:-1:-1;;776:43:184;-1:-1:-1;1046:19:224;;1042:83;;1081:33;1087:10;1099:14;-1:-1:-1;;;;;1081:5:224;:33;:::i;:::-;951:180;530:1794;;795:96:179;874:10;795:96;;:::o;6222:302:180:-;-1:-1:-1;;;;;6297:21:180;;6289:65;;;;;-1:-1:-1;;;6289:65:180;;;;;;;;;;;;;;;;;;;;;;;;;;;;6380:24;6397:6;6380:12;;:16;;;;;;:24;;;;:::i;:::-;6365:12;:39;-1:-1:-1;;;;;6435:18:180;;:9;:18;;;;;;;;;;;;:30;;6458:6;;6435:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;6414:18:180;;:9;:18;;;;;;;;;;;:51;;;;6480:37;;;;;;;6414:18;;:9;;6480:37;;;;;;;;;;6222:302;;:::o;842:176:188:-;900:7;931:5;;;954:6;;;;946:46;;;;;-1:-1:-1;;;946:46:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;1010:1;842:176;-1:-1:-1;;;842:176:188:o;530:1794:224:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;530:1794:224;;;-1:-1:-1;530:1794:224;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c80638da5cb5b11610097578063a9059cbb11610066578063a9059cbb14610310578063cae9ca511461033c578063dd62ed3e146103f7578063f2fde38b1461042557610100565b80638da5cb5b146102b05780638f32d59b146102d457806395d89b41146102dc578063a457c2d7146102e457610100565b8063313ce567116100d3578063313ce56714610212578063395093511461023057806340c10f191461025c57806370a082311461028a57610100565b806306fdde0314610105578063095ea7b31461018257806318160ddd146101c257806323b872dd146101dc575b600080fd5b61010d61044b565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014757818101518382015260200161012f565b50505050905090810190601f1680156101745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ae6004803603604081101561019857600080fd5b506001600160a01b0381351690602001356104e1565b604080519115158252519081900360200190f35b6101ca6104fe565b60408051918252519081900360200190f35b6101ae600480360360608110156101f257600080fd5b506001600160a01b03813581169160208101359091169060400135610504565b61021a610591565b6040805160ff9092168252519081900360200190f35b6101ae6004803603604081101561024657600080fd5b506001600160a01b03813516906020013561059a565b6102886004803603604081101561027257600080fd5b506001600160a01b0381351690602001356105ee565b005b6101ca600480360360208110156102a057600080fd5b50356001600160a01b0316610644565b6102b861065f565b604080516001600160a01b039092168252519081900360200190f35b6101ae610673565b61010d61069e565b6101ae600480360360408110156102fa57600080fd5b506001600160a01b0381351690602001356106ff565b6101ae6004803603604081101561032657600080fd5b506001600160a01b03813516906020013561076d565b6102886004803603606081101561035257600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561038257600080fd5b82018360208201111561039457600080fd5b803590602001918460018302840111640100000000831117156103b657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610781945050505050565b6101ca6004803603604081101561040d57600080fd5b506001600160a01b0381358116916020013516610872565b6102886004803603602081101561043b57600080fd5b50356001600160a01b031661089d565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104d75780601f106104ac576101008083540402835291602001916104d7565b820191906000526020600020905b8154815290600101906020018083116104ba57829003601f168201915b5050505050905090565b60006104f56104ee6108f1565b84846108f5565b50600192915050565b60025490565b60006105118484846109e1565b6105878461051d6108f1565b61058285604051806060016040528060288152602001610e63602891396001600160a01b038a1660009081526001602052604081209061055b6108f1565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610b3d16565b6108f5565b5060019392505050565b60055460ff1690565b60006104f56105a76108f1565b8461058285600160006105b86108f1565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610bd416565b6105f6610673565b610636576040805162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b604482015290519081900360640190fd5b6106408282610c35565b5050565b6001600160a01b031660009081526020819052604090205490565b60055461010090046001600160a01b031690565b60055460009061010090046001600160a01b031661068f6108f1565b6001600160a01b031614905090565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104d75780601f106104ac576101008083540402835291602001916104d7565b60006104f561070c6108f1565b8461058285604051806060016040528060258152602001610ed460259139600160006107366108f1565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610b3d16565b60006104f561077a6108f1565b84846109e1565b61078b83836104e1565b50604051638f4ffcb160e01b815233600482018181526024830185905230604484018190526080606485019081528551608486015285516001600160a01b03891695638f4ffcb1959489949389939192909160a490910190602085019080838360005b838110156108065781810151838201526020016107ee565b50505050905090810190601f1680156108335780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b15801561085557600080fd5b505af1158015610869573d6000803e3d6000fd5b50505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6108a5610673565b6108e5576040805162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b604482015290519081900360640190fd5b6108ee81610d25565b50565b3390565b6001600160a01b03831661093a5760405162461bcd60e51b8152600401808060200182810382526024815260200180610eb06024913960400191505060405180910390fd5b6001600160a01b03821661097f5760405162461bcd60e51b8152600401808060200182810382526022815260200180610e1b6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610a265760405162461bcd60e51b8152600401808060200182810382526025815260200180610e8b6025913960400191505060405180910390fd5b6001600160a01b038216610a6b5760405162461bcd60e51b8152600401808060200182810382526023815260200180610dd26023913960400191505060405180910390fd5b610aae81604051806060016040528060268152602001610e3d602691396001600160a01b038616600090815260208190526040902054919063ffffffff610b3d16565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610ae3908263ffffffff610bd416565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610bcc5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b91578181015183820152602001610b79565b50505050905090810190601f168015610bbe5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610c2e576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610c90576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600254610ca3908263ffffffff610bd416565b6002556001600160a01b038216600090815260208190526040902054610ccf908263ffffffff610bd416565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038116610d6a5760405162461bcd60e51b8152600401808060200182810382526026815260200180610df56026913960400191505060405180910390fd5b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0390921661010002610100600160a81b031990921691909117905556fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a72315820479e5ba3f67da4f01d8ba7a2d0d069f922f77deb8b02756504ce3fe95c2f02ac64736f6c63430005110032",
    "sourceMap": "530:1794:224:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;530:1794:224;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;675:81:181;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;675:81:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2482:149:180;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2482:149:180;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1541:89;;;:::i;:::-;;;;;;;;;;;;;;;;3089:422;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3089:422:180;;;;;;;;;;;;;;;;;:::i;1503:81:181:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3906:207:180;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3906:207:180;;;;;;;;:::i;1438:107:224:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1438:107:224;;;;;;;;:::i;:::-;;1688:108:180;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1688:108:180;-1:-1:-1;;;;;1688:108:180;;:::i;902:77:184:-;;;:::i;:::-;;;;-1:-1:-1;;;;;902:77:184;;;;;;;;;;;;;;1233:92;;;:::i;869:85:181:-;;;:::i;4600:350:180:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4600:350:180;;;;;;;;:::i;1999:155::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1999:155:180;;;;;;;;:::i;2069:253:224:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;2069:253:224;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2069:253:224;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2069:253:224;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2069:253:224;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2069:253:224;;-1:-1:-1;2069:253:224;;-1:-1:-1;;;;;2069:253:224:i;2212:132:180:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2212:132:180;;;;;;;;;;:::i;1474:107:184:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1474:107:184;-1:-1:-1;;;;;1474:107:184;;:::i;675:81:181:-;744:5;737:12;;;;;;;;-1:-1:-1;;737:12:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;712:13;;737:12;;744:5;;737:12;;744:5;737:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;675:81;:::o;2482:149:180:-;2548:4;2564:39;2573:12;:10;:12::i;:::-;2587:7;2596:6;2564:8;:39::i;:::-;-1:-1:-1;2620:4:180;2482:149;;;;:::o;1541:89::-;1611:12;;1541:89;:::o;3089:422::-;3208:4;3224:36;3234:6;3242:9;3253:6;3224:9;:36::i;:::-;3270:213;3292:6;3312:12;:10;:12::i;:::-;3338:135;3393:6;3338:135;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3338:19:180;;;;;;:11;:19;;;;;;3358:12;:10;:12::i;:::-;-1:-1:-1;;;;;3338:33:180;;;;;;;;;;;;-1:-1:-1;3338:33:180;;;:135;;:37;:135;:::i;:::-;3270:8;:213::i;:::-;-1:-1:-1;3500:4:180;3089:422;;;;;:::o;1503:81:181:-;1568:9;;;;1503:81;:::o;3906:207:180:-;3986:4;4002:83;4011:12;:10;:12::i;:::-;4025:7;4034:50;4073:10;4034:11;:25;4046:12;:10;:12::i;:::-;-1:-1:-1;;;;;4034:25:180;;;;;;;;;;;;;;;;;-1:-1:-1;4034:25:180;;;:34;;;;;;;;;;;:50;:38;:50;:::i;1438:107:224:-;1106:9:184;:7;:9::i;:::-;1098:34;;;;;-1:-1:-1;;;1098:34:184;;;;;;;;;;;;-1:-1:-1;;;1098:34:184;;;;;;;;;;;;;;;1514:24:224;1520:8;1530:7;1514:5;:24::i;:::-;1438:107;;:::o;1688:108:180:-;-1:-1:-1;;;;;1771:18:180;1745:7;1771:18;;;;;;;;;;;;1688:108::o;902:77:184:-;966:6;;;;;-1:-1:-1;;;;;966:6:184;;902:77::o;1233:92::-;1312:6;;1273:4;;1312:6;;;-1:-1:-1;;;;;1312:6:184;1296:12;:10;:12::i;:::-;-1:-1:-1;;;;;1296:22:184;;1289:29;;1233:92;:::o;869:85:181:-;940:7;933:14;;;;;;;;-1:-1:-1;;933:14:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;908:13;;933:14;;940:7;;933:14;;940:7;933:14;;;;;;;;;;;;;;;;;;;;;;;;4600:350:180;4685:4;4701:221;4723:12;:10;:12::i;:::-;4749:7;4770:142;4826:15;4770:142;;;;;;;;;;;;;;;;;:11;:25;4782:12;:10;:12::i;:::-;-1:-1:-1;;;;;4770:25:180;;;;;;;;;;;;;;;;;-1:-1:-1;4770:25:180;;;:34;;;;;;;;;;;:142;;:38;:142;:::i;1999:155::-;2068:4;2084:42;2094:12;:10;:12::i;:::-;2108:9;2119:6;2084:9;:42::i;2069:253:224:-;2195:26;2203:8;2213:7;2195;:26::i;:::-;-1:-1:-1;2231:84:224;;-1:-1:-1;;;2231:84:224;;2273:10;2231:84;;;;;;;;;;;;2302:4;2231:84;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2231:41:224;;;;;2273:10;2285:7;;2302:4;2309:5;;2231:84;;;;;;;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2231:84:224;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2231:84:224;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2231:84:224;;;;2069:253;;;:::o;2212:132:180:-;-1:-1:-1;;;;;2310:18:180;;;2284:7;2310:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2212:132::o;1474:107:184:-;1106:9;:7;:9::i;:::-;1098:34;;;;;-1:-1:-1;;;1098:34:184;;;;;;;;;;;;-1:-1:-1;;;1098:34:184;;;;;;;;;;;;;;;1546:28;1565:8;1546:18;:28::i;:::-;1474:107;:::o;795:96:179:-;874:10;795:96;:::o;7610:362:180:-;-1:-1:-1;;;;;7733:19:180;;7725:68;;;;-1:-1:-1;;;7725:68:180;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7811:21:180;;7803:68;;;;-1:-1:-1;;;7803:68:180;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7882:18:180;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;7933:32;;;;;;;;;;;;;;;;;7610:362;;;:::o;5424:528::-;-1:-1:-1;;;;;5551:20:180;;5543:70;;;;-1:-1:-1;;;5543:70:180;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5631:23:180;;5623:71;;;;-1:-1:-1;;;5623:71:180;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5725:105;5760:6;5725:105;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5725:17:180;;:9;:17;;;;;;;;;;;;:105;;:21;:105;:::i;:::-;-1:-1:-1;;;;;5705:17:180;;;:9;:17;;;;;;;;;;;:125;;;;5863:20;;;;;;;:32;;5888:6;5863:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;5840:20:180;;;:9;:20;;;;;;;;;;;;:55;;;;5910:35;;;;;;;5840:20;;5910:35;;;;;;;;;;;;;5424:528;;;:::o;1740:217:188:-;1856:7;1891:12;1883:6;;;;1875:29;;;;-1:-1:-1;;;1875:29:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1875:29:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1926:5:188;;;1740:217::o;842:176::-;900:7;931:5;;;954:6;;;;946:46;;;;;-1:-1:-1;;;946:46:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;1010:1;842:176;-1:-1:-1;;;842:176:188:o;6222:302:180:-;-1:-1:-1;;;;;6297:21:180;;6289:65;;;;;-1:-1:-1;;;6289:65:180;;;;;;;;;;;;;;;;;;;;;;;;;;;;6380:12;;:24;;6397:6;6380:24;:16;:24;:::i;:::-;6365:12;:39;-1:-1:-1;;;;;6435:18:180;;:9;:18;;;;;;;;;;;:30;;6458:6;6435:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;6414:18:180;;:9;:18;;;;;;;;;;;:51;;;;6480:37;;;;;;;6414:18;;:9;;6480:37;;;;;;;;;;6222:302;;:::o;1682:225:184:-;-1:-1:-1;;;;;1755:22:184;;1747:73;;;;-1:-1:-1;;;1747:73:184;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1856:6;;1835:38;;-1:-1:-1;;;;;1835:38:184;;;;1856:6;;;;;1835:38;;;;;1883:6;:17;;-1:-1:-1;;;;;1883:17:184;;;;;-1:-1:-1;;;;;;1883:17:184;;;;;;;;;1682:225::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "approveAndCall(address,uint256,bytes)": "cae9ca51",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "increaseAllowance(address,uint256)": "39509351",
    "isOwner()": "8f32d59b",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initialAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract represents a token with dynamic supply.  The owner of the token contract can mint/burn tokens to/from any account  based upon previous governance voting and approval.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"approveAndCall(address,uint256,bytes)\":{\"params\":{\"_amount\":\"The amount of tokens to be sent.\",\"_data\":\"Parameters for the contract call, such as endpoint signature.\",\"_spender\":\"The contract address to spend the tokens.\"}},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"On deployment, some amount of tokens will be minted for the owner.\",\"params\":{\"_initialAmount\":\"The amount of tokens to be minted on contract creation.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"mint(address,uint256)\":{\"details\":\"Don't create more than 2^96/10 tokens before updating the governance first.\",\"params\":{\"_account\":\"The recipient address to get the minted tokens.\",\"_amount\":\"The amount of tokens to be minted.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Sovryn Token: SOV is an ERC-20 token contract for Sovryn governance.\"},\"userdoc\":{\"methods\":{\"approveAndCall(address,uint256,bytes)\":{\"notice\":\"Approves and then calls the receiving contract. Useful to encapsulate sending tokens to a contract in one call. Solidity has no native way to send tokens to contracts. ERC-20 tokens require approval to be spent by third parties, such as a contract in this case.\"},\"constructor\":\"Constructor called on deployment, initiates the contract.\",\"mint(address,uint256)\":{\"notice\":\"Creates new tokens and sends them to the recipient.\"}},\"notice\":\"This contract accounts for all holders' balances.\"}},\"settings\":{\"compilationTarget\":{\"contracts/token/SOV.sol\":\"SOV\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@ethereum-waffle/=node_modules/@ethereum-waffle/\",\":ds-test/=foundry/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=foundry/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":truffle/=node_modules/truffle/\"]},\"sources\":{\"contracts/openzeppelin/Context.sol\":{\"keccak256\":\"0x7860cb1591dbd66bb497c60c46866d9fcdb56c73306ed86b25801000af1c7b2b\",\"urls\":[\"bzz-raw://79e480eab5cb03c034f7fb2c177f23874fddebbb3514d773729bb094a0fda826\",\"dweb:/ipfs/QmTfDHE4fnQE3gfycu7NePREWfWFgJgmaEmHDn4uyTnMBP\"]},\"contracts/openzeppelin/ERC20.sol\":{\"keccak256\":\"0x810c04a1a750deb534208b90bde6ada794d7659f2a0ab0a747efbcd04b1ce29b\",\"urls\":[\"bzz-raw://d6f374661570a3258995da1559ba58df7889d2b08107a235ece6cf24adcd2979\",\"dweb:/ipfs/QmUYhfCoTNZPPgnGzMU36qJ6EJpMicpQvoVrYdbob5T6G7\"]},\"contracts/openzeppelin/ERC20Detailed.sol\":{\"keccak256\":\"0xf2d8f217e4f55eda2619a1550d6ec0eca2fdac32b62b589e4624450aefbf8749\",\"urls\":[\"bzz-raw://777517383fe55db071451d1f50e92348f3301549f993d5ae7e5f0dbb4168cb36\",\"dweb:/ipfs/QmZKAzxnK9q6rkHrqiovoFsGgMzjMc22PCULz6JNefaxaz\"]},\"contracts/openzeppelin/IERC20_.sol\":{\"keccak256\":\"0x913b27f370c93061abf98b13a872e12bba2fa2707bc5cd4e1e7728944209a88d\",\"urls\":[\"bzz-raw://dfb90a7a2d935e2c4ae70cc458f77e07ceaa6fc8ae6734e621ebf9c039cd962c\",\"dweb:/ipfs/QmTxp7s3uYcQkzfribiyFp6mdgeUY4T3UeWX1YZVK1kint\"]},\"contracts/openzeppelin/Ownable.sol\":{\"keccak256\":\"0x94496c375b3e82d87d7f01ce1577f008fab374312cf93012a0eca716e6aadb3a\",\"urls\":[\"bzz-raw://ea268f87bc9d256b99aae4d98f23931f485295b5720f505e0554223c9b54431a\",\"dweb:/ipfs/QmWCLqTijearegiDuWyhrkRQXXACT1sVUG6cF3L9pszb6Y\"]},\"contracts/openzeppelin/SafeMath.sol\":{\"keccak256\":\"0xbff8d6273e1a6870d1a142c0c23acd63a4dd47760f250390f49ee56333bcb6e8\",\"urls\":[\"bzz-raw://379880c293771d9db34b4db282bd22f0536d41f1db2a7fb887124984a5bcd719\",\"dweb:/ipfs/QmUrUzEJPp9WxyvFFZSaqv7qjnSwrkApNUkMny5cCcY2a6\"]},\"contracts/token/IApproveAndCall.sol\":{\"keccak256\":\"0x0ca93f8436a4d81d80de5ea9214139b490d96f708f09c975a0869ce9abc61635\",\"urls\":[\"bzz-raw://75cbb5a7f183ddae4f4cbe8afac44e56be521f491e740761fca9d55698a14e68\",\"dweb:/ipfs/QmS8Z6LNQZAgAdRL1tF1emQgsD2DWk9h3EvXXkrayE8jFJ\"]},\"contracts/token/SOV.sol\":{\"keccak256\":\"0x5e5fab03fbe2ab7342c62e33c9403bac0ea3325b0d5e666677fe618ad38d256e\",\"urls\":[\"bzz-raw://0d3de1e2411db78547ea2b63c50637ddb976929a16aee46624f6ec4a0078254c\",\"dweb:/ipfs/QmanZJdhmD4HCH1uLCNC95drLSrrXuXsfnNR3wwD8wBDc4\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.5.17+commit.d19bba13"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_initialAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approveAndCall"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isOwner",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
          },
          "approveAndCall(address,uint256,bytes)": {
            "params": {
              "_amount": "The amount of tokens to be sent.",
              "_data": "Parameters for the contract call, such as endpoint signature.",
              "_spender": "The contract address to spend the tokens."
            }
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "constructor": {
            "details": "On deployment, some amount of tokens will be minted for the owner.",
            "params": {
              "_initialAmount": "The amount of tokens to be minted on contract creation."
            }
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
          },
          "isOwner()": {
            "details": "Returns true if the caller is the current owner."
          },
          "mint(address,uint256)": {
            "details": "Don't create more than 2^96/10 tokens before updating the governance first.",
            "params": {
              "_account": "The recipient address to get the minted tokens.",
              "_amount": "The amount of tokens to be minted."
            }
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        }
      },
      "userdoc": {
        "methods": {
          "approveAndCall(address,uint256,bytes)": {
            "notice": "Approves and then calls the receiving contract. Useful to encapsulate sending tokens to a contract in one call. Solidity has no native way to send tokens to contracts. ERC-20 tokens require approval to be spent by third parties, such as a contract in this case."
          },
          "constructor": "Constructor called on deployment, initiates the contract.",
          "mint(address,uint256)": {
            "notice": "Creates new tokens and sends them to the recipient."
          }
        }
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@ethereum-waffle/=node_modules/@ethereum-waffle/",
        ":ds-test/=foundry/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=foundry/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":truffle/=node_modules/truffle/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "compilationTarget": {
        "contracts/token/SOV.sol": "SOV"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/openzeppelin/Context.sol": {
        "keccak256": "0x7860cb1591dbd66bb497c60c46866d9fcdb56c73306ed86b25801000af1c7b2b",
        "urls": [
          "bzz-raw://79e480eab5cb03c034f7fb2c177f23874fddebbb3514d773729bb094a0fda826",
          "dweb:/ipfs/QmTfDHE4fnQE3gfycu7NePREWfWFgJgmaEmHDn4uyTnMBP"
        ],
        "license": null
      },
      "contracts/openzeppelin/ERC20.sol": {
        "keccak256": "0x810c04a1a750deb534208b90bde6ada794d7659f2a0ab0a747efbcd04b1ce29b",
        "urls": [
          "bzz-raw://d6f374661570a3258995da1559ba58df7889d2b08107a235ece6cf24adcd2979",
          "dweb:/ipfs/QmUYhfCoTNZPPgnGzMU36qJ6EJpMicpQvoVrYdbob5T6G7"
        ],
        "license": null
      },
      "contracts/openzeppelin/ERC20Detailed.sol": {
        "keccak256": "0xf2d8f217e4f55eda2619a1550d6ec0eca2fdac32b62b589e4624450aefbf8749",
        "urls": [
          "bzz-raw://777517383fe55db071451d1f50e92348f3301549f993d5ae7e5f0dbb4168cb36",
          "dweb:/ipfs/QmZKAzxnK9q6rkHrqiovoFsGgMzjMc22PCULz6JNefaxaz"
        ],
        "license": null
      },
      "contracts/openzeppelin/IERC20_.sol": {
        "keccak256": "0x913b27f370c93061abf98b13a872e12bba2fa2707bc5cd4e1e7728944209a88d",
        "urls": [
          "bzz-raw://dfb90a7a2d935e2c4ae70cc458f77e07ceaa6fc8ae6734e621ebf9c039cd962c",
          "dweb:/ipfs/QmTxp7s3uYcQkzfribiyFp6mdgeUY4T3UeWX1YZVK1kint"
        ],
        "license": null
      },
      "contracts/openzeppelin/Ownable.sol": {
        "keccak256": "0x94496c375b3e82d87d7f01ce1577f008fab374312cf93012a0eca716e6aadb3a",
        "urls": [
          "bzz-raw://ea268f87bc9d256b99aae4d98f23931f485295b5720f505e0554223c9b54431a",
          "dweb:/ipfs/QmWCLqTijearegiDuWyhrkRQXXACT1sVUG6cF3L9pszb6Y"
        ],
        "license": null
      },
      "contracts/openzeppelin/SafeMath.sol": {
        "keccak256": "0xbff8d6273e1a6870d1a142c0c23acd63a4dd47760f250390f49ee56333bcb6e8",
        "urls": [
          "bzz-raw://379880c293771d9db34b4db282bd22f0536d41f1db2a7fb887124984a5bcd719",
          "dweb:/ipfs/QmUrUzEJPp9WxyvFFZSaqv7qjnSwrkApNUkMny5cCcY2a6"
        ],
        "license": null
      },
      "contracts/token/IApproveAndCall.sol": {
        "keccak256": "0x0ca93f8436a4d81d80de5ea9214139b490d96f708f09c975a0869ce9abc61635",
        "urls": [
          "bzz-raw://75cbb5a7f183ddae4f4cbe8afac44e56be521f491e740761fca9d55698a14e68",
          "dweb:/ipfs/QmS8Z6LNQZAgAdRL1tF1emQgsD2DWk9h3EvXXkrayE8jFJ"
        ],
        "license": null
      },
      "contracts/token/SOV.sol": {
        "keccak256": "0x5e5fab03fbe2ab7342c62e33c9403bac0ea3325b0d5e666677fe618ad38d256e",
        "urls": [
          "bzz-raw://0d3de1e2411db78547ea2b63c50637ddb976929a16aee46624f6ec4a0078254c",
          "dweb:/ipfs/QmanZJdhmD4HCH1uLCNC95drLSrrXuXsfnNR3wwD8wBDc4"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/token/SOV.sol",
    "id": 62698,
    "exportedSymbols": {
      "SOV": [
        62697
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:2325:224",
    "nodes": [
      {
        "id": 62612,
        "nodeType": "PragmaDirective",
        "src": "0:24:224",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".17"
        ]
      },
      {
        "id": 62613,
        "nodeType": "ImportDirective",
        "src": "26:43:224",
        "nodes": [],
        "absolutePath": "contracts/openzeppelin/ERC20Detailed.sol",
        "file": "../openzeppelin/ERC20Detailed.sol",
        "scope": 62698,
        "sourceUnit": 54935,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62614,
        "nodeType": "ImportDirective",
        "src": "70:35:224",
        "nodes": [],
        "absolutePath": "contracts/openzeppelin/ERC20.sol",
        "file": "../openzeppelin/ERC20.sol",
        "scope": 62698,
        "sourceUnit": 54877,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62615,
        "nodeType": "ImportDirective",
        "src": "106:37:224",
        "nodes": [],
        "absolutePath": "contracts/openzeppelin/Ownable.sol",
        "file": "../openzeppelin/Ownable.sol",
        "scope": 62698,
        "sourceUnit": 55145,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62616,
        "nodeType": "ImportDirective",
        "src": "144:31:224",
        "nodes": [],
        "absolutePath": "contracts/token/IApproveAndCall.sol",
        "file": "./IApproveAndCall.sol",
        "scope": 62698,
        "sourceUnit": 62611,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62697,
        "nodeType": "ContractDefinition",
        "src": "530:1794:224",
        "nodes": [
          {
            "id": 62625,
            "nodeType": "VariableDeclaration",
            "src": "582:37:224",
            "nodes": [],
            "constant": true,
            "name": "NAME",
            "scope": 62697,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 62623,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "582:6:224",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "536f7672796e20546f6b656e",
              "id": 62624,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "605:14:224",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_52cdf355dd9d3b9b6160536d626add7510c5b4bdef2fc83caed013eb243ae069",
                "typeString": "literal_string \"Sovryn Token\""
              },
              "value": "Sovryn Token"
            },
            "visibility": "internal"
          },
          {
            "id": 62628,
            "nodeType": "VariableDeclaration",
            "src": "625:30:224",
            "nodes": [],
            "constant": true,
            "name": "SYMBOL",
            "scope": 62697,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 62626,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "625:6:224",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "534f56",
              "id": 62627,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "650:5:224",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_bbc1244edc176f44d89f31edc678f736e16b3486b97d9335aa1876622f24f1d7",
                "typeString": "literal_string \"SOV\""
              },
              "value": "SOV"
            },
            "visibility": "internal"
          },
          {
            "id": 62631,
            "nodeType": "VariableDeclaration",
            "src": "661:28:224",
            "nodes": [],
            "constant": true,
            "name": "DECIMALS",
            "scope": 62697,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 62629,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "661:5:224",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 62630,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "687:2:224",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "internal"
          },
          {
            "id": 62653,
            "nodeType": "FunctionDefinition",
            "src": "951:180:224",
            "nodes": [],
            "body": {
              "id": 62652,
              "nodeType": "Block",
              "src": "1032:99:224",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 62643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 62641,
                      "name": "_initialAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62633,
                      "src": "1046:14:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 62642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1064:1:224",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1046:19:224",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 62651,
                  "nodeType": "IfStatement",
                  "src": "1042:83:224",
                  "trueBody": {
                    "id": 62650,
                    "nodeType": "Block",
                    "src": "1067:58:224",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 62645,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 62892,
                                "src": "1087:3:224",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 62646,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1087:10:224",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 62647,
                              "name": "_initialAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 62633,
                              "src": "1099:14:224",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 62644,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54760,
                            "src": "1081:5:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 62648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1081:33:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 62649,
                        "nodeType": "ExpressionStatement",
                        "src": "1081:33:224"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice Constructor called on deployment, initiates the contract.\n@dev On deployment, some amount of tokens will be minted for the owner.\n@param _initialAmount The amount of tokens to be minted on contract creation.\n",
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 62636,
                    "name": "NAME",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 62625,
                    "src": "1008:4:224",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 62637,
                    "name": "SYMBOL",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 62628,
                    "src": "1014:6:224",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 62638,
                    "name": "DECIMALS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 62631,
                    "src": "1022:8:224",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 62639,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 62635,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 54934,
                  "src": "994:13:224",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$54934_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "994:37:224"
              }
            ],
            "name": "",
            "parameters": {
              "id": 62634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62633,
                  "name": "_initialAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 62653,
                  "src": "963:22:224",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62632,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "963:7:224",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "962:24:224"
            },
            "returnParameters": {
              "id": 62640,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1032:0:224"
            },
            "scope": 62697,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "id": 62668,
            "nodeType": "FunctionDefinition",
            "src": "1438:107:224",
            "nodes": [],
            "body": {
              "id": 62667,
              "nodeType": "Block",
              "src": "1504:41:224",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 62663,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62655,
                        "src": "1520:8:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 62664,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62657,
                        "src": "1530:7:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 62662,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54760,
                      "src": "1514:5:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 62665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1514:24:224",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62666,
                  "nodeType": "ExpressionStatement",
                  "src": "1514:24:224"
                }
              ]
            },
            "documentation": "@notice Creates new tokens and sends them to the recipient.\n@dev Don't create more than 2^96/10 tokens before updating the governance first.\n@param _account The recipient address to get the minted tokens.\n@param _amount The amount of tokens to be minted.\n",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 62660,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 62659,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 55096,
                  "src": "1494:9:224",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1494:9:224"
              }
            ],
            "name": "mint",
            "parameters": {
              "id": 62658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62655,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 62668,
                  "src": "1452:16:224",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62654,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1452:7:224",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62657,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 62668,
                  "src": "1470:15:224",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62656,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1470:7:224",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1451:35:224"
            },
            "returnParameters": {
              "id": 62661,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1504:0:224"
            },
            "scope": 62697,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "id": 62696,
            "nodeType": "FunctionDefinition",
            "src": "2069:253:224",
            "nodes": [],
            "body": {
              "id": 62695,
              "nodeType": "Block",
              "src": "2185:137:224",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 62678,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62670,
                        "src": "2203:8:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 62679,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62672,
                        "src": "2213:7:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 62677,
                      "name": "approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54569,
                      "src": "2195:7:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 62680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2195:26:224",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 62681,
                  "nodeType": "ExpressionStatement",
                  "src": "2195:26:224"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 62686,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62892,
                          "src": "2273:3:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 62687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2273:10:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 62688,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62672,
                        "src": "2285:7:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 62690,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63392,
                            "src": "2302:4:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SOV_$62697",
                              "typeString": "contract SOV"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SOV_$62697",
                              "typeString": "contract SOV"
                            }
                          ],
                          "id": 62689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2294:7:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 62691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2294:13:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 62692,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62674,
                        "src": "2309:5:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 62683,
                            "name": "_spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62670,
                            "src": "2247:8:224",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 62682,
                          "name": "IApproveAndCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62610,
                          "src": "2231:15:224",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IApproveAndCall_$62610_$",
                            "typeString": "type(contract IApproveAndCall)"
                          }
                        },
                        "id": 62684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2231:25:224",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IApproveAndCall_$62610",
                          "typeString": "contract IApproveAndCall"
                        }
                      },
                      "id": 62685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "receiveApproval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62609,
                      "src": "2231:41:224",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,address,bytes memory) external"
                      }
                    },
                    "id": 62693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2231:84:224",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 62694,
                  "nodeType": "ExpressionStatement",
                  "src": "2231:84:224"
                }
              ]
            },
            "documentation": "@notice Approves and then calls the receiving contract.\nUseful to encapsulate sending tokens to a contract in one call.\nSolidity has no native way to send tokens to contracts.\nERC-20 tokens require approval to be spent by third parties, such as a contract in this case.\n@param _spender The contract address to spend the tokens.\n@param _amount The amount of tokens to be sent.\n@param _data Parameters for the contract call, such as endpoint signature.\n",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveAndCall",
            "parameters": {
              "id": 62675,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62670,
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 62696,
                  "src": "2102:16:224",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62669,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2102:7:224",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62672,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 62696,
                  "src": "2128:15:224",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62671,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2128:7:224",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62674,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 62696,
                  "src": "2153:18:224",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 62673,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2153:5:224",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2092:85:224"
            },
            "returnParameters": {
              "id": 62676,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2185:0:224"
            },
            "scope": 62697,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 62617,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 54876,
              "src": "546:5:224",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$54876",
                "typeString": "contract ERC20"
              }
            },
            "id": 62618,
            "nodeType": "InheritanceSpecifier",
            "src": "546:5:224"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 62619,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 54934,
              "src": "553:13:224",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$54934",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 62620,
            "nodeType": "InheritanceSpecifier",
            "src": "553:13:224"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 62621,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 55144,
              "src": "568:7:224",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$55144",
                "typeString": "contract Ownable"
              }
            },
            "id": 62622,
            "nodeType": "InheritanceSpecifier",
            "src": "568:7:224"
          }
        ],
        "contractDependencies": [
          54471,
          54876,
          54934,
          55003,
          55144
        ],
        "contractKind": "contract",
        "documentation": "@title Sovryn Token: SOV is an ERC-20 token contract for Sovryn governance.\n * @notice This contract accounts for all holders' balances.\n * @dev This contract represents a token with dynamic supply.\n  The owner of the token contract can mint/burn tokens to/from any account\n  based upon previous governance voting and approval.\n",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          62697,
          55144,
          54934,
          54876,
          55003,
          54471
        ],
        "name": "SOV",
        "scope": 62698
      }
    ]
  },
  "id": 224
}