{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "valueBefore",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "valueAfter",
          "type": "uint256"
        }
      ],
      "name": "AllowanceUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "burner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "assetAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "loanToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "loanAmount",
          "type": "uint256"
        }
      ],
      "name": "FlashBorrow",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "assetAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "TINY_AMOUNT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "VERSION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "assetBalanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "avgBorrowInterestRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "baseRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "loanId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "withdrawAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initialLoanDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralTokenSent",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "collateralTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "borrow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "borrowInterestRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "burnAmount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "loanAmountPaid",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "burnAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "useLM",
          "type": "bool"
        }
      ],
      "name": "burnToBTC",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "loanAmountPaid",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assetBorrow",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "assetSupply",
          "type": "uint256"
        }
      ],
      "name": "calculateSupplyInterestRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanTokenSent",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "collateralTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minEntryPrice",
          "type": "uint256"
        }
      ],
      "name": "checkPriceDivergence",
      "outputs": [],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "checkpointPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "checkpointSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "earlyAccessToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "depositAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initialLoanDuration",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "collateralTokenAddress",
          "type": "address"
        }
      ],
      "name": "getBorrowAmountForDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "borrowAmount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "borrowAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initialLoanDuration",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "collateralTokenAddress",
          "type": "address"
        }
      ],
      "name": "getDepositAmountForBorrow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "depositAmount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "leverageAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loanTokenSent",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralTokenSent",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "collateralTokenAddress",
          "type": "address"
        }
      ],
      "name": "getEstimatedMarginDetails",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "principal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "interestRate",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getListFunctionSignatures",
      "outputs": [
        {
          "internalType": "bytes4[]",
          "name": "functionSignatures",
          "type": "bytes4[]"
        },
        {
          "internalType": "bytes32",
          "name": "moduleName",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "leverageAmount",
          "type": "uint256"
        }
      ],
      "name": "getMaxEscrowAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "maxEscrowAmount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "kinkLevel",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "liquidityMiningAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "loanParamsIds",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "loanTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lowUtilBaseRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lowUtilRateMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "loanId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "leverageAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loanTokenSent",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralTokenSent",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "collateralTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minEntryPrice",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "loanDataBytes",
          "type": "bytes"
        }
      ],
      "name": "marginTrade",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "loanId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "leverageAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loanTokenSent",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralTokenSent",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "collateralTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minEntryPrice",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "affiliateReferrer",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "loanDataBytes",
          "type": "bytes"
        }
      ],
      "name": "marginTradeAffiliate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "marketLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxScaleRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "depositAmount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mintAmount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "useLM",
          "type": "bool"
        }
      ],
      "name": "mintWithBTC",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mintAmount",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "borrowAmount",
          "type": "uint256"
        }
      ],
      "name": "nextBorrowInterestRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "supplyAmount",
          "type": "uint256"
        }
      ],
      "name": "nextSupplyInterestRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pauser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "profitOf",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rateMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "sovrynContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "string",
          "name": "source",
          "type": "string"
        }
      ],
      "name": "stringToBytes32",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "result",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "supplyInterestRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "targetLevel",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "target_",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalAssetBorrow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalAssetSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assetSupply",
          "type": "uint256"
        }
      ],
      "name": "totalSupplyInterestRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "transactionLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wrbtcTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "221:6519:14:-;;;502:1:186;688:55;;;;721:12:184;-1:-1:-1;;;;;721:10:184;:12;:::i;:::-;743:6;:18;;-1:-1:-1;;;;;;743:18:184;-1:-1:-1;;;;;743:18:184;;;;;;;;776:43;;743:18;;-1:-1:-1;743:18:184;-1:-1:-1;;776:43:184;;-1:-1:-1;;776:43:184;668:158;221:6519:14;;795:96:179;874:10;795:96;:::o;221:6519:14:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106103a25760003560e01c80637b7933b4116101e7578063b9fe1a8f1161010d578063eebc5081116100a0578063f851a4401161006f578063f851a440146109cd578063f8dd4f0e146109e2578063fb5f83df146109f7578063ffa1ad7414610a0a576103a2565b8063eebc508114610965578063ef2b0b3914610985578063f2fde38b1461099a578063f6b69f99146109ba576103a2565b8063d65a5021116100dc578063d65a5021146108f0578063d759dbeb14610910578063dd62ed3e14610925578063e41b07e314610945576103a2565b8063b9fe1a8f14610886578063ba0e43bf146108a6578063ca37e666146108bb578063cfb51928146108d0576103a2565b80638f32d59b116101855780639bda3a98116101545780639bda3a981461081c5780639dc29fac146108315780639fd0506d14610851578063a9059cbb14610866576103a2565b80638f32d59b146107ba5780638fb807c5146107cf57806390967de5146107e457806395d89b4114610807576103a2565b8063829b38f4116101c1578063829b38f41461075b5780638325a1c01461077b5780638da5cb5b146107905780638ee6c4e6146107a5576103a2565b80637b7933b41461071c5780637e37c08c146107315780637ff9b59614610746576103a2565b80632ea295fa116102cc57806354198ce91161026a5780636b40cd40116102395780636b40cd40146106985780636d23d1ac146106c757806370a08231146106e7578063797bf38514610707576103a2565b806354198ce91461062e57806356e07d701461064e578063612ef80b14610663578063631a3ef814610678576103a2565b80633291c11a116102a65780633291c11a146105c4578063330691ac146105e457806340c10f19146105f957806344a4a00314610619576103a2565b80632ea295fa1461057a5780632f6b600d1461058d578063313ce567146105a2576103a2565b806310e57644116103445780631f68f20a116103135780631f68f20a1461050f57806320f6d07c1461052457806323b872dd1461053957806328a02f1914610559576103a2565b806310e57644146104a357806312416898146104c557806318160ddd146104e55780631d0806ae146104fa576103a2565b806306b3efd61161038057806306b3efd61461041f57806306fdde031461043f578063095ea7b31461046157806309ec6b6b1461048e576103a2565b806304797930146103a75780630506af04146103dd57806306947a3a146103fd575b600080fd5b3480156103b357600080fd5b506103c76103c2366004615012565b610a1f565b6040516103d49190615b84565b60405180910390f35b3480156103e957600080fd5b506103c76103f8366004614c98565b610bc8565b34801561040957600080fd5b50610412610dcc565b6040516103d491906159fd565b34801561042b57600080fd5b506103c761043a366004614b75565b610ddb565b34801561044b57600080fd5b50610454610ec7565b6040516103d49190615c03565b34801561046d57600080fd5b5061048161047c366004614c68565b610f52565b6040516103d49190615b76565b34801561049a57600080fd5b506103c7610fbd565b3480156104af57600080fd5b506104c36104be366004614fa2565b610fd2565b005b3480156104d157600080fd5b506103c76104e0366004614f66565b6110ac565b3480156104f157600080fd5b506103c76110d7565b34801561050657600080fd5b506103c76110dd565b34801561051b57600080fd5b506103c76110e3565b34801561053057600080fd5b506103c76110e9565b34801561054557600080fd5b50610481610554366004614beb565b611178565b61056c610567366004614ea2565b611241565b6040516103d4929190615e14565b61056c610588366004614cf9565b6115d3565b34801561059957600080fd5b5061041261195a565b3480156105ae57600080fd5b506105b7611969565b6040516103d49190615e3d565b3480156105d057600080fd5b506103c76105df366004614f66565b611972565b3480156105f057600080fd5b506103c7611984565b34801561060557600080fd5b506103c7610614366004614c68565b61198a565b34801561062557600080fd5b506103c7611afd565b34801561063a57600080fd5b506103c7610649366004614b75565b611b0f565b34801561065a57600080fd5b506103c7611bb0565b34801561066f57600080fd5b506103c7611bb6565b34801561068457600080fd5b506103c7610693366004615012565b611be7565b3480156106a457600080fd5b506106b86106b3366004615055565b611d87565b6040516103d493929190615e22565b3480156106d357600080fd5b506103c76106e2366004614fc3565b611e98565b3480156106f357600080fd5b506103c7610702366004614b75565b611f7b565b34801561071357600080fd5b50610412611f96565b34801561072857600080fd5b506103c7611faa565b34801561073d57600080fd5b506103c7611fb0565b34801561075257600080fd5b506103c7611fb6565b34801561076757600080fd5b506103c7610776366004614f66565b611ff4565b34801561078757600080fd5b506103c7612074565b34801561079c57600080fd5b50610412612080565b3480156107b157600080fd5b5061041261208f565b3480156107c657600080fd5b5061048161209e565b3480156107db57600080fd5b506103c76120c4565b3480156107f057600080fd5b506107f96120f4565b6040516103d4929190615b56565b34801561081357600080fd5b50610454612780565b34801561082857600080fd5b506104126127db565b34801561083d57600080fd5b506103c761084c366004614c68565b6127ea565b34801561085d57600080fd5b506104126128ec565b34801561087257600080fd5b50610481610881366004614c68565b6128fb565b34801561089257600080fd5b506103c76108a1366004614f66565b61290b565b3480156108b257600080fd5b506103c7612916565b3480156108c757600080fd5b5061041261291c565b3480156108dc57600080fd5b506103c76108eb366004614f31565b61292b565b3480156108fc57600080fd5b506103c761090b366004614f66565b612949565b34801561091c57600080fd5b506103c761295c565b34801561093157600080fd5b506103c7610940366004614bb1565b612962565b34801561095157600080fd5b506103c7610960366004614b75565b61298d565b34801561097157600080fd5b506103c7610980366004614b75565b61299f565b34801561099157600080fd5b506103c76129ba565b3480156109a657600080fd5b506104c36109b5366004614b75565b6129c0565b61056c6109c8366004614dc1565b6129f0565b3480156109d957600080fd5b50610412612ac0565b3480156109ee57600080fd5b506103c7612acf565b6103c7610a05366004614c38565b612ad9565b348015610a1657600080fd5b506103c7612bb1565b60008315610bc1576001600160a01b038216610a44576017546001600160a01b031691505b600060106000846001604051602001610a5e92919061597e565b60408051601f19818403018152918152815160209283012083529082019290925281016000205460165460048054935163ca74a5d960e01b81529294506001600160a01b039182169363e762319f936101009091049092169187918a91869163ca74a5d991610acf918a9101615b84565b60206040518083038186803b158015610ae757600080fd5b505afa158015610afb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b1f9190810190614f84565b60016040518663ffffffff1660e01b8152600401610b41959493929190615a77565b60206040518083038186803b158015610b5957600080fd5b505afa158015610b6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b919190810190614f84565b9150610ba582610b9f6120c4565b86612bb6565b9350610bb39150612c2f9050565b821115610bbf57600091505b505b9392505050565b6000600160005414610bf55760405162461bcd60e51b8152600401610bec90615dc4565b60405180910390fd5b6002600081905550600073ba10edd6abc7696eae685839217bdcc42139612b6001600160a01b031663ed04e1c36040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610c4e57600080fd5b505af1158015610c62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c869190810190614f84565b90508215610c9e57610c9784612c65565b9150610caa565b610ca784612e0b565b91505b8115610d1c57601754604051632e1a7d4d60e01b81526001600160a01b0390911690632e1a7d4d90610ce0908590600401615b84565b600060405180830381600087803b158015610cfa57600080fd5b505af1158015610d0e573d6000803e3d6000fd5b50505050610d1c8583612fc2565b73ba10edd6abc7696eae685839217bdcc42139612b6001600160a01b0316633fa4f2456040518163ffffffff1660e01b815260040160206040518083038186803b158015610d6957600080fd5b505afa158015610d7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610da19190810190614f84565b8114610dbf5760405162461bcd60e51b8152600401610bec90615c14565b5060016000559392505050565b6016546001600160a01b031681565b601c5460009081906001600160a01b031615610e7657601c54604051636822955360e11b81526001600160a01b039091169063d0452aa690610e239030908790600401615a19565b60206040518083038186803b158015610e3b57600080fd5b505afa158015610e4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610e739190810190614f84565b90505b610ebe670de0b6b3a7640000610eb2610e8d611fb6565b610ea685610e9a89611f7b565b9063ffffffff61306316565b9063ffffffff61308816565b9063ffffffff6130c216565b9150505b919050565b6002805460408051602060018416156101000260001901909316849004601f81018490048402820184019092528181529291830182828015610f4a5780601f10610f1f57610100808354040283529160200191610f4a565b820191906000526020600020905b815481529060010190602001808311610f2d57829003601f168201915b505050505081565b3360008181526014602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610fab908690615b84565b60405180910390a35060015b92915050565b6000610fcc6104e06000613104565b90505b90565b60165460048054604051631a51577760e21b81526000936001600160a01b03908116936369455ddc93611013936101009091049092169188918a9101615a4f565b60206040518083038186803b15801561102b57600080fd5b505afa15801561103f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506110639190810190614f84565b9050600061108385610eb284670de0b6b3a764000063ffffffff61308816565b9050828110156110a55760405162461bcd60e51b8152600401610bec90615c64565b5050505050565b6000806110b76110e9565b905080156110d1576110c98184611e98565b915050610ec2565b50919050565b60155490565b600e5481565b60055481565b6016546004805460405163250f447f60e11b81526000936001600160a01b0390811693634a1e88fe936111289330936101009092049091169101615a19565b60206040518083038186803b15801561114057600080fd5b505afa158015611154573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610fcc9190810190614f84565b60165460405163115dd4b160e01b8152600091611239918691869186916001600160a01b03169063115dd4b1906111b3903390600401615a0b565b60206040518083038186803b1580156111cb57600080fd5b505afa1580156111df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112039190810190614cdb565b611230576001600160a01b0388166000908152601460209081526040808320338452909152902054611234565b6000195b61313e565b949350505050565b6000806001600054146112665760405162461bcd60e51b8152600401610bec90615dc4565b6002600081905550600073ba10edd6abc7696eae685839217bdcc42139612b6001600160a01b031663ed04e1c36040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156112bf57600080fd5b505af11580156112d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112f79190810190614f84565b905061130161334e565b6001600160a01b03871661131e576017546001600160a01b031696505b6004546001600160a01b038881166101009092041614156113515760405162461bcd60e51b8152600401610bec90615cf4565b8a15806113665750336001600160a01b038716145b6113825760405162461bcd60e51b8152600401610bec90615de4565b6001600160a01b038716600090815260126020526040902054156113c5576001600160a01b0387166000908152601260205260409020548811156113c557600080fd5b60045461010090046001600160a01b0316600090815260126020526040902054156114165760045461010090046001600160a01b031660009081526012602052604090205489111561141657600080fd5b6000611423888a8c6133ce565b9050806114425760405162461bcd60e51b8152600401610bec90615d14565b61144a614a23565b611452614a4a565b3082526001600160a01b038916602080840182905260408401919091528101839052606081018c9052608081018b905261148a6135fb565b6114988d82602001516136a1565b82526020820181905260045465e35fa931a000916114c49161010090046001600160a01b0316906136f0565b116114e15760405162461bcd60e51b8152600401610bec90615da4565b6114fb6f4b3b4ca85a86c47a098a2240000000008e6130c2565b60a082018990529c506115148e60008f8d86868d613817565b9550955050505073ba10edd6abc7696eae685839217bdcc42139612b6001600160a01b0316633fa4f2456040518163ffffffff1660e01b815260040160206040518083038186803b15801561156857600080fd5b505afa15801561157c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506115a09190810190614f84565b81146115be5760405162461bcd60e51b8152600401610bec90615c14565b50600160005590999098509650505050505050565b6000806001600054146115f85760405162461bcd60e51b8152600401610bec90615dc4565b6002600081905550600073ba10edd6abc7696eae685839217bdcc42139612b6001600160a01b031663ed04e1c36040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561165157600080fd5b505af1158015611665573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506116899190810190614f84565b9050896116a85760405162461bcd60e51b8152600401610bec90615df4565b6116b061334e565b6001600160a01b038716600090815260126020526040902054156116f3576001600160a01b0387166000908152601260205260409020548811156116f357600080fd5b3415806116ff57508734145b801561171357508715158061171357508a15155b801561173a57506001600160a01b03871615158061173057503415155b8061173a57508a15155b801561175657508a15806117565750336001600160a01b038716145b6117725760405162461bcd60e51b8152600401610bec90615ca4565b6004546001600160a01b038881166101009092041614156117a55760405162461bcd60e51b8152600401610bec90615c24565b6117ad6135fb565b6117b5614a23565b6117bd614a4a565b3082526001600160a01b03888116602080850191909152908816604084015281018c90526117f58c6117ef6000613104565b8d612bb6565b836000018460400185602001838152508381525083815250505050898160800181815250506119078d8d601660009054906101000a90046001600160a01b03166001600160a01b031663ca74a5d9601060008f600160405160200161185b92919061597e565b6040516020818303038152906040528051906020012060001c8152602001908152602001600020546040518263ffffffff1660e01b815260040161189f9190615b84565b60206040518083038186803b1580156118b757600080fd5b505afa1580156118cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118ef9190810190614f84565b8c868660405180602001604052806000815250613817565b94509450505073ba10edd6abc7696eae685839217bdcc42139612b6001600160a01b0316633fa4f2456040518163ffffffff1660e01b815260040160206040518083038186803b15801561156857600080fd5b6017546001600160a01b031681565b60045460ff1681565b60106020526000908152604090205481565b60065481565b60006001600054146119ae5760405162461bcd60e51b8152600401610bec90615dc4565b6002600081905550600073ba10edd6abc7696eae685839217bdcc42139612b6001600160a01b031663ed04e1c36040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611a0757600080fd5b505af1158015611a1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611a3f9190810190614f84565b9050611a4b8484613a74565b91505b73ba10edd6abc7696eae685839217bdcc42139612b6001600160a01b0316633fa4f2456040518163ffffffff1660e01b815260040160206040518083038186803b158015611a9b57600080fd5b505afa158015611aaf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611ad39190810190614f84565b8114611af15760405162461bcd60e51b8152600401610bec90615c14565b50600160005592915050565b6000610fcc611b0a6110e9565b613b80565b600080827f37aa2b7d583612f016e4a4de4292cb015139b3d7762663d06a53964912ea2fb660001b604051602001611b489291906159a4565b604051602081830303815290604052805190602001209050610ebe8160136000866001600160a01b03166001600160a01b0316815260200190815260200160002054611b92611fb6565b6001600160a01b038716600090815260116020526040902054613bb8565b600a5481565b600080611bc36000613104565b90506000611bcf6110e9565b905080821115611be25790039050610fcf565b505090565b60008315610bc1576000611bfd85610b9f6120c4565b92505050611c09612c2f565b8111610bbf576001600160a01b038316611c2c576017546001600160a01b031692505b600060106000856001604051602001611c4692919061597e565b60408051601f19818403018152918152815160209283012083529082019290925281016000205460165460048054935163ca74a5d960e01b8152929450611d7e93600a936001600160a01b03938416936325decac09361010090930416918a918991869163ca74a5d991611cbc918c9101615b84565b60206040518083038186803b158015611cd457600080fd5b505afa158015611ce8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611d0c9190810190614f84565b60016040518663ffffffff1660e01b8152600401611d2e959493929190615a77565b60206040518083038186803b158015611d4657600080fd5b505afa158015611d5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610e9a9190810190614f84565b92505050610bc1565b600080806001600160a01b038416611da8576017546001600160a01b031693505b6000611db58587896133ce565b9050611dc188826136a1565b9094509150611dce612c2f565b841115611de5575060009250829150819050611e8e565b611df5878563ffffffff61306316565b6016546004805460405163d67f707760e01b8152939a506001600160a01b039283169363d67f707793611e3a9361010090930416918a918d918d918a918d9101615ab9565b60206040518083038186803b158015611e5257600080fd5b505afa158015611e66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611e8a9190810190614f84565b9250505b9450945094915050565b60008215801590611ea95750828210155b15610fb757611f74701d6329f1c35ca4bfabb9f5610000000000610eb2611f5e68056bc75e2d63100000601660009054906101000a90046001600160a01b03166001600160a01b0316634699f8466040518163ffffffff1660e01b815260040160206040518083038186803b158015611f2157600080fd5b505afa158015611f35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611f599190810190614f84565b613c12565b610ea6611f6b8888613c54565b610ea689613b80565b9050610fb7565b6001600160a01b031660009081526013602052604090205490565b60045461010090046001600160a01b031681565b600d5481565b60085481565b600f546000908190426001600160581b03908116911614611fdd57611fd9613c86565b9150505b611fee611fe982613104565b613d52565b91505090565b60008061201361016d610eb2601c600b5461308890919063ffffffff16565b9050600061203068056bc75e2d631000008363ffffffff613c1216565b9050600061204d68056bc75e2d63100000610eb284610ea6611bb6565b905061206b85610eb283670de0b6b3a764000063ffffffff61308816565b95945050505050565b6000610fcc6000613d81565b6001546001600160a01b031690565b601c546001600160a01b031681565b6001546000906001600160a01b03166120b5613dd7565b6001600160a01b031614905090565b600f546000908190426001600160581b039081169116146120eb576120e7613c86565b9150505b611fee81613104565b60408051602080825261042082019092526060916000918391808201610400803883390190505090506340c10f1960e01b8160008151811061213257fe5b6001600160e01b0319909216602092830291909101909101528051632770a7eb60e21b908290600190811061216357fe5b6001600160e01b03199092166020928302919091019091015280516317514afd60e11b908290600290811061219457fe5b6001600160e01b03199092166020928302919091019091015280516328a02f1960e01b90829060039081106121c557fe5b6001600160e01b031990921660209283029190910190910152805163f6b69f9960e01b90829060049081106121f657fe5b6001600160e01b031990921660209283029190910190910152805163a9059cbb60e01b908290600590811061222757fe5b6001600160e01b03199092166020928302919091019091015280516323b872dd60e01b908290600690811061225857fe5b6001600160e01b03199092166020928302919091019091015280516354198ce960e01b908290600790811061228957fe5b6001600160e01b0319909216602092830291909101909101528051633ffcdacb60e11b90829060089081106122ba57fe5b6001600160e01b031990921660209283029190910190910152805163eebc508160e01b90829060099081106122eb57fe5b6001600160e01b031990921660209283029190910190910152805163612ef80b60e01b908290600a90811061231c57fe5b6001600160e01b03199092166020928302919091019091015280516344a4a00360e01b908290600b90811061234d57fe5b6001600160e01b031990921660209283029190910190910152805163020c968760e61b908290600c90811061237e57fe5b6001600160e01b031990921660209283029190910190910152805163b9fe1a8f60e01b908290600d9081106123af57fe5b6001600160e01b03199092166020928302919091019091015280516309ec6b6b60e01b908290600e9081106123e057fe5b6001600160e01b031990921660209283029190910190910152805163d65a502160e01b908290600f90811061241157fe5b6001600160e01b03199092166020928302919091019091015280516302482d1360e31b908290601090811061244257fe5b6001600160e01b031990921660209283029190910190910152805163083db41f60e21b908290601190811061247357fe5b6001600160e01b0319909216602092830291909101909101528051638fb807c560e01b90829060129081106124a457fe5b6001600160e01b03199092166020928302919091019091015280516320a6ce3d60e21b90829060139081106124d557fe5b6001600160e01b0319909216602092830291909101909101528051630359f7eb60e11b908290601490811061250657fe5b6001600160e01b03199092166020928302919091019091015280516301ad033560e61b908290601590811061253757fe5b6001600160e01b0319909216602092830291909101909101528051630c6347df60e31b908290601690811061256857fe5b6001600160e01b03199092166020928302919091019091015280516247979360e41b908290601790811061259857fe5b6001600160e01b03199092166020928302919091019091015280516304395d9160e21b90829060189081106125c957fe5b6001600160e01b0319909216602092830291909101909101528051631b48f46b60e21b90829060199081106125fa57fe5b6001600160e01b031990921660209283029190910190910152805163fb5f83df60e01b908290601a90811061262b57fe5b6001600160e01b0319909216602092830291909101909101528051630141abc160e21b908290601b90811061265c57fe5b6001600160e01b031990921660209283029190910190910152805163095ea7b360e01b908290601c90811061268d57fe5b6001600160e01b03199092166020928302919091019091015280516318160ddd60e01b908290601d9081106126be57fe5b6001600160e01b03199092166020928302919091019091015280516370a0823160e01b908290601e9081106126ef57fe5b6001600160e01b0319909216602092830291909101909101528051636eb1769f60e11b908290601f90811061272057fe5b60200260200101906001600160e01b03191690816001600160e01b0319168152505080612777604051806040016040528060138152602001724c6f616e546f6b656e4c6f676963577262746360681b81525061292b565b92509250509091565b6003805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610f4a5780601f10610f1f57610100808354040283529160200191610f4a565b6018546001600160a01b031681565b600060016000541461280e5760405162461bcd60e51b8152600401610bec90615dc4565b6002600081905550600073ba10edd6abc7696eae685839217bdcc42139612b6001600160a01b031663ed04e1c36040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561286757600080fd5b505af115801561287b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061289f9190810190614f84565b90506128aa83612e0b565b91508115611a4e57611a4e600460019054906101000a90046001600160a01b03168584604051806040016040528060018152602001603560f81b815250613ddb565b601b546001600160a01b031681565b6000610bc133848460001961313e565b6000610fb782613d81565b60095481565b601a546001600160a01b031681565b80516000908290612940575060009050610ec2565b50506020015190565b6000610fb76104e083610e9a6000613104565b60075481565b6001600160a01b03918216600090815260146020908152604080832093909416825291909152205490565b60126020526000908152604090205481565b6001600160a01b031660009081526011602052604090205490565b600b5481565b6129c861209e565b6129e45760405162461bcd60e51b8152600401610bec90615d64565b6129ed81613e3b565b50565b6000806001600160a01b03851615612a675760165460405163193bbe8960e31b81526001600160a01b039091169063c9ddf44890612a34908a908990600401615a19565b600060405180830381600087803b158015612a4e57600080fd5b505af1158015612a62573d6000803e3d6000fd5b505050505b612aad8c8c8c8c8c8c8c8b8b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061124192505050565b915091509a509a98505050505050505050565b6019546001600160a01b031681565b65e35fa931a00081565b6000600160005414612afd5760405162461bcd60e51b8152600401610bec90615dc4565b6002600081905550600073ba10edd6abc7696eae685839217bdcc42139612b6001600160a01b031663ed04e1c36040518163ffffffff1660e01b8152600401602060405180830381600087803b158015612b5657600080fd5b505af1158015612b6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612b8e9190810190614f84565b90508215612ba757612ba08434613ebd565b9150611a4e565b612ba08434613a74565b600681565b6000806000612bc58686613f46565b9250612c12612bfa670de0b6b3a7640000611f596b0a3098c68eb9427db8000000610eb283610ea68a8c63ffffffff61308816565b610eb288670de0b6b3a764000063ffffffff61308816565b9050612c24818763ffffffff613c1216565b915093509350939050565b600480546040516370a0823160e01b81526000926101009092046001600160a01b0316916370a0823191611128913091016159fd565b601c54604051636822955360e11b815260009182916001600160a01b039091169063d0452aa690612c9c9030903390600401615a34565b60206040518083038186803b158015612cb457600080fd5b505afa158015612cc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612cec9190810190614f84565b905082612d08612cfb33611f7b565b839063ffffffff61306316565b1015612d265760405162461bcd60e51b8152600401610bec90615cc4565b8015612e065782811015612d9f57601c54604051631a4ca37b60e21b81526001600160a01b03909116906369328dec90612d6890309085903390600401615b2e565b600060405180830381600087803b158015612d8257600080fd5b505af1158015612d96573d6000803e3d6000fd5b50505050612e06565b601c54604051631a4ca37b60e21b81526001600160a01b03909116906369328dec90612dd390309087903390600401615b2e565b600060405180830381600087803b158015612ded57600080fd5b505af1158015612e01573d6000803e3d6000fd5b505050505b610ebe835b600081612e2a5760405162461bcd60e51b8152600401610bec90615d74565b612e3333611f7b565b821115612e67576000198214612e5b5760405162461bcd60e51b8152600401610bec90615d34565b612e6433611f7b565b91505b612e6f6135fb565b6000612e7e611fe96000613104565b90506000612e9e670de0b6b3a7640000610eb2868563ffffffff61308816565b90506000612eaa612c2f565b905081935080841115612ecf5760405162461bcd60e51b8152600401610bec90615cd4565b601c546000906001600160a01b031615612f6857601c54604051636822955360e11b81526001600160a01b039091169063d0452aa690612f159030903390600401615a34565b60206040518083038186803b158015612f2d57600080fd5b505afa158015612f41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612f659190810190614f84565b90505b33600090815260136020526040812054612f88908363ffffffff61306316565b90506000612f9c828963ffffffff613c1216565b9050612faa3389898961405c565b50612fb733838389614192565b505050505050919050565b80471015612fe25760405162461bcd60e51b8152600401610bec90615cb4565b6000826001600160a01b031682604051612ffb906159f2565b60006040518083038185875af1925050503d8060008114613038576040519150601f19603f3d011682016040523d82523d6000602084013e61303d565b606091505b505090508061305e5760405162461bcd60e51b8152600401610bec90615c94565b505050565b600082820183811015610bc15760405162461bcd60e51b8152600401610bec90615c74565b60008261309757506000610fb7565b828202828482816130a457fe5b0414610bc15760405162461bcd60e51b8152600401610bec90615d54565b6000610bc183836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250614248565b6000601554600014610ec257600c548061312e5761312b6131236110e9565b610e9a612c2f565b90505b6110c9818463ffffffff61306316565b600060001982146131d7576040805180820190915260028152610c4d60f21b6020820152613175908390859063ffffffff61427f16565b6001600160a01b038616600081815260146020908152604080832033808552925291829020849055905190927f628e75c63c1873bcd3885f7aee9f58ee36f60dc789b2a6b3a978c4189bc548ba916131ce918791615e14565b60405180910390a35b6001600160a01b0384166131fd5760405162461bcd60e51b8152600401610bec90615c34565b6001600160a01b03851660009081526013602090815260408083205481518083019092526002825261189b60f11b92820192909252909190613248908390879063ffffffff61427f16565b6001600160a01b03808916600090815260136020526040808220849055918916815290812054919250613281828863ffffffff61306316565b6001600160a01b03891660009081526013602052604081208290559091506132a7611fb6565b601c549091506001600160a01b038b81169116148015906132d65750601c546001600160a01b038a8116911614155b156132f3576132e78a868684614192565b6132f389848484614192565b886001600160a01b03168a6001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8a6040516133369190615b84565b60405180910390a35060019998505050505050505050565b600080356001600160e01b0319167fd46a704bc285dbd6ff5ad3863506260b1df02812f4f857c8cc852317a6ac64f260405160200161338e9291906159ca565b60405160208183030381529060405280519060200120905060008154905080156133ca5760405162461bcd60e51b8152600401610bec90615d64565b5050565b808215610bc157600080601660009054906101000a90046001600160a01b03166001600160a01b03166378d849ed6040518163ffffffff1660e01b815260040160206040518083038186803b15801561342657600080fd5b505afa15801561343a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061345e9190810190614b93565b60048054604051630a7549df60e21b81526001600160a01b03938416936329d5277c93613497938c936101009091049092169101615a19565b604080518083038186803b1580156134ae57600080fd5b505afa1580156134c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506134e69190810190614fe2565b91509150816000141580156134fa57508015155b6135165760405162461bcd60e51b8152600401610bec90615db4565b600061352c82610eb2888663ffffffff61308816565b60165460048054604051631a51577760e21b81529394506000936001600160a01b03938416936369455ddc9361356f936101009004909116918d91889101615a4f565b60206040518083038186803b15801561358757600080fd5b505afa15801561359b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506135bf9190810190614f84565b90508681146135df576135dc87610eb2848463ffffffff61308816565b91505b6135ef828663ffffffff61306316565b98975050505050505050565b600f5442906001600160581b038083169116146129ed5760165460048054604051630740ff7d60e51b81526001600160a01b039384169363e81fefa09361364b93610100900490911691016159fd565b600060405180830381600087803b15801561366557600080fd5b505af1158015613679573d6000803e3d6000fd5b5050600f80546001600160581b0385166affffffffffffffffffffff19909116179055505050565b600080806136c1670de0b6b3a7640000610eb2868863ffffffff61308816565b90506136d6816136d16000613104565b613f46565b91506136e6826224ea00836142ab565b9250509250929050565b6000806000601660009054906101000a90046001600160a01b03166001600160a01b03166378d849ed6040518163ffffffff1660e01b815260040160206040518083038186803b15801561374357600080fd5b505afa158015613757573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061377b9190810190614b93565b601754604051630a7549df60e21b81526001600160a01b03928316926329d5277c926137af928a9290911690600401615a19565b604080518083038186803b1580156137c657600080fd5b505afa1580156137da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506137fe9190810190614fe2565b909250905061206b81610eb2868563ffffffff61308816565b60008061382261334e565b61382a612c2f565b846020015111158015613849575060208501516001600160a01b031615155b6138655760405162461bcd60e51b8152600401610bec90615ce4565b60408501516001600160a01b031661388b5760208501516001600160a01b031660408601525b60006138998787878c61430c565b90506138b68560200151866060015161306390919063ffffffff16565b606086015288156138dc5760608501516138d6908a63ffffffff613c1216565b60608601525b600089156138e8575060015b6000601060008a8460405160200161390192919061597e565b6040516020818303038152906040528051906020012060001c8152602001908152602001600020549050601660009054906101000a90046001600160a01b03166001600160a01b031663d84ca25484838f868f8e8e8e6040518963ffffffff1660e01b81526004016139799796959493929190615b92565b60408051808303818588803b15801561399157600080fd5b505af11580156139a5573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052506139ca9190810190614fe2565b6080890152602088018190526139f25760405162461bcd60e51b8152600401610bec90615d24565b601654602089015160405163f06a9c6b60e01b81526001600160a01b039092169163f06a9c6b91613a25916004016159fd565b600060405180830381600087803b158015613a3f57600080fd5b505af1158015613a53573d6000803e3d6000fd5b50505050866020015187608001519450945050505097509795505050505050565b600080613a8083614566565b601c5491935091506000906001600160a01b031615613b1e57601c54604051636822955360e11b81526001600160a01b039091169063d0452aa690613acb9030908990600401615a19565b60206040518083038186803b158015613ae357600080fd5b505afa158015613af7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613b1b9190810190614f84565b90505b6001600160a01b038516600090815260136020526040812054613b47908363ffffffff61306316565b90506000613b5b828663ffffffff61306316565b9050613b6987868887614670565b50613b7687838387614192565b5050505092915050565b60008115610ec2576000613b92613c86565b5090506110c983610eb261016d610ea68568056bc75e2d6310000063ffffffff61308816565b600081613bc757506000611239565b50835461206b81613c06670de0b6b3a7640000613bfa88613bee898963ffffffff61478016565b9063ffffffff6147c616565b9063ffffffff61483116565b9063ffffffff61489516565b6000610bc183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061427f565b60008215801590613c6457508115155b15610fb757611f7482610eb28568056bc75e2d6310000063ffffffff61308816565b60165460048054604051630d1979fb60e41b8152600093849384936001600160a01b039283169363d1979fb093613cc893309361010090049091169101615a19565b60c06040518083038186803b158015613ce057600080fd5b505afa158015613cf4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613d1891908101906150b6565b5091965094509250613d4b915068056bc75e2d631000009050610eb2613d3e8285613c12565b859063ffffffff61308816565b9150509091565b60155460009080613d6557600e54610ebe565b610ebe81610eb285670de0b6b3a764000063ffffffff61308816565b6000808215613dca57600f54426001600160581b03908116911614613dac57613da8613c86565b9150505b6000613dba82610e9a612c2f565b905080841115613dc8578093505b505b610ebe836136d183613104565b3390565b604051613e3590859063a9059cbb60e01b90613dfd9087908790602401615b13565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152836148db565b50505050565b6001600160a01b038116613e615760405162461bcd60e51b8152600401610bec90615c54565b6001546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000613ec98383613a74565b601c54909150613ee59084906001600160a01b0316838061313e565b50601c546040516336305cf160e21b81526001600160a01b039091169063d8c173c490613f189086908590600401615b13565b600060405180830381600087803b158015613f3257600080fd5b505af1158015613b76573d6000803e3d6000fd5b600080613f5e613f5885610e9a6110e9565b84613c54565b600554600654600954600a54600b5494955060009485949392919082881015613f85578297505b81881115613ff857968190039668056bc75e2d6310000082900380891115613fab578098505b613fcc86610e9a68056bc75e2d63100000610eb2878a63ffffffff61308816565b9650613ff087610e9a83610eb2613fe3878d613c12565b8e9063ffffffff61308816565b99505061404e565b61401985610e9a68056bc75e2d63100000610eb28c8963ffffffff61308816565b98509395508593614030848663ffffffff61306316565b9550868910156140425786985061404e565b8589111561404e578598505b505050505050505092915050565b6040805180820182526002815261189b60f11b6020808301919091526001600160a01b038716600090815260139091529182205482916140a49190879063ffffffff61427f16565b9050600a81116140c5576140be858263ffffffff61306316565b9450600090505b6001600160a01b03861660009081526013602052604090208190556015546140f3908663ffffffff613c1216565b6015556040516001600160a01b038716907f743033787f4738ff4d6a7225ce2bd0977ee5f86b91a902a58f5e4d0b297b46449061413590889088908890615e22565b60405180910390a260006001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef876040516141819190615b84565b60405180910390a395945050505050565b6040516000906141c89086907f37aa2b7d583612f016e4a4de4292cb015139b3d7762663d06a53964912ea2fb6906020016159a4565b604051602081830303815290604052805190602001209050600083600014156141f45760009250614225565b8415614225576001600160a01b03861660009081526011602052604090205461422290839087908690613bb8565b90505b90556001600160a01b039093166000908152601160205260409020929092555050565b600081836142695760405162461bcd60e51b8152600401610bec9190615c03565b50600083858161427557fe5b0495945050505050565b600081848411156142a35760405162461bcd60e51b8152600401610bec9190615c03565b505050900390565b6000806142c66301e13380610eb2878763ffffffff61308816565b905060006142e368056bc75e2d631000008363ffffffff613c1216565b905061430281610eb28668056bc75e2d6310000063ffffffff61308816565b9695505050505050565b60175460408401516020840151606085015160808601516000946001600160a01b039081169485949093909290918b1685141561435b5760405162461bcd60e51b8152600401610bec90615d84565b349650871561440657604051632e1a7d4d60e01b81526001600160a01b03871690632e1a7d4d90614390908b90600401615b84565b600060405180830381600087803b1580156143aa57600080fd5b505af11580156143be573d6000803e3d6000fd5b505050506143cc8489612fc2565b87831115614401576016546040805160208101909152600081526144019187916001600160a01b03909116908b870390613ddb565b61443b565b601654604080518082019091526002815261323760f01b602082015261443b9187916001600160a01b03909116908690613ddb565b801561447657601654604080518082019091526002815261064760f31b6020820152614476918d9133916001600160a01b03169085906149c6565b811561455857861580159061448b5750818710155b1561452357856001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b1580156144cb57600080fd5b505af11580156144df573d6000803e3d6000fd5b5050601654604080518082019091526002815261323960f01b602082015261451994508993506001600160a01b0390911691508590613ddb565b8187039650614558565b601654604080518082019091526002815261323960f01b602082015261455891879133916001600160a01b03169086906149c6565b505050505050949350505050565b600080826145865760405162461bcd60e51b8152600401610bec90615d44565b61458e6135fb565b61459b611fe96000613104565b90506145b981610eb285670de0b6b3a764000063ffffffff61308816565b915034614601576145fc600460019054906101000a90046001600160a01b031633308660405180604001604052806002815260200161062760f31b8152506149c6565b61466b565b601760009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b15801561465157600080fd5b505af1158015614665573d6000803e3d6000fd5b50505050505b915091565b60006001600160a01b0385166146985760405162461bcd60e51b8152600401610bec90615c34565b6001600160a01b0385166000908152601360205260408120546146c1908663ffffffff61306316565b6001600160a01b03871660009081526013602052604090208190556015549091506146f2908663ffffffff61306316565b6015556040516001600160a01b038716907fb4c03061fb5b7fed76389d5af8f2e0ddb09f8c70d1333abbb62582835e10accb9061473490889088908890615e22565b60405180910390a2856001600160a01b031660006001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef876040516141819190615b84565b60008183038183128015906147955750838113155b806147aa57506000831280156147aa57508381135b610bc15760405162461bcd60e51b8152600401610bec90615dd4565b6000826147d557506000610fb7565b826000191480156147e95750600160ff1b82145b156148065760405162461bcd60e51b8152600401610bec90615d94565b8282028284828161481357fe5b0514610bc15760405162461bcd60e51b8152600401610bec90615d94565b6000816148505760405162461bcd60e51b8152600401610bec90615e04565b816000191480156148645750600160ff1b83145b156148815760405162461bcd60e51b8152600401610bec90615d04565b600082848161488c57fe5b05949350505050565b60008282018183128015906148aa5750838112155b806148bf57506000831280156148bf57508381125b610bc15760405162461bcd60e51b8152600401610bec90615c84565b6148e4836149ea565b6149005760405162461bcd60e51b8152600401610bec90615c44565b60006060846001600160a01b03168460405161491c91906159e6565b6000604051808303816000865af19150503d8060008114614959576040519150601f19603f3d011682016040523d82523d6000602084013e61495e565b606091505b50915091508183906149835760405162461bcd60e51b8152600401610bec9190615c03565b508051156110a5578080602001905161499f9190810190614cdb565b83906149be5760405162461bcd60e51b8152600401610bec9190615c03565b505050505050565b6040516110a59086906323b872dd60e01b90613dfd90889088908890602401615a4f565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590611239575050151592915050565b60408051608081018252600080825260208201819052918101829052606081019190915290565b6040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8035610fb781615f67565b8051610fb781615f67565b8035610fb781615f7b565b8051610fb781615f7b565b8035610fb781615f84565b60008083601f840112614adf57600080fd5b50813567ffffffffffffffff811115614af757600080fd5b602083019150836001820283011115614b0f57600080fd5b9250929050565b600082601f830112614b2757600080fd5b8135614b3a614b3582615e72565b615e4b565b91508082526020830160208301858383011115614b5657600080fd5b614b61838284615eed565b50505092915050565b8051610fb781615f84565b600060208284031215614b8757600080fd5b60006112398484614a96565b600060208284031215614ba557600080fd5b60006112398484614aa1565b60008060408385031215614bc457600080fd5b6000614bd08585614a96565b9250506020614be185828601614a96565b9150509250929050565b600080600060608486031215614c0057600080fd5b6000614c0c8686614a96565b9350506020614c1d86828701614a96565b9250506040614c2e86828701614ac2565b9150509250925092565b60008060408385031215614c4b57600080fd5b6000614c578585614a96565b9250506020614be185828601614aac565b60008060408385031215614c7b57600080fd5b6000614c878585614a96565b9250506020614be185828601614ac2565b600080600060608486031215614cad57600080fd5b6000614cb98686614a96565b9350506020614cca86828701614ac2565b9250506040614c2e86828701614aac565b600060208284031215614ced57600080fd5b60006112398484614ab7565b600080600080600080600080610100898b031215614d1657600080fd5b6000614d228b8b614ac2565b9850506020614d338b828c01614ac2565b9750506040614d448b828c01614ac2565b9650506060614d558b828c01614ac2565b9550506080614d668b828c01614a96565b94505060a0614d778b828c01614a96565b93505060c0614d888b828c01614a96565b92505060e089013567ffffffffffffffff811115614da557600080fd5b614db18b828c01614b16565b9150509295985092959890939650565b6000806000806000806000806000806101208b8d031215614de157600080fd5b6000614ded8d8d614ac2565b9a50506020614dfe8d828e01614ac2565b9950506040614e0f8d828e01614ac2565b9850506060614e208d828e01614ac2565b9750506080614e318d828e01614a96565b96505060a0614e428d828e01614a96565b95505060c0614e538d828e01614ac2565b94505060e0614e648d828e01614a96565b9350506101008b013567ffffffffffffffff811115614e8257600080fd5b614e8e8d828e01614acd565b92509250509295989b9194979a5092959850565b600080600080600080600080610100898b031215614ebf57600080fd5b6000614ecb8b8b614ac2565b9850506020614edc8b828c01614ac2565b9750506040614eed8b828c01614ac2565b9650506060614efe8b828c01614ac2565b9550506080614f0f8b828c01614a96565b94505060a0614f208b828c01614a96565b93505060c0614d888b828c01614ac2565b600060208284031215614f4357600080fd5b813567ffffffffffffffff811115614f5a57600080fd5b61123984828501614b16565b600060208284031215614f7857600080fd5b60006112398484614ac2565b600060208284031215614f9657600080fd5b60006112398484614b6a565b600080600060608486031215614fb757600080fd5b6000614c0c8686614ac2565b60008060408385031215614fd657600080fd5b6000614c878585614ac2565b60008060408385031215614ff557600080fd5b60006150018585614b6a565b9250506020614be185828601614b6a565b60008060006060848603121561502757600080fd5b60006150338686614ac2565b935050602061504486828701614ac2565b9250506040614c2e86828701614a96565b6000806000806080858703121561506b57600080fd5b60006150778787614ac2565b945050602061508887828801614ac2565b935050604061509987828801614ac2565b92505060606150aa87828801614a96565b91505092959194509250565b60008060008060008060c087890312156150cf57600080fd5b60006150db8989614b6a565b96505060206150ec89828a01614b6a565b95505060406150fd89828a01614b6a565b945050606061510e89828a01614b6a565b935050608061511f89828a01614b6a565b92505060a061513089828a01614b6a565b9150509295509295509295565b60006151498383615207565b505060200190565b61515a81615edc565b82525050565b61515a81615ead565b61515a61517582615ead565b615f25565b600061518582615ea0565b61518f8185615ea4565b935061519a83615e9a565b8060005b838110156151c85781516151b2888261513d565b97506151bd83615e9a565b92505060010161519e565b509495945050505050565b61515a81615eb8565b61515a6151e882615eb8565b615f30565b61515a81610fcf565b61515a61520282610fcf565b610fcf565b61515a81615ebd565b61515a61520282615ebd565b600061522782615ea0565b6152318185615ea4565b9350615241818560208601615ef9565b61524a81615f51565b9093019392505050565b600061525f82615ea0565b6152698185610ec2565b9350615279818560208601615ef9565b9290920192915050565b6000615290601483615ea4565b733932b2b73a3930b731bc903b34b7b630ba34b7b760611b815260200192915050565b60006152c0600283615ea4565b61031360f41b815260200192915050565b60006152de600283615ea4565b61313560f01b815260200192915050565b60006152fc601e83615ea4565b7f63616c6c20746f2061206e6f6e2d636f6e747261637420616464726573730000815260200192915050565b6000615335602683615ea4565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015260400192915050565b600061537d601d83615ea4565b7f656e7472792070726963652061626f766520746865206d696e696d756d000000815260200192915050565b60006153b6601b83615ea4565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000815260200192915050565b60006153ef602183615ea4565b7f5369676e6564536166654d6174683a206164646974696f6e206f766572666c6f8152607760f81b602082015260400192915050565b6000615432603a83615ea4565b7f416464726573733a20756e61626c6520746f2073656e642076616c75652c207281527f6563697069656e74206d61792068617665207265766572746564000000000000602082015260400192915050565b6000615491600183615ea4565b603760f81b815260200192915050565b60006154ae601d83615ea4565b7f416464726573733a20696e73756666696369656e742062616c616e6365000000815260200192915050565b60006154e7601283615ea4565b716e6f7420656e6f7567682062616c616e636560701b815260200192915050565b6000615515600283615ea4565b61333760f01b815260200192915050565b6000615533600283615ea4565b610c8d60f21b815260200192915050565b6000615551600283615ea4565b61313160f01b815260200192915050565b600061556f602183615ea4565b7f5369676e6564536166654d6174683a206469766973696f6e206f766572666c6f8152607760f81b602082015260400192915050565b60006155b2600283615ea4565b61189960f11b815260200192915050565b60006155d0600283615ea4565b61323560f01b815260200192915050565b60006155ee600283615ea4565b61199960f11b815260200192915050565b600061560c600283615ea4565b61313760f01b815260200192915050565b600061562a602183615ea4565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f8152607760f81b602082015260400192915050565b600061566d600c83615ea4565b6b1d5b985d5d1a1bdc9a5e995960a21b815260200192915050565b6000615695600283615ea4565b61313960f01b815260200192915050565b60006156b3600283615ea4565b61191b60f11b815260200192915050565b60006156d1602783615ea4565b7f5369676e6564536166654d6174683a206d756c7469706c69636174696f6e206f815266766572666c6f7760c81b602082015260400192915050565b600061571a601383615ea4565b721c1c9a5b98da5c185b081d1bdbc81cdb585b1b606a1b815260200192915050565b6000615749601d83615ea4565b7f696e76616c6964207261746520636f6c6c61746572616c20746f6b656e000000815260200192915050565b6000610fb7600083610ec2565b600061578f600c83615ea4565b6b1b9bdb9499595b9d1c985b9d60a21b815260200192915050565b60006157b7602483615ea4565b7f5369676e6564536166654d6174683a207375627472616374696f6e206f766572815263666c6f7760e01b602082015260400192915050565b60006157fd601883615ea4565b7f34303120757365206f66206578697374696e67206c6f616e0000000000000000815260200192915050565b6000615836600183615ea4565b601b60f91b815260200192915050565b6000615853602083615ea4565b7f5369676e6564536166654d6174683a206469766973696f6e206279207a65726f815260200192915050565b805160808301906158908482615160565b5060208201516158a36020850182615160565b5060408201516158b66040850182615160565b506060820151613e356060850182615160565b80516101208301906158db84826151ed565b5060208201516158ee60208501826151ed565b50604082015161590160408501826151ed565b50606082015161591460608501826151ed565b50608082015161592760808501826151ed565b5060a082015161593a60a08501826151ed565b5060c082015161594d60c08501826151ed565b5060e082015161596060e08501826151ed565b50610100820151613e356101008501826151ed565b61515a81615ed6565b600061598a8285615169565b60148201915061599a82846151dc565b5060010192915050565b60006159b08285615169565b6014820191506159c082846151f6565b5060200192915050565b60006159d68285615210565b6004820191506159c082846151f6565b6000610bc18284615254565b6000610fb782615775565b60208101610fb78284615160565b60208101610fb78284615151565b60408101615a278285615160565b610bc16020830184615160565b60408101615a428285615160565b610bc16020830184615151565b60608101615a5d8286615160565b615a6a6020830185615160565b61123960408301846151ed565b60a08101615a858288615160565b615a926020830187615160565b615a9f60408301866151ed565b615aac60608301856151ed565b61430260808301846151d3565b60c08101615ac78289615160565b615ad46020830188615160565b615ae160408301876151ed565b615aee60608301866151ed565b615afb60808301856151ed565b615b0860a08301846151ed565b979650505050505050565b60408101615b218285615160565b610bc160208301846151ed565b60608101615b3c8286615160565b615b4960208301856151ed565b6112396040830184615151565b60408082528101615b67818561517a565b9050610bc160208301846151ed565b60208101610fb782846151d3565b60208101610fb782846151ed565b6102408101615ba1828a6151ed565b615bae60208301896151ed565b615bbb60408301886151d3565b615bc860608301876151ed565b615bd5608083018661587f565b615be36101008301856158c9565b818103610220830152615bf6818461521c565b9998505050505050505050565b60208082528101610bc1818461521c565b60208082528101610fb781615283565b60208082528101610fb7816152b3565b60208082528101610fb7816152d1565b60208082528101610fb7816152ef565b60208082528101610fb781615328565b60208082528101610fb781615370565b60208082528101610fb7816153a9565b60208082528101610fb7816153e2565b60208082528101610fb781615425565b60208082528101610fb781615484565b60208082528101610fb7816154a1565b60208082528101610fb7816154da565b60208082528101610fb781615508565b60208082528101610fb781615526565b60208082528101610fb781615544565b60208082528101610fb781615562565b60208082528101610fb7816155a5565b60208082528101610fb7816155c3565b60208082528101610fb7816155e1565b60208082528101610fb7816155ff565b60208082528101610fb78161561d565b60208082528101610fb781615660565b60208082528101610fb781615688565b60208082528101610fb7816156a6565b60208082528101610fb7816156c4565b60208082528101610fb78161570d565b60208082528101610fb78161573c565b60208082528101610fb781615782565b60208082528101610fb7816157aa565b60208082528101610fb7816157f0565b60208082528101610fb781615829565b60208082528101610fb781615846565b60408101615b2182856151ed565b60608101615e3082866151ed565b615a6a60208301856151ed565b60208101610fb78284615975565b60405181810167ffffffffffffffff81118282101715615e6a57600080fd5b604052919050565b600067ffffffffffffffff821115615e8957600080fd5b506020601f91909101601f19160190565b60200190565b5190565b90815260200190565b6000610fb782615eca565b151590565b6001600160e01b03191690565b6001600160a01b031690565b60ff1690565b6000610fb7826000610fb782615ead565b82818337506000910152565b60005b83811015615f14578181015183820152602001615efc565b83811115613e355750506000910152565b6000610fb782615f3b565b6000610fb782615f46565b6000610fb782615f61565b6000610fb782615f5b565b601f01601f191690565b60f81b90565b60601b90565b615f7081615ead565b81146129ed57600080fd5b615f7081615eb8565b615f7081610fcf56fea365627a7a72315820ad1ce2c5cbcc9019b936dcf927d7b5c433196ce6766b93dca5c522bddd46a65f6c6578706572696d656e74616cf564736f6c63430005110040",
    "sourceMapi;:::-;;;;;;;;;;;;;;;;3456:469:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3456:469:14;;;;;;;;:::i;366:36:7:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;366:36:7;;;:::i;:::-;;;;;;;;29419:414:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;29419:414:6;;;;;;;;:::i;2068:18:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2068:18:3;;;:::i;:::-;;;;;;;;1546:202:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1546:202:0;;;;;;;;:::i;:::-;;;;;;;;26226:129:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26226:129:6;;;:::i;35808:719::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;35808:719:6;;;;;;;;:::i;:::-;;27048:257;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;27048:257:6;;;;;;;;:::i;2160:89:1:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2160:89:1;;;:::i;2574:27:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2574:27:3;;;:::i;2256:23::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2256:23:3;;;:::i;27808:180:6:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;27808:180:6;;;:::i;19133:463::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;19133:463:6;;;;;;;;:::i;13006:3276::-;;;;;;;;;:::i;:::-;;;;;;;;;7186:3796;;;;;;;;;:::i;408:32:7:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;408:32:7;;;:::i;2118:21:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2118:21:3;;;:::i;:::-;;;;;;;;2778:48;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2778:48:3;;;;;;;;:::i;2285:29::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2285:29:3;;;:::i;3124:222:6:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3124:222:6;;;;;;;;:::i;25296:129::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25296:129:6;;;:::i;22832:312::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;22832:312:6;;;;;;;;:::i;2431:24:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2431:24:3;;;:::i;24913:263:6:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24913:263:6;;;:::i;32190:1430::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;32190:1430:6;;;;;;;;:::i;30319:1117::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;30319:1117:6;;;;;;;;:::i;:::-;;;;;;;;;;56141:532;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;56141:532:6;;;;;;;;:::i;2444:105:1:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2444:105:1;;;;;;;;:::i;2218:31:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2218:31:3;;;:::i;2537:::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2537:31:3;;;:::i;2356:36::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2356:36:3;;;:::i;24132:281:6:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24132:281:6;;;:::i;28713:588::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;28713:588:6;;;;;;;;:::i;25632:110::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25632:110:6;;;:::i;902:77:184:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;902:77:184;;;:::i;810:37:7:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;810:37:7;;;:::i;1233:92:184:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1233:92:184;;;:::i;28193:268:6:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;28193:268:6;;;:::i;1201:1948:14:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1201:1948:14;;;:::i;:::-;;;;;;;;;2092:20:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2092:20:3;;;:::i;446:22:7:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;446:22:7;;;:::i;3877:433:6:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3877:433:6;;;;;;;;:::i;727:21:7:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;727:21:7;;;:::i;18726:154:6:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;18726:154:6;;;;;;;;:::i;25920:145::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;25920:145:6;;;;;;;;:::i;2399:26:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2399:26:3;;;:::i;640:31:7:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;640:31:7;;;:::i;1285:305::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1285:305:7;;;;;;;;:::i;26608:171:6:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;26608:171:6;;;;;;;;:::i;2320:30:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2320:30:3;;;:::i;2909:132:1:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2909:132:1;;;;;;;;:::i;3011:51:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3011:51:3;;;;;;;;:::i;24610:124:6:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;24610:124:6;;;;;;;;:::i;2461:27:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2461:27:3;;;:::i;1474:107:184:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1474:107:184;;;;;;;;:::i;17184:1218:6:-;;;;;;;;;:::i;474:20:7:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;474:20:7;;;:::i;1235:43::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1235:43:7;;;:::i;3155:295:14:-;;;;;;;;;:::i;897:35:7:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;897:35:7;;;:::i;34374:1163:6:-;34595:20;34631:18;;34627:904;;-1:-1:-1;;;;;34669:36:6;;34665:84;;34732:17;;-1:-1:-1;;;;;34732:17:6;;-1:-1:-1;34665:84:6;34763:20;34802:13;:81;34851:22;34875:4;34834:46;;;;;;;;;;;;;;-1:-1:-1;;26:21;;;22:32;6:49;;34834:46:6;;;34824:57;;49:4:-1;34824:57:6;;;;34802:81;;;;;;;;;;;34816:66;34802:81;;34925:21;;34981:16;;;35086:74;;-1:-1:-1;;;35086:74:6;;34802:81;;-1:-1:-1;;;;;;34925:21:6;;;;34912:51;;34925:21;34981:16;;;;;;;35015:22;;35055:13;;34925:21;;35086:60;;:74;;34802:81;;35086:74;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;35086:74:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;35086:74:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;35086:74:6;;;;;;;;;35197:4;34912:320;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;34912:320:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;34912:320:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;34912:320:6;;;;;;;;;34897:335;;35268:148;35317:12;35347:18;:16;:18::i;:::-;35383:19;35268:31;:148::i;:::-;35247:169;-1:-1:-1;35450:20:6;;-1:-1:-1;35450:18:6;;-1:-1:-1;35450:20:6:i;:::-;35435:12;:35;35431:90;;;35505:1;35490:16;;35431:90;34627:904;;34374:1163;;;;;:::o;3456:469:14:-;3607:22;502:1:186;1185:14;;:39;1177:64;;;;-1:-1:-1;;;1177:64:186;;;;;;;;;;;;;;;;;607:1;1251:14;:40;;;;1387:16:197;1043:42;-1:-1:-1;;;;;1406:26:197;;:28;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1406:28:197;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1406:28:197;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1406:28:197;;;;;;;;;1387:47;;3645:5:14;3641:105;;;3669:23;3681:10;3669:11;:23::i;:::-;3652:40;;3641:105;;;3724:22;3735:10;3724;:22::i;:::-;3707:39;;3641:105;3761:19;;3757:162;;3808:17;;3796:55;;-1:-1:-1;;;3796:55:14;;-1:-1:-1;;;;;3808:17:14;;;;3796:39;;:55;;3836:14;;3796:55;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3796:55:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3796:55:14;;;;3865:43;3883:8;3893:14;3865:17;:43::i;:::-;1043:42:197;-1:-1:-1;;;;;1660:11:197;;:13;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1660:13:197;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1660:13:197;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1660:13:197;;;;;;;;;1648:8;:25;1640:58;;;;-1:-1:-1;;;1640:58:197;;;;;;;;;-1:-1:-1;502:1:186;1312:14;:38;3456:469:14;;-1:-1:-1;;;3456:469:14:o;366:36:7:-;;;-1:-1:-1;;;;;366:36:7;;:::o;29419:414:6:-;29536:22;;29480:7;;;;-1:-1:-1;;;;;29536:22:6;:36;29532:214;;29619:22;;29602:133;;-1:-1:-1;;;29602:133:6;;-1:-1:-1;;;;;29619:22:6;;;;29602:64;;:133;;29692:4;;29715:6;;29602:133;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;29602:133:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;29602:133:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;29602:133:6;;;;;;;;;29588:147;;29532:214;29762:64;29819:6;29762:52;29801:12;:10;:12::i;:::-;29762:34;29784:11;29762:17;29772:6;29762:9;:17::i;:::-;:21;:34;:21;:34;:::i;:::-;:38;:52;:38;:52;:::i;:::-;:56;:64;:56;:64;:::i;:::-;29755:71;;;29419:414;;;;:::o;2068:18:3:-;;;;;;;;;;;;;;-1:-1:-1;;2068:18:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1546:202:0:-;1637:10;1613:4;1629:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;1629:29:0;;;;;;;;;;:38;;;1682;1613:4;;1629:29;;1682:38;;;;1661:6;;1682:38;;;;;;;;;;-1:-1:-1;1737:4:0;1546:202;;;;;:::o;26226:129:6:-;26277:7;26303:45;26327:20;26345:1;26327:17;:20::i;26303:45::-;26296:52;;26226:129;;:::o;35808:719::-;36151:21;;36213:16;;;36138:176;;-1:-1:-1;;;36138:176:6;;36091:32;;-1:-1:-1;;;;;36151:21:6;;;;36138:57;;:176;;36151:21;36213:16;;;;;;;36247:22;;36287:13;;36138:176;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;36138:176:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;36138:176:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;36138:176:6;;;;;;;;;36091:223;-1:-1:-1;36324:28:6;36367:64;36417:13;36368:43;36091:223;1895:6:3;36368:43:6;:28;:43;:::i;36367:64::-;36324:107;;36473:13;36449:20;:37;;36441:79;;;;-1:-1:-1;;;36441:79:6;;;;;;;;;35808:719;;;;;:::o;27048:257::-;27123:7;27142:19;27164:18;:16;:18::i;:::-;27142:40;-1:-1:-1;27196:16:6;;27192:107;;27235:53;27263:11;27276;27235:27;:53::i;:::-;27228:60;;;;;27192:107;27048:257;;;;:::o;2160:89:1:-;2230:12;;2160:89;:::o;2574:27:3:-;;;;:::o;2256:23::-;;;;:::o;27808:180:6:-;27908:21;;27964:16;;;27895:86;;-1:-1:-1;;;27895:86:6;;27857:7;;-1:-1:-1;;;;;27908:21:6;;;;27895:53;;:86;;27957:4;;27908:21;27964:16;;;;;;;27895:86;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;27895:86:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;27895:86:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;27895:86:6;;;;;;;;19133:463;19447:21;;19434:58;;-1:-1:-1;;;19434:58:6;;19247:4;;19282:307;;19321:5;;19344:3;;19365:6;;-1:-1:-1;;;;;19447:21:6;;19434:46;;:58;;19481:10;;19434:58;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19434:58:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19434:58:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;19434:58:6;;;;;;;;;:141;;-1:-1:-1;;;;;19549:14:6;;;;;;:7;:14;;;;;;;;19564:10;19549:26;;;;;;;;19434:141;;;-1:-1:-1;;19434:141:6;19282:21;:307::i;:::-;19263:326;19133:463;-1:-1:-1;;;;19133:463:6:o;13006:3276::-;13615:7;13636;502:1:186;1185:14;;:39;1177:64;;;;-1:-1:-1;;;1177:64:186;;;;;;;;;607:1;1251:14;:40;;;;1387:16:197;1043:42;-1:-1:-1;;;;;1406:26:197;;:28;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1406:28:197;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1406:28:197;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1406:28:197;;;;;;;;;1387:47;;13729:13:6;:11;:13::i;:::-;-1:-1:-1;;;;;13757:36:6;;13753:109;;13834:17;;-1:-1:-1;;;;;13834:17:6;;-1:-1:-1;13753:109:6;13906:16;;-1:-1:-1;;;;;13880:42:6;;;13906:16;;;;;13880:42;;13872:57;;;;-1:-1:-1;;;13872:57:6;;;;;;;;;14005:11;;;:35;;-1:-1:-1;14020:10:6;-1:-1:-1;;;;;14020:20:6;;;14005:35;13997:72;;;;-1:-1:-1;;;13997:72:6;;;;;;;;;-1:-1:-1;;;;;14131:40:6;;14174:1;14131:40;;;:16;:40;;;;;;:44;14127:134;;-1:-1:-1;;;;;14220:40:6;;;;;;:16;:40;;;;;;14197:63;;;14189:72;;;;;;14292:16;;;;;-1:-1:-1;;;;;14292:16:6;14312:1;14275:34;;;:16;:34;;;;;;:38;14271:116;;14369:16;;;;;-1:-1:-1;;;;;14369:16:6;14352:34;;;;:16;:34;;;;;;14335:51;;;14327:60;;;;;;14572:20;14607:73;14621:22;14645:19;14666:13;14607;:73::i;:::-;14572:108;-1:-1:-1;14698:17:6;14690:32;;;;-1:-1:-1;;;14690:32:6;;;;;;;;;14733:59;;:::i;:::-;14802:55;;:::i;:::-;14899:4;14868:36;;-1:-1:-1;;;;;14914:31:6;;:22;;;;:31;;;14955:22;;;:31;;;;15136:24;;:39;;;15313:25;;;:41;;;15364:31;;;:53;;;15428:17;:15;:17::i;:::-;15511:154;15585:14;15613:11;:24;;;15511:29;:154::i;:::-;15456:209;;15457:24;;;15456:209;;;15714:16;;1273:5:7;;15697:60:6;;15714:16;;;-1:-1:-1;;;;;15714:16:6;;15697;:60::i;:::-;:74;15676:140;;;;-1:-1:-1;;;15676:140:6;;;;;;;;;15889:36;15902:6;15910:14;15889:12;:36::i;:::-;15935:25;;;:41;;;15872:53;-1:-1:-1;16005:270:6;16037:6;16061:1;15872:53;16148:22;16188:13;15935:11;16248:13;16005:14;:270::i;:::-;15986:289;;;;;;;1043:42:197;-1:-1:-1;;;;;1660:11:197;;:13;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1660:13:197;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1660:13:197;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1660:13:197;;;;;;;;;1648:8;:25;1640:58;;;;-1:-1:-1;;;1640:58:197;;;;;;;;;-1:-1:-1;502:1:186;1312:14;:38;13006:3276:6;;;;-1:-1:-1;13006:3276:6;-1:-1:-1;;;;;;;13006:3276:6:o;7186:3796::-;7896:7;7917;502:1:186;1185:14;;:39;1177:64;;;;-1:-1:-1;;;1177:64:186;;;;;;;;;607:1;1251:14;:40;;;;1387:16:197;1043:42;-1:-1:-1;;;;;1406:26:197;;:28;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1406:28:197;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1406:28:197;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1406:28:197;;;;;;;;;1387:47;-1:-1:-1;8017:19:6;8009:33;;;;-1:-1:-1;;;8009:33:6;;;;;;;;;8053:13;:11;:13::i;:::-;-1:-1:-1;;;;;8128:40:6;;8171:1;8128:40;;;:16;:40;;;;;;:44;8124:134;;-1:-1:-1;;;;;8217:40:6;;;;;;:16;:40;;;;;;8194:63;;;8186:72;;;;;;8291:9;:14;;:50;;;8322:19;8309:9;:32;8291:50;8290:113;;;;-1:-1:-1;8363:24:6;;;;:39;;-1:-1:-1;8391:11:6;;;8363:39;8290:204;;;;-1:-1:-1;;;;;;8424:36:6;;;;;:54;;-1:-1:-1;8464:9:6;:14;;8424:54;:69;;;-1:-1:-1;8482:11:6;;;8424:69;8290:263;;;;-1:-1:-1;8515:11:6;;;:37;;-1:-1:-1;8530:10:6;-1:-1:-1;;;;;8530:22:6;;;8515:37;8269:311;;;;-1:-1:-1;;;8269:311:6;;;;;;;;;9496:16;;-1:-1:-1;;;;;9470:42:6;;;9496:16;;;;;9470:42;;9462:57;;;;-1:-1:-1;;;9462:57:6;;;;;;;;;9530:17;:15;:17::i;:::-;9558:59;;:::i;:::-;9627:55;;:::i;:::-;9724:4;9693:36;;-1:-1:-1;;;;;9755:33:6;;;:22;;;;:33;;;;9798;;;:22;;;:33;9907:24;;:41;;;10176:177;9934:14;10259:20;9693;10259:17;:20::i;:::-;10324:19;10176:31;:177::i;:::-;10054:11;:24;;10092:11;:33;;10139:11;:24;;10040:313;;;;;;;;;;;;;;;10459:19;10425:11;:31;;:53;;;;;10508:467;10540:6;10564:14;10617:21;;;;;;;;;-1:-1:-1;;;;;10617:21:6;-1:-1:-1;;;;;10596:60:6;;10678:13;:127;10752:22;10776:4;10735:46;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;10735:46:6;;;10725:57;;;;;;10717:66;;10678:127;;;;;;;;;;;;10596:227;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10596:227:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10596:227:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;10596:227:6;;;;;;;;;10841:22;10881:13;10912:11;10508:467;;;;;;;;;;;;:14;:467::i;:::-;10489:486;;;;;;1043:42:197;-1:-1:-1;;;;;1660:11:197;;:13;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;408:32:7;;;-1:-1:-1;;;;;408:32:7;;:::o;2118:21:3:-;;;;;;:::o;2778:48::-;;;;;;;;;;;;;:::o;2285:29::-;;;;:::o;3124:222:6:-;3263:18;502:1:186;1185:14;;:39;1177:64;;;;-1:-1:-1;;;1177:64:186;;;;;;;;;607:1;1251:14;:40;;;;1387:16:197;1043:42;-1:-1:-1;;;;;1406:26:197;;:28;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1406:28:197;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1406:28:197;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1406:28:197;;;;;;;;;1387:47;;3304:35:6;3315:8;3325:13;3304:10;:35::i;:::-;3297:42;;1445:1:197;1043:42;-1:-1:-1;;;;;1660:11:197;;:13;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1660:13:197;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1660:13:197;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1660:13:197;;;;;;;;;1648:8;:25;1640:58;;;;-1:-1:-1;;;1640:58:197;;;;;;;;;-1:-1:-1;502:1:186;1312:14;:38;3124:222:6;;-1:-1:-1;;3124:222:6:o;25296:129::-;25350:7;25376:42;25399:18;:16;:18::i;:::-;25376:22;:42::i;22832:312::-;22887:6;22954:12;22996:4;1128:66:7;23002:18:6;;22979:42;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;22979:42:6;;;22969:53;;;;;;22954:68;;23067:70;23077:4;23083:8;:14;23092:4;-1:-1:-1;;;;;23083:14:6;-1:-1:-1;;;;;23083:14:6;;;;;;;;;;;;;23099:12;:10;:12::i;:::-;-1:-1:-1;;;;;23113:23:6;;;;;;:17;:23;;;;;;23067:9;:70::i;2431:24:3:-;;;;:::o;24913:263:6:-;24961:7;24980:19;25002:20;25020:1;25002:17;:20::i;:::-;24980:42;;25032:19;25054:18;:16;:18::i;:::-;25032:40;;25100:11;25086;:25;25082:88;;;25134:25;;;-1:-1:-1;25127:32:6;;25082:88;24913:263;;;:::o;32190:1430::-;32410:21;32447:17;;32443:1171;;32485:23;32528:164;32581:12;32615:18;:16;:18::i;32528:164::-;32480:212;;;;32730:20;:18;:20::i;:::-;32711:15;:39;32707:897;;-1:-1:-1;;;;;32774:36:6;;32770:104;;32857:17;;-1:-1:-1;;;;;32857:17:6;;-1:-1:-1;32770:104:6;32892:20;32935:13;:127;33009:22;33033:4;32992:46;;;;;;;;;;;;;;-1:-1:-1;;26:21;;;22:32;6:49;;32992:46:6;;;32982:57;;49:4:-1;32982:57:6;;;;32935:127;;;;;;;;;;;32974:66;32935:127;;33120:21;;33215:16;;;33346:74;;-1:-1:-1;;;33346:74:6;;32935:127;;-1:-1:-1;33107:433:6;;33537:2;;-1:-1:-1;;;;;33120:21:6;;;;33107:82;;33120:21;33215:16;;;;;33257:22;;33305:15;;33120:21;;33346:60;;:74;;32935:127;;33346:74;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;33346:74:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;33346:74:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;33346:74:6;;;;;;;;;33464:4;33107:400;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;33107:400:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;33107:400:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;33107:400:6;;;;;;;;:433;33080:460;;;;;;30319:1117;30582:17;;;-1:-1:-1;;;;;30694:36:6;;30690:109;;30771:17;;-1:-1:-1;;;;;30771:17:6;;-1:-1:-1;30690:109:6;30809:20;30844:73;30858:22;30882:19;30903:13;30844;:73::i;:::-;30809:108;;30956:59;30986:14;31002:12;30956:29;:59::i;:::-;30928:87;;-1:-1:-1;30928:87:6;-1:-1:-1;31041:20:6;:18;:20::i;:::-;31029:9;:32;31025:79;;;-1:-1:-1;31085:1:6;;-1:-1:-1;31085:1:6;;-1:-1:-1;31085:1:6;;-1:-1:-1;31077:16:6;;31025:79;31130:28;:13;31148:9;31130:28;:17;:28;:::i;:::-;31195:21;;31258:16;;;31182:247;;-1:-1:-1;;;31182:247:6;;31114:44;;-1:-1:-1;;;;;;31195:21:6;;;;31182:62;;:247;;31195:21;31258:16;;;;;31288:22;;31114:44;;31351:19;;31384:12;;31410:9;;31182:247;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;31182:247:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;31182:247:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;31182:247:6;;;;;;;;;31169:260;;30319:1117;;;;;;;;;;:::o;56141:532::-;56265:7;56292:16;;;;;:46;;;56327:11;56312;:26;;56292:46;56288:379;;;56377:279;56649:6;56377:246;56528:77;56541:6;56562:21;;;;;;;;;-1:-1:-1;;;;;56562:21:6;-1:-1:-1;;;;;56549:53:6;;:55;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;56549:55:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;56549:55:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;56549:55:6;;;;;;;;;56528:12;:77::i;:::-;56377:104;56438:42;56455:11;56468;56438:16;:42::i;:::-;56377:35;56400:11;56377:22;:35::i;:279::-;56354:302;;;;2444:105:1;-1:-1:-1;;;;;2526:16:1;2500:7;2526:16;;;:8;:16;;;;;;;2444:105::o;2218:31:3:-;;;;;;-1:-1:-1;;;;;2218:31:3;;:::o;2537:::-;;;;:::o;2356:36::-;;;;:::o;24132:281:6:-;24236:15;;24175:13;;;;24262:15;-1:-1:-1;;;;;24236:42:6;;;:15;;:42;24232:111;;24315:17;:15;:17::i;:::-;24294:38;-1:-1:-1;;24232:111:6;24360:46;24372:33;24390:14;24372:17;:33::i;:::-;24360:11;:46::i;:::-;24353:53;;;24132:281;:::o;28713:588::-;28810:23;29024:27;29054:29;29079:3;29054:20;29071:2;29054:12;;:16;;:20;;;;:::i;:29::-;29024:59;-1:-1:-1;29093:14:6;29110:40;29118:6;29024:59;29110:40;:19;:40;:::i;:::-;29093:57;;29160:19;29182:41;29216:6;29182:29;29204:6;29182:17;:15;:17::i;:41::-;29160:63;-1:-1:-1;29251:43:6;29279:14;29251:23;29160:63;29267:6;29251:23;:15;:23;:::i;:43::-;29233:61;28713:588;-1:-1:-1;;;;;28713:588:6:o;25632:110::-;25683:7;25709:26;25733:1;25709:23;:26::i;902:77:184:-;966:6;;-1:-1:-1;;;;;966:6:184;902:77;:::o;810:37:7:-;;;-1:-1:-1;;;;;810:37:7;;:::o;1233:92:184:-;1312:6;;1273:4;;-1:-1:-1;;;;;1312:6:184;1296:12;:10;:12::i;:::-;-1:-1:-1;;;;;1296:22:184;;1289:29;;1233:92;:::o;28193:268:6:-;28297:15;;28242:7;;;;28323:15;-1:-1:-1;;;;;28297:42:6;;;:15;;:42;28293:111;;28376:17;:15;:17::i;:::-;28355:38;-1:-1:-1;;28293:111:6;28421:33;28439:14;28421:17;:33::i;1201:1948:14:-;1377:16;;;1390:2;1377:16;;;;;;;;;1285:34;;1321:18;;1285:34;;1377:16;;;17:15:-1;;105:10;1377:16:14;88:34:-1;136:17;;-1:-1;1377:16:14;1355:38;;1450:18;;;1441:3;1445:1;1441:6;;;;;;;;-1:-1:-1;;;;;;1441:27:14;;;:6;;;;;;;;;;;:27;1478:6;;-1:-1:-1;;;1487:18:14;1478:3;;1482:1;;1478:6;;;;;;-1:-1:-1;;;;;;1478:27:14;;;:6;;;;;;;;;;;:27;1515:6;;-1:-1:-1;;;1524:20:14;1515:3;;1519:1;;1515:6;;;;;;-1:-1:-1;;;;;;1515:29:14;;;:6;;;;;;;;;;;:29;1554:6;;-1:-1:-1;;;1563:25:14;1554:3;;1558:1;;1554:6;;;;;;-1:-1:-1;;;;;;1554:34:14;;;:6;;;;;;;;;;;:34;1598:6;;-1:-1:-1;;;1607:34:14;1598:3;;1602:1;;1598:6;;;;;;-1:-1:-1;;;;;;1598:43:14;;;:6;;;;;;;;;;;:43;1651:6;;-1:-1:-1;;;1660:22:14;1651:3;;1655:1;;1651:6;;;;;;-1:-1:-1;;;;;;1651:31:14;;;:6;;;;;;;;;;;:31;1692:6;;-1:-1:-1;;;1701:26:14;1692:3;;1696:1;;1692:6;;;;;;-1:-1:-1;;;;;;1692:35:14;;;:6;;;;;;;;;;;:35;1737:6;;-1:-1:-1;;;1746:22:14;1737:3;;1741:1;;1737:6;;;;;;-1:-1:-1;;;;;;1737:31:14;;;:6;;;;;;;;;;;:31;1778:6;;-1:-1:-1;;;1787:24:14;1778:3;;1782:1;;1778:6;;;;;;-1:-1:-1;;;;;;1778:33:14;;;:6;;;;;;;;;;;:33;1821:6;;-1:-1:-1;;;1830:29:14;1821:3;;1825:1;;1821:6;;;;;;-1:-1:-1;;;;;;1821:38:14;;;:6;;;;;;;;;;;:38;1869:7;;-1:-1:-1;;;1879:29:14;1869:3;;1873:2;;1869:7;;;;;;-1:-1:-1;;;;;;1869:39:14;;;:7;;;;;;;;;;;:39;1918:7;;-1:-1:-1;;;1928:35:14;1918:3;;1922:2;;1918:7;;;;;;-1:-1:-1;;;;;;1918:45:14;;;:7;;;;;;;;;;;:45;1973:7;;-1:-1:-1;;;1983:32:14;1973:3;;1977:2;;1973:7;;;;;;-1:-1:-1;;;;;;1973:42:14;;;:7;;;;;;;;;;;:42;2025:7;;-1:-1:-1;;;2035:36:14;2025:3;;2029:2;;2025:7;;;;;;-1:-1:-1;;;;;;2025:46:14;;;:7;;;;;;;;;;;:46;2081:7;;-1:-1:-1;;;2091:32:14;2081:3;;2085:2;;2081:7;;;;;;-1:-1:-1;;;;;;2081:42:14;;;:7;;;;;;;;;;;:42;2133:7;;-1:-1:-1;;;2143:36:14;2133:3;;2137:2;;2133:7;;;;;;-1:-1:-1;;;;;;2133:46:14;;;:7;;;;;;;;;;;:46;2189:7;;-1:-1:-1;;;2199:37:14;2189:3;;2193:2;;2189:7;;;;;;-1:-1:-1;;;;;;2189:47:14;;;:7;;;;;;;;;;;:47;2246:7;;-1:-1:-1;;;2256:30:14;2246:3;;2250:2;;2246:7;;;;;;-1:-1:-1;;;;;;2246:40:14;;;:7;;;;;;;;;;;:40;2296:7;;-1:-1:-1;;;2306:30:14;2296:3;;2300:2;;2296:7;;;;;;-1:-1:-1;;;;;;2296:40:14;;;:7;;;;;;;;;;;:40;2346:7;;-1:-1:-1;;;2356:32:14;2346:3;;2350:2;;2346:7;;;;;;-1:-1:-1;;;;;;2346:42:14;;;:7;;;;;;;;;;;:42;2398:7;;-1:-1:-1;;;2408:28:14;2398:3;;2402:2;;2398:7;;;;;;-1:-1:-1;;;;;;2398:38:14;;;:7;;;;;;;;;;;:38;2446:7;;-1:-1:-1;;;2456:39:14;2446:3;;2450:2;;2446:7;;;;;;-1:-1:-1;;;;;;2446:49:14;;;:7;;;;;;;;;;;:49;2505:7;;-1:-1:-1;;;2515:39:14;2505:3;;2509:2;;2505:7;;;;;;-1:-1:-1;;;;;;2505:49:14;;;:7;;;;;;;;;;;:49;2564:7;;-1:-1:-1;;;2574:39:14;2564:3;;2568:2;;2564:7;;;;;;-1:-1:-1;;;;;;2564:49:14;;;:7;;;;;;;;;;;:49;2623:7;;-1:-1:-1;;;2633:34:14;2623:3;;2627:2;;2623:7;;;;;;-1:-1:-1;;;;;;2623:44:14;;;:7;;;;;;;;;;;:44;2677:7;;-1:-1:-1;;;2687:41:14;2677:3;;2681:2;;2677:7;;;;;;-1:-1:-1;;;;;;2677:51:14;;;:7;;;;;;;;;;;:51;2767:7;;-1:-1:-1;;;2777:25:14;2767:3;;2771:2;;2767:7;;;;;;-1:-1:-1;;;;;;2767:35:14;;;:7;;;;;;;;;;;:35;2812:7;;-1:-1:-1;;;2822:23:14;2812:3;;2816:2;;2812:7;;;;;;-1:-1:-1;;;;;;2812:33:14;;;:7;;;;;;;;;;;:33;2882:7;;-1:-1:-1;;;2892:21:14;2882:3;;2886:2;;2882:7;;;;;;-1:-1:-1;;;;;;2882:31:14;;;:7;;;;;;;;;;;:31;2958:7;;-1:-1:-1;;;2968:25:14;2958:3;;2962:2;;2958:7;;;;;;-1:-1:-1;;;;;;2958:35:14;;;:7;;;;;;;;;;;:35;3003:7;;-1:-1:-1;;;3013:23:14;3003:3;;3007:2;;3003:7;;;;;;-1:-1:-1;;;;;;3003:33:14;;;:7;;;;;;;;;;;:33;3046:7;;-1:-1:-1;;;3056:23:14;3046:3;;3050:2;;3046:7;;;;;;;;;;;:33;-1:-1:-1;;;;;3046:33:14;;;;-1:-1:-1;;;;;3046:33:14;;;;;;3098:3;3103:38;;;;;;;;;;;;;;-1:-1:-1;;;3103:38:14;;;:15;:38::i;:::-;3090:52;;;;;1201:1948;;:::o;2092:20:3:-;;;;;;;;;;;;;;;-1:-1:-1;;2092:20:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;446:22:7;;;-1:-1:-1;;;;;446:22:7;;:::o;3877:433:6:-;4013:22;502:1:186;1185:14;;:39;1177:64;;;;-1:-1:-1;;;1177:64:186;;;;;;;;;607:1;1251:14;:40;;;;1387:16:197;1043:42;-1:-1:-1;;;;;1406:26:197;;:28;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1406:28:197;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1406:28:197;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1406:28:197;;;;;;;;;1387:47;;4068:22:6;4079:10;4068;:22::i;:::-;4051:39;-1:-1:-1;4196:19:6;;4192:112;;4231:62;4245:16;;;;;;;;;-1:-1:-1;;;;;4245:16:6;4263:8;4273:14;4231:62;;;;;;;;;;;;;-1:-1:-1;;;4231:62:6;;;:13;:62::i;727:21:7:-;;;-1:-1:-1;;;;;727:21:7;;:::o;18726:154:6:-;18791:4;18814:59;18836:10;18848:3;18853:6;-1:-1:-1;;18814:21:6;:59::i;25920:145::-;25995:7;26021:37;26045:12;26021:23;:37::i;2399:26:3:-;;;;:::o;640:31:7:-;;;-1:-1:-1;;;;;640:31:7;;:::o;1285:305::-;1441:26;;1353:14;;1420:6;;1437:72;;-1:-1:-1;1495:3:7;;-1:-1:-1;1488:10:7;;1437:72;-1:-1:-1;;1570:2:7;1558:15;1552:22;;1528:56::o;26608:171:6:-;26683:7;26709:63;26733:38;26758:12;26733:20;26751:1;26733:17;:20::i;2320:30:3:-;;;;:::o;2909:132:1:-;-1:-1:-1;;;;;3009:15:1;;;2983:7;3009:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;2909:132::o;3011:51:3:-;;;;;;;;;;;;;:::o;24610:124:6:-;-1:-1:-1;;;;;24703:24:6;24671:13;24703:24;;;:17;:24;;;;;;;24610:124::o;2461:27:3:-;;;;:::o;1474:107:184:-;1106:9;:7;:9::i;:::-;1098:34;;;;-1:-1:-1;;;1098:34:184;;;;;;;;;1546:28;1565:8;1546:18;:28::i;:::-;1474:107;:::o;17184:1218:6:-;17783:7;;-1:-1:-1;;;;;17901:31:6;;;17897:194;;17974:21;;17946:145;;-1:-1:-1;;;17946:145:6;;-1:-1:-1;;;;;17974:21:6;;;;17946:72;;:145;;18036:6;;18060:17;;17946:145;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17946:145:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17946:145:6;;;;17897:194;18120:275;18149:6;18173:14;18205:13;18236:19;18273:22;18313:6;18337:13;18368;;18120:275;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;18120:11:6;;-1:-1:-1;;;18120:275:6:i;:::-;18101:294;;;;17184:1218;;;;;;;;;;;;;:::o;474:20:7:-;;;-1:-1:-1;;;;;474:20:7;;:::o;1235:43::-;1273:5;1235:43;:::o;3155:295:14:-;3306:18;502:1:186;1185:14;;:39;1177:64;;;;-1:-1:-1;;;1177:64:186;;;;;;;;;607:1;1251:14;:40;;;;1387:16:197;1043:42;-1:-1:-1;;;;;1406:26:197;;:28;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1406:28:197;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1406:28:197;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1406:28:197;;;;;;;;;1387:47;;3344:5:14;3340:103;;;3358:32;3370:8;3380:9;3358:11;:32::i;:::-;3351:39;;;;3340:103;3412:31;3423:8;3433:9;3412:10;:31::i;897:35:7:-;931:1;897:35;:::o;44278:853:6:-;44506:20;44540:29;44583:23;44646:51;44671:12;44685:11;44646:24;:51::i;:::-;44631:66;-1:-1:-1;44839:217:6;44881:165;44911:6;44935:72;44989:17;44935:49;44911:6;44935:37;44631:66;44952:19;44935:37;:16;:37;:::i;44881:165::-;44839:24;:12;44856:6;44839:24;:16;:24;:::i;:217::-;44821:235;-1:-1:-1;45091:33:6;44821:235;45111:12;45091:33;:19;:33;:::i;:::-;45067:57;;44278:853;;;;;;;:::o;54844:135::-;54930:16;;;54923:49;;-1:-1:-1;;;54923:49:6;;54897:7;;54930:16;;;;-1:-1:-1;;;;;54930:16:6;;54923:34;;:49;;54966:4;;54923:49;;;65521:994;65650:22;;65633:137;;-1:-1:-1;;;65633:137:6;;65580:7;;;;-1:-1:-1;;;;;65650:22:6;;;;65633:64;;:137;;65723:4;;65746:10;;65633:137;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;65633:137:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;65633:137:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;65633:137:6;;;;;;;;;65599:171;;65830:10;65788:38;65804:21;65814:10;65804:9;:21::i;:::-;65788:11;;:38;:15;:38;:::i;:::-;:52;;65780:83;;;;-1:-1:-1;;;65780:83:6;;;;;;;;;65878:15;;65874:552;;65999:10;65985:11;:24;65981:435;;;66046:22;;66029:167;;-1:-1:-1;;;66029:167:6;;-1:-1:-1;;;;;66046:22:6;;;;66029:49;;:167;;66108:4;;66135:11;;66168:10;;66029:167;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;66029:167:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;66029:167:6;;;;65981:435;;;66252:22;;66235:166;;-1:-1:-1;;;66235:166:6;;-1:-1:-1;;;;;66252:22:6;;;;66235:49;;:166;;66314:4;;66341:10;;66373;;66235:166;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;66235:166:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;66235:166:6;;;;65981:435;66486:22;66497:10;38917:1465;38975:22;39017:15;39009:30;;;;-1:-1:-1;;;39009:30:6;;;;;;;;;39067:21;39077:10;39067:9;:21::i;:::-;39054:10;:34;39050:153;;;-1:-1:-1;;39112:10:6;:25;39104:40;;;;-1:-1:-1;;;39104:40:6;;;;;;;;;39171:21;39181:10;39171:9;:21::i;:::-;39158:34;;39050:153;39213:17;:15;:17::i;:::-;39241:20;39264:33;39276:20;39294:1;39276:17;:20::i;39264:33::-;39241:56;-1:-1:-1;39308:22:6;39333:40;39366:6;39333:28;:10;39241:56;39333:28;:14;:28;:::i;:40::-;39308:65;;39383:37;39423:20;:18;:20::i;:::-;39383:60;;39471:14;39454:31;;39521:29;39503:14;:47;;39495:62;;;;-1:-1:-1;;;39495:62:6;;;;;;;;;39763:22;;39726:19;;-1:-1:-1;;;;;39763:22:6;:36;39759:205;;39844:22;;39827:137;;-1:-1:-1;;;39827:137:6;;-1:-1:-1;;;;;39844:22:6;;;;39827:64;;:137;;39917:4;;39940:10;;39827:137;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;39827:137:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;39827:137:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;39827:137:6;;;;;;;;;39813:151;;39759:205;40004:10;39974:18;39995:20;;;:8;:20;;;;;;:37;;40020:11;39995:37;:24;:37;:::i;:::-;39974:58;-1:-1:-1;40042:18:6;40063:26;39974:58;40078:10;40063:26;:14;:26;:::i;:::-;40042:47;;40100:59;40106:10;40118;40130:14;40146:12;40100:5;:59::i;:::-;;40307:68;40326:10;40338;40350;40362:12;40307:18;:68::i;:::-;38917:1465;;;;;;;;;:::o;2624:357:178:-;2730:6;2705:21;:31;;2697:73;;;;-1:-1:-1;;;2697:73:178;;;;;;;;;2836:12;2854:9;-1:-1:-1;;;;;2854:14:178;2875:6;2854:32;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;2835:51:178;;;2904:7;2896:78;;;;-1:-1:-1;;;2896:78:178;;;;;;;;;2624:357;;;:::o;842:176:188:-;900:7;931:5;;;954:6;;;;946:46;;;;-1:-1:-1;;;946:46:188;;;;;;;;2197:459;2255:7;2496:6;2492:45;;-1:-1:-1;2525:1:188;2518:8;;2492:45;2559:5;;;2563:1;2559;:5;:1;2582:5;;;;;:10;2574:56;;;;-1:-1:-1;;;2574:56:188;;;;;;;;3111:130;3169:7;3195:39;3199:1;3202;3195:39;;;;;;;;;;;;;;;;;:3;:39::i;62402:486:6:-;62500:19;62539:12;;62555:1;62539:17;62535:347;;62596:19;;62704:18;62700:117;;62758:44;62783:18;:16;:18::i;:::-;62758:20;:18;:20::i;:44::-;62742:60;;62700:117;62838:33;:13;62856:14;62838:33;:17;:33;:::i;20018:1466::-;20175:4;-1:-1:-1;;20195:16:6;:31;20191:292;;20271:34;;;;;;;;;;;;-1:-1:-1;;;20271:34:6;;;;;;:16;;20292:6;;20271:34;:20;:34;:::i;:::-;-1:-1:-1;;;;;20242:14:6;;;;;;:7;:14;;;;;;;;20257:10;20242:26;;;;;;;;;:63;;;20392:80;;20257:10;;20392:80;;;;20427:16;;20392:80;;;;;;;;;;20191:292;-1:-1:-1;;;;;20501:17:6;;20493:32;;;;-1:-1:-1;;;20493:32:6;;;;;;;;;-1:-1:-1;;;;;20560:15:6;;20536:21;20560:15;;;:8;:15;;;;;;;;;20612:31;;;;;;;;;;;-1:-1:-1;;;20612:31:6;;;;;;;20560:15;;20536:21;20612:31;;20560:15;;20630:6;;20612:31;:17;:31;:::i;:::-;-1:-1:-1;;;;;20653:15:6;;;;;;;:8;:15;;;;;;:34;;;20720:13;;;;;;;;;20585:58;;-1:-1:-1;20768:23:6;20720:13;20784:6;20768:23;:15;:23;:::i;:::-;-1:-1:-1;;;;;20801:13:6;;;;;;:8;:13;;;;;:30;;;20743:48;;-1:-1:-1;20909:12:6;:10;:12::i;:::-;21177:22;;20885:36;;-1:-1:-1;;;;;;21168:31:6;;;21177:22;;21168:31;;;;:64;;-1:-1:-1;21210:22:6;;-1:-1:-1;;;;;21203:29:6;;;21210:22;;21203:29;;21168:64;21164:249;;;21248:73;21267:5;21274:13;21289:16;21307:13;21248:18;:73::i;:::-;21335:67;21354:3;21359:11;21372:14;21388:13;21335:18;:67::i;:::-;21444:3;-1:-1:-1;;;;;21428:28:6;21437:5;-1:-1:-1;;;;;21428:28:6;;21449:6;21428:28;;;;;;;;;;;;;;;-1:-1:-1;21473:4:6;;20018:1466;-1:-1:-1;;;;;;;;;20018:1466:6:o;63084:460::-;63177:12;63269:7;;-1:-1:-1;;;;;;63269:7:6;63306:66;63231:160;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;63231:160:6;;;63204:201;;;;;;63177:228;;63415:13;63479:4;63473:11;63461:23;;63512:8;63511:9;63503:34;;;;-1:-1:-1;;;63503:34:6;;;;;;;;;63084:460;;:::o;41391:1830::-;41598:13;41626:24;;41622:1593;;41732:28;41762:33;41838:21;;;;;;;;;-1:-1:-1;;;;;41838:21:6;-1:-1:-1;;;;;41825:46:6;;:48;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;41825:48:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;41825:48:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;41825:48:6;;;;;;;;;41950:16;;;41815:169;;-1:-1:-1;;;41815:169:6;;-1:-1:-1;;;;;41815:69:6;;;;;;:169;;41906:22;;41950:16;;;;;;;;41815:169;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;41815:169:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;41815:169:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;41815:169:6;;;;;;;;;41731:253;;;;42024:20;42048:1;42024:25;;42023:63;;;;-1:-1:-1;42055:30:6;;;42023:63;41998:151;;;;-1:-1:-1;;;41998:151:6;;;;;;;;;42237:23;42279:76;42329:25;42279:45;:19;42303:20;42279:45;:23;:45;:::i;:76::-;42558:21;;42624:16;;;42545:194;;-1:-1:-1;;;42545:194:6;;42237:118;;-1:-1:-1;42497:29:6;;-1:-1:-1;;;;;42558:21:6;;;;42545:57;;:194;;42558:21;42624:16;;;;;;42662:22;;42237:118;;42545:194;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;42545:194:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;42545:194:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;42545:194:6;;;;;;;;;42497:242;;42855:19;42830:21;:44;42826:316;;43022:105;43090:19;43022:42;:15;43042:21;43022:42;:19;:42;:::i;:105::-;43004:123;;42826:316;43171:33;:15;43191:12;43171:33;:19;:33;:::i;:::-;43156:48;41391:1830;-1:-1:-1;;;;;;;;41391:1830:6:o;40670:261::-;40765:15;;40735;;-1:-1:-1;;;;;40765:21:6;;;:15;;:21;40761:164;;40815:21;;40862:16;;;40802:77;;-1:-1:-1;;;40802:77:6;;-1:-1:-1;;;;;40815:21:6;;;;40802:59;;:77;;40815:21;40862:16;;;;;;40802:77;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;40802:77:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;40894:15:6;:20;;-1:-1:-1;;;;;40894:20:6;;-1:-1:-1;;40894:20:6;;;;;;-1:-1:-1;;40670:261:6;:::o;61452:734::-;61585:20;;;61676:45;61714:6;61676:33;:13;61694:14;61676:33;:17;:33;:::i;:45::-;61643:78;;61941:70;61966:22;61990:20;62008:1;61990:17;:20::i;:::-;61941:24;:70::i;:::-;61926:85;;62117:62;62133:12;62147:7;62156:22;62117:15;:62::i;:::-;62102:77;;61452:734;;;;;;:::o;43431:354::-;43506:7;43526:16;43544:21;43604;;;;;;;;;-1:-1:-1;;;;;43604:21:6;-1:-1:-1;;;;;43591:46:6;;:48;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;43591:48:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;43591:48:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;43591:48:6;;;;;;;;;43691:17;;43581:141;;-1:-1:-1;;;43581:141:6;;-1:-1:-1;;;;;43581:69:6;;;;;;:141;;43668:5;;43691:17;;;;43581:141;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;43581:141:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;43581:141:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;43581:141:6;;;;;;;;;43525:197;;-1:-1:-1;43525:197:6;-1:-1:-1;43739:39:6;43525:197;43739:20;:6;43525:197;43739:20;:10;:20;:::i;46015:2757::-;46360:7;46369;46388:13;:11;:13::i;:::-;46460:20;:18;:20::i;:::-;46432:11;:24;;;:48;;:146;;;;-1:-1:-1;46542:22:6;;;;-1:-1:-1;;;;;46542:36:6;;;46432:146;46411:213;;;;-1:-1:-1;;;46411:213:6;;;;;;;;;46639:22;;;;-1:-1:-1;;;;;46639:36:6;46635:147;;46716:22;;;;-1:-1:-1;;;;;46691:47:6;:22;;;:47;46635:147;46872:16;46903:84;46920:22;46944:13;46959:11;46972:14;46903:16;:84::i;:::-;46872:115;;47196:55;47226:11;:24;;;47196:11;:25;;;:29;;:55;;;;:::i;:::-;47168:25;;;:83;47283:19;;47279:230;;47453:25;;;;:45;;47483:14;47453:45;:29;:45;:::i;:::-;47425:25;;;:73;47279:230;47519:24;47620:19;;47616:76;;-1:-1:-1;47677:4:6;47616:76;47702:20;47737:13;:126;47803:22;47827:19;47786:61;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;47786:61:6;;;47776:72;;;;;;47768:81;;47737:126;;;;;;;;;;;;47702:161;;47962:21;;;;;;;;;-1:-1:-1;;;;;47962:21:6;-1:-1:-1;;;;;47936:92:6;;48048:8;48071:12;48097:6;48117:19;48150:13;48177;48204:11;48229:13;47936:316;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;47936:316:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;47936:316:6;;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;47936:316:6;;;;;;;;;47901:31;;;47874:378;47875:24;;;47874:378;;;48294:44;;;;-1:-1:-1;;;48294:44:6;;;;;;;;;48564:21;;48625:22;;;;48536:121;;-1:-1:-1;;;48536:121:6;;-1:-1:-1;;;;;48564:21:6;;;;48536:75;;:121;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;48536:121:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;48536:121:6;;;;48676:11;:24;;;48702:11;:31;;;48668:66;;;;;;;46015:2757;;;;;;;;;;:::o;36857:1057::-;36952:18;36986:20;37115:30;37131:13;37115:15;:30::i;:::-;37351:22;;37086:59;;-1:-1:-1;37086:59:6;-1:-1:-1;37314:19:6;;-1:-1:-1;;;;;37351:22:6;:36;37347:203;;37432:22;;37415:135;;-1:-1:-1;;;37415:135:6;;-1:-1:-1;;;;;37432:22:6;;;;37415:64;;:135;;37505:4;;37528:8;;37415:135;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37415:135:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;37415:135:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;37415:135:6;;;;;;;;;37401:149;;37347:203;-1:-1:-1;;;;;37581:18:6;;37560;37581;;;:8;:18;;;;;;:35;;37604:11;37581:35;:22;:35;:::i;:::-;37560:56;-1:-1:-1;37626:18:6;37647:26;37560:56;37662:10;37647:26;:14;:26;:::i;:::-;37626:47;;37726:56;37732:8;37742:10;37754:13;37769:12;37726:5;:56::i;:::-;;37841:66;37860:8;37870:10;37882;37894:12;37841:18;:66::i;:::-;36857:1057;;;;;;;;:::o;55607:275::-;55683:7;55706:16;;55702:174;;55739:26;55771:17;:15;:17::i;:::-;-1:-1:-1;55738:50:6;-1:-1:-1;55809:56:6;55853:11;55809:39;55844:3;55809:30;55738:50;55832:6;55809:30;:22;:30;:::i;23484:513::-;23645:18;23679:21;23675:60;;-1:-1:-1;23723:1:6;23716:8;;23675:60;-1:-1:-1;23783:11:6;;23828:162;23783:11;23828:132;2012:6:3;23828:99:6;23917:8;23828:64;23835:13;23874:16;23828:64;:38;:64;:::i;:::-;:81;:99;:81;:99;:::i;:::-;:116;:132;:116;:132;:::i;:::-;:149;:162;:149;:162;:::i;1282:134:188:-;1340:7;1366:43;1370:1;1373;1366:43;;;;;;;;;;;;;;;;;:3;:43::i;64708:306:6:-;64823:7;64850:16;;;;;:36;;-1:-1:-1;64870:16:6;;;64850:36;64846:162;;;64957:40;64985:11;64957:23;:11;64973:6;64957:23;:15;:23;:::i;60509:588::-;60891:21;;60973:16;;;60865:125;;-1:-1:-1;;;60865:125:6;;60583:26;;;;;;-1:-1:-1;;;;;60891:21:6;;;;60865:92;;:125;;60966:4;;60891:21;60973:16;;;;;;60865:125;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;60865:125:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;60865:125:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;60865:125:6;;;;;;;;;-1:-1:-1;60800:190:6;;-1:-1:-1;60800:190:6;-1:-1:-1;60800:190:6;-1:-1:-1;61018:72:6;;-1:-1:-1;61083:6:6;;-1:-1:-1;61018:60:6;61037:40;61083:6;60800:190;61037:12;:40::i;:::-;61018:14;;:60;:18;:60;:::i;:72::-;61001:89;;60509:588;;;:::o;55172:244::-;55283:12;;55237:7;;55325:21;:84;;55397:12;;55325:84;;;55349:45;55377:16;55349:23;:11;55365:6;55349:23;:15;:23;:::i;56868:561::-;56946:7;;57001:17;;56997:335;;57038:15;;57064;-1:-1:-1;;;;;57038:42:6;;;:15;;:42;57034:119;;57121:17;:15;:17::i;:::-;57100:38;-1:-1:-1;;57034:119:6;57167:15;57185:40;57210:14;57185:20;:18;:20::i;:40::-;57167:58;;57258:7;57243:12;:22;57239:83;;;57300:7;57285:22;;57239:83;56997:335;;57349:73;57374:12;57388:33;57406:14;57388:17;:33::i;795:96:179:-;874:10;795:96;:::o;52454:305:6:-;52653:67;;52601:151;;52634:5;;-1:-1:-1;;;52676:31:6;52653:67;;52709:2;;52713:6;;52653:67;;;;;;;;-1:-1:-1;;26:21;;;22:32;6:49;;52653:67:6;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;-1:-1;;;;;;52653:67:6;;;179:29:-1;;;;160:49;;;52734:8:6;52601:19;:151::i;:::-;52454:305;;;;:::o;1682:225:184:-;-1:-1:-1;;;;;1755:22:184;;1747:73;;;;-1:-1:-1;;;1747:73:184;;;;;;;;;1856:6;;1835:38;;-1:-1:-1;;;;;1835:38:184;;;;1856:6;;1835:38;;1856:6;;1835:38;1883:6;:17;;-1:-1:-1;;;;;;1883:17:184;-1:-1:-1;;;;;1883:17:184;;;;;;;;;;1682:225::o;65020:495:6:-;65116:14;65198:35;65209:8;65219:13;65198:10;:35::i;:::-;65342:22;;65189:44;;-1:-1:-1;65310:71:6;;65332:8;;-1:-1:-1;;;;;65342:22:6;65189:44;;65310:21;:71::i;:::-;-1:-1:-1;65449:22:6;;65432:76;;-1:-1:-1;;;65432:76:6;;-1:-1:-1;;;;;65449:22:6;;;;65432:58;;:76;;65491:8;;65501:6;;65432:76;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;65432:76:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;58333:1964:6;58460:16;58492;58511:70;58528:39;58551:15;58528:18;:16;:18::i;:39::-;58569:11;58511:16;:70::i;:::-;58676:8;;58723:14;;58773:11;;58818:9;;58864:12;;58492:89;;-1:-1:-1;58592:19:6;;;;58676:8;58723:14;58773:11;58818:9;58891:26;;;58887:167;;;59028:15;59017:26;;58887:167;59079:13;59068:8;:24;59064:1227;;;59264:25;;;;;1957:6:3;59189:37:6;;;59307:23;;;59303:52;;;59343:12;59332:23;;59303:52;59596:112;59682:12;59596:64;1957:6:3;59596:37:6;:13;59614:18;59596:37;:17;:37;:::i;:112::-;59579:129;;59734:149;59868:14;59734:112;59833:12;59734:77;59764:46;59777:16;59795:14;59764:12;:46::i;:::-;59734:8;;:77;:29;:77;:::i;:149::-;59723:160;;59064:1227;;;;59925:107;60006:12;59925:59;1957:6:3;59925:32:6;:8;59938:18;59925:32;:12;:32;:::i;:107::-;59914:118;-1:-1:-1;60061:12:6;;-1:-1:-1;60061:12:6;;60104:36;:18;60061:12;60104:36;:22;:36;:::i;:::-;60087:53;;60170:11;60159:8;:22;60155:125;;;60194:11;60183:22;;60155:125;;;60239:14;60228:8;:25;60224:56;;;60266:14;60255:25;;60224:56;58333:1964;;;;;;;;;;;;:::o;3286:764:0:-;3517:38;;;;;;;;;;;-1:-1:-1;;;3517:38:0;;;;;;;;-1:-1:-1;;;;;3517:14:0;;3431:7;3517:14;;;:8;:14;;;;;;;3431:7;;3517:38;;:14;3536:12;;3517:38;:18;:38;:::i;:::-;3498:57;;3654:2;3642:8;:14;3638:173;;3748:26;:12;3765:8;3748:26;:16;:26;:::i;:::-;3733:41;;3799:1;3788:12;;3638:173;-1:-1:-1;;;;;3820:14:0;;;;;;:8;:14;;;;;:25;;;3871:12;;:30;;3888:12;3871:30;:16;:30;:::i;:::-;3856:12;:45;3917:46;;-1:-1:-1;;;;;3917:46:0;;;;;;;3928:12;;3942;;3956:6;;3917:46;;;;;;;;;;4001:1;-1:-1:-1;;;;;3978:40:0;3987:4;-1:-1:-1;;;;;3978:40:0;;4005:12;3978:40;;;;;;;;;;;;;;;4035:8;3286:764;-1:-1:-1;;;;;3286:764:0:o;21979:656:6:-;22218:43;;22193:12;;22218:43;;22235:5;;1128:66:7;;22218:43:6;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;22218:43:6;;;22208:54;;;;;;22193:69;;22273:21;22308:11;22323:1;22308:16;22304:203;;;22356:1;22340:17;;22304:203;;;22378:16;;22374:133;;-1:-1:-1;;;;;22471:24:6;;;;;;:17;:24;;;;;;22427:69;;22437:4;;22443:11;;22456:13;;22427:9;:69::i;:::-;22410:86;;22374:133;22540:28;;-1:-1:-1;;;;;22588:24:6;;;;;;;:17;:24;;;;;:40;;;;-1:-1:-1;;21979:656:6:o;3756:369:188:-;3872:7;3973:12;3965:6;3957:29;;;;-1:-1:-1;;;3957:29:188;;;;;;;;;;;3996:9;4012:1;4008;:5;;;;;;;3756:369;-1:-1:-1;;;;;3756:369:188:o;1740:217::-;1856:7;1891:12;1883:6;;;;1875:29;;;;-1:-1:-1;;;1875:29:188;;;;;;;;;;-1:-1:-1;;;1926:5:188;;;1740:217::o;63999:421:6:-;64152:28;;64222:43;64256:8;64222:29;:12;64239:11;64222:29;:16;:29;:::i;:43::-;64192:73;-1:-1:-1;64275:15:6;64293:40;64301:6;64192:73;64293:40;:19;:40;:::i;:::-;64275:58;-1:-1:-1;64366:47:6;64275:58;64366:34;:22;64393:6;64366:34;:26;:34;:::i;:47::-;64343:70;63999:421;-1:-1:-1;;;;;;63999:421:6:o;4592:2146:14:-;4900:17;;4995:22;;;;5050:24;;;;5108:25;;;;5173:31;;;;4850:16;;-1:-1:-1;;;;;4900:17:14;;;;;;4995:22;;5050:24;;5108:25;;5223:43;;;;;5215:58;;;;-1:-1:-1;;;5215:58:14;;;;;;;;;5295:9;;-1:-1:-1;5319:21:14;;5315:580;;5395:51;;-1:-1:-1;;;5395:51:14;;-1:-1:-1;;;;;5395:33:14;;;;;:51;;5429:16;;5395:51;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5395:51:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5395:51:14;;;;5460:45;5478:8;5488:16;5460:17;:45::i;:::-;5538:16;5523:12;:31;5519:260;;;5648:21;;5574:190;;;;;;;;;5648:21;5574:190;;;;5609:17;;-1:-1:-1;;;;;5648:21:14;;;;5691:31;;;;5574:13;:190::i;:::-;5315:580;;;5842:21;;5809:75;;;;;;;;;;;;-1:-1:-1;;;5809:75:14;;;;;;5823:17;;-1:-1:-1;;;;;5842:21:14;;;;5865:12;;5809:13;:75::i;:::-;5909:24;;5905:252;;6052:21;;5949:197;;;;;;;;;;;;-1:-1:-1;;;5949:197:14;;;;;;5984:22;;6024:10;;-1:-1:-1;;;;;6052:21:14;;6091:19;;5949:17;:197::i;:::-;6171:18;;6167:565;;6209:13;;;;;:42;;;6238:13;6226:8;:25;;6209:42;6205:517;;;6278:11;-1:-1:-1;;;;;6271:27:14;;6305:13;6271:50;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6271:50:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;6372:21:14;;6339:76;;;;;;;;;;;;-1:-1:-1;;;6339:76:14;;;;;;-1:-1:-1;6353:17:14;;-1:-1:-1;;;;;;6372:21:14;;;;-1:-1:-1;6395:13:14;;6339;:76::i;:::-;6445:13;6433:25;;;;6205:517;;;6607:21;;6497:210;;;;;;;;;;;;-1:-1:-1;;;6497:210:14;;;;;;6536:17;;6575:10;;-1:-1:-1;;;;;6607:21:14;;6650:13;;6497:17;:210::i;:::-;4592:2146;;;;;;;;;;;;:::o;38147:556:6:-;38229:18;;38293;38285:33;;;;-1:-1:-1;;;38285:33:6;;;;;;;;;38329:17;:15;:17::i;:::-;38372:33;38384:20;38402:1;38384:17;:20::i;38372:33::-;38357:48;-1:-1:-1;38428:43:6;38357:48;38428:25;:13;38446:6;38428:25;:17;:25;:::i;:43::-;38415:56;-1:-1:-1;38486:9:6;38482:215;;38516:83;38534:16;;;;;;;;;-1:-1:-1;;;;;38534:16:6;38552:10;38572:4;38579:13;38516:83;;;;;;;;;;;;;-1:-1:-1;;;38516:83:6;;;:17;:83::i;:::-;38482:215;;;38637:17;;;;;;;;;-1:-1:-1;;;;;38637:17:6;-1:-1:-1;;;;;38630:33:6;;38670:13;38630:56;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;38630:56:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;38630:56:6;;;;;38482:215;38147:556;;;:::o;2278:494:0:-;2422:7;-1:-1:-1;;;;;2449:17:0;;2441:32;;;;-1:-1:-1;;;2441:32:0;;;;;;;;;-1:-1:-1;;;;;2503:13:0;;2484:16;2503:13;;;:8;:13;;;;;;:31;;2521:12;2503:31;:17;:31;:::i;:::-;-1:-1:-1;;;;;2544:13:0;;;;;;:8;:13;;;;;:24;;;2594:12;;2484:50;;-1:-1:-1;2594:30:0;;2611:12;2594:30;:16;:30;:::i;:::-;2579:12;:45;2640;;-1:-1:-1;;;;;2640:45:0;;;;;;;2650:12;;2664;;2678:6;;2640:45;;;;;;;;;;2721:3;-1:-1:-1;;;;;2700:39:0;2717:1;-1:-1:-1;;;;;2700:39:0;;2726:12;2700:39;;;;;;;1975:213:189;2031:6;2060:5;;;2084:6;;;;;;:16;;;2099:1;2094;:6;;2084:16;2083:38;;;;2110:1;2106;:5;:14;;;;;2119:1;2115;:5;2106:14;2075:87;;;;-1:-1:-1;;;2075:87:189;;;;;;;;458:554;514:6;754;750:45;;-1:-1:-1;783:1:189;776:8;;750:45;815:1;-1:-1:-1;;815:7:189;:27;;;;;-1:-1:-1;;;826:1:189;:16;815:27;813:30;805:82;;;;-1:-1:-1;;;805:82:189;;;;;;;;;909:5;;;913:1;909;:5;:1;932:5;;;;;:10;924:62;;;;-1:-1:-1;;;924:62:189;;;;;;;;1472:264;1528:6;1554;1546:51;;;;-1:-1:-1;;;1546:51:189;;;;;;;;;1617:1;-1:-1:-1;;1617:7:189;:27;;;;;-1:-1:-1;;;1628:1:189;:16;1617:27;1615:30;1607:76;;;;-1:-1:-1;;;1607:76:189;;;;;;;;;1694:8;1709:1;1705;:5;;;;;;;1472:264;-1:-1:-1;;;;1472:264:189:o;2421:210::-;2477:6;2506:5;;;2530:6;;;;;;:16;;;2545:1;2540;:6;;2530:16;2529:38;;;;2556:1;2552;:5;:14;;;;;2565:1;2561;:5;2552:14;2521:84;;;;-1:-1:-1;;;2521:84:189;;;;;;;;54283:427:6;54427:25;54446:5;54427:18;:25::i;:::-;54419:68;;;;-1:-1:-1;;;54419:68:6;;;;;;;;;54498:12;54512:23;54539:5;-1:-1:-1;;;;;54539:10:6;54550:4;54539:16;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;54497:58:6;;;;54573:7;54582:8;54565:26;;;;;-1:-1:-1;;;54565:26:6;;;;;;;;;;-1:-1:-1;54606:17:6;;:22;54602:102;;54663:10;54652:30;;;;;;;;;;;;;;54684:8;54644:49;;;;;-1:-1:-1;;;54644:49:6;;;;;;;;;;;54283:427;;;;;:::o;53481:341::-;53706:77;;53654:161;;53687:5;;-1:-1:-1;;;53729:35:6;53706:77;;53766:4;;53772:2;;53776:6;;53706:77;;;;693:630:178;753:4;1226:20;;1059:66;1273:23;;;;;;:42;;-1:-1:-1;;1300:15:178;;;1265:51;-1:-1:-1;;693:630:178:o;221:6519:14:-;;;;;;;;;-1:-1:-1;221:6519:14;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;142:134;220:13;;238:33;220:13;238:33;;283:124;347:20;;372:30;347:20;372:30;;414:128;489:13;;507:30;489:13;507:30;;549:130;616:20;;641:33;616:20;641:33;;700:336;;;814:3;807:4;799:6;795:17;791:27;781:2;;832:1;829;822:12;781:2;-1:-1;852:20;;892:18;881:30;;878:2;;;924:1;921;914:12;878:2;958:4;950:6;946:17;934:29;;1009:3;1001:4;993:6;989:17;979:8;975:32;972:41;969:2;;;1026:1;1023;1016:12;969:2;774:262;;;;;;1045:440;;1146:3;1139:4;1131:6;1127:17;1123:27;1113:2;;1164:1;1161;1154:12;1113:2;1201:6;1188:20;1223:64;1238:48;1279:6;1238:48;;;1223:64;;;1214:73;;1307:6;1300:5;1293:21;1343:4;1335:6;1331:17;1376:4;1369:5;1365:16;1411:3;1402:6;1397:3;1393:16;1390:25;1387:2;;;1428:1;1425;1418:12;1387:2;1438:41;1472:6;1467:3;1462;1438:41;;;1106:379;;;;;;;;2081:134;2159:13;;2177:33;2159:13;2177:33;;2222:241;;2326:2;2314:9;2305:7;2301:23;2297:32;2294:2;;;2342:1;2339;2332:12;2294:2;2377:1;2394:53;2439:7;2419:9;2394:53;;2470:263;;2585:2;2573:9;2564:7;2560:23;2556:32;2553:2;;;2601:1;2598;2591:12;2553:2;2636:1;2653:64;2709:7;2689:9;2653:64;;2740:366;;;2861:2;2849:9;2840:7;2836:23;2832:32;2829:2;;;2877:1;2874;2867:12;2829:2;2912:1;2929:53;2974:7;2954:9;2929:53;;;2919:63;;2891:97;3019:2;3037:53;3082:7;3073:6;3062:9;3058:22;3037:53;;;3027:63;;2998:98;2823:283;;;;;;3113:491;;;;3251:2;3239:9;3230:7;3226:23;3222:32;3219:2;;;3267:1;3264;3257:12;3219:2;3302:1;3319:53;3364:7;3344:9;3319:53;;;3309:63;;3281:97;3409:2;3427:53;3472:7;3463:6;3452:9;3448:22;3427:53;;;3417:63;;3388:98;3517:2;3535:53;3580:7;3571:6;3560:9;3556:22;3535:53;;;3525:63;;3496:98;3213:391;;;;;;3611:360;;;3729:2;3717:9;3708:7;3704:23;3700:32;3697:2;;;3745:1;3742;3735:12;3697:2;3780:1;3797:53;3842:7;3822:9;3797:53;;;3787:63;;3759:97;3887:2;3905:50;3947:7;3938:6;3927:9;3923:22;3905:50;;3978:366;;;4099:2;4087:9;4078:7;4074:23;4070:32;4067:2;;;4115:1;4112;4105:12;4067:2;4150:1;4167:53;4212:7;4192:9;4167:53;;;4157:63;;4129:97;4257:2;4275:53;4320:7;4311:6;4300:9;4296:22;4275:53;;4351:485;;;;4486:2;4474:9;4465:7;4461:23;4457:32;4454:2;;;4502:1;4499;4492:12;4454:2;4537:1;4554:53;4599:7;4579:9;4554:53;;;4544:63;;4516:97;4644:2;4662:53;4707:7;4698:6;4687:9;4683:22;4662:53;;;4652:63;;4623:98;4752:2;4770:50;4812:7;4803:6;4792:9;4788:22;4770:50;;4843:257;;4955:2;4943:9;4934:7;4930:23;4926:32;4923:2;;;4971:1;4968;4961:12;4923:2;5006:1;5023:61;5076:7;5056:9;5023:61;;5107:1225;;;;;;;;;5339:3;5327:9;5318:7;5314:23;5310:33;5307:2;;;5356:1;5353;5346:12;5307:2;5391:1;5408:53;5453:7;5433:9;5408:53;;;5398:63;;5370:97;5498:2;5516:53;5561:7;5552:6;5541:9;5537:22;5516:53;;;5506:63;;5477:98;5606:2;5624:53;5669:7;5660:6;5649:9;5645:22;5624:53;;;5614:63;;5585:98;5714:2;5732:53;5777:7;5768:6;5757:9;5753:22;5732:53;;;5722:63;;5693:98;5822:3;5841:53;5886:7;5877:6;5866:9;5862:22;5841:53;;;5831:63;;5801:99;5931:3;5950:53;5995:7;5986:6;5975:9;5971:22;5950:53;;;5940:63;;5910:99;6040:3;6059:53;6104:7;6095:6;6084:9;6080:22;6059:53;;;6049:63;;6019:99;6177:3;6166:9;6162:19;6149:33;6202:18;6194:6;6191:30;6188:2;;;6234:1;6231;6224:12;6188:2;6254:62;6308:7;6299:6;6288:9;6284:22;6254:62;;;6244:72;;6128:194;5301:1031;;;;;;;;;;;;6339:1371;;;;;;;;;;;6598:3;6586:9;6577:7;6573:23;6569:33;6566:2;;;6615:1;6612;6605:12;6566:2;6650:1;6667:53;6712:7;6692:9;6667:53;;;6657:63;;6629:97;6757:2;6775:53;6820:7;6811:6;6800:9;6796:22;6775:53;;;6765:63;;6736:98;6865:2;6883:53;6928:7;6919:6;6908:9;6904:22;6883:53;;;6873:63;;6844:98;6973:2;6991:53;7036:7;7027:6;7016:9;7012:22;6991:53;;;6981:63;;6952:98;7081:3;7100:53;7145:7;7136:6;7125:9;7121:22;7100:53;;;7090:63;;7060:99;7190:3;7209:53;7254:7;7245:6;7234:9;7230:22;7209:53;;;7199:63;;7169:99;7299:3;7318:53;7363:7;7354:6;7343:9;7339:22;7318:53;;;7308:63;;7278:99;7408:3;7427:53;7472:7;7463:6;7452:9;7448:22;7427:53;;;7417:63;;7387:99;7545:3;7534:9;7530:19;7517:33;7570:18;7562:6;7559:30;7556:2;;;7602:1;7599;7592:12;7556:2;7630:64;7686:7;7677:6;7666:9;7662:22;7630:64;;;7620:74;;;;7496:204;6560:1150;;;;;;;;;;;;;;7717:1225;;;;;;;;;7949:3;7937:9;7928:7;7924:23;7920:33;7917:2;;;7966:1;7963;7956:12;7917:2;8001:1;8018:53;8063:7;8043:9;8018:53;;;8008:63;;7980:97;8108:2;8126:53;8171:7;8162:6;8151:9;8147:22;8126:53;;;8116:63;;8087:98;8216:2;8234:53;8279:7;8270:6;8259:9;8255:22;8234:53;;;8224:63;;8195:98;8324:2;8342:53;8387:7;8378:6;8367:9;8363:22;8342:53;;;8332:63;;8303:98;8432:3;8451:53;8496:7;8487:6;8476:9;8472:22;8451:53;;;8441:63;;8411:99;8541:3;8560:53;8605:7;8596:6;8585:9;8581:22;8560:53;;;8550:63;;8520:99;8650:3;8669:53;8714:7;8705:6;8694:9;8690:22;8669:53;;8949:347;;9063:2;9051:9;9042:7;9038:23;9034:32;9031:2;;;9079:1;9076;9069:12;9031:2;9114:31;;9165:18;9154:30;;9151:2;;;9197:1;9194;9187:12;9151:2;9217:63;9272:7;9263:6;9252:9;9248:22;9217:63;;9303:241;;9407:2;9395:9;9386:7;9382:23;9378:32;9375:2;;;9423:1;9420;9413:12;9375:2;9458:1;9475:53;9520:7;9500:9;9475:53;;9551:263;;9666:2;9654:9;9645:7;9641:23;9637:32;9634:2;;;9682:1;9679;9672:12;9634:2;9717:1;9734:64;9790:7;9770:9;9734:64;;9821:491;;;;9959:2;9947:9;9938:7;9934:23;9930:32;9927:2;;;9975:1;9972;9965:12;9927:2;10010:1;10027:53;10072:7;10052:9;10027:53;;10319:366;;;10440:2;10428:9;10419:7;10415:23;10411:32;10408:2;;;10456:1;10453;10446:12;10408:2;10491:1;10508:53;10553:7;10533:9;10508:53;;10692:399;;;10824:2;10812:9;10803:7;10799:23;10795:32;10792:2;;;10840:1;10837;10830:12;10792:2;10875:1;10892:64;10948:7;10928:9;10892:64;;;10882:74;;10854:108;10993:2;11011:64;11067:7;11058:6;11047:9;11043:22;11011:64;;11098:491;;;;11236:2;11224:9;11215:7;11211:23;11207:32;11204:2;;;11252:1;11249;11242:12;11204:2;11287:1;11304:53;11349:7;11329:9;11304:53;;;11294:63;;11266:97;11394:2;11412:53;11457:7;11448:6;11437:9;11433:22;11412:53;;;11402:63;;11373:98;11502:2;11520:53;11565:7;11556:6;11545:9;11541:22;11520:53;;11596:617;;;;;11751:3;11739:9;11730:7;11726:23;11722:33;11719:2;;;11768:1;11765;11758:12;11719:2;11803:1;11820:53;11865:7;11845:9;11820:53;;;11810:63;;11782:97;11910:2;11928:53;11973:7;11964:6;11953:9;11949:22;11928:53;;;11918:63;;11889:98;12018:2;12036:53;12081:7;12072:6;12061:9;12057:22;12036:53;;;12026:63;;11997:98;12126:2;12144:53;12189:7;12180:6;12169:9;12165:22;12144:53;;;12134:63;;12105:98;11713:500;;;;;;;;12220:946;;;;;;;12420:3;12408:9;12399:7;12395:23;12391:33;12388:2;;;12437:1;12434;12427:12;12388:2;12472:1;12489:64;12545:7;12525:9;12489:64;;;12479:74;;12451:108;12590:2;12608:64;12664:7;12655:6;12644:9;12640:22;12608:64;;;12598:74;;12569:109;12709:2;12727:64;12783:7;12774:6;12763:9;12759:22;12727:64;;;12717:74;;12688:109;12828:2;12846:64;12902:7;12893:6;12882:9;12878:22;12846:64;;;12836:74;;12807:109;12947:3;12966:64;13022:7;13013:6;13002:9;12998:22;12966:64;;;12956:74;;12926:110;13067:3;13086:64;13142:7;13133:6;13122:9;13118:22;13086:64;;;13076:74;;13046:110;12382:784;;;;;;;;;13174:169;;13259:44;13299:3;13291:6;13259:44;;;-1:-1;;13332:4;13323:14;;13252:91;13351:142;13442:45;13481:5;13442:45;;;13437:3;13430:58;13424:69;;;13500:103;13573:24;13591:5;13573:24;;13730:152;13831:45;13851:24;13869:5;13851:24;;;13831:45;;13918:682;;14061:53;14108:5;14061:53;;;14127:85;14205:6;14200:3;14127:85;;;14120:92;;14233:55;14282:5;14233:55;;;14308:7;14336:1;14321:257;14346:6;14343:1;14340:13;14321:257;;;14413:6;14407:13;14434:61;14491:3;14476:13;14434:61;;;14427:68;;14512:59;14564:6;14512:59;;;14502:69;-1:-1;;14368:1;14361:9;14321:257;;;-1:-1;14591:3;;14040:560;-1:-1;;;;;14040:560;14608:104;14685:21;14700:5;14685:21;;14719:140;14814:39;14831:21;14846:5;14831:21;;;14814:39;;14866:113;14949:24;14967:5;14949:24;;14986:152;15087:45;15107:24;15125:5;15107:24;;;15087:45;;15145:100;15216:23;15233:5;15216:23;;15252:148;15351:43;15370:23;15387:5;15370:23;;15407:343;;15517:38;15549:5;15517:38;;;15567:70;15630:6;15625:3;15567:70;;;15560:77;;15642:52;15687:6;15682:3;15675:4;15668:5;15664:16;15642:52;;;15715:29;15737:6;15715:29;;;15706:39;;;;15497:253;-1:-1;;;15497:253;15757:356;;15885:38;15917:5;15885:38;;;15935:88;16016:6;16011:3;15935:88;;;15928:95;;16028:52;16073:6;16068:3;16061:4;16054:5;16050:16;16028:52;;;16092:16;;;;;15865:248;-1:-1;;15865:248;16938:320;;17098:67;17162:2;17157:3;17098:67;;;-1:-1;;;17178:43;;17249:2;17240:12;;17084:174;-1:-1;;17084:174;17267:301;;17427:66;17491:1;17486:3;17427:66;;;-1:-1;;;17506:25;;17559:2;17550:12;;17413:155;-1:-1;;17413:155;17577:301;;17737:66;17801:1;17796:3;17737:66;;;-1:-1;;;17816:25;;17869:2;17860:12;;17723:155;-1:-1;;17723:155;17887:330;;18047:67;18111:2;18106:3;18047:67;;;18147:32;18127:53;;18208:2;18199:12;;18033:184;-1:-1;;18033:184;18226:375;;18386:67;18450:2;18445:3;18386:67;;;18486:34;18466:55;;-1:-1;;;18550:2;18541:12;;18534:30;18592:2;18583:12;;18372:229;-1:-1;;18372:229;18610:329;;18770:67;18834:2;18829:3;18770:67;;;18870:31;18850:52;;18930:2;18921:12;;18756:183;-1:-1;;18756:183;18948:327;;19108:67;19172:2;19167:3;19108:67;;;19208:29;19188:50;;19266:2;19257:12;;19094:181;-1:-1;;19094:181;19284:370;;19444:67;19508:2;19503:3;19444:67;;;19544:34;19524:55;;-1:-1;;;19608:2;19599:12;;19592:25;19645:2;19636:12;;19430:224;-1:-1;;19430:224;19663:395;;19823:67;19887:2;19882:3;19823:67;;;19923:34;19903:55;;19992:28;19987:2;19978:12;;19971:50;20049:2;20040:12;;19809:249;-1:-1;;19809:249;20067:300;;20227:66;20291:1;20286:3;20227:66;;;-1:-1;;;20306:24;;20358:2;20349:12;;20213:154;-1:-1;;20213:154;20376:329;;20536:67;20600:2;20595:3;20536:67;;;20636:31;20616:52;;20696:2;20687:12;;20522:183;-1:-1;;20522:183;20714:318;;20874:67;20938:2;20933:3;20874:67;;;-1:-1;;;20954:41;;21023:2;21014:12;;20860:172;-1:-1;;20860:172;21041:301;;21201:66;21265:1;21260:3;21201:66;;;-1:-1;;;21280:25;;21333:2;21324:12;;21187:155;-1:-1;;21187:155;21351:301;;21511:66;21575:1;21570:3;21511:66;;;-1:-1;;;21590:25;;21643:2;21634:12;;21497:155;-1:-1;;21497:155;21661:301;;21821:66;21885:1;21880:3;21821:66;;;-1:-1;;;21900:25;;21953:2;21944:12;;21807:155;-1:-1;;21807:155;21971:370;;22131:67;22195:2;22190:3;22131:67;;;22231:34;22211:55;;-1:-1;;;22295:2;22286:12;;22279:25;22332:2;22323:12;;22117:224;-1:-1;;22117:224;22350:301;;22510:66;22574:1;22569:3;22510:66;;;-1:-1;;;22589:25;;22642:2;22633:12;;22496:155;-1:-1;;22496:155;22660:301;;22820:66;22884:1;22879:3;22820:66;;;-1:-1;;;22899:25;;22952:2;22943:12;;22806:155;-1:-1;;22806:155;22970:301;;23130:66;23194:1;23189:3;23130:66;;;-1:-1;;;23209:25;;23262:2;23253:12;;23116:155;-1:-1;;23116:155;23280:301;;23440:66;23504:1;23499:3;23440:66;;;-1:-1;;;23519:25;;23572:2;23563:12;;23426:155;-1:-1;;23426:155;23590:370;;23750:67;23814:2;23809:3;23750:67;;;23850:34;23830:55;;-1:-1;;;23914:2;23905:12;;23898:25;23951:2;23942:12;;23736:224;-1:-1;;23736:224;23969:312;;24129:67;24193:2;24188:3;24129:67;;;-1:-1;;;24209:35;;24272:2;24263:12;;24115:166;-1:-1;;24115:166;24290:301;;24450:66;24514:1;24509:3;24450:66;;;-1:-1;;;24529:25;;24582:2;24573:12;;24436:155;-1:-1;;24436:155;24600:301;;24760:66;24824:1;24819:3;24760:66;;;-1:-1;;;24839:25;;24892:2;24883:12;;24746:155;-1:-1;;24746:155;24910:376;;25070:67;25134:2;25129:3;25070:67;;;25170:34;25150:55;;-1:-1;;;25234:2;25225:12;;25218:31;25277:2;25268:12;;25056:230;-1:-1;;25056:230;25295:319;;25455:67;25519:2;25514:3;25455:67;;;-1:-1;;;25535:42;;25605:2;25596:12;;25441:173;-1:-1;;25441:173;25623:329;;25783:67;25847:2;25842:3;25783:67;;;25883:31;25863:52;;25943:2;25934:12;;25769:183;-1:-1;;25769:183;25961:296;;26138:83;26219:1;26214:3;26138:83;;26266:312;;26426:67;26490:2;26485:3;26426:67;;;-1:-1;;;26506:35;;26569:2;26560:12;;26412:166;-1:-1;;26412:166;26587:373;;26747:67;26811:2;26806:3;26747:67;;;26847:34;26827:55;;-1:-1;;;26911:2;26902:12;;26895:28;26951:2;26942:12;;26733:227;-1:-1;;26733:227;26969:324;;27129:67;27193:2;27188:3;27129:67;;;27229:26;27209:47;;27284:2;27275:12;;27115:178;-1:-1;;27115:178;27302:300;;27462:66;27526:1;27521:3;27462:66;;;-1:-1;;;27541:24;;27593:2;27584:12;;27448:154;-1:-1;;27448:154;27611:332;;27771:67;27835:2;27830:3;27771:67;;;27871:34;27851:55;;27934:2;27925:12;;27757:186;-1:-1;;27757:186;28052:809;28275:23;;28207:4;28198:14;;;28304:63;28202:3;28275:23;28304:63;;;28227:146;28450:4;28443:5;28439:16;28433:23;28462:63;28519:4;28514:3;28510:14;28496:12;28462:63;;;28383:148;28608:4;28601:5;28597:16;28591:23;28620:63;28677:4;28672:3;28668:14;28654:12;28620:63;;;28541:148;28765:4;28758:5;28754:16;28748:23;28777:63;28834:4;28829:3;28825:14;28811:12;28777:63;;28965:1675;29192:23;;29116:6;29107:16;;;29221:63;29111:3;29192:23;29221:63;;;29138:152;29371:4;29364:5;29360:16;29354:23;29383:63;29440:4;29435:3;29431:14;29417:12;29383:63;;;29300:152;29542:4;29535:5;29531:16;29525:23;29554:63;29611:4;29606:3;29602:14;29588:12;29554:63;;;29462:161;29705:4;29698:5;29694:16;29688:23;29717:63;29774:4;29769:3;29765:14;29751:12;29717:63;;;29633:153;29874:4;29867:5;29863:16;29857:23;29886:63;29943:4;29938:3;29934:14;29920:12;29886:63;;;29796:159;30037:4;30030:5;30026:16;30020:23;30049:63;30106:4;30101:3;30097:14;30083:12;30049:63;;;29965:153;30211:4;30204:5;30200:16;30194:23;30223:63;30280:4;30275:3;30271:14;30257:12;30223:63;;;30128:164;30377:4;30370:5;30366:16;30360:23;30389:63;30446:4;30441:3;30437:14;30423:12;30389:63;;;30302:156;30540:6;30533:5;30529:18;30523:25;30554:65;30611:6;30606:3;30602:16;30588:12;30554:65;;31036:107;31115:22;31131:5;31115:22;;31150:370;;31291:75;31362:3;31353:6;31291:75;;;31388:2;31383:3;31379:12;31372:19;;31402:69;31467:3;31458:6;31402:69;;;-1:-1;31493:1;31484:11;;31279:241;-1:-1;;31279:241;31527:383;;31674:75;31745:3;31736:6;31674:75;;;31771:2;31766:3;31762:12;31755:19;;31785:75;31856:3;31847:6;31785:75;;;-1:-1;31882:2;31873:12;;31662:248;-1:-1;;31662:248;31917:378;;32062:73;32131:3;32122:6;32062:73;;;32157:1;32152:3;32148:11;32141:18;;32170:75;32241:3;32232:6;32170:75;;32302:262;;32446:93;32535:3;32526:6;32446:93;;32571:370;;32769:147;32912:3;32769:147;;32948:213;33066:2;33051:18;;33080:71;33055:9;33124:6;33080:71;;33168:229;33294:2;33279:18;;33308:79;33283:9;33360:6;33308:79;;33404:324;33550:2;33535:18;;33564:71;33539:9;33608:6;33564:71;;;33646:72;33714:2;33703:9;33699:18;33690:6;33646:72;;33735:340;33889:2;33874:18;;33903:71;33878:9;33947:6;33903:71;;;33985:80;34061:2;34050:9;34046:18;34037:6;33985:80;;34082:435;34256:2;34241:18;;34270:71;34245:9;34314:6;34270:71;;;34352:72;34420:2;34409:9;34405:18;34396:6;34352:72;;;34435;34503:2;34492:9;34488:18;34479:6;34435:72;;34524:647;34748:3;34733:19;;34763:71;34737:9;34807:6;34763:71;;;34845:72;34913:2;34902:9;34898:18;34889:6;34845:72;;;34928;34996:2;34985:9;34981:18;34972:6;34928:72;;;35011;35079:2;35068:9;35064:18;35055:6;35011:72;;;35094:67;35156:3;35145:9;35141:19;35132:6;35094:67;;35178:771;35436:3;35421:19;;35451:71;35425:9;35495:6;35451:71;;;35533:72;35601:2;35590:9;35586:18;35577:6;35533:72;;;35616;35684:2;35673:9;35669:18;35660:6;35616:72;;;35699;35767:2;35756:9;35752:18;35743:6;35699:72;;;35782:73;35850:3;35839:9;35835:19;35826:6;35782:73;;;35866;35934:3;35923:9;35919:19;35910:6;35866:73;;;35407:542;;;;;;;;;;35956:324;36102:2;36087:18;;36116:71;36091:9;36160:6;36116:71;;;36198:72;36266:2;36255:9;36251:18;36242:6;36198:72;;36287:451;36469:2;36454:18;;36483:71;36458:9;36527:6;36483:71;;;36565:72;36633:2;36622:9;36618:18;36609:6;36565:72;;;36648:80;36724:2;36713:9;36709:18;36700:6;36648:80;;36745:468;36939:2;36953:47;;;36924:18;;37014:106;36924:18;37106:6;37014:106;;;37006:114;;37131:72;37199:2;37188:9;37184:18;37175:6;37131:72;;37220:201;37332:2;37317:18;;37346:65;37321:9;37384:6;37346:65;;37428:213;37546:2;37531:18;;37560:71;37535:9;37604:6;37560:71;;37648:1195;38066:3;38051:19;;38081:71;38055:9;38125:6;38081:71;;;38163:72;38231:2;38220:9;38216:18;38207:6;38163:72;;;38246:66;38308:2;38297:9;38293:18;38284:6;38246:66;;;38323:72;38391:2;38380:9;38376:18;38367:6;38323:72;;;38406:135;38536:3;38525:9;38521:19;38512:6;38406:135;;;38552:131;38678:3;38667:9;38663:19;38654:6;38552:131;;;38732:9;38726:4;38722:20;38716:3;38705:9;38701:19;38694:49;38757:76;38828:4;38819:6;38757:76;;;38749:84;38037:806;-1:-1;;;;;;;;;38037:806;39066:293;39200:2;39214:47;;;39185:18;;39275:74;39185:18;39335:6;39275:74;;39674:407;39865:2;39879:47;;;39850:18;;39940:131;39850:18;39940:131;;40088:407;40279:2;40293:47;;;40264:18;;40354:131;40264:18;40354:131;;40502:407;40693:2;40707:47;;;40678:18;;40768:131;40678:18;40768:131;;40916:407;41107:2;41121:47;;;41092:18;;41182:131;41092:18;41182:131;;41330:407;41521:2;41535:47;;;41506:18;;41596:131;41506:18;41596:131;;41744:407;41935:2;41949:47;;;41920:18;;42010:131;41920:18;42010:131;;42158:407;42349:2;42363:47;;;42334:18;;42424:131;42334:18;42424:131;;42572:407;42763:2;42777:47;;;42748:18;;42838:131;42748:18;42838:131;;42986:407;43177:2;43191:47;;;43162:18;;43252:131;43162:18;43252:131;;43400:407;43591:2;43605:47;;;43576:18;;43666:131;43576:18;43666:131;;43814:407;44005:2;44019:47;;;43990:18;;44080:131;43990:18;44080:131;;44228:407;44419:2;44433:47;;;44404:18;;44494:131;44404:18;44494:131;;44642:407;44833:2;44847:47;;;44818:18;;44908:131;44818:18;44908:131;;45056:407;45247:2;45261:47;;;45232:18;;45322:131;45232:18;45322:131;;45470:407;45661:2;45675:47;;;45646:18;;45736:131;45646:18;45736:131;;45884:407;46075:2;46089:47;;;46060:18;;46150:131;46060:18;46150:131;;46298:407;46489:2;46503:47;;;46474:18;;46564:131;46474:18;46564:131;;46712:407;46903:2;46917:47;;;46888:18;;46978:131;46888:18;46978:131;;47126:407;47317:2;47331:47;;;47302:18;;47392:131;47302:18;47392:131;;47540:407;47731:2;47745:47;;;47716:18;;47806:131;47716:18;47806:131;;47954:407;48145:2;48159:47;;;48130:18;;48220:131;48130:18;48220:131;;48368:407;48559:2;48573:47;;;48544:18;;48634:131;48544:18;48634:131;;48782:407;48973:2;48987:47;;;48958:18;;49048:131;48958:18;49048:131;;49196:407;49387:2;49401:47;;;49372:18;;49462:131;49372:18;49462:131;;49610:407;49801:2;49815:47;;;49786:18;;49876:131;49786:18;49876:131;;50024:407;50215:2;50229:47;;;50200:18;;50290:131;50200:18;50290:131;;50438:407;50629:2;50643:47;;;50614:18;;50704:131;50614:18;50704:131;;50852:407;51043:2;51057:47;;;51028:18;;51118:131;51028:18;51118:131;;51266:407;51457:2;51471:47;;;51442:18;;51532:131;51442:18;51532:131;;51680:407;51871:2;51885:47;;;51856:18;;51946:131;51856:18;51946:131;;52094:407;52285:2;52299:47;;;52270:18;;52360:131;52270:18;52360:131;;52508:407;52699:2;52713:47;;;52684:18;;52774:131;52684:18;52774:131;;53142:324;53288:2;53273:18;;53302:71;53277:9;53346:6;53302:71;;53473:435;53647:2;53632:18;;53661:71;53636:9;53705:6;53661:71;;;53743:72;53811:2;53800:9;53796:18;53787:6;53743:72;;53915:205;54029:2;54014:18;;54043:67;54018:9;54083:6;54043:67;;54127:256;54189:2;54183:9;54215:17;;;54290:18;54275:34;;54311:22;;;54272:62;54269:2;;;54347:1;54344;54337:12;54269:2;54363;54356:22;54167:216;;-1:-1;54167:216;54390:321;;54533:18;54525:6;54522:30;54519:2;;;54565:1;54562;54555:12;54519:2;-1:-1;54696:4;54632;54609:17;;;;-1:-1;;54605:33;54686:15;;54456:255;55047:150;55170:4;55161:14;;55118:79;55204:136;55306:12;;55277:63;55844:177;55961:19;;;56010:4;56001:14;;55954:67;56525:91;;56587:24;56605:5;56587:24;;56623:85;56689:13;56682:21;;56665:43;56794:144;-1:-1;;;;;;56855:78;;56838:100;57023:121;-1:-1;;;;;57085:54;;57068:76;57230:81;57301:4;57290:16;;57273:38;57318:129;;57405:37;57436:5;57454:121;57533:37;57564:5;57533:37;;57698:145;57779:6;57774:3;57769;57756:30;-1:-1;57835:1;57817:16;;57810:27;57749:94;57852:268;57917:1;57924:101;57938:6;57935:1;57932:13;57924:101;;;58005:11;;;57999:18;57986:11;;;57979:39;57960:2;57953:10;57924:101;;;58040:6;58037:1;58034:13;58031:2;;;-1:-1;;58105:1;58087:16;;58080:27;57901:219;58128:95;;58192:26;58212:5;58192:26;;58230:90;;58291:24;58309:5;58291:24;;58488:89;;58552:20;58566:5;58552:20;;58665:88;;58727:21;58742:5;58727:21;;58760:97;58848:2;58828:14;-1:-1;;58824:28;;58808:49;58865:96;58940:3;58936:15;;58908:53;58969:94;59043:2;59039:14;;59011:52;59071:117;59140:24;59158:5;59140:24;;;59133:5;59130:35;59120:2;;59179:1;59176;59169:12;59195:111;59261:21;59276:5;59261:21;;59313:117;59382:24;59400:5;59382:24;",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "TINY_AMOUNT()": "f8dd4f0e",
    "VERSION()": "ffa1ad74",
    "admin()": "f851a440",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "assetBalanceOf(address)": "06b3efd6",
    "avgBorrowInterestRate()": "44a4a003",
    "balanceOf(address)": "70a08231",
    "baseRate()": "1f68f20a",
    "borrow(bytes32,uint256,uint256,uint256,address,address,address,bytes)": "2ea295fa",
    "borrowInterestRate()": "8325a1c0",
    "burn(address,uint256)": "9dc29fac",
    "burnToBTC(address,uint256,bool)": "0506af04",
    "calculateSupplyInterestRate(uint256,uint256)": "6d23d1ac",
    "checkPriceDivergence(uint256,address,uint256)": "10e57644",
    "checkpointPrice(address)": "eebc5081",
    "checkpointSupply()": "7b7933b4",
    "decimals()": "313ce567",
    "earlyAccessToken()": "ca37e666",
    "getBorrowAmountForDeposit(uint256,uint256,address)": "04797930",
    "getDepositAmountForBorrow(uint256,uint256,address)": "631a3ef8",
    "getEstimatedMarginDetails(uint256,uint256,uint256,address)": "6b40cd40",
    "getListFunctionSignatures()": "90967de5",
    "getMaxEscrowAmount(uint256)": "829b38f4",
    "initialPrice()": "1d0806ae",
    "isOwner()": "8f32d59b",
    "kinkLevel()": "56e07d70",
    "liquidityMiningAddress()": "8ee6c4e6",
    "loanParamsIds(uint256)": "3291c11a",
    "loanTokenAddress()": "797bf385",
    "lowUtilBaseRate()": "d759dbeb",
    "lowUtilRateMultiplier()": "7e37c08c",
    "marginTrade(bytes32,uint256,uint256,uint256,address,address,uint256,bytes)": "28a02f19",
    "marginTradeAffiliate(bytes32,uint256,uint256,uint256,address,address,uint256,address,bytes)": "f6b69f99",
    "marketLiquidity()": "612ef80b",
    "maxScaleRate()": "ef2b0b39",
    "mint(address,uint256)": "40c10f19",
    "mintWithBTC(address,bool)": "fb5f83df",
    "name()": "06fdde03",
    "nextBorrowInterestRate(uint256)": "b9fe1a8f",
    "nextSupplyInterestRate(uint256)": "d65a5021",
    "owner()": "8da5cb5b",
    "pauser()": "9fd0506d",
    "profitOf(address)": "54198ce9",
    "rateMultiplier()": "330691ac",
    "sovrynContractAddress()": "06947a3a",
    "stringToBytes32(string)": "cfb51928",
    "supplyInterestRate()": "09ec6b6b",
    "symbol()": "95d89b41",
    "targetLevel()": "ba0e43bf",
    "target_()": "9bda3a98",
    "tokenPrice()": "7ff9b596",
    "totalAssetBorrow()": "20f6d07c",
    "totalAssetSupply()": "8fb807c5",
    "totalSupply()": "18160ddd",
    "totalSupplyInterestRate(uint256)": "12416898",
    "transactionLimit(address)": "e41b07e3",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "wrbtcTokenAddress()": "2f6b600d"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"valueBefore\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"valueAfter\",\"type\":\"uint256\"}],\"name\":\"AllowanceUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"loanToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"loanAmount\",\"type\":\"uint256\"}],\"name\":\"FlashBorrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"TINY_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"assetBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"avgBorrowInterestRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"loanId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialLoanDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralTokenSent\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"borrow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"borrowInterestRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"burnAmount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"loanAmountPaid\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"burnAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"useLM\",\"type\":\"bool\"}],\"name\":\"burnToBTC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"loanAmountPaid\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetSupply\",\"type\":\"uint256\"}],\"name\":\"calculateSupplyInterestRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanTokenSent\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minEntryPrice\",\"type\":\"uint256\"}],\"name\":\"checkPriceDivergence\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"checkpointPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"checkpointSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"earlyAccessToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialLoanDuration\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralTokenAddress\",\"type\":\"address\"}],\"name\":\"getBorrowAmountForDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"borrowAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"borrowAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialLoanDuration\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralTokenAddress\",\"type\":\"address\"}],\"name\":\"getDepositAmountForBorrow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"leverageAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanTokenSent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralTokenSent\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralTokenAddress\",\"type\":\"address\"}],\"name\":\"getEstimatedMarginDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getListFunctionSignatures\",\"outputs\":[{\"internalType\":\"bytes4[]\",\"name\":\"functionSignatures\",\"type\":\"bytes4[]\"},{\"internalType\":\"bytes32\",\"name\":\"moduleName\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"leverageAmount\",\"type\":\"uint256\"}],\"name\":\"getMaxEscrowAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxEscrowAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kinkLevel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"liquidityMiningAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loanParamsIds\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"loanTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lowUtilBaseRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lowUtilRateMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"loanId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"leverageAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanTokenSent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralTokenSent\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minEntryPrice\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"loanDataBytes\",\"type\":\"bytes\"}],\"name\":\"marginTrade\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"loanId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"leverageAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanTokenSent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralTokenSent\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minEntryPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"affiliateReferrer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"loanDataBytes\",\"type\":\"bytes\"}],\"name\":\"marginTradeAffiliate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"marketLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxScaleRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useLM\",\"type\":\"bool\"}],\"name\":\"mintWithBTC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"borrowAmount\",\"type\":\"uint256\"}],\"name\":\"nextBorrowInterestRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"supplyAmount\",\"type\":\"uint256\"}],\"name\":\"nextSupplyInterestRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pauser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"profitOf\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rateMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sovrynContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"source\",\"type\":\"string\"}],\"name\":\"stringToBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"result\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"supplyInterestRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"targetLevel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"target_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalAssetBorrow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalAssetSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetSupply\",\"type\":\"uint256\"}],\"name\":\"totalSupplyInterestRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"transactionLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wrbtcTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"params\":{\"_owner\":\"The account owner of the iTokens.\",\"_spender\":\"The account allowed to send the iTokens.\"},\"return\":\"The number of iTokens an account is allowing the spender  to send on its behalf.\"},\"approve(address,uint256)\":{\"params\":{\"_spender\":\"The account address that will be able to spend the tokens.\",\"_value\":\"The amount of tokens allowed to spend.\"}},\"assetBalanceOf(address)\":{\"return\":\"The user's balance of underlying token.\"},\"avgBorrowInterestRate()\":{\"return\":\"The average borrow interest.\"},\"balanceOf(address)\":{\"params\":{\"_owner\":\"The account owner of the iTokens.\"},\"return\":\"The number of iTokens an account owns.\"},\"borrow(bytes32,uint256,uint256,uint256,address,address,address,bytes)\":{\"params\":{\"borrower\":\"The one paying for the collateral.\",\"collateralTokenAddress\":\"The address of the token to be used as  collateral. Cannot be the loan token address.\",\"collateralTokenSent\":\"The amount of collateral tokens provided by the user.  (150% of the withdrawn amount worth in collateral tokens).\",\"initialLoanDuration\":\"The duration of the loan in seconds.  If the loan is not paid back until then, it'll need to be rolled over.\",\"loanId\":\"The ID of the loan, 0 for a new loan.\",\"receiver\":\"The one receiving the withdrawn amount.\",\"withdrawAmount\":\"The amount to be withdrawn (actually borrowed).\"},\"return\":\"New principal and new collateral added to loan.\"},\"borrowInterestRate()\":{\"return\":\"The borrow interest rate.\"},\"burn(address,uint256)\":{\"params\":{\"burnAmount\":\"The amount of loan tokens to redeem.\",\"receiver\":\"The account getting the minted tokens.\"},\"return\":\"The amount of underlying tokens payed to lender.\"},\"calculateSupplyInterestRate(uint256,uint256)\":{\"params\":{\"assetBorrow\":\"The amount of loan tokens on debt.\",\"assetSupply\":\"The amount of loan tokens supplied.\"},\"return\":\"The next supply interest adjustment.\"},\"checkPriceDivergence(uint256,address,uint256)\":{\"params\":{\"collateralTokenAddress\":\"The token address of collateral.\",\"loanTokenSent\":\"The amount of deposit.\",\"minEntryPrice\":\"Value of loan token in collateral\"}},\"checkpointPrice(address)\":{\"params\":{\"_user\":\"The user account as the mapping index.\"},\"return\":\"The price on the checkpoint for this user.\"},\"getBorrowAmountForDeposit(uint256,uint256,address)\":{\"params\":{\"collateralTokenAddress\":\"The token address of collateral.\",\"depositAmount\":\"The amount of deposit.\",\"initialLoanDuration\":\"The duration of the loan.\"},\"return\":\"The amount of borrow allowed.\"},\"getDepositAmountForBorrow(uint256,uint256,address)\":{\"params\":{\"borrowAmount\":\"The amount of borrow.\",\"collateralTokenAddress\":\"The token address of collateral.\",\"initialLoanDuration\":\"The duration of the loan.\"},\"return\":\"The amount of deposit required.\"},\"getEstimatedMarginDetails(uint256,uint256,uint256,address)\":{\"params\":{\"collateralTokenAddress\":\"The token address of collateral.\",\"collateralTokenSent\":\"The amount of collateral tokens provided by the user.\",\"leverageAmount\":\"The multiple of exposure: 2x ... 5x. The leverage with 18 decimals.\",\"loanTokenSent\":\"The number of loan tokens provided by the user.\"},\"return\":\"The principal, the collateral and the interestRate.\"},\"getListFunctionSignatures()\":{\"details\":\"This function will return the list of function signature in this contract that are available for public call Then this function will be called by LoanTokenLogicBeacon, and the function signatures will be registred in LoanTokenLogicBeacon.To save the gas we can just directly return the list of function signature from this pure function. The other workaround (fancy way) is we can create a storage for the list of the function signature, and then we can store each function signature to that storage from the constructor. Then, in this function we just need to return that storage variable.\",\"return\":\"The list of function signatures (bytes4[])\"},\"getMaxEscrowAmount(uint256)\":{\"details\":\"maxEscrowAmount = liquidity * (100 - interestForDuration) / 100\",\"params\":{\"leverageAmount\":\"The chosen multiplier with 18 decimals.\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"marginTrade(bytes32,uint256,uint256,uint256,address,address,uint256,bytes)\":{\"params\":{\"collateralTokenAddress\":\"The token address of collateral.\",\"collateralTokenSent\":\"The amount of collateral tokens provided by the user.\",\"leverageAmount\":\"The multiple of exposure: 2x ... 5x. The leverage with 18 decimals.\",\"loanDataBytes\":\"Additional loan data (not in use for token swaps).\",\"loanId\":\"The ID of the loan, 0 for a new loan.\",\"loanTokenSent\":\"The number of loan tokens provided by the user.\",\"minEntryPrice\":\"Value of loan token in collateral.\",\"trader\":\"The account that performs this trade.\"},\"return\":\"New principal and new collateral added to trade.\"},\"marginTradeAffiliate(bytes32,uint256,uint256,uint256,address,address,uint256,address,bytes)\":{\"params\":{\"affiliateReferrer\":\"The address of the referrer from affiliates program.\",\"collateralTokenAddress\":\"The token address of collateral.\",\"collateralTokenSent\":\"The amount of collateral tokens provided by the user.\",\"leverageAmount\":\"The multiple of exposure: 2x ... 5x. The leverage with 18 decimals.\",\"loanDataBytes\":\"Additional loan data (not in use for token swaps).\",\"loanId\":\"The ID of the loan, 0 for a new loan.\",\"loanTokenSent\":\"The number of loan tokens provided by the user.\",\"minEntryPrice\":\"Value of loan token in collateral.\",\"trader\":\"The account that performs this trade.\"},\"return\":\"New principal and new collateral added to trade.\"},\"marketLiquidity()\":{\"return\":\"The market liquidity.\"},\"mint(address,uint256)\":{\"params\":{\"depositAmount\":\"The amount of underlying tokens provided on the  loan. (Not the number of loan tokens to mint).\",\"receiver\":\"The account getting the minted tokens.\"},\"return\":\"The amount of loan tokens minted.\"},\"nextBorrowInterestRate(uint256)\":{\"params\":{\"borrowAmount\":\"The amount of tokens to borrow.\"},\"return\":\"The next borrow interest rate.\"},\"nextSupplyInterestRate(uint256)\":{\"params\":{\"supplyAmount\":\"The amount of tokens supplied.\"},\"return\":\"Interest that lenders are currently receiving when supplying a given amount of tokens to the pool.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"profitOf(address)\":{\"params\":{\"user\":\"The user address.\"},\"return\":\"The profit of a user.\"},\"supplyInterestRate()\":{\"return\":\"Interest that lenders are currently receiving when supplying to the pool.\"},\"tokenPrice()\":{\"return\":\"The loan token price.\"},\"totalAssetBorrow()\":{\"return\":\"The total amount of loan tokens on debt.\"},\"totalAssetSupply()\":{\"details\":\"Wrapper for internal _totalAssetSupply function.\",\"return\":\"The total amount of loan tokens on supply.\"},\"totalSupply()\":{\"return\":\"The total number of iTokens in existence as of now.\"},\"totalSupplyInterestRate(uint256)\":{\"params\":{\"assetSupply\":\"The amount of loan tokens supplied.\"},\"return\":\"Interest that lenders are currently receiving when supplying a given amount of loan tokens to the pool.\"},\"transfer(address,uint256)\":{\"params\":{\"_to\":\"The recipient of the tokens.\",\"_value\":\"The amount of tokens sent.\"},\"return\":\"Success true/false.\"},\"transferFrom(address,address,uint256)\":{\"return\":\"A boolean value indicating whether the operation succeeded.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"allowance(address,address)\":{\"notice\":\"Get the amount of iTokens allowed to be spent by a  given account on behalf of the owner.\"},\"approve(address,uint256)\":{\"notice\":\"Set an amount as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event.\"},\"assetBalanceOf(address)\":{\"notice\":\"Get loan token balance.\"},\"avgBorrowInterestRate()\":{\"notice\":\"Wrapper for average borrow interest.\"},\"balanceOf(address)\":{\"notice\":\"Get the amount of iTokens owned by an account.\"},\"borrow(bytes32,uint256,uint256,uint256,address,address,address,bytes)\":{\"notice\":\"Borrow funds from the pool. The underlying loan token may not be used as collateral.\"},\"borrowInterestRate()\":{\"notice\":\"Get borrow interest rate. The minimum rate the next base protocol borrower will receive for variable-rate loans.\"},\"burn(address,uint256)\":{\"notice\":\"Burn loan token wrapper. Adds a pay-out transfer after calling low level _burnToken function. In order to withdraw funds to the pool, call burn on the respective loan token contract. This will burn your loan tokens and send you the underlying token in exchange.\"},\"calculateSupplyInterestRate(uint256,uint256)\":{\"notice\":\"Compute the next supply interest adjustment.\"},\"checkPriceDivergence(uint256,address,uint256)\":{\"notice\":\"Check if entry price lies above a minimum\"},\"checkpointPrice(address)\":{\"notice\":\"Getter for the price checkpoint mapping.\"},\"getBorrowAmountForDeposit(uint256,uint256,address)\":{\"notice\":\"Calculate the borrow allowed for a given deposit.     * The function for doing over-collateralized borrows against loan tokens expects a minimum amount of collateral be sent to satisfy collateral requirements of the loan, for borrow amount, interest rate, and initial loan duration. To determine appropriate values to pass to this function for a given loan, `getDepositAmountForBorrow` and 'getBorrowAmountForDeposit` are required.\"},\"getDepositAmountForBorrow(uint256,uint256,address)\":{\"notice\":\"Calculate the deposit required to a given borrow.     * The function for doing over-collateralized borrows against loan tokens expects a minimum amount of collateral be sent to satisfy collateral requirements of the loan, for borrow amount, interest rate, and initial loan duration. To determine appropriate values to pass to this function for a given loan, `getDepositAmountForBorrow` and 'getBorrowAmountForDeposit` are required.\"},\"getEstimatedMarginDetails(uint256,uint256,uint256,address)\":{\"notice\":\"Get margin information on a trade.\"},\"getListFunctionSignatures()\":{\"notice\":\"This function is MANDATORY, which will be called by LoanTokenLogicBeacon and be registered. Every new public function, the sginature needs to be included in this function.\"},\"getMaxEscrowAmount(uint256)\":{\"notice\":\"Compute the maximum deposit amount under current market conditions.\"},\"marginTrade(bytes32,uint256,uint256,uint256,address,address,uint256,bytes)\":{\"notice\":\"Borrow and immediately get into a position.     * Trading on margin is used to increase an investor's buying power. Margin is the amount of money required to open a position, while leverage is the multiple of exposure to account equity.     * Leverage allows you to trade positions LARGER than the amount of money in your trading account. Leverage is expressed as a ratio.     * When trading on margin, investors first deposit some token that then serves as collateral for the loan, and then pay ongoing interest payments on the money they borrow.     * Margin trading = taking a loan and swapping it: In order to open a margin trade position, 1.- The user calls marginTrade on the loan token contract. 2.- The loan token contract provides the loan and sends it for processing   to the protocol proxy contract. 3.- The protocol proxy contract uses the module LoanOpening to create a   position and swaps the loan tokens to collateral tokens. 4.- The Sovryn Swap network looks up the correct converter and swaps the   tokens. If successful, the position is being held by the protocol proxy contract, which is why positions need to be closed at the protocol proxy contract.\"},\"marginTradeAffiliate(bytes32,uint256,uint256,uint256,address,address,uint256,address,bytes)\":{\"notice\":\"Wrapper for marginTrade invoking setAffiliatesReferrer to track  referral trade by affiliates program.\"},\"marketLiquidity()\":{\"notice\":\"Get current liquidity. A part of total funds supplied are borrowed. Liquidity = supply - borrow\"},\"mint(address,uint256)\":{\"notice\":\"Mint loan token wrapper. Adds a check before calling low level _mintToken function. The function retrieves the tokens from the message sender, so make sure to first approve the loan token contract to access your funds. This is done by calling approve(address spender, uint amount) on the ERC20 token contract, where spender is the loan token contract address and amount is the amount to be deposited.\"},\"nextBorrowInterestRate(uint256)\":{\"notice\":\"Public wrapper for internal call.\"},\"nextSupplyInterestRate(uint256)\":{\"notice\":\"Get interest rate w/ added supply.\"},\"profitOf(address)\":{\"notice\":\"Wrapper for internal _profitOf low level function.\"},\"supplyInterestRate()\":{\"notice\":\"Get interest rate.\"},\"tokenPrice()\":{\"notice\":\"Loan token price calculation considering unpaid interests.\"},\"totalAssetBorrow()\":{\"notice\":\"Get the total amount of loan tokens on debt. Calls protocol getTotalPrincipal function. In the context of borrowing, principal is the initial size of a loan. It can also be the amount still owed on a loan. If you take out a $50,000 mortgage, for example, the principal is $50,000. If you pay off $30,000, the principal balance now consists of the remaining $20,000.\"},\"totalAssetSupply()\":{\"notice\":\"Get the total amount of loan tokens on supply.\"},\"totalSupply()\":{\"notice\":\"Get the total supply of iTokens.\"},\"totalSupplyInterestRate(uint256)\":{\"notice\":\"Get interest rate w/ added supply assets.\"},\"transfer(address,uint256)\":{\"notice\":\"Transfer tokens wrapper. Sets token owner the msg.sender. Sets maximun allowance uint256(-1) to ensure tokens are always transferred.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Moves `_value` loan tokens from `_from` to `_to` using the allowance mechanism. Calls internal _internalTransferFrom function.\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/connectors/loantoken/modules/beaconLogicWRBTC/LoanTokenLogicWrbtc.sol\":\"LoanTokenLogicWrbtc\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@ethereum-waffle/=node_modules/@ethereum-waffle/\",\":ds-test/=foundry/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=foundry/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":truffle/=node_modules/truffle/\"]},\"sources\":{\"contracts/connectors/loantoken/AdvancedToken.sol\":{\"keccak256\":\"0x4e7606dcb24cd7f3a4e5c1a153975fd65156f7239cb281034c84d64b0dfc5dd0\",\"urls\":[\"bzz-raw://0f0ab7e85a0ab4c198221de9c7802e5d7c8b07954defa081f10778372faae26e\",\"dweb:/ipfs/QmbeL315ceTTd4kBiZjkZiPxygRzFdWexjPS9nmsfKCezc\"]},\"contracts/connectors/loantoken/AdvancedTokenStorage.sol\":{\"keccak256\":\"0x08afb0584442da1baf29938b6ff797e22fc8b7e493e51fd26358e7be3b73fa32\",\"urls\":[\"bzz-raw://6cd1144ca50579200cd44c1bd9498549b73889959322894fb89abb598ee9ea03\",\"dweb:/ipfs/QmW6U3TsN4y781X5n7bMt3PGtiMQyAdPyBgVFTNTnewxuL\"]},\"contracts/connectors/loantoken/LoanTokenBase.sol\":{\"keccak256\":\"0x9cb501d26d27b5bc143085b6d38261323426741857e49ff5dea0ea1325b5fab8\",\"urls\":[\"bzz-raw://20d89f7140a2efd14434fe7389e9ef05fd6d14ce8e939d4c34aac10bbcd08702\",\"dweb:/ipfs/QmfQ6QBwH7Tw7oDVj4R71Q96o3ycFEkqrVzJKwuciS3Ty9\"]},\"contracts/connectors/loantoken/LoanTokenLogicStandard.sol\":{\"keccak256\":\"0xc27b1604f72cd126f41deae512fa72d39077a796582b75f10d83c1ca25e84a3c\",\"urls\":[\"bzz-raw://8d5173bcc9a856ffb9feb5f3420c462e742e80fb21ff05e64ea13d06dc25e901\",\"dweb:/ipfs/QmXhPDGCn4hXzTR6kkx2nBDx6R3RtqoDHwszftJ7jJEQGi\"]},\"contracts/connectors/loantoken/LoanTokenLogicStorage.sol\":{\"keccak256\":\"0xb38139a4492a0e76c5d6eadaae2c366e98ffd5974c12c7cf37c2b55b56b9ca94\",\"urls\":[\"bzz-raw://f698e1c42c1e107f537a5287a04fb74d615c6764ee4f88b37195eb496d77b238\",\"dweb:/ipfs/QmXbas1bgup3dkRhBhMQi2z3fsg9UvPFnWifetvBPfvKh1\"]},\"contracts/connectors/loantoken/Pausable.sol\":{\"keccak256\":\"0x54f95b041e66fbcadb867bfba626373b681e0000ecea2b19f521de89c3020690\",\"urls\":[\"bzz-raw://4e7ef0893bfcad7960c84dc41504218cf65edb7cb44263055eccc321b515df13\",\"dweb:/ipfs/QmPk7qj658ha5SvWLtsrS5okGaYWwuPHVaL86pJr6hQyjX\"]},\"contracts/connectors/loantoken/interfaces/FeedsLike.sol\":{\"keccak256\":\"0xc8786f355ccc5a00a4b0985c28f0063cb9480f53468d44b7c17b02c9bf13a970\",\"urls\":[\"bzz-raw://fef80803763be524fcce5500f377d653b4b8e6fd4dab318ea332938203090365\",\"dweb:/ipfs/QmWE4XDFfuKxsESYXbu3H8Bqn8DH2J5zbS5rQiqcigBEHi\"]},\"contracts/connectors/loantoken/interfaces/ProtocolLike.sol\":{\"keccak256\":\"0x97e523a6ab51b439537b2ad5ef8c09cb01f99d210b2574cc54fb5062f900f2ab\",\"urls\":[\"bzz-raw://e19c13654eec4ce2a5270a440767766f6e0859c034186bdcd66dd79b2ff59aaf\",\"dweb:/ipfs/QmPhfjV6eTc8KHvNUaiNiH1trQ5Ey8bSn5bf2jGxsAcv5S\"]},\"contracts/connectors/loantoken/interfaces/ProtocolSettingsLike.sol\":{\"keccak256\":\"0x3e1ea57320782c4f65c58d9f28aff15eda65eef1f8e76551b2da920dffbf0c1e\",\"urls\":[\"bzz-raw://5113bd26c46a25e8d3c1f85e123b2afe007bcde6850209d7abdbfc1b5b974b92\",\"dweb:/ipfs/QmQJaSinWCy7oBWdmv4oR31QL4VbYKEXsmMRdqU2aCthms\"]},\"contracts/connectors/loantoken/lib/MarginTradeStructHelpers.sol\":{\"keccak256\":\"0xf0612e2c0d13604a67c3d55efe88810c089f0b84ca63bd3ce82c1e09b0938973\",\"urls\":[\"bzz-raw://29d225d836c786e5140f7798e25f8c170c7417113cdd6a3bfe5d240357679678\",\"dweb:/ipfs/QmXTppmtBSC8pNCzvyt8H1zUUTnKvoedwmW3TLuXPKsGZU\"]},\"contracts/connectors/loantoken/modules/beaconLogicWRBTC/LoanTokenLogicWrbtc.sol\":{\"keccak256\":\"0x8f8acb5e67849c4e85803c381ab812ab49dd86c27bd2c944f1f70f3a51d4719a\",\"urls\":[\"bzz-raw://9302fb9247b1b8d13ce9e15602422a1d2f2117d8f73c59bac3e75616e4355fa1\",\"dweb:/ipfs/QmQk1P7bhYdg5mNXMwsnDVkGmnhmL8apUxowKoimkJpjJQ\"]},\"contracts/core/objects/LoanParamsStruct.sol\":{\"keccak256\":\"0xe15aa97713521da7f501e5225af9d92cf34bd68d286dbfed86aa75aabb323945\",\"urls\":[\"bzz-raw://8ffbf11735ac26f4c1cc8c3403b8b98519cff9a5a16bf690e1c7a8a29449aa39\",\"dweb:/ipfs/QmX6J85sDNbu5Mh553oQNkfNoPRd79sHU8zKLWzNUz3E7U\"]},\"contracts/farm/ILiquidityMining.sol\":{\"keccak256\":\"0xed5abb44e4a222ecf9d20998ad9ae2ee3715291c9ea6a30e0c74f0a0e6d08ea8\",\"urls\":[\"bzz-raw://5fef3b0642fb459b84f25e39036b3765a7cd554be1258ff678fc6204d4551fd6\",\"dweb:/ipfs/QmUcbqnmK2sWSQZDzLJfxbFepVF816S9XsYqMgk4D6DEc6\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xea0bb1bf7d022130bb42a4efdfd875ef76ac5ac730a94ddd7b8c9949d4253855\",\"urls\":[\"bzz-raw://2050b03a2a1d4203698261daf2f46749bf5b72e3d23c272553e047e6bea4af40\",\"dweb:/ipfs/QmPY8bbNv3KxnyQ4Z6DtHkYu2U1Kfd7ooRDRUWNuw6v4Jt\"]},\"contracts/interfaces/IWrbtc.sol\":{\"keccak256\":\"0x20fdfe4b5e32fd7f863b3fa128e3c80bd4ccf090a4ffba56186ef3b7f2a80492\",\"urls\":[\"bzz-raw://d1adc3348aded3938e587fead4d4becf8efbed346c9cdc73e1f8ed42cb43b2c9\",\"dweb:/ipfs/QmZPMshLwXDwH2UKkFeV5QPtz129swV354fQ25gqKWAV94\"]},\"contracts/interfaces/IWrbtcERC20.sol\":{\"keccak256\":\"0x7301a8c8ca7aa016ec94268a16d07366875f2e406442e929968dd745b1ee5be5\",\"urls\":[\"bzz-raw://12d22b4d1e74d95f82d2bc84b5e3c978e2341cb7a1b8fc383b64aaef59f13a00\",\"dweb:/ipfs/QmZkPrztJ5nwiKKudgz8aWX6kk3YHKCtmxJndMvV1NJuS6\"]},\"contracts/modules/interfaces/ProtocolAffiliatesInterface.sol\":{\"keccak256\":\"0x42f259156db09a06e3dcdf0ab9c6774712616b35e6baff97999a2a534d1c9c64\",\"urls\":[\"bzz-raw://54555f2049d372e0b52b6020f1459c5d8ee27ac9430ec6e329a3c74810933387\",\"dweb:/ipfs/Qme6jqbycF9LtMFvMpMHoGnLBeRk7B1rF5bZVAYK15GisV\"]},\"contracts/openzeppelin/Address.sol\":{\"keccak256\":\"0x23df48a01dbac9b25e86c9131174fb7752bbc7e741e63f1aa982de22e055ad54\",\"urls\":[\"bzz-raw://0928673cfdca6f6917432e1cff628b726b4396ed0f4b08d3281a7ebbdb2380e3\",\"dweb:/ipfs/QmY12enUUEaE7sC5PZAdqJo63JxaH2FqVJtHZxxB9HzVYE\"]},\"contracts/openzeppelin/Context.sol\":{\"keccak256\":\"0x7860cb1591dbd66bb497c60c46866d9fcdb56c73306ed86b25801000af1c7b2b\",\"urls\":[\"bzz-raw://79e480eab5cb03c034f7fb2c177f23874fddebbb3514d773729bb094a0fda826\",\"dweb:/ipfs/QmTfDHE4fnQE3gfycu7NePREWfWFgJgmaEmHDn4uyTnMBP\"]},\"contracts/openzeppelin/Ownable.sol\":{\"keccak256\":\"0x94496c375b3e82d87d7f01ce1577f008fab374312cf93012a0eca716e6aadb3a\",\"urls\":[\"bzz-raw://ea268f87bc9d256b99aae4d98f23931f485295b5720f505e0554223c9b54431a\",\"dweb:/ipfs/QmWCLqTijearegiDuWyhrkRQXXACT1sVUG6cF3L9pszb6Y\"]},\"contracts/openzeppelin/ReentrancyGuard.sol\":{\"keccak256\":\"0xd347de96ad57d1e45b07a2efe3050c1bd4b809236bbf354acb593de56d21a5c9\",\"urls\":[\"bzz-raw://ad45ba93d472a3c4f7092e34d6f1cdca11c9e64a5918bf848d497c7f49427ec5\",\"dweb:/ipfs/QmPC5tnpnpv67NfTDb7rZVgBvvLXoJmiuBzUgjz3MAUeFk\"]},\"contracts/openzeppelin/SafeMath.sol\":{\"keccak256\":\"0xbff8d6273e1a6870d1a142c0c23acd63a4dd47760f250390f49ee56333bcb6e8\",\"urls\":[\"bzz-raw://379880c293771d9db34b4db282bd22f0536d41f1db2a7fb887124984a5bcd719\",\"dweb:/ipfs/QmUrUzEJPp9WxyvFFZSaqv7qjnSwrkApNUkMny5cCcY2a6\"]},\"contracts/openzeppelin/SignedSafeMath.sol\":{\"keccak256\":\"0x449606d22a41bbeaeee8775d66b2bd179b6964b65fd3380b22ef837634e7523b\",\"urls\":[\"bzz-raw://f13fe82aab8ae79842e617c9c77155f2f46ec21670887c2e037d9d42b50062f8\",\"dweb:/ipfs/QmZJPTQmcVm6XWq5LJsouTwC71KzkjawN8UgqyQbPyUpkx\"]},\"contracts/reentrancy/Mutex.sol\":{\"keccak256\":\"0xd10b0fd07d5fed1ae1237e7c87e6501970fce2a86e2b8862e502258b0d3aeb2c\",\"urls\":[\"bzz-raw://a99cb17e5f05a4eeb80c91d0d00fb9c482502e5acdd0d10727d53f9b68f1e732\",\"dweb:/ipfs/QmZ8Va6t8DJAAHUcSXC4aWmitcgSAhugdeWHCFXJcxJF5S\"]},\"contracts/reentrancy/SharedReentrancyGuard.sol\":{\"keccak256\":\"0x2d0e61b104b91c1764f20fbeb381ba0f8a8889934ba7f6e8a167ed542ec2c124\",\"urls\":[\"bzz-raw://380369e173ad2b17130b26377df35a13ed3413b65f72f8242dc6e2eb5aca5517\",\"dweb:/ipfs/QmNNRyoKsrU7XsV1B8okhaJpGNgzRixnySebGZYzT3RmC9\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.5.17+commit.d19bba13"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "valueBefore",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "valueAfter",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AllowanceUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "burner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "assetAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Burn",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "loanToken",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "loanAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FlashBorrow",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "minter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "assetAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Mint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TINY_AMOUNT",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "VERSION",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assetBalanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "avgBorrowInterestRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "baseRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "loanId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "withdrawAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialLoanDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralTokenSent",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralTokenAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "borrow",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "borrowInterestRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "burnAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "loanAmountPaid",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "burnAmount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "useLM",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnToBTC",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "loanAmountPaid",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assetBorrow",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "assetSupply",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateSupplyInterestRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "loanTokenSent",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralTokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "minEntryPrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkPriceDivergence"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkpointPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "checkpointSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "earlyAccessToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "depositAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialLoanDuration",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralTokenAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBorrowAmountForDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "borrowAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "borrowAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialLoanDuration",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralTokenAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDepositAmountForBorrow",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "depositAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "leverageAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "loanTokenSent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralTokenSent",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralTokenAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEstimatedMarginDetails",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "principal",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateral",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "interestRate",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getListFunctionSignatures",
          "outputs": [
            {
              "internalType": "bytes4[]",
              "name": "functionSignatures",
              "type": "bytes4[]"
            },
            {
              "internalType": "bytes32",
              "name": "moduleName",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "leverageAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMaxEscrowAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "maxEscrowAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "initialPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isOwner",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "kinkLevel",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "liquidityMiningAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "loanParamsIds",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "loanTokenAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lowUtilBaseRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lowUtilRateMultiplier",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "loanId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "leverageAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "loanTokenSent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralTokenSent",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralTokenAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "minEntryPrice",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "loanDataBytes",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "marginTrade",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "loanId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "leverageAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "loanTokenSent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralTokenSent",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralTokenAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "minEntryPrice",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "affiliateReferrer",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "loanDataBytes",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "marginTradeAffiliate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "marketLiquidity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxScaleRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "depositAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "mintAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "useLM",
              "type": "bool"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "mintWithBTC",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "mintAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "borrowAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nextBorrowInterestRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "supplyAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nextSupplyInterestRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pauser",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "profitOf",
          "outputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rateMultiplier",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sovrynContractAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "source",
              "type": "string"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "stringToBytes32",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "result",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "supplyInterestRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetLevel",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "target_",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalAssetBorrow",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalAssetSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assetSupply",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupplyInterestRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "transactionLimit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "wrbtcTokenAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "methods": {
          "allowance(address,address)": {
            "params": {
              "_owner": "The account owner of the iTokens.",
              "_spender": "The account allowed to send the iTokens."
            },
            "return": "The number of iTokens an account is allowing the spender  to send on its behalf."
          },
          "approve(address,uint256)": {
            "params": {
              "_spender": "The account address that will be able to spend the tokens.",
              "_value": "The amount of tokens allowed to spend."
            }
          },
          "assetBalanceOf(address)": {
            "return": "The user's balance of underlying token."
          },
          "avgBorrowInterestRate()": {
            "return": "The average borrow interest."
          },
          "balanceOf(address)": {
            "params": {
              "_owner": "The account owner of the iTokens."
            },
            "return": "The number of iTokens an account owns."
          },
          "borrow(bytes32,uint256,uint256,uint256,address,address,address,bytes)": {
            "params": {
              "borrower": "The one paying for the collateral.",
              "collateralTokenAddress": "The address of the token to be used as  collateral. Cannot be the loan token address.",
              "collateralTokenSent": "The amount of collateral tokens provided by the user.  (150% of the withdrawn amount worth in collateral tokens).",
              "initialLoanDuration": "The duration of the loan in seconds.  If the loan is not paid back until then, it'll need to be rolled over.",
              "loanId": "The ID of the loan, 0 for a new loan.",
              "receiver": "The one receiving the withdrawn amount.",
              "withdrawAmount": "The amount to be withdrawn (actually borrowed)."
            },
            "return": "New principal and new collateral added to loan."
          },
          "borrowInterestRate()": {
            "return": "The borrow interest rate."
          },
          "burn(address,uint256)": {
            "params": {
              "burnAmount": "The amount of loan tokens to redeem.",
              "receiver": "The account getting the minted tokens."
            },
            "return": "The amount of underlying tokens payed to lender."
          },
          "calculateSupplyInterestRate(uint256,uint256)": {
            "params": {
              "assetBorrow": "The amount of loan tokens on debt.",
              "assetSupply": "The amount of loan tokens supplied."
            },
            "return": "The next supply interest adjustment."
          },
          "checkPriceDivergence(uint256,address,uint256)": {
            "params": {
              "collateralTokenAddress": "The token address of collateral.",
              "loanTokenSent": "The amount of deposit.",
              "minEntryPrice": "Value of loan token in collateral"
            }
          },
          "checkpointPrice(address)": {
            "params": {
              "_user": "The user account as the mapping index."
            },
            "return": "The price on the checkpoint for this user."
          },
          "getBorrowAmountForDeposit(uint256,uint256,address)": {
            "params": {
              "collateralTokenAddress": "The token address of collateral.",
              "depositAmount": "The amount of deposit.",
              "initialLoanDuration": "The duration of the loan."
            },
            "return": "The amount of borrow allowed."
          },
          "getDepositAmountForBorrow(uint256,uint256,address)": {
            "params": {
              "borrowAmount": "The amount of borrow.",
              "collateralTokenAddress": "The token address of collateral.",
              "initialLoanDuration": "The duration of the loan."
            },
            "return": "The amount of deposit required."
          },
          "getEstimatedMarginDetails(uint256,uint256,uint256,address)": {
            "params": {
              "collateralTokenAddress": "The token address of collateral.",
              "collateralTokenSent": "The amount of collateral tokens provided by the user.",
              "leverageAmount": "The multiple of exposure: 2x ... 5x. The leverage with 18 decimals.",
              "loanTokenSent": "The number of loan tokens provided by the user."
            },
            "return": "The principal, the collateral and the interestRate."
          },
          "getListFunctionSignatures()": {
            "details": "This function will return the list of function signature in this contract that are available for public call Then this function will be called by LoanTokenLogicBeacon, and the function signatures will be registred in LoanTokenLogicBeacon.To save the gas we can just directly return the list of function signature from this pure function. The other workaround (fancy way) is we can create a storage for the list of the function signature, and then we can store each function signature to that storage from the constructor. Then, in this function we just need to return that storage variable.",
            "return": "The list of function signatures (bytes4[])"
          },
          "getMaxEscrowAmount(uint256)": {
            "details": "maxEscrowAmount = liquidity * (100 - interestForDuration) / 100",
            "params": {
              "leverageAmount": "The chosen multiplier with 18 decimals."
            }
          },
          "isOwner()": {
            "details": "Returns true if the caller is the current owner."
          },
          "marginTrade(bytes32,uint256,uint256,uint256,address,address,uint256,bytes)": {
            "params": {
              "collateralTokenAddress": "The token address of collateral.",
              "collateralTokenSent": "The amount of collateral tokens provided by the user.",
              "leverageAmount": "The multiple of exposure: 2x ... 5x. The leverage with 18 decimals.",
              "loanDataBytes": "Additional loan data (not in use for token swaps).",
              "loanId": "The ID of the loan, 0 for a new loan.",
              "loanTokenSent": "The number of loan tokens provided by the user.",
              "minEntryPrice": "Value of loan token in collateral.",
              "trader": "The account that performs this trade."
            },
            "return": "New principal and new collateral added to trade."
          },
          "marginTradeAffiliate(bytes32,uint256,uint256,uint256,address,address,uint256,address,bytes)": {
            "params": {
              "affiliateReferrer": "The address of the referrer from affiliates program.",
              "collateralTokenAddress": "The token address of collateral.",
              "collateralTokenSent": "The amount of collateral tokens provided by the user.",
              "leverageAmount": "The multiple of exposure: 2x ... 5x. The leverage with 18 decimals.",
              "loanDataBytes": "Additional loan data (not in use for token swaps).",
              "loanId": "The ID of the loan, 0 for a new loan.",
              "loanTokenSent": "The number of loan tokens provided by the user.",
              "minEntryPrice": "Value of loan token in collateral.",
              "trader": "The account that performs this trade."
            },
            "return": "New principal and new collateral added to trade."
          },
          "marketLiquidity()": {
            "return": "The market liquidity."
          },
          "mint(address,uint256)": {
            "params": {
              "depositAmount": "The amount of underlying tokens provided on the  loan. (Not the number of loan tokens to mint).",
              "receiver": "The account getting the minted tokens."
            },
            "return": "The amount of loan tokens minted."
          },
          "nextBorrowInterestRate(uint256)": {
            "params": {
              "borrowAmount": "The amount of tokens to borrow."
            },
            "return": "The next borrow interest rate."
          },
          "nextSupplyInterestRate(uint256)": {
            "params": {
              "supplyAmount": "The amount of tokens supplied."
            },
            "return": "Interest that lenders are currently receiving when supplying a given amount of tokens to the pool."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "profitOf(address)": {
            "params": {
              "user": "The user address."
            },
            "return": "The profit of a user."
          },
          "supplyInterestRate()": {
            "return": "Interest that lenders are currently receiving when supplying to the pool."
          },
          "tokenPrice()": {
            "return": "The loan token price."
          },
          "totalAssetBorrow()": {
            "return": "The total amount of loan tokens on debt."
          },
          "totalAssetSupply()": {
            "details": "Wrapper for internal _totalAssetSupply function.",
            "return": "The total amount of loan tokens on supply."
          },
          "totalSupply()": {
            "return": "The total number of iTokens in existence as of now."
          },
          "totalSupplyInterestRate(uint256)": {
            "params": {
              "assetSupply": "The amount of loan tokens supplied."
            },
            "return": "Interest that lenders are currently receiving when supplying a given amount of loan tokens to the pool."
          },
          "transfer(address,uint256)": {
            "params": {
              "_to": "The recipient of the tokens.",
              "_value": "The amount of tokens sent."
            },
            "return": "Success true/false."
          },
          "transferFrom(address,address,uint256)": {
            "return": "A boolean value indicating whether the operation succeeded."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        }
      },
      "userdoc": {
        "methods": {
          "allowance(address,address)": {
            "notice": "Get the amount of iTokens allowed to be spent by a  given account on behalf of the owner."
          },
          "approve(address,uint256)": {
            "notice": "Set an amount as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event."
          },
          "assetBalanceOf(address)": {
            "notice": "Get loan token balance."
          },
          "avgBorrowInterestRate()": {
            "notice": "Wrapper for average borrow interest."
          },
          "balanceOf(address)": {
            "notice": "Get the amount of iTokens owned by an account."
          },
          "borrow(bytes32,uint256,uint256,uint256,address,address,address,bytes)": {
            "notice": "Borrow funds from the pool. The underlying loan token may not be used as collateral."
          },
          "borrowInterestRate()": {
            "notice": "Get borrow interest rate. The minimum rate the next base protocol borrower will receive for variable-rate loans."
          },
          "burn(address,uint256)": {
            "notice": "Burn loan token wrapper. Adds a pay-out transfer after calling low level _burnToken function. In order to withdraw funds to the pool, call burn on the respective loan token contract. This will burn your loan tokens and send you the underlying token in exchange."
          },
          "calculateSupplyInterestRate(uint256,uint256)": {
            "notice": "Compute the next supply interest adjustment."
          },
          "checkPriceDivergence(uint256,address,uint256)": {
            "notice": "Check if entry price lies above a minimum"
          },
          "checkpointPrice(address)": {
            "notice": "Getter for the price checkpoint mapping."
          },
          "getBorrowAmountForDeposit(uint256,uint256,address)": {
            "notice": "Calculate the borrow allowed for a given deposit.     * The function for doing over-collateralized borrows against loan tokens expects a minimum amount of collateral be sent to satisfy collateral requirements of the loan, for borrow amount, interest rate, and initial loan duration. To determine appropriate values to pass to this function for a given loan, `getDepositAmountForBorrow` and 'getBorrowAmountForDeposit` are required."
          },
          "getDepositAmountForBorrow(uint256,uint256,address)": {
            "notice": "Calculate the deposit required to a given borrow.     * The function for doing over-collateralized borrows against loan tokens expects a minimum amount of collateral be sent to satisfy collateral requirements of the loan, for borrow amount, interest rate, and initial loan duration. To determine appropriate values to pass to this function for a given loan, `getDepositAmountForBorrow` and 'getBorrowAmountForDeposit` are required."
          },
          "getEstimatedMarginDetails(uint256,uint256,uint256,address)": {
            "notice": "Get margin information on a trade."
          },
          "getListFunctionSignatures()": {
            "notice": "This function is MANDATORY, which will be called by LoanTokenLogicBeacon and be registered. Every new public function, the sginature needs to be included in this function."
          },
          "getMaxEscrowAmount(uint256)": {
            "notice": "Compute the maximum deposit amount under current market conditions."
          },
          "marginTrade(bytes32,uint256,uint256,uint256,address,address,uint256,bytes)": {
            "notice": "Borrow and immediately get into a position.     * Trading on margin is used to increase an investor's buying power. Margin is the amount of money required to open a position, while leverage is the multiple of exposure to account equity.     * Leverage allows you to trade positions LARGER than the amount of money in your trading account. Leverage is expressed as a ratio.     * When trading on margin, investors first deposit some token that then serves as collateral for the loan, and then pay ongoing interest payments on the money they borrow.     * Margin trading = taking a loan and swapping it: In order to open a margin trade position, 1.- The user calls marginTrade on the loan token contract. 2.- The loan token contract provides the loan and sends it for processing   to the protocol proxy contract. 3.- The protocol proxy contract uses the module LoanOpening to create a   position and swaps the loan tokens to collateral tokens. 4.- The Sovryn Swap network looks up the correct converter and swaps the   tokens. If successful, the position is being held by the protocol proxy contract, which is why positions need to be closed at the protocol proxy contract."
          },
          "marginTradeAffiliate(bytes32,uint256,uint256,uint256,address,address,uint256,address,bytes)": {
            "notice": "Wrapper for marginTrade invoking setAffiliatesReferrer to track  referral trade by affiliates program."
          },
          "marketLiquidity()": {
            "notice": "Get current liquidity. A part of total funds supplied are borrowed. Liquidity = supply - borrow"
          },
          "mint(address,uint256)": {
            "notice": "Mint loan token wrapper. Adds a check before calling low level _mintToken function. The function retrieves the tokens from the message sender, so make sure to first approve the loan token contract to access your funds. This is done by calling approve(address spender, uint amount) on the ERC20 token contract, where spender is the loan token contract address and amount is the amount to be deposited."
          },
          "nextBorrowInterestRate(uint256)": {
            "notice": "Public wrapper for internal call."
          },
          "nextSupplyInterestRate(uint256)": {
            "notice": "Get interest rate w/ added supply."
          },
          "profitOf(address)": {
            "notice": "Wrapper for internal _profitOf low level function."
          },
          "supplyInterestRate()": {
            "notice": "Get interest rate."
          },
          "tokenPrice()": {
            "notice": "Loan token price calculation considering unpaid interests."
          },
          "totalAssetBorrow()": {
            "notice": "Get the total amount of loan tokens on debt. Calls protocol getTotalPrincipal function. In the context of borrowing, principal is the initial size of a loan. It can also be the amount still owed on a loan. If you take out a $50,000 mortgage, for example, the principal is $50,000. If you pay off $30,000, the principal balance now consists of the remaining $20,000."
          },
          "totalAssetSupply()": {
            "notice": "Get the total amount of loan tokens on supply."
          },
          "totalSupply()": {
            "notice": "Get the total supply of iTokens."
          },
          "totalSupplyInterestRate(uint256)": {
            "notice": "Get interest rate w/ added supply assets."
          },
          "transfer(address,uint256)": {
            "notice": "Transfer tokens wrapper. Sets token owner the msg.sender. Sets maximun allowance uint256(-1) to ensure tokens are always transferred."
          },
          "transferFrom(address,address,uint256)": {
            "notice": "Moves `_value` loan tokens from `_from` to `_to` using the allowance mechanism. Calls internal _internalTransferFrom function."
          }
        }
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@ethereum-waffle/=node_modules/@ethereum-waffle/",
        ":ds-test/=foundry/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=foundry/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":truffle/=node_modules/truffle/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "compilationTarget": {
        "contracts/connectors/loantoken/modules/beaconLogicWRBTC/LoanTokenLogicWrbtc.sol": "LoanTokenLogicWrbtc"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/connectors/loantoken/AdvancedToken.sol": {
        "keccak256": "0x4e7606dcb24cd7f3a4e5c1a153975fd65156f7239cb281034c84d64b0dfc5dd0",
        "urls": [
          "bzz-raw://0f0ab7e85a0ab4c198221de9c7802e5d7c8b07954defa081f10778372faae26e",
          "dweb:/ipfs/QmbeL315ceTTd4kBiZjkZiPxygRzFdWexjPS9nmsfKCezc"
        ],
        "license": null
      },
      "contracts/connectors/loantoken/AdvancedTokenStorage.sol": {
        "keccak256": "0x08afb0584442da1baf29938b6ff797e22fc8b7e493e51fd26358e7be3b73fa32",
        "urls": [
          "bzz-raw://6cd1144ca50579200cd44c1bd9498549b73889959322894fb89abb598ee9ea03",
          "dweb:/ipfs/QmW6U3TsN4y781X5n7bMt3PGtiMQyAdPyBgVFTNTnewxuL"
        ],
        "license": null
      },
      "contracts/connectors/loantoken/LoanTokenBase.sol": {
        "keccak256": "0x9cb501d26d27b5bc143085b6d38261323426741857e49ff5dea0ea1325b5fab8",
        "urls": [
          "bzz-raw://20d89f7140a2efd14434fe7389e9ef05fd6d14ce8e939d4c34aac10bbcd08702",
          "dweb:/ipfs/QmfQ6QBwH7Tw7oDVj4R71Q96o3ycFEkqrVzJKwuciS3Ty9"
        ],
        "license": null
      },
      "contracts/connectors/loantoken/LoanTokenLogicStandard.sol": {
        "keccak256": "0xc27b1604f72cd126f41deae512fa72d39077a796582b75f10d83c1ca25e84a3c",
        "urls": [
          "bzz-raw://8d5173bcc9a856ffb9feb5f3420c462e742e80fb21ff05e64ea13d06dc25e901",
          "dweb:/ipfs/QmXhPDGCn4hXzTR6kkx2nBDx6R3RtqoDHwszftJ7jJEQGi"
        ],
        "license": null
      },
      "contracts/connectors/loantoken/LoanTokenLogicStorage.sol": {
        "keccak256": "0xb38139a4492a0e76c5d6eadaae2c366e98ffd5974c12c7cf37c2b55b56b9ca94",
        "urls": [
          "bzz-raw://f698e1c42c1e107f537a5287a04fb74d615c6764ee4f88b37195eb496d77b238",
          "dweb:/ipfs/QmXbas1bgup3dkRhBhMQi2z3fsg9UvPFnWifetvBPfvKh1"
        ],
        "license": null
      },
      "contracts/connectors/loantoken/Pausable.sol": {
        "keccak256": "0x54f95b041e66fbcadb867bfba626373b681e0000ecea2b19f521de89c3020690",
        "urls": [
          "bzz-raw://4e7ef0893bfcad7960c84dc41504218cf65edb7cb44263055eccc321b515df13",
          "dweb:/ipfs/QmPk7qj658ha5SvWLtsrS5okGaYWwuPHVaL86pJr6hQyjX"
        ],
        "license": null
      },
      "contracts/connectors/loantoken/interfaces/FeedsLike.sol": {
        "keccak256": "0xc8786f355ccc5a00a4b0985c28f0063cb9480f53468d44b7c17b02c9bf13a970",
        "urls": [
          "bzz-raw://fef80803763be524fcce5500f377d653b4b8e6fd4dab318ea332938203090365",
          "dweb:/ipfs/QmWE4XDFfuKxsESYXbu3H8Bqn8DH2J5zbS5rQiqcigBEHi"
        ],
        "license": null
      },
      "contracts/connectors/loantoken/interfaces/ProtocolLike.sol": {
        "keccak256": "0x97e523a6ab51b439537b2ad5ef8c09cb01f99d210b2574cc54fb5062f900f2ab",
        "urls": [
          "bzz-raw://e19c13654eec4ce2a5270a440767766f6e0859c034186bdcd66dd79b2ff59aaf",
          "dweb:/ipfs/QmPhfjV6eTc8KHvNUaiNiH1trQ5Ey8bSn5bf2jGxsAcv5S"
        ],
        "license": null
      },
      "contracts/connectors/loantoken/interfaces/ProtocolSettingsLike.sol": {
        "keccak256": "0x3e1ea57320782c4f65c58d9f28aff15eda65eef1f8e76551b2da920dffbf0c1e",
        "urls": [
          "bzz-raw://5113bd26c46a25e8d3c1f85e123b2afe007bcde6850209d7abdbfc1b5b974b92",
          "dweb:/ipfs/QmQJaSinWCy7oBWdmv4oR31QL4VbYKEXsmMRdqU2aCthms"
        ],
        "license": null
      },
      "contracts/connectors/loantoken/lib/MarginTradeStructHelpers.sol": {
        "keccak256": "0xf0612e2c0d13604a67c3d55efe88810c089f0b84ca63bd3ce82c1e09b0938973",
        "urls": [
          "bzz-raw://29d225d836c786e5140f7798e25f8c170c7417113cdd6a3bfe5d240357679678",
          "dweb:/ipfs/QmXTppmtBSC8pNCzvyt8H1zUUTnKvoedwmW3TLuXPKsGZU"
        ],
        "license": null
      },
      "contracts/connectors/loantoken/modules/beaconLogicWRBTC/LoanTokenLogicWrbtc.sol": {
        "keccak256": "0x8f8acb5e67849c4e85803c381ab812ab49dd86c27bd2c944f1f70f3a51d4719a",
        "urls": [
          "bzz-raw://9302fb9247b1b8d13ce9e15602422a1d2f2117d8f73c59bac3e75616e4355fa1",
          "dweb:/ipfs/QmQk1P7bhYdg5mNXMwsnDVkGmnhmL8apUxowKoimkJpjJQ"
        ],
        "license": null
      },
      "contracts/core/objects/LoanParamsStruct.sol": {
        "keccak256": "0xe15aa97713521da7f501e5225af9d92cf34bd68d286dbfed86aa75aabb323945",
        "urls": [
          "bzz-raw://8ffbf11735ac26f4c1cc8c3403b8b98519cff9a5a16bf690e1c7a8a29449aa39",
          "dweb:/ipfs/QmX6J85sDNbu5Mh553oQNkfNoPRd79sHU8zKLWzNUz3E7U"
        ],
        "license": null
      },
      "contracts/farm/ILiquidityMining.sol": {
        "keccak256": "0xed5abb44e4a222ecf9d20998ad9ae2ee3715291c9ea6a30e0c74f0a0e6d08ea8",
        "urls": [
          "bzz-raw://5fef3b0642fb459b84f25e39036b3765a7cd554be1258ff678fc6204d4551fd6",
          "dweb:/ipfs/QmUcbqnmK2sWSQZDzLJfxbFepVF816S9XsYqMgk4D6DEc6"
        ],
        "license": null
      },
      "contracts/interfaces/IERC20.sol": {
        "keccak256": "0xea0bb1bf7d022130bb42a4efdfd875ef76ac5ac730a94ddd7b8c9949d4253855",
        "urls": [
          "bzz-raw://2050b03a2a1d4203698261daf2f46749bf5b72e3d23c272553e047e6bea4af40",
          "dweb:/ipfs/QmPY8bbNv3KxnyQ4Z6DtHkYu2U1Kfd7ooRDRUWNuw6v4Jt"
        ],
        "license": null
      },
      "contracts/interfaces/IWrbtc.sol": {
        "keccak256": "0x20fdfe4b5e32fd7f863b3fa128e3c80bd4ccf090a4ffba56186ef3b7f2a80492",
        "urls": [
          "bzz-raw://d1adc3348aded3938e587fead4d4becf8efbed346c9cdc73e1f8ed42cb43b2c9",
          "dweb:/ipfs/QmZPMshLwXDwH2UKkFeV5QPtz129swV354fQ25gqKWAV94"
        ],
        "license": null
      },
      "contracts/interfaces/IWrbtcERC20.sol": {
        "keccak256": "0x7301a8c8ca7aa016ec94268a16d07366875f2e406442e929968dd745b1ee5be5",
        "urls": [
          "bzz-raw://12d22b4d1e74d95f82d2bc84b5e3c978e2341cb7a1b8fc383b64aaef59f13a00",
          "dweb:/ipfs/QmZkPrztJ5nwiKKudgz8aWX6kk3YHKCtmxJndMvV1NJuS6"
        ],
        "license": null
      },
      "contracts/modules/interfaces/ProtocolAffiliatesInterface.sol": {
        "keccak256": "0x42f259156db09a06e3dcdf0ab9c6774712616b35e6baff97999a2a534d1c9c64",
        "urls": [
          "bzz-raw://54555f2049d372e0b52b6020f1459c5d8ee27ac9430ec6e329a3c74810933387",
          "dweb:/ipfs/Qme6jqbycF9LtMFvMpMHoGnLBeRk7B1rF5bZVAYK15GisV"
        ],
        "license": null
      },
      "contracts/openzeppelin/Address.sol": {
        "keccak256": "0x23df48a01dbac9b25e86c9131174fb7752bbc7e741e63f1aa982de22e055ad54",
        "urls": [
          "bzz-raw://0928673cfdca6f6917432e1cff628b726b4396ed0f4b08d3281a7ebbdb2380e3",
          "dweb:/ipfs/QmY12enUUEaE7sC5PZAdqJo63JxaH2FqVJtHZxxB9HzVYE"
        ],
        "license": null
      },
      "contracts/openzeppelin/Context.sol": {
        "keccak256": "0x7860cb1591dbd66bb497c60c46866d9fcdb56c73306ed86b25801000af1c7b2b",
        "urls": [
          "bzz-raw://79e480eab5cb03c034f7fb2c177f23874fddebbb3514d773729bb094a0fda826",
          "dweb:/ipfs/QmTfDHE4fnQE3gfycu7NePREWfWFgJgmaEmHDn4uyTnMBP"
        ],
        "license": null
      },
      "contracts/openzeppelin/Ownable.sol": {
        "keccak256": "0x94496c375b3e82d87d7f01ce1577f008fab374312cf93012a0eca716e6aadb3a",
        "urls": [
          "bzz-raw://ea268f87bc9d256b99aae4d98f23931f485295b5720f505e0554223c9b54431a",
          "dweb:/ipfs/QmWCLqTijearegiDuWyhrkRQXXACT1sVUG6cF3L9pszb6Y"
        ],
        "license": null
      },
      "contracts/openzeppelin/ReentrancyGuard.sol": {
        "keccak256": "0xd347de96ad57d1e45b07a2efe3050c1bd4b809236bbf354acb593de56d21a5c9",
        "urls": [
          "bzz-raw://ad45ba93d472a3c4f7092e34d6f1cdca11c9e64a5918bf848d497c7f49427ec5",
          "dweb:/ipfs/QmPC5tnpnpv67NfTDb7rZVgBvvLXoJmiuBzUgjz3MAUeFk"
        ],
        "license": null
      },
      "contracts/openzeppelin/SafeMath.sol": {
        "keccak256": "0xbff8d6273e1a6870d1a142c0c23acd63a4dd47760f250390f49ee56333bcb6e8",
        "urls": [
          "bzz-raw://379880c293771d9db34b4db282bd22f0536d41f1db2a7fb887124984a5bcd719",
          "dweb:/ipfs/QmUrUzEJPp9WxyvFFZSaqv7qjnSwrkApNUkMny5cCcY2a6"
        ],
        "license": null
      },
      "contracts/openzeppelin/SignedSafeMath.sol": {
        "keccak256": "0x449606d22a41bbeaeee8775d66b2bd179b6964b65fd3380b22ef837634e7523b",
        "urls": [
          "bzz-raw://f13fe82aab8ae79842e617c9c77155f2f46ec21670887c2e037d9d42b50062f8",
          "dweb:/ipfs/QmZJPTQmcVm6XWq5LJsouTwC71KzkjawN8UgqyQbPyUpkx"
        ],
        "license": null
      },
      "contracts/reentrancy/Mutex.sol": {
        "keccak256": "0xd10b0fd07d5fed1ae1237e7c87e6501970fce2a86e2b8862e502258b0d3aeb2c",
        "urls": [
          "bzz-raw://a99cb17e5f05a4eeb80c91d0d00fb9c482502e5acdd0d10727d53f9b68f1e732",
          "dweb:/ipfs/QmZ8Va6t8DJAAHUcSXC4aWmitcgSAhugdeWHCFXJcxJF5S"
        ],
        "license": null
      },
      "contracts/reentrancy/SharedReentrancyGuard.sol": {
        "keccak256": "0x2d0e61b104b91c1764f20fbeb381ba0f8a8889934ba7f6e8a167ed542ec2c124",
        "urls": [
          "bzz-raw://380369e173ad2b17130b26377df35a13ed3413b65f72f8242dc6e2eb5aca5517",
          "dweb:/ipfs/QmNNRyoKsrU7XsV1B8okhaJpGNgzRixnySebGZYzT3RmC9"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/connectors/loantoken/modules/beaconLogicWRBTC/LoanTokenLogicWrbtc.sol",
    "id": 5147,
    "exportedSymbols": {
      "LoanTokenLogicWrbtc": [
        5146
      ]
    },
    "nodeType": "SourceUnit",
    "src": "118:6623:14",
    "nodes": [
      {
        "id": 4630,
        "nodeType": "PragmaDirective",
        "src": "118:23:14",
        "nodes": [],
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ]
      },
      {
        "id": 4631,
        "nodeType": "PragmaDirective",
        "src": "142:33:14",
        "nodes": [],
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ]
      },
      {
        "id": 4632,
        "nodeType": "ImportDirective",
        "src": "177:42:14",
        "nodes": [],
        "absolutePath": "contracts/connectors/loantoken/LoanTokenLogicStandard.sol",
        "file": "../../LoanTokenLogicStandard.sol",
        "scope": 5147,
        "sourceUnit": 3922,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5146,
        "nodeType": "ContractDefinition",
        "src": "221:6519:14",
        "nodes": [
          {
            "id": 4915,
            "nodeType": "FunctionDefinition",
            "src": "1201:1948:14",
            "nodes": [],
            "body": {
              "id": 4914,
              "nodeType": "Block",
              "src": "1345:1804:14",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    4645
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4645,
                      "name": "res",
                      "nodeType": "VariableDeclaration",
                      "scope": 4914,
                      "src": "1355:19:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                        "typeString": "bytes4[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 4643,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "1355:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 4644,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "1355:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                          "typeString": "bytes4[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4651,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "3332",
                        "id": 4649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1390:2:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_32_by_1",
                          "typeString": "int_const 32"
                        },
                        "value": "32"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_32_by_1",
                          "typeString": "int_const 32"
                        }
                      ],
                      "id": 4648,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1377:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes4_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (bytes4[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 4646,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "1381:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 4647,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "1381:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                          "typeString": "bytes4[]"
                        }
                      }
                    },
                    "id": 4650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1377:16:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes4_$dyn_memory",
                      "typeString": "bytes4[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1355:38:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4652,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4645,
                        "src": "1441:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 4654,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 4653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1445:1:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1441:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4655,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62974,
                          "src": "1450:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LoanTokenLogicWrbtc_$5146",
                            "typeString": "contract LoanTokenLogicWrbtc"
                          }
                        },
                        "id": 4656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 992,
                        "src": "1450:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,uint256) external returns (uint256)"
                        }
                      },
                      "id": 4657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1450:18:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "1441:27:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 4659,
                  "nodeType": "ExpressionStatement",
                  "src": "1441:27:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4660,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4645,
                        "src": "1478:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 4662,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 4661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1482:1:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1478:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4663,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62974,
                          "src": "1487:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LoanTokenLogicWrbtc_$5146",
                            "typeString": "contract LoanTokenLogicWrbtc"
                          }
                        },
                        "id": 4664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "burn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1024,
                        "src": "1487:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,uint256) external returns (uint256)"
                        }
                      },
                      "id": 4665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1487:18:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "1478:27:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 4667,
                  "nodeType": "ExpressionStatement",
                  "src": "1478:27:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4668,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4645,
                        "src": "1515:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 4670,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 4669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1519:1:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1515:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4671,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62974,
                          "src": "1524:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LoanTokenLogicWrbtc_$5146",
                            "typeString": "contract LoanTokenLogicWrbtc"
                          }
                        },
                        "id": 4672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "borrow",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1220,
                        "src": "1524:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (bytes32,uint256,uint256,uint256,address,address,address,bytes memory) payable external returns (uint256,uint256)"
                        }
                      },
                      "id": 4673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1524:20:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "1515:29:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 4675,
                  "nodeType": "ExpressionStatement",
                  "src": "1515:29:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4676,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4645,
                        "src": "1554:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 4678,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "33",
                        "id": 4677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1558:1:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1554:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4679,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62974,
                          "src": "1563:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LoanTokenLogicWrbtc_$5146",
                            "typeString": "contract LoanTokenLogicWrbtc"
                          }
                        },
                        "id": 4680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "marginTrade",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1425,
                        "src": "1563:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (bytes32,uint256,uint256,uint256,address,address,uint256,bytes memory) payable external returns (uint256,uint256)"
                        }
                      },
                      "id": 4681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1563:25:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "1554:34:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 4683,
                  "nodeType": "ExpressionStatement",
                  "src": "1554:34:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4684,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4645,
                        "src": "1598:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 4686,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "34",
                        "id": 4685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1602:1:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1598:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4687,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62974,
                          "src": "1607:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LoanTokenLogicWrbtc_$5146",
                            "typeString": "contract LoanTokenLogicWrbtc"
                          }
                        },
                        "id": 4688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "marginTradeAffiliate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1476,
                        "src": "1607:25:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (bytes32,uint256,uint256,uint256,address,address,uint256,address,bytes memory) payable external returns (uint256,uint256)"
                        }
                      },
                      "id": 4689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1607:34:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "1598:43:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 4691,
                  "nodeType": "ExpressionStatement",
                  "src": "1598:43:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4692,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4645,
                        "src": "1651:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 4694,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "35",
                        "id": 4693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1655:1:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1651:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4695,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62974,
                          "src": "1660:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LoanTokenLogicWrbtc_$5146",
                            "typeString": "contract LoanTokenLogicWrbtc"
                          }
                        },
                        "id": 4696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1497,
                        "src": "1660:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) external returns (bool)"
                        }
                      },
                      "id": 4697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1660:22:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "1651:31:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 4699,
                  "nodeType": "ExpressionStatement",
                  "src": "1651:31:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4700,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4645,
                        "src": "1692:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 4702,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "36",
                        "id": 4701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1696:1:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1692:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4703,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62974,
                          "src": "1701:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LoanTokenLogicWrbtc_$5146",
                            "typeString": "contract LoanTokenLogicWrbtc"
                          }
                        },
                        "id": 4704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transferFrom",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1533,
                        "src": "1701:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,address,uint256) external returns (bool)"
                        }
                      },
                      "id": 4705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1701:26:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "1692:35:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 4707,
                  "nodeType": "ExpressionStatement",
                  "src": "1692:35:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4708,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4645,
                        "src": "1737:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 4710,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "37",
                        "id": 4709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1741:1:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_7_by_1",
                          "typeString": "int_const 7"
                        },
                        "value": "7"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1737:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4711,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62974,
                          "src": "1746:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LoanTokenLogicWrbtc_$5146",
                            "typeString": "contract LoanTokenLogicWrbtc"
                          }
                        },
                        "id": 4712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "profitOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1752,
                        "src": "1746:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_int256_$",
                          "typeString": "function (address) view external returns (int256)"
                        }
                      },
                      "id": 4713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1746:22:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "1737:31:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 4715,
                  "nodeType": "ExpressionStatement",
                  "src": "1737:31:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4716,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4645,
                        "src": "1778:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 4718,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "38",
                        "id": 4717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1782:1:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_8_by_1",
                          "typeString": "int_const 8"
                        },
                        "value": "8"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1778:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4719,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62974,
                          "src": "1787:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LoanTokenLogicWrbtc_$5146",
                            "typeString": "contract LoanTokenLogicWrbtc"
                          }
                        },
                        "id": 4720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1825,
                        "src": "1787:15:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 4721,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1787:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "1778:33:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 4723,
                  "nodeType": "ExpressionStatement",
                  "src": "1778:33:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4724,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4645,
                        "src": "1821:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 4726,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "39",
                        "id": 4725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1825:1:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_9_by_1",
                          "typeString": "int_const 9"
                        },
                        "value": "9"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1821:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4727,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62974,
                          "src": "1830:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LoanTokenLogicWrbtc_$5146",
                            "typeString": "contract LoanTokenLogicWrbtc"
                          }
                        },
                        "id": 4728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "checkpointPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1837,
                        "src": "1830:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 4729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1830:29:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "1821:38:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 4731,
                  "nodeType": "ExpressionStatement",
                  "src": "1821:38:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4732,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4645,
                        "src": "1869:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 4734,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 4733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1873:2:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1869:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4735,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62974,
                          "src": "1879:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LoanTokenLogicWrbtc_$5146",
                            "typeString": "contract LoanTokenLogicWrbtc"
                          }
                        },
                        "id": 4736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "marketLiquidity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1863,
                        "src": "1879:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 4737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1879:29:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "1869:39:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 4739,
                  "nodeType": "ExpressionStatement",
                  "src": "1869:39:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4740,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4645,
                        "src": "1918:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 4742,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "3131",
                        "id": 4741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1922:2:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_11_by_1",
                          "typeString": "int_const 11"
                        },
                        "value": "11"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1918:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4743,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62974,
                          "src": "1928:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LoanTokenLogicWrbtc_$5146",
                            "typeString": "contract LoanTokenLogicWrbtc"
                          }
                        },
                        "id": 4744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "avgBorrowInterestRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1874,
                        "src": "1928:26:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 4745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1928:35:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "1918:45:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 4747,
                  "nodeType": "ExpressionStatement",
                  "src": "1918:45:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4748,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4645,
                        "src": "1973:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 4750,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "3132",
                        "id": 4749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1977:2:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_12_by_1",
                          "typeString": "int_const 12"
                        },
                        "value": "12"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1973:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4751,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62974,
                          "src": "1983:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LoanTokenLogicWrbtc_$5146",
                            "typeString": "contract LoanTokenLogicWrbtc"
                          }
                        },
                        "id": 4752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "borrowInterestRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1884,
                        "src": "1983:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 4753,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1983:32:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "1973:42:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 4755,
                  "nodeType": "ExpressionStatement",
                  "src": "1973:42:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4756,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4645,
                        "src": "2025:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 4758,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "3133",
                        "id": 4757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2029:2:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_13_by_1",
                          "typeString": "int_const 13"
                        },
                        "value": "13"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2025:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4759,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62974,
                          "src": "2035:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LoanTokenLogicWrbtc_$5146",
                            "typeString": "contract LoanTokenLogicWrbtc"
                          }
                        },
                        "id": 4760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nextBorrowInterestRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1896,
                        "src": "2035:27:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view external returns (uint256)"
                        }
                      },
                      "id": 4761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2035:36:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "2025:46:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 4763,
                  "nodeType": "ExpressionStatement",
                  "src": "2025:46:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4764,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4645,
                        "src": "2081:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 4766,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "3134",
                        "id": 4765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2085:2:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_14_by_1",
                          "typeString": "int_const 14"
                        },
                        "value": "14"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2081:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4767,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62974,
                          "src": "2091:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LoanTokenLogicWrbtc_$5146",
                            "typeString": "contract LoanTokenLogicWrbtc"
                          }
                        },
                        "id": 4768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supplyInterestRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1908,
                        "src": "2091:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 4769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2091:32:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "2081:42:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 4771,
                  "nodeType": "ExpressionStatement",
                  "src": "2081:42:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4772,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4645,
                        "src": "2133:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 4774,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "3135",
                        "id": 4773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2137:2:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_15_by_1",
                          "typeString": "int_const 15"
                        },
                        "value": "15"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2133:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4775,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62974,
                          "src": "2143:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LoanTokenLogicWrbtc_$5146",
                            "typeString": "contract LoanTokenLogicWrbtc"
                          }
                        },
                        "id": 4776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nextSupplyInterestRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1925,
                        "src": "2143:27:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view external returns (uint256)"
                        }
                      },
                      "id": 4777,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2143:36:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "2133:46:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 4779,
                  "nodeType": "ExpressionStatement",
                  "src": "2133:46:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4780,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4645,
                        "src": "2189:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 4782,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "3136",
                        "id": 4781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2193:2:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_16_by_1",
                          "typeString": "int_const 16"
                        },
                        "value": "16"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2189:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4783,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62974,
                          "src": "2199:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LoanTokenLogicWrbtc_$5146",
                            "typeString": "contract LoanTokenLogicWrbtc"
                          }
                        },
                        "id": 4784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalSupplyInterestRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1948,
                        "src": "2199:28:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view external returns (uint256)"
                        }
                      },
                      "id": 4785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2199:37:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "2189:47:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 4787,
                  "nodeType": "ExpressionStatement",
                  "src": "2189:47:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4788,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4645,
                        "src": "2246:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 4790,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "3137",
                        "id": 4789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2250:2:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_17_by_1",
                          "typeString": "int_const 17"
                        },
                        "value": "17"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2246:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4791,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62974,
                          "src": "2256:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LoanTokenLogicWrbtc_$5146",
                            "typeString": "contract LoanTokenLogicWrbtc"
                          }
                        },
                        "id": 4792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalAssetBorrow",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1964,
                        "src": "2256:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 4793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2256:30:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "2246:40:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 4795,
                  "nodeType": "ExpressionStatement",
                  "src": "2246:40:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4796,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4645,
                        "src": "2296:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 4798,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "3138",
                        "id": 4797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2300:2:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2296:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4799,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62974,
                          "src": "2306:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LoanTokenLogicWrbtc_$5146",
                            "typeString": "contract LoanTokenLogicWrbtc"
                          }
                        },
                        "id": 4800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalAssetSupply",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1991,
                        "src": "2306:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 4801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2306:30:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "2296:40:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 4803,
                  "nodeType": "ExpressionStatement",
                  "src": "2296:40:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4804,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4645,
                        "src": "2346:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 4806,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "3139",
                        "id": 4805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2350:2:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_19_by_1",
                          "typeString": "int_const 19"
                        },
                        "value": "19"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2346:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4807,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62974,
                          "src": "2356:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LoanTokenLogicWrbtc_$5146",
                            "typeString": "contract LoanTokenLogicWrbtc"
                          }
                        },
                        "id": 4808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getMaxEscrowAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2045,
                        "src": "2356:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view external returns (uint256)"
                        }
                      },
                      "id": 4809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2356:32:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "2346:42:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 4811,
                  "nodeType": "ExpressionStatement",
                  "src": "2346:42:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4812,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4645,
                        "src": "2398:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 4814,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "3230",
                        "id": 4813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2402:2:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20_by_1",
                          "typeString": "int_const 20"
                        },
                        "value": "20"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2398:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4815,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62974,
                          "src": "2408:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LoanTokenLogicWrbtc_$5146",
                            "typeString": "contract LoanTokenLogicWrbtc"
                          }
                        },
                        "id": 4816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "assetBalanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2092,
                        "src": "2408:19:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 4817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2408:28:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "2398:38:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 4819,
                  "nodeType": "ExpressionStatement",
                  "src": "2398:38:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4820,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4645,
                        "src": "2446:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 4822,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "3231",
                        "id": 4821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2450:2:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_21_by_1",
                          "typeString": "int_const 21"
                        },
                        "value": "21"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2446:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4823,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62974,
                          "src": "2456:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LoanTokenLogicWrbtc_$5146",
                            "typeString": "contract LoanTokenLogicWrbtc"
                          }
                        },
                        "id": 4824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getEstimatedMarginDetails",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2170,
                        "src": "2456:30:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,address) view external returns (uint256,uint256,uint256)"
                        }
                      },
                      "id": 4825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2456:39:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "2446:49:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 4827,
                  "nodeType": "ExpressionStatement",
                  "src": "2446:49:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4828,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4645,
                        "src": "2505:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 4830,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "3232",
                        "id": 4829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2509:2:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_22_by_1",
                          "typeString": "int_const 22"
                        },
                        "value": "22"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2505:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4831,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62974,
                          "src": "2515:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LoanTokenLogicWrbtc_$5146",
                            "typeString": "contract LoanTokenLogicWrbtc"
                          }
                        },
                        "id": 4832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getDepositAmountForBorrow",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2245,
                        "src": "2515:30:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,address) view external returns (uint256)"
                        }
                      },
                      "id": 4833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2515:39:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "2505:49:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 4835,
                  "nodeType": "ExpressionStatement",
                  "src": "2505:49:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4836,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4645,
                        "src": "2564:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 4838,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "3233",
                        "id": 4837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2568:2:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_23_by_1",
                          "typeString": "int_const 23"
                        },
                        "value": "23"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2564:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4839,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62974,
                          "src": "2574:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LoanTokenLogicWrbtc_$5146",
                            "typeString": "contract LoanTokenLogicWrbtc"
                          }
                        },
                        "id": 4840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getBorrowAmountForDeposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2324,
                        "src": "2574:30:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,address) view external returns (uint256)"
                        }
                      },
                      "id": 4841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2574:39:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "2564:49:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 4843,
                  "nodeType": "ExpressionStatement",
                  "src": "2564:49:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4844,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4645,
                        "src": "2623:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 4846,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "3234",
                        "id": 4845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2627:2:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_24_by_1",
                          "typeString": "int_const 24"
                        },
                        "value": "24"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2623:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4847,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62974,
                          "src": "2633:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LoanTokenLogicWrbtc_$5146",
                            "typeString": "contract LoanTokenLogicWrbtc"
                          }
                        },
                        "id": 4848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "checkPriceDivergence",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2363,
                        "src": "2633:25:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (uint256,address,uint256) view external"
                        }
                      },
                      "id": 4849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2633:34:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "2623:44:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 4851,
                  "nodeType": "ExpressionStatement",
                  "src": "2623:44:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4852,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4645,
                        "src": "2677:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 4854,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "3235",
                        "id": 4853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2681:2:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_25_by_1",
                          "typeString": "int_const 25"
                        },
                        "value": "25"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2677:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4855,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62974,
                          "src": "2687:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LoanTokenLogicWrbtc_$5146",
                            "typeString": "contract LoanTokenLogicWrbtc"
                          }
                        },
                        "id": 4856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "calculateSupplyInterestRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3389,
                        "src": "2687:32:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) view external returns (uint256)"
                        }
                      },
                      "id": 4857,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2687:41:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "2677:51:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 4859,
                  "nodeType": "ExpressionStatement",
                  "src": "2677:51:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4860,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4645,
                        "src": "2767:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 4862,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "3236",
                        "id": 4861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2771:2:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_26_by_1",
                          "typeString": "int_const 26"
                        },
                        "value": "26"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2767:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4863,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62974,
                          "src": "2777:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LoanTokenLogicWrbtc_$5146",
                            "typeString": "contract LoanTokenLogicWrbtc"
                          }
                        },
                        "id": 4864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mintWithBTC",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4943,
                        "src": "2777:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_bool_$returns$_t_uint256_$",
                          "typeString": "function (address,bool) payable external returns (uint256)"
                        }
                      },
                      "id": 4865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2777:25:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "2767:35:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 4867,
                  "nodeType": "ExpressionStatement",
                  "src": "2767:35:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4868,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4645,
                        "src": "2812:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 4870,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "3237",
                        "id": 4869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2816:2:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_27_by_1",
                          "typeString": "int_const 27"
                        },
                        "value": "27"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2812:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4871,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62974,
                          "src": "2822:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LoanTokenLogicWrbtc_$5146",
                            "typeString": "contract LoanTokenLogicWrbtc"
                          }
                        },
                        "id": 4872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "burnToBTC",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4992,
                        "src": "2822:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                          "typeString": "function (address,uint256,bool) external returns (uint256)"
                        }
                      },
                      "id": 4873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2822:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "2812:33:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 4875,
                  "nodeType": "ExpressionStatement",
                  "src": "2812:33:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4876,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4645,
                        "src": "2882:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 4878,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "3238",
                        "id": 4877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2886:2:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_28_by_1",
                          "typeString": "int_const 28"
                        },
                        "value": "28"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2882:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4879,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62974,
                          "src": "2892:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LoanTokenLogicWrbtc_$5146",
                            "typeString": "contract LoanTokenLogicWrbtc"
                          }
                        },
                        "id": 4880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "approve",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35,
                        "src": "2892:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) external returns (bool)"
                        }
                      },
                      "id": 4881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2892:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "2882:31:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 4883,
                  "nodeType": "ExpressionStatement",
                  "src": "2882:31:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4884,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4645,
                        "src": "2958:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 4886,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "3239",
                        "id": 4885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2962:2:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_29_by_1",
                          "typeString": "int_const 29"
                        },
                        "value": "29"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2958:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4887,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62974,
                          "src": "2968:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LoanTokenLogicWrbtc_$5146",
                            "typeString": "contract LoanTokenLogicWrbtc"
                          }
                        },
                        "id": 4888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalSupply",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 252,
                        "src": "2968:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 4889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2968:25:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "2958:35:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 4891,
                  "nodeType": "ExpressionStatement",
                  "src": "2958:35:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4892,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4645,
                        "src": "3003:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 4894,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "3330",
                        "id": 4893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3007:2:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        "value": "30"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3003:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4895,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62974,
                          "src": "3013:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LoanTokenLogicWrbtc_$5146",
                            "typeString": "contract LoanTokenLogicWrbtc"
                          }
                        },
                        "id": 4896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 264,
                        "src": "3013:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 4897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3013:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "3003:33:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 4899,
                  "nodeType": "ExpressionStatement",
                  "src": "3003:33:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4900,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4645,
                        "src": "3046:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 4902,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "3331",
                        "id": 4901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3050:2:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_31_by_1",
                          "typeString": "int_const 31"
                        },
                        "value": "31"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3046:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4903,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62974,
                          "src": "3056:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LoanTokenLogicWrbtc_$5146",
                            "typeString": "contract LoanTokenLogicWrbtc"
                          }
                        },
                        "id": 4904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "allowance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 280,
                        "src": "3056:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address,address) view external returns (uint256)"
                        }
                      },
                      "id": 4905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3056:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "3046:33:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 4907,
                  "nodeType": "ExpressionStatement",
                  "src": "3046:33:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 4908,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4645,
                        "src": "3098:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "4c6f616e546f6b656e4c6f6769635772627463",
                            "id": 4910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3119:21:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_3f5f2db3e44ac542ad080f423e55ad78719796d35f3ad87013b91a619fff2236",
                              "typeString": "literal_string \"LoanTokenLogicWrbtc\""
                            },
                            "value": "LoanTokenLogicWrbtc"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_3f5f2db3e44ac542ad080f423e55ad78719796d35f3ad87013b91a619fff2236",
                              "typeString": "literal_string \"LoanTokenLogicWrbtc\""
                            }
                          ],
                          "id": 4909,
                          "name": "stringToBytes32",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3975,
                          "src": "3103:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (string memory) pure returns (bytes32)"
                          }
                        },
                        "id": 4911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3103:38:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "id": 4912,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3097:45:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_bytes4_$dyn_memory_ptr_$_t_bytes32_$",
                      "typeString": "tuple(bytes4[] memory,bytes32)"
                    }
                  },
                  "functionReturnParameters": 4641,
                  "id": 4913,
                  "nodeType": "Return",
                  "src": "3090:52:14"
                }
              ]
            },
            "documentation": "@notice This function is MANDATORY, which will be called by LoanTokenLogicBeacon and be registered.\nEvery new public function, the sginature needs to be included in this function.\n     * @dev This function will return the list of function signature in this contract that are available for public call\nThen this function will be called by LoanTokenLogicBeacon, and the function signatures will be registred in LoanTokenLogicBeacon.\n@dev To save the gas we can just directly return the list of function signature from this pure function.\nThe other workaround (fancy way) is we can create a storage for the list of the function signature, and then we can store each function signature to that storage from the constructor.\nThen, in this function we just need to return that storage variable.\n     * @return The list of function signatures (bytes4[])",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getListFunctionSignatures",
            "parameters": {
              "id": 4635,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1235:2:14"
            },
            "returnParameters": {
              "id": 4641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4638,
                  "name": "functionSignatures",
                  "nodeType": "VariableDeclaration",
                  "scope": 4915,
                  "src": "1285:34:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                    "typeString": "bytes4[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4636,
                      "name": "bytes4",
                      "nodeType": "ElementaryTypeName",
                      "src": "1285:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "id": 4637,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1285:8:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                      "typeString": "bytes4[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4640,
                  "name": "moduleName",
                  "nodeType": "VariableDeclaration",
                  "scope": 4915,
                  "src": "1321:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4639,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1321:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1284:56:14"
            },
            "scope": 5146,
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 4943,
            "nodeType": "FunctionDefinition",
            "src": "3155:295:14",
            "nodes": [],
            "body": {
              "id": 4942,
              "nodeType": "Block",
              "src": "3330:120:14",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 4928,
                    "name": "useLM",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4919,
                    "src": "3344:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4936,
                          "name": "receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4917,
                          "src": "3423:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4937,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62892,
                            "src": "3433:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3433:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 4935,
                        "name": "_mintToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2436,
                        "src": "3412:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,uint256) returns (uint256)"
                        }
                      },
                      "id": 4939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3412:31:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 4927,
                    "id": 4940,
                    "nodeType": "Return",
                    "src": "3405:38:14"
                  },
                  "id": 4941,
                  "nodeType": "IfStatement",
                  "src": "3340:103:14",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4930,
                          "name": "receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4917,
                          "src": "3370:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4931,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62892,
                            "src": "3380:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3380:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 4929,
                        "name": "_mintWithLM",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3847,
                        "src": "3358:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,uint256) returns (uint256)"
                        }
                      },
                      "id": 4933,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3358:32:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 4927,
                    "id": 4934,
                    "nodeType": "Return",
                    "src": "3351:39:14"
                  }
                }
              ]
            },
            "documentation": null,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4922,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4921,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 55255,
                  "src": "3247:12:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3247:12:14"
              },
              {
                "arguments": null,
                "id": 4924,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4923,
                  "name": "globallyNonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 57212,
                  "src": "3268:20:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3268:20:14"
              }
            ],
            "name": "mintWithBTC",
            "parameters": {
              "id": 4920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4917,
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 4943,
                  "src": "3176:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4916,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3176:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4919,
                  "name": "useLM",
                  "nodeType": "VariableDeclaration",
                  "scope": 4943,
                  "src": "3194:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4918,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3194:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3175:30:14"
            },
            "returnParameters": {
              "id": 4927,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4926,
                  "name": "mintAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4943,
                  "src": "3306:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4925,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3306:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3305:20:14"
            },
            "scope": 5146,
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 4992,
            "nodeType": "FunctionDefinition",
            "src": "3456:469:14",
            "nodes": [],
            "body": {
              "id": 4991,
              "nodeType": "Block",
              "src": "3631:294:14",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 4958,
                    "name": "useLM",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4949,
                    "src": "3645:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 4969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 4965,
                        "name": "loanAmountPaid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4956,
                        "src": "3707:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4967,
                            "name": "burnAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4947,
                            "src": "3735:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4966,
                          "name": "_burnToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2638,
                          "src": "3724:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) returns (uint256)"
                          }
                        },
                        "id": 4968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3724:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3707:39:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4970,
                    "nodeType": "ExpressionStatement",
                    "src": "3707:39:14"
                  },
                  "id": 4971,
                  "nodeType": "IfStatement",
                  "src": "3641:105:14",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 4963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 4959,
                        "name": "loanAmountPaid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4956,
                        "src": "3652:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4961,
                            "name": "burnAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4947,
                            "src": "3681:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4960,
                          "name": "_burnFromLM",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3920,
                          "src": "3669:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) returns (uint256)"
                          }
                        },
                        "id": 4962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3669:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3652:40:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4964,
                    "nodeType": "ExpressionStatement",
                    "src": "3652:40:14"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4972,
                      "name": "loanAmountPaid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4956,
                      "src": "3761:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3779:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3761:19:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4990,
                  "nodeType": "IfStatement",
                  "src": "3757:162:14",
                  "trueBody": {
                    "id": 4989,
                    "nodeType": "Block",
                    "src": "3782:137:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4979,
                              "name": "loanAmountPaid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4956,
                              "src": "3836:14:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 4976,
                                  "name": "wrbtcTokenAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3930,
                                  "src": "3808:17:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4975,
                                "name": "IWrbtcERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34035,
                                "src": "3796:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IWrbtcERC20_$34035_$",
                                  "typeString": "type(contract IWrbtcERC20)"
                                }
                              },
                              "id": 4977,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3796:30:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IWrbtcERC20_$34035",
                                "typeString": "contract IWrbtcERC20"
                              }
                            },
                            "id": 4978,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34025,
                            "src": "3796:39:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 4980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3796:55:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4981,
                        "nodeType": "ExpressionStatement",
                        "src": "3796:55:14"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4985,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4945,
                              "src": "3883:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4986,
                              "name": "loanAmountPaid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4956,
                              "src": "3893:14:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4982,
                              "name": "Address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54444,
                              "src": "3865:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Address_$54444_$",
                                "typeString": "type(library Address)"
                              }
                            },
                            "id": 4984,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sendValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54443,
                            "src": "3865:17:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 4987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3865:43:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4988,
                        "nodeType": "ExpressionStatement",
                        "src": "3865:43:14"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4952,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4951,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 55255,
                  "src": "3564:12:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3564:12:14"
              },
              {
                "arguments": null,
                "id": 4954,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4953,
                  "name": "globallyNonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 57212,
                  "src": "3577:20:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3577:20:14"
              }
            ],
            "name": "burnToBTC",
            "parameters": {
              "id": 4950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4945,
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 4992,
                  "src": "3484:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4944,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3484:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4947,
                  "name": "burnAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4992,
                  "src": "3510:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4946,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3510:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4949,
                  "name": "useLM",
                  "nodeType": "VariableDeclaration",
                  "scope": 4992,
                  "src": "3538:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4948,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3538:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3474:80:14"
            },
            "returnParameters": {
              "id": 4957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4956,
                  "name": "loanAmountPaid",
                  "nodeType": "VariableDeclaration",
                  "scope": 4992,
                  "src": "3607:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4955,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3607:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3606:24:14"
            },
            "scope": 5146,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 5145,
            "nodeType": "FunctionDefinition",
            "src": "4592:2146:14",
            "nodes": [],
            "body": {
              "id": 5144,
              "nodeType": "Block",
              "src": "4868:1870:14",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    5006
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5006,
                      "name": "_wrbtcToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 5144,
                      "src": "4878:19:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5005,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4878:7:14",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5008,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 5007,
                    "name": "wrbtcTokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3930,
                    "src": "4900:17:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4878:39:14"
                },
                {
                  "assignments": [
                    5010
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5010,
                      "name": "_loanTokenAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 5144,
                      "src": "4927:25:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5009,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4927:7:14",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5012,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 5011,
                    "name": "_wrbtcToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5006,
                    "src": "4955:11:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4927:39:14"
                },
                {
                  "assignments": [
                    5014
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5014,
                      "name": "receiver",
                      "nodeType": "VariableDeclaration",
                      "scope": 5144,
                      "src": "4976:16:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5013,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4976:7:14",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5017,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 5015,
                      "name": "sentAddresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4996,
                      "src": "4995:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SentAddresses_$4242_memory_ptr",
                        "typeString": "struct MarginTradeStructHelpers.SentAddresses memory"
                      }
                    },
                    "id": 5016,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "receiver",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 4239,
                    "src": "4995:22:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4976:41:14"
                },
                {
                  "assignments": [
                    5019
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5019,
                      "name": "newPrincipal",
                      "nodeType": "VariableDeclaration",
                      "scope": 5144,
                      "src": "5027:20:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5018,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5027:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5022,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 5020,
                      "name": "sentAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4998,
                      "src": "5050:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SentAmounts_$4261_memory_ptr",
                        "typeString": "struct MarginTradeStructHelpers.SentAmounts memory"
                      }
                    },
                    "id": 5021,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "newPrincipal",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 4246,
                    "src": "5050:24:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5027:47:14"
                },
                {
                  "assignments": [
                    5024
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5024,
                      "name": "loanTokenSent",
                      "nodeType": "VariableDeclaration",
                      "scope": 5144,
                      "src": "5084:21:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5023,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5084:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5027,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 5025,
                      "name": "sentAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4998,
                      "src": "5108:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SentAmounts_$4261_memory_ptr",
                        "typeString": "struct MarginTradeStructHelpers.SentAmounts memory"
                      }
                    },
                    "id": 5026,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "loanTokenSent",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 4250,
                    "src": "5108:25:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5084:49:14"
                },
                {
                  "assignments": [
                    5029
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5029,
                      "name": "collateralTokenSent",
                      "nodeType": "VariableDeclaration",
                      "scope": 5144,
                      "src": "5143:27:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5028,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5143:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5032,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 5030,
                      "name": "sentAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4998,
                      "src": "5173:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SentAmounts_$4261_memory_ptr",
                        "typeString": "struct MarginTradeStructHelpers.SentAmounts memory"
                      }
                    },
                    "id": 5031,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "collateralTokenSent",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 4252,
                    "src": "5173:31:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5143:61:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 5034,
                          "name": "_loanTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5010,
                          "src": "5223:17:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 5035,
                          "name": "collateralTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4994,
                          "src": "5244:22:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5223:43:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "3236",
                        "id": 5037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5268:4:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9cce9eb03c9f29c6481fca9f0f942b15bef0bbbc47fda0ddb44df157019835d9",
                          "typeString": "literal_string \"26\""
                        },
                        "value": "26"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9cce9eb03c9f29c6481fca9f0f942b15bef0bbbc47fda0ddb44df157019835d9",
                          "typeString": "literal_string \"26\""
                        }
                      ],
                      "id": 5033,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        62895,
                        62896
                      ],
                      "referencedDeclaration": 62896,
                      "src": "5215:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5215:58:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5039,
                  "nodeType": "ExpressionStatement",
                  "src": "5215:58:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5040,
                      "name": "msgValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5003,
                      "src": "5284:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 5041,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62892,
                        "src": "5295:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 5042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5295:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5284:20:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5044,
                  "nodeType": "ExpressionStatement",
                  "src": "5284:20:14"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 5045,
                      "name": "withdrawalAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5000,
                      "src": "5319:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 5046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5339:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5319:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 5084,
                    "nodeType": "Block",
                    "src": "5795:100:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5078,
                              "name": "_loanTokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5010,
                              "src": "5823:17:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 5079,
                              "name": "sovrynContractAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3928,
                              "src": "5842:21:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 5080,
                              "name": "newPrincipal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5019,
                              "src": "5865:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "3237",
                              "id": 5081,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5879:4:14",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_58a280f74f57bf051c40f060139dc747e015be52f68c57e2c4ab2e4bd4146f43",
                                "typeString": "literal_string \"27\""
                              },
                              "value": "27"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_58a280f74f57bf051c40f060139dc747e015be52f68c57e2c4ab2e4bd4146f43",
                                "typeString": "literal_string \"27\""
                              }
                            ],
                            "id": 5077,
                            "name": "_safeTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3191,
                            "src": "5809:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,uint256,string memory)"
                            }
                          },
                          "id": 5082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5809:75:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5083,
                        "nodeType": "ExpressionStatement",
                        "src": "5809:75:14"
                      }
                    ]
                  },
                  "id": 5085,
                  "nodeType": "IfStatement",
                  "src": "5315:580:14",
                  "trueBody": {
                    "id": 5076,
                    "nodeType": "Block",
                    "src": "5342:447:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5052,
                              "name": "withdrawalAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5000,
                              "src": "5429:16:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 5049,
                                  "name": "_wrbtcToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5006,
                                  "src": "5407:11:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 5048,
                                "name": "IWrbtcERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34035,
                                "src": "5395:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IWrbtcERC20_$34035_$",
                                  "typeString": "type(contract IWrbtcERC20)"
                                }
                              },
                              "id": 5050,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5395:24:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IWrbtcERC20_$34035",
                                "typeString": "contract IWrbtcERC20"
                              }
                            },
                            "id": 5051,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34025,
                            "src": "5395:33:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 5053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5395:51:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5054,
                        "nodeType": "ExpressionStatement",
                        "src": "5395:51:14"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5058,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5014,
                              "src": "5478:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 5059,
                              "name": "withdrawalAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5000,
                              "src": "5488:16:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 5055,
                              "name": "Address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54444,
                              "src": "5460:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Address_$54444_$",
                                "typeString": "type(library Address)"
                              }
                            },
                            "id": 5057,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sendValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54443,
                            "src": "5460:17:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 5060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5460:45:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5061,
                        "nodeType": "ExpressionStatement",
                        "src": "5460:45:14"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 5062,
                            "name": "newPrincipal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5019,
                            "src": "5523:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 5063,
                            "name": "withdrawalAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5000,
                            "src": "5538:16:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5523:31:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 5075,
                        "nodeType": "IfStatement",
                        "src": "5519:260:14",
                        "trueBody": {
                          "id": 5074,
                          "nodeType": "Block",
                          "src": "5556:223:14",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 5066,
                                    "name": "_loanTokenAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5010,
                                    "src": "5609:17:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 5067,
                                    "name": "sovrynContractAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3928,
                                    "src": "5648:21:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 5070,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 5068,
                                      "name": "newPrincipal",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5019,
                                      "src": "5691:12:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "id": 5069,
                                      "name": "withdrawalAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5000,
                                      "src": "5706:16:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "5691:31:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "",
                                    "id": 5071,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5744:2:14",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "id": 5065,
                                  "name": "_safeTransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3191,
                                  "src": "5574:13:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (address,address,uint256,string memory)"
                                  }
                                },
                                "id": 5072,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5574:190:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 5073,
                              "nodeType": "ExpressionStatement",
                              "src": "5574:190:14"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 5086,
                      "name": "collateralTokenSent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5029,
                      "src": "5909:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 5087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5932:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5909:24:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 5099,
                  "nodeType": "IfStatement",
                  "src": "5905:252:14",
                  "trueBody": {
                    "id": 5098,
                    "nodeType": "Block",
                    "src": "5935:222:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5090,
                              "name": "collateralTokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4994,
                              "src": "5984:22:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 5091,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 62892,
                                "src": "6024:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 5092,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6024:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 5093,
                              "name": "sovrynContractAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3928,
                              "src": "6052:21:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 5094,
                              "name": "collateralTokenSent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5029,
                              "src": "6091:19:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "3238",
                              "id": 5095,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6128:4:14",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9560168699514dcd528543d614e81b4f36adf182dc624d2f1eb91df8addd987e",
                                "typeString": "literal_string \"28\""
                              },
                              "value": "28"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9560168699514dcd528543d614e81b4f36adf182dc624d2f1eb91df8addd987e",
                                "typeString": "literal_string \"28\""
                              }
                            ],
                            "id": 5089,
                            "name": "_safeTransferFrom",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3221,
                            "src": "5949:17:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,address,uint256,string memory)"
                            }
                          },
                          "id": 5096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5949:197:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5097,
                        "nodeType": "ExpressionStatement",
                        "src": "5949:197:14"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 5100,
                      "name": "loanTokenSent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5024,
                      "src": "6171:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 5101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6188:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6171:18:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 5143,
                  "nodeType": "IfStatement",
                  "src": "6167:565:14",
                  "trueBody": {
                    "id": 5142,
                    "nodeType": "Block",
                    "src": "6191:541:14",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 5109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 5103,
                              "name": "msgValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5003,
                              "src": "6209:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 5104,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6221:1:14",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "6209:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 5106,
                              "name": "msgValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5003,
                              "src": "6226:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 5107,
                              "name": "loanTokenSent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5024,
                              "src": "6238:13:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6226:25:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6209:42:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 5140,
                          "nodeType": "Block",
                          "src": "6479:243:14",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 5132,
                                    "name": "_loanTokenAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5010,
                                    "src": "6536:17:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 5133,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 62892,
                                      "src": "6575:3:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 5134,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "6575:10:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 5135,
                                    "name": "sovrynContractAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3928,
                                    "src": "6607:21:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 5136,
                                    "name": "loanTokenSent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5024,
                                    "src": "6650:13:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "3239",
                                    "id": 5137,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6685:4:14",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_7749cc8014201da2069c21d93ba99c584b6f62d393fde534ed47eac227e31561",
                                      "typeString": "literal_string \"29\""
                                    },
                                    "value": "29"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_7749cc8014201da2069c21d93ba99c584b6f62d393fde534ed47eac227e31561",
                                      "typeString": "literal_string \"29\""
                                    }
                                  ],
                                  "id": 5131,
                                  "name": "_safeTransferFrom",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3221,
                                  "src": "6497:17:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (address,address,address,uint256,string memory)"
                                  }
                                },
                                "id": 5138,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6497:210:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 5139,
                              "nodeType": "ExpressionStatement",
                              "src": "6497:210:14"
                            }
                          ]
                        },
                        "id": 5141,
                        "nodeType": "IfStatement",
                        "src": "6205:517:14",
                        "trueBody": {
                          "id": 5130,
                          "nodeType": "Block",
                          "src": "6253:220:14",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 5115,
                                      "name": "loanTokenSent",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5024,
                                      "src": "6305:13:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "id": 5111,
                                            "name": "_wrbtcToken",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 5006,
                                            "src": "6278:11:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 5110,
                                          "name": "IWrbtc",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 34026,
                                          "src": "6271:6:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IWrbtc_$34026_$",
                                            "typeString": "type(contract IWrbtc)"
                                          }
                                        },
                                        "id": 5112,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6271:19:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IWrbtc_$34026",
                                          "typeString": "contract IWrbtc"
                                        }
                                      },
                                      "id": 5113,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "deposit",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 34020,
                                      "src": "6271:27:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                        "typeString": "function () payable external"
                                      }
                                    },
                                    "id": 5114,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "6271:33:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_external_payable$__$returns$__$value_$",
                                      "typeString": "function (uint256) pure returns (function () payable external)"
                                    }
                                  },
                                  "id": 5116,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6271:48:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                    "typeString": "function () payable external"
                                  }
                                },
                                "id": 5117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6271:50:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 5118,
                              "nodeType": "ExpressionStatement",
                              "src": "6271:50:14"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 5120,
                                    "name": "_loanTokenAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5010,
                                    "src": "6353:17:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 5121,
                                    "name": "sovrynContractAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3928,
                                    "src": "6372:21:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 5122,
                                    "name": "loanTokenSent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5024,
                                    "src": "6395:13:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "3239",
                                    "id": 5123,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6410:4:14",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_7749cc8014201da2069c21d93ba99c584b6f62d393fde534ed47eac227e31561",
                                      "typeString": "literal_string \"29\""
                                    },
                                    "value": "29"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_7749cc8014201da2069c21d93ba99c584b6f62d393fde534ed47eac227e31561",
                                      "typeString": "literal_string \"29\""
                                    }
                                  ],
                                  "id": 5119,
                                  "name": "_safeTransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3191,
                                  "src": "6339:13:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (address,address,uint256,string memory)"
                                  }
                                },
                                "id": 5124,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6339:76:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 5125,
                              "nodeType": "ExpressionStatement",
                              "src": "6339:76:14"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 5128,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 5126,
                                  "name": "msgValue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5003,
                                  "src": "6433:8:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 5127,
                                  "name": "loanTokenSent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5024,
                                  "src": "6445:13:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6433:25:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 5129,
                              "nodeType": "ExpressionStatement",
                              "src": "6433:25:14"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice Handle transfers prior to adding newPrincipal to loanTokenSent.\n     * @param collateralTokenAddress The address of the collateral token.\n@param sentAddresses The struct which contains addresses of\n- lender\n- borrower\n- receiver\n- manager\n     * @param sentAmounts The struct which contains uint256 of:\n- interestRate\n- newPrincipal\n- interestInitialAmount\n- loanTokenSent\n- collateralTokenSent\n     * @param withdrawalAmount The amount to withdraw.\n     * @return msgValue The amount of value sent.\n",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_verifyTransfers",
            "parameters": {
              "id": 5001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4994,
                  "name": "collateralTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 5145,
                  "src": "4627:30:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4993,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4627:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4996,
                  "name": "sentAddresses",
                  "nodeType": "VariableDeclaration",
                  "scope": 5145,
                  "src": "4667:59:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SentAddresses_$4242_memory_ptr",
                    "typeString": "struct MarginTradeStructHelpers.SentAddresses"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4995,
                    "name": "MarginTradeStructHelpers.SentAddresses",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4242,
                    "src": "4667:38:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SentAddresses_$4242_storage_ptr",
                      "typeString": "struct MarginTradeStructHelpers.SentAddresses"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4998,
                  "name": "sentAmounts",
                  "nodeType": "VariableDeclaration",
                  "scope": 5145,
                  "src": "4736:55:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SentAmounts_$4261_memory_ptr",
                    "typeString": "struct MarginTradeStructHelpers.SentAmounts"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4997,
                    "name": "MarginTradeStructHelpers.SentAmounts",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4261,
                    "src": "4736:36:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SentAmounts_$4261_storage_ptr",
                      "typeString": "struct MarginTradeStructHelpers.SentAmounts"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5000,
                  "name": "withdrawalAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 5145,
                  "src": "4801:24:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4999,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4801:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4617:214:14"
            },
            "returnParameters": {
              "id": 5004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5003,
                  "name": "msgValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 5145,
                  "src": "4850:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5002,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4850:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4849:18:14"
            },
            "scope": 5146,
            "stateMutability": "nonpayable",
            "superFunction": 3164,
            "visibility": "internal"
          }
        ],
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4633,
              "name": "LoanTokenLogicStandard",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3921,
              "src": "253:22:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LoanTokenLogicStandard_$3921",
                "typeString": "contract LoanTokenLogicStandard"
              }
            },
            "id": 4634,
            "nodeType": "InheritanceSpecifier",
            "src": "253:22:14"
          }
        ],
        "contractDependencies": [
          168,
          281,
          524,
          3921,
          3976,
          4015,
          54471,
          55144,
          55256,
          57213
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          5146,
          3921,
          3976,
          168,
          281,
          524,
          4015,
          55144,
          54471,
          57213,
          55256
        ],
        "name": "LoanTokenLogicWrbtc",
        "scope": 5147
      }
    ]
  },
  "id": 14
}