{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "interfaceHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementer",
          "type": "address"
        }
      ],
      "name": "InterfaceImplementerSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newManager",
          "type": "address"
        }
      ],
      "name": "ManagerChanged",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "interfaceHash",
          "type": "bytes32"
        }
      ],
      "name": "getInterfaceImplementer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "implementsERC165Interface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "implementsERC165InterfaceNoCache",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "string",
          "name": "interfaceName",
          "type": "string"
        }
      ],
      "name": "interfaceHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "interfaceHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "implementer",
          "type": "address"
        }
      ],
      "name": "setInterfaceImplementer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newManager",
          "type": "address"
        }
      ],
      "name": "setManager",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "updateERC165Cache",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "getInterfaceImplementer(address,bytes32)": "aabbb8ca",
    "getManager(address)": "3d584063",
    "implementsERC165Interface(address,bytes4)": "f712f3e8",
    "implementsERC165InterfaceNoCache(address,bytes4)": "b7056765",
    "interfaceHash(string)": "65ba36c1",
    "setInterfaceImplementer(address,bytes32,address)": "29965a1d",
    "setManager(address,address)": "5df8122f",
    "updateERC165Cache(address,bytes4)": "a41e7d51"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"interfaceHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"InterfaceImplementerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"ManagerChanged\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"interfaceHash\",\"type\":\"bytes32\"}],\"name\":\"getInterfaceImplementer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"implementsERC165Interface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"implementsERC165InterfaceNoCache\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"interfaceName\",\"type\":\"string\"}],\"name\":\"interfaceHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"interfaceHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"setInterfaceImplementer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"updateERC165Cache\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the global ERC1820 Registry, as defined in the https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register implementers for interfaces in this registry, as well as query support. * Implementers may be shared by multiple accounts, and can also implement more than a single interface for each account. Contracts can implement interfaces for themselves, but externally-owned accounts (EOA) must delegate this to a contract. * {IERC165} interfaces can also be queried via the registry. * For an in-depth explanation and source code analysis, see the EIP text.\",\"methods\":{\"getInterfaceImplementer(address,bytes32)\":{\"details\":\"Returns the implementer of `interfaceHash` for `account`. If no such implementer is registered, returns the zero address.     * If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28 zeroes), `account` will be queried for support of it.     * `account` being the zero address is an alias for the caller's address.\"},\"getManager(address)\":{\"details\":\"Returns the manager for `account`.     * See {setManager}.\"},\"implementsERC165Interface(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract to check.\",\"interfaceId\":\"ERC165 interface to check.\"},\"return\":\"True if `account` implements `interfaceId`, false otherwise.\"},\"implementsERC165InterfaceNoCache(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract to check.\",\"interfaceId\":\"ERC165 interface to check.\"},\"return\":\"True if `account` implements `interfaceId`, false otherwise.\"},\"interfaceHash(string)\":{\"details\":\"Returns the interface hash for an `interfaceName`, as defined in the corresponding https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP].\"},\"setInterfaceImplementer(address,bytes32,address)\":{\"details\":\"Sets the `implementer` contract as `account`'s implementer for `interfaceHash`.     * `account` being the zero address is an alias for the caller's address. The zero address can also be used in `implementer` to remove an old one.     * See {interfaceHash} to learn how these are created.     * Emits an {InterfaceImplementerSet} event.     * Requirements:     * - the caller must be the current manager for `account`. - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not end in 28 zeroes). - `implementer` must implement {IERC1820Implementer} and return true when queried for support, unless `implementer` is the caller. See {IERC1820Implementer-canImplementInterfaceForAddress}.\"},\"setManager(address,address)\":{\"details\":\"Sets `newManager` as the manager for `account`. A manager of an account is able to set interface implementers for it.     * By default, each account is its own manager. Passing a value of `0x0` in `newManager` will reset the manager to this initial state.     * Emits a {ManagerChanged} event.     * Requirements:     * - the caller must be the current manager for `account`.\"},\"updateERC165Cache(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract for which to update the cache.\",\"interfaceId\":\"ERC165 interface for which to update the cache.\"}}}},\"userdoc\":{\"methods\":{\"implementsERC165Interface(address,bytes4)\":{\"notice\":\"Checks whether a contract implements an ERC165 interface or not. If the result is not cached a direct lookup on the contract address is performed. If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling {updateERC165Cache} with the contract address.\"},\"implementsERC165InterfaceNoCache(address,bytes4)\":{\"notice\":\"Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\"},\"updateERC165Cache(address,bytes4)\":{\"notice\":\"Updates the cache with whether the contract implements an ERC165 interface or not.\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/testhelpers/interfaces/IERC1820Registry.sol\":\"IERC1820Registry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@ethereum-waffle/=node_modules/@ethereum-waffle/\",\":ds-test/=foundry/lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=foundry/lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":truffle/=node_modules/truffle/\"]},\"sources\":{\"contracts/testhelpers/interfaces/IERC1820Registry.sol\":{\"keccak256\":\"0x91d4712603c9c370e2580928f754746716491bbb6696b08bda1b835a6ad22703\",\"urls\":[\"bzz-raw://a758f5b6ee25f9fbb2b3e9760138a2cddcf5a61ab35fb1bcef56e3dc015ee3b2\",\"dweb:/ipfs/QmYNJVFRkYFQHCSofvTWL72rkRosyvhpzuXkv2ZtYBYtpu\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.5.17+commit.d19bba13"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "interfaceHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "implementer",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "InterfaceImplementerSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newManager",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ManagerChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "interfaceHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getInterfaceImplementer",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getManager",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "implementsERC165Interface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "implementsERC165InterfaceNoCache",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "interfaceName",
              "type": "string"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "interfaceHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "interfaceHash",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "implementer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setInterfaceImplementer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "newManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setManager"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateERC165Cache"
        }
      ],
      "devdoc": {
        "methods": {
          "getInterfaceImplementer(address,bytes32)": {
            "details": "Returns the implementer of `interfaceHash` for `account`. If no such implementer is registered, returns the zero address.     * If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28 zeroes), `account` will be queried for support of it.     * `account` being the zero address is an alias for the caller's address."
          },
          "getManager(address)": {
            "details": "Returns the manager for `account`.     * See {setManager}."
          },
          "implementsERC165Interface(address,bytes4)": {
            "params": {
              "account": "Address of the contract to check.",
              "interfaceId": "ERC165 interface to check."
            },
            "return": "True if `account` implements `interfaceId`, false otherwise."
          },
          "implementsERC165InterfaceNoCache(address,bytes4)": {
            "params": {
              "account": "Address of the contract to check.",
              "interfaceId": "ERC165 interface to check."
            },
            "return": "True if `account` implements `interfaceId`, false otherwise."
          },
          "interfaceHash(string)": {
            "details": "Returns the interface hash for an `interfaceName`, as defined in the corresponding https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP]."
          },
          "setInterfaceImplementer(address,bytes32,address)": {
            "details": "Sets the `implementer` contract as `account`'s implementer for `interfaceHash`.     * `account` being the zero address is an alias for the caller's address. The zero address can also be used in `implementer` to remove an old one.     * See {interfaceHash} to learn how these are created.     * Emits an {InterfaceImplementerSet} event.     * Requirements:     * - the caller must be the current manager for `account`. - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not end in 28 zeroes). - `implementer` must implement {IERC1820Implementer} and return true when queried for support, unless `implementer` is the caller. See {IERC1820Implementer-canImplementInterfaceForAddress}."
          },
          "setManager(address,address)": {
            "details": "Sets `newManager` as the manager for `account`. A manager of an account is able to set interface implementers for it.     * By default, each account is its own manager. Passing a value of `0x0` in `newManager` will reset the manager to this initial state.     * Emits a {ManagerChanged} event.     * Requirements:     * - the caller must be the current manager for `account`."
          },
          "updateERC165Cache(address,bytes4)": {
            "params": {
              "account": "Address of the contract for which to update the cache.",
              "interfaceId": "ERC165 interface for which to update the cache."
            }
          }
        }
      },
      "userdoc": {
        "methods": {
          "implementsERC165Interface(address,bytes4)": {
            "notice": "Checks whether a contract implements an ERC165 interface or not. If the result is not cached a direct lookup on the contract address is performed. If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling {updateERC165Cache} with the contract address."
          },
          "implementsERC165InterfaceNoCache(address,bytes4)": {
            "notice": "Checks whether a contract implements an ERC165 interface or not without using nor updating the cache."
          },
          "updateERC165Cache(address,bytes4)": {
            "notice": "Updates the cache with whether the contract implements an ERC165 interface or not."
          }
        }
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@ethereum-waffle/=node_modules/@ethereum-waffle/",
        ":ds-test/=foundry/lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=foundry/lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":truffle/=node_modules/truffle/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "compilationTarget": {
        "contracts/testhelpers/interfaces/IERC1820Registry.sol": "IERC1820Registry"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/testhelpers/interfaces/IERC1820Registry.sol": {
        "keccak256": "0x91d4712603c9c370e2580928f754746716491bbb6696b08bda1b835a6ad22703",
        "urls": [
          "bzz-raw://a758f5b6ee25f9fbb2b3e9760138a2cddcf5a61ab35fb1bcef56e3dc015ee3b2",
          "dweb:/ipfs/QmYNJVFRkYFQHCSofvTWL72rkRosyvhpzuXkv2ZtYBYtpu"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/testhelpers/interfaces/IERC1820Registry.sol",
    "id": 62491,
    "exportedSymbols": {
      "IERC1820Registry": [
        62490
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:4856:218",
    "nodes": [
      {
        "id": 62411,
        "nodeType": "PragmaDirective",
        "src": "0:23:218",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ]
      },
      {
        "id": 62490,
        "nodeType": "ContractDefinition",
        "src": "645:4210:218",
        "nodes": [
          {
            "id": 62418,
            "nodeType": "FunctionDefinition",
            "src": "1128:66:218",
            "nodes": [],
            "documentation": "@dev Sets `newManager` as the manager for `account`. A manager of an\naccount is able to set interface implementers for it.\n     * By default, each account is its own manager. Passing a value of `0x0` in\n`newManager` will reset the manager to this initial state.\n     * Emits a {ManagerChanged} event.\n     * Requirements:\n     * - the caller must be the current manager for `account`.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setManager",
            "parameters": {
              "id": 62416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62413,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 62418,
                  "src": "1148:15:218",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62412,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1148:7:218",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62415,
                  "name": "newManager",
                  "nodeType": "VariableDeclaration",
                  "scope": 62418,
                  "src": "1165:18:218",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62414,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1165:7:218",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1147:37:218"
            },
            "returnParameters": {
              "id": 62417,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1193:0:218"
            },
            "scope": 62490,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 62425,
            "nodeType": "FunctionDefinition",
            "src": "1295:69:218",
            "nodes": [],
            "documentation": "@dev Returns the manager for `account`.\n     * See {setManager}.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getManager",
            "parameters": {
              "id": 62421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62420,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 62425,
                  "src": "1315:15:218",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62419,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1315:7:218",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1314:17:218"
            },
            "returnParameters": {
              "id": 62424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62423,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 62425,
                  "src": "1355:7:218",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62422,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1355:7:218",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1354:9:218"
            },
            "scope": 62490,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 62434,
            "nodeType": "FunctionDefinition",
            "src": "2188:133:218",
            "nodes": [],
            "documentation": "@dev Sets the `implementer` contract as `account`'s implementer for\n`interfaceHash`.\n     * `account` being the zero address is an alias for the caller's address.\nThe zero address can also be used in `implementer` to remove an old one.\n     * See {interfaceHash} to learn how these are created.\n     * Emits an {InterfaceImplementerSet} event.\n     * Requirements:\n     * - the caller must be the current manager for `account`.\n- `interfaceHash` must not be an {IERC165} interface id (i.e. it must not\nend in 28 zeroes).\n- `implementer` must implement {IERC1820Implementer} and return true when\nqueried for support, unless `implementer` is the caller. See\n{IERC1820Implementer-canImplementInterfaceForAddress}.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setInterfaceImplementer",
            "parameters": {
              "id": 62432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62427,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 62434,
                  "src": "2230:15:218",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62426,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2230:7:218",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62429,
                  "name": "interfaceHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 62434,
                  "src": "2255:21:218",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62428,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2255:7:218",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62431,
                  "name": "implementer",
                  "nodeType": "VariableDeclaration",
                  "scope": 62434,
                  "src": "2286:19:218",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62430,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2286:7:218",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2220:91:218"
            },
            "returnParameters": {
              "id": 62433,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2320:0:218"
            },
            "scope": 62490,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 62443,
            "nodeType": "FunctionDefinition",
            "src": "2714:129:218",
            "nodes": [],
            "documentation": "@dev Returns the implementer of `interfaceHash` for `account`. If no such\nimplementer is registered, returns the zero address.\n     * If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28\nzeroes), `account` will be queried for support of it.\n     * `account` being the zero address is an alias for the caller's address.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getInterfaceImplementer",
            "parameters": {
              "id": 62439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62436,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 62443,
                  "src": "2747:15:218",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62435,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2747:7:218",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62438,
                  "name": "interfaceHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 62443,
                  "src": "2764:21:218",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62437,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2764:7:218",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2746:40:218"
            },
            "returnParameters": {
              "id": 62442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62441,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 62443,
                  "src": "2834:7:218",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62440,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2834:7:218",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2833:9:218"
            },
            "scope": 62490,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 62450,
            "nodeType": "FunctionDefinition",
            "src": "3050:86:218",
            "nodes": [],
            "documentation": "@dev Returns the interface hash for an `interfaceName`, as defined in the\ncorresponding\nhttps://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP].",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "interfaceHash",
            "parameters": {
              "id": 62446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62445,
                  "name": "interfaceName",
                  "nodeType": "VariableDeclaration",
                  "scope": 62450,
                  "src": "3073:29:218",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 62444,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3073:6:218",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3072:31:218"
            },
            "returnParameters": {
              "id": 62449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62448,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 62450,
                  "src": "3127:7:218",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62447,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3127:7:218",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3126:9:218"
            },
            "scope": 62490,
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 62457,
            "nodeType": "FunctionDefinition",
            "src": "3410:73:218",
            "nodes": [],
            "documentation": " @notice Updates the cache with whether the contract implements an ERC165 interface or not.\n @param account Address of the contract for which to update the cache.\n @param interfaceId ERC165 interface for which to update the cache.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateERC165Cache",
            "parameters": {
              "id": 62455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62452,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 62457,
                  "src": "3437:15:218",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62451,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3437:7:218",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62454,
                  "name": "interfaceId",
                  "nodeType": "VariableDeclaration",
                  "scope": 62457,
                  "src": "3454:18:218",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 62453,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3454:6:218",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3436:37:218"
            },
            "returnParameters": {
              "id": 62456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3482:0:218"
            },
            "scope": 62490,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 62466,
            "nodeType": "FunctionDefinition",
            "src": "4037:125:218",
            "nodes": [],
            "documentation": " @notice Checks whether a contract implements an ERC165 interface or not.\n If the result is not cached a direct lookup on the contract address is performed.\n If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\n {updateERC165Cache} with the contract address.\n @param account Address of the contract to check.\n @param interfaceId ERC165 interface to check.\n @return True if `account` implements `interfaceId`, false otherwise.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "implementsERC165Interface",
            "parameters": {
              "id": 62462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62459,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 62466,
                  "src": "4072:15:218",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62458,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4072:7:218",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62461,
                  "name": "interfaceId",
                  "nodeType": "VariableDeclaration",
                  "scope": 62466,
                  "src": "4089:18:218",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 62460,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4089:6:218",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4071:37:218"
            },
            "returnParameters": {
              "id": 62465,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62464,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 62466,
                  "src": "4156:4:218",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 62463,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4156:4:218",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4155:6:218"
            },
            "scope": 62490,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 62475,
            "nodeType": "FunctionDefinition",
            "src": "4490:132:218",
            "nodes": [],
            "documentation": " @notice Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\n @param account Address of the contract to check.\n @param interfaceId ERC165 interface to check.\n @return True if `account` implements `interfaceId`, false otherwise.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "implementsERC165InterfaceNoCache",
            "parameters": {
              "id": 62471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62468,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 62475,
                  "src": "4532:15:218",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62467,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4532:7:218",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62470,
                  "name": "interfaceId",
                  "nodeType": "VariableDeclaration",
                  "scope": 62475,
                  "src": "4549:18:218",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 62469,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4549:6:218",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4531:37:218"
            },
            "returnParameters": {
              "id": 62474,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62473,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 62475,
                  "src": "4616:4:218",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 62472,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4616:4:218",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4615:6:218"
            },
            "scope": 62490,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 62483,
            "nodeType": "EventDefinition",
            "src": "4628:145:218",
            "nodes": [],
            "anonymous": false,
            "documentation": null,
            "name": "InterfaceImplementerSet",
            "parameters": {
              "id": 62482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62477,
                  "indexed": true,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 62483,
                  "src": "4667:23:218",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62476,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4667:7:218",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62479,
                  "indexed": true,
                  "name": "interfaceHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 62483,
                  "src": "4700:29:218",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62478,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4700:7:218",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62481,
                  "indexed": true,
                  "name": "implementer",
                  "nodeType": "VariableDeclaration",
                  "scope": 62483,
                  "src": "4739:27:218",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62480,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4739:7:218",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4657:115:218"
            }
          },
          {
            "id": 62489,
            "nodeType": "EventDefinition",
            "src": "4779:74:218",
            "nodes": [],
            "anonymous": false,
            "documentation": null,
            "name": "ManagerChanged",
            "parameters": {
              "id": 62488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62485,
                  "indexed": true,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 62489,
                  "src": "4800:23:218",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62484,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4800:7:218",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62487,
                  "indexed": true,
                  "name": "newManager",
                  "nodeType": "VariableDeclaration",
                  "scope": 62489,
                  "src": "4825:26:218",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62486,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4825:7:218",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4799:53:218"
            }
          }
        ],
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@dev Interface of the global ERC1820 Registry, as defined in the\nhttps://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register\nimplementers for interfaces in this registry, as well as query support.\n * Implementers may be shared by multiple accounts, and can also implement more\nthan a single interface for each account. Contracts can implement interfaces\nfor themselves, but externally-owned accounts (EOA) must delegate this to a\ncontract.\n * {IERC165} interfaces can also be queried via the registry.\n * For an in-depth explanation and source code analysis, see the EIP text.",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          62490
        ],
        "name": "IERC1820Registry",
        "scope": 62491
      }
    ]
  },
  "id": 218
}