{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "valueSet",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "get",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "set",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "value",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5060c18061001f6000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c80633fa4f24514604157806360fe47b11460595780636d4ce63c146075575b600080fd5b6047607b565b60408051918252519081900360200190f35b607360048036036020811015606d57600080fd5b50356081565b005b60476086565b60005481565b600055565b6000549056fea265627a7a72315820a430bc4aa52a75f08fa665d670e5d140aa437800903d9a2ed085385c7f2f551964736f6c63430005110032",
    "sourceMap": "183:412:163:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;183:412:163;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052348015600f57600080fd5b5060043610603c5760003560e01c80633fa4f24514604157806360fe47b11460595780636d4ce63c146075575b600080fd5b6047607b565b60408051918252519081900360200190f35b607360048036036020811015606d57600080fd5b50356081565b005b60476086565b60005481565b600055565b6000549056fea265627a7a72315820a430bc4aa52a75f08fa665d670e5d140aa437800903d9a2ed085385c7f2f551964736f6c63430005110032",
    "sourceMap": "183:412:163:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;183:412:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;205:20;;;:::i;:::-;;;;;;;;;;;;;;;;526:67;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;526:67:163;;:::i;:::-;;361:76;;;:::i;205:20::-;;;;:::o;526:67::-;572:5;:14;526:67::o;361:76::-;392:14;425:5;361:76;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "get()": "6d4ce63c",
    "set(uint256)": "60fe47b1",
    "value()": "3fa4f245"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"valueSet\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[],\"name\":\"get\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"set\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"value\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Franklin Richards\",\"details\":\"This is going to be used for testing purposes.\",\"methods\":{\"get()\":{\"return\":\"_value The value.\"},\"set(uint256)\":{\"params\":{\"_value\":\"The value.\"}}},\"title\":\"A simple smart contract for setting and getting values.\"},\"userdoc\":{\"methods\":{\"get()\":{\"notice\":\"To get the `value`.\"},\"set(uint256)\":{\"notice\":\"To set the `value`.\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/mockup/setGet.sol\":\"setGet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@ethereum-waffle/=node_modules/@ethereum-waffle/\",\":ds-test/=foundry/lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=foundry/lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":truffle/=node_modules/truffle/\"]},\"sources\":{\"contracts/mockup/setGet.sol\":{\"keccak256\":\"0xd2205dcd94ecc8ee58b9fc8e235e7189c7990c9d33c2b5b600f46dd6b286aa71\",\"urls\":[\"bzz-raw://ed4f79b7a5d62f4ce7ca33a57159264f454846f79ff253a9aa2110d38ab3e3e7\",\"dweb:/ipfs/Qmcv4xd52hJwhhxCom5Gnusz6JyiBTBRgjZnhYPGbnTS8F\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.5.17+commit.d19bba13"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "valueSet",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "get",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "set"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "value",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "methods": {
          "get()": {
            "return": "_value The value."
          },
          "set(uint256)": {
            "params": {
              "_value": "The value."
            }
          }
        }
      },
      "userdoc": {
        "methods": {
          "get()": {
            "notice": "To get the `value`."
          },
          "set(uint256)": {
            "notice": "To set the `value`."
          }
        }
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@ethereum-waffle/=node_modules/@ethereum-waffle/",
        ":ds-test/=foundry/lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=foundry/lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":truffle/=node_modules/truffle/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "compilationTarget": {
        "contracts/mockup/setGet.sol": "setGet"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/mockup/setGet.sol": {
        "keccak256": "0xd2205dcd94ecc8ee58b9fc8e235e7189c7990c9d33c2b5b600f46dd6b286aa71",
        "urls": [
          "bzz-raw://ed4f79b7a5d62f4ce7ca33a57159264f454846f79ff253a9aa2110d38ab3e3e7",
          "dweb:/ipfs/Qmcv4xd52hJwhhxCom5Gnusz6JyiBTBRgjZnhYPGbnTS8F"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/mockup/setGet.sol",
    "id": 42444,
    "exportedSymbols": {
      "setGet": [
        42443
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:596:163",
    "nodes": [
      {
        "id": 42418,
        "nodeType": "PragmaDirective",
        "src": "0:23:163",
        "nodes": [],
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ]
      },
      {
        "id": 42443,
        "nodeType": "ContractDefinition",
        "src": "183:412:163",
        "nodes": [
          {
            "id": 42420,
            "nodeType": "VariableDeclaration",
            "src": "205:20:163",
            "nodes": [],
            "constant": false,
            "name": "value",
            "scope": 42443,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 42419,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "205:7:163",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "id": 42424,
            "nodeType": "EventDefinition",
            "src": "232:39:163",
            "nodes": [],
            "anonymous": false,
            "documentation": null,
            "name": "valueSet",
            "parameters": {
              "id": 42423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42422,
                  "indexed": true,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 42424,
                  "src": "247:22:163",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42421,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "247:7:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "246:24:163"
            }
          },
          {
            "id": 42432,
            "nodeType": "FunctionDefinition",
            "src": "361:76:163",
            "nodes": [],
            "body": {
              "id": 42431,
              "nodeType": "Block",
              "src": "408:29:163",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 42429,
                    "name": "value",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 42420,
                    "src": "425:5:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 42428,
                  "id": 42430,
                  "nodeType": "Return",
                  "src": "418:12:163"
                }
              ]
            },
            "documentation": "@notice To get the `value`.\n@return _value The value.",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get",
            "parameters": {
              "id": 42425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "373:2:163"
            },
            "returnParameters": {
              "id": 42428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42427,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 42432,
                  "src": "392:14:163",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42426,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "392:7:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "391:16:163"
            },
            "scope": 42443,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "id": 42442,
            "nodeType": "FunctionDefinition",
            "src": "526:67:163",
            "nodes": [],
            "body": {
              "id": 42441,
              "nodeType": "Block",
              "src": "562:31:163",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 42439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 42437,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42420,
                      "src": "572:5:163",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 42438,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42434,
                      "src": "580:6:163",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "572:14:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 42440,
                  "nodeType": "ExpressionStatement",
                  "src": "572:14:163"
                }
              ]
            },
            "documentation": "@notice To set the `value`.\n@param _value The value.",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "set",
            "parameters": {
              "id": 42435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42434,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 42442,
                  "src": "539:14:163",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42433,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "539:7:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "538:16:163"
            },
            "returnParameters": {
              "id": 42436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "562:0:163"
            },
            "scope": 42443,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title A simple smart contract for setting and getting values.\n@author Franklin Richards\n@dev This is going to be used for testing purposes.",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          42443
        ],
        "name": "setGet",
        "scope": 42444
      }
    ]
  },
  "id": 163
}