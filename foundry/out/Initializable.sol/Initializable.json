{
  "abi": [],
  "bytecode": {
    "object": "0x6080604052348015600f57600080fd5b50603e80601d6000396000f3fe6080604052600080fdfea265627a7a72315820e272e193728a51a5ca3258845efe2ac93bfa329ca93149699fbdded13368011364736f6c63430005110032",
    "sourceMap": "968:739:183:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;968:739:183;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600080fdfea265627a7a72315820e272e193728a51a5ca3258845efe2ac93bfa329ca93149699fbdded13368011364736f6c63430005110032",
    "sourceMap": "968:739:183:-;;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "rawMetadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/openzeppelin/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@ethereum-waffle/=node_modules/@ethereum-waffle/\",\":ds-test/=foundry/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=foundry/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":truffle/=node_modules/truffle/\"]},\"sources\":{\"contracts/openzeppelin/Initializable.sol\":{\"keccak256\":\"0xa5064e2730ae1037f4efc83654676174484b827890d30ee618048004a04d6b51\",\"urls\":[\"bzz-raw://800313aace6973b861dbb3377dbba02e0ebac124ea5d7d44b8117dfa75f85416\",\"dweb:/ipfs/QmU34Zhi99bs94s9DerPNnrJiESXdn1gthxeNqZma4fAoi\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.5.17+commit.d19bba13"
    },
    "language": "Solidity",
    "output": {
      "abi": [],
      "devdoc": {
        "methods": {}
      },
      "userdoc": {
        "methods": {}
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@ethereum-waffle/=node_modules/@ethereum-waffle/",
        ":ds-test/=foundry/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=foundry/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":truffle/=node_modules/truffle/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "compilationTarget": {
        "contracts/openzeppelin/Initializable.sol": "Initializable"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/openzeppelin/Initializable.sol": {
        "keccak256": "0xa5064e2730ae1037f4efc83654676174484b827890d30ee618048004a04d6b51",
        "urls": [
          "bzz-raw://800313aace6973b861dbb3377dbba02e0ebac124ea5d7d44b8117dfa75f85416",
          "dweb:/ipfs/QmU34Zhi99bs94s9DerPNnrJiESXdn1gthxeNqZma4fAoi"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin/Initializable.sol",
    "id": 55046,
    "exportedSymbols": {
      "Initializable": [
        55045
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:1708:183",
    "nodes": [
      {
        "id": 55005,
        "nodeType": "PragmaDirective",
        "src": "0:31:183",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ]
      },
      {
        "id": 55045,
        "nodeType": "ContractDefinition",
        "src": "968:739:183",
        "nodes": [
          {
            "id": 55007,
            "nodeType": "VariableDeclaration",
            "src": "1075:25:183",
            "nodes": [],
            "constant": false,
            "name": "_initialized",
            "scope": 55045,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 55006,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1075:4:183",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "id": 55009,
            "nodeType": "VariableDeclaration",
            "src": "1203:26:183",
            "nodes": [],
            "constant": false,
            "name": "_initializing",
            "scope": 55045,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 55008,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1203:4:183",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "id": 55044,
            "nodeType": "ModifierDefinition",
            "src": "1334:371:183",
            "nodes": [],
            "body": {
              "id": 55043,
              "nodeType": "Block",
              "src": "1357:348:183",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 55015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 55012,
                          "name": "_initializing",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55009,
                          "src": "1375:13:183",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 55014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1392:13:183",
                          "subExpression": {
                            "argumentTypes": null,
                            "id": 55013,
                            "name": "_initialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55007,
                            "src": "1393:12:183",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1375:30:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
                        "id": 55016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1407:48:183",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
                          "typeString": "literal_string \"Initializable: contract is already initialized\""
                        },
                        "value": "Initializable: contract is already initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
                          "typeString": "literal_string \"Initializable: contract is already initialized\""
                        }
                      ],
                      "id": 55011,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        62895,
                        62896
                      ],
                      "referencedDeclaration": 62896,
                      "src": "1367:7:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 55017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1367:89:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55018,
                  "nodeType": "ExpressionStatement",
                  "src": "1367:89:183"
                },
                {
                  "assignments": [
                    55020
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55020,
                      "name": "isTopLevelCall",
                      "nodeType": "VariableDeclaration",
                      "scope": 55043,
                      "src": "1467:19:183",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 55019,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1467:4:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 55023,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 55022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1489:14:183",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 55021,
                      "name": "_initializing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55009,
                      "src": "1490:13:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1467:36:183"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 55024,
                    "name": "isTopLevelCall",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 55020,
                    "src": "1517:14:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 55034,
                  "nodeType": "IfStatement",
                  "src": "1513:98:183",
                  "trueBody": {
                    "id": 55033,
                    "nodeType": "Block",
                    "src": "1533:78:183",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 55027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 55025,
                            "name": "_initializing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55009,
                            "src": "1547:13:183",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 55026,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1563:4:183",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1547:20:183",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 55028,
                        "nodeType": "ExpressionStatement",
                        "src": "1547:20:183"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 55031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 55029,
                            "name": "_initialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55007,
                            "src": "1581:12:183",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 55030,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1596:4:183",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1581:19:183",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 55032,
                        "nodeType": "ExpressionStatement",
                        "src": "1581:19:183"
                      }
                    ]
                  }
                },
                {
                  "id": 55035,
                  "nodeType": "PlaceholderStatement",
                  "src": "1621:1:183"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 55036,
                    "name": "isTopLevelCall",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 55020,
                    "src": "1637:14:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 55042,
                  "nodeType": "IfStatement",
                  "src": "1633:66:183",
                  "trueBody": {
                    "id": 55041,
                    "nodeType": "Block",
                    "src": "1653:46:183",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 55039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 55037,
                            "name": "_initializing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55009,
                            "src": "1667:13:183",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 55038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1683:5:183",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "1667:21:183",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 55040,
                        "nodeType": "ExpressionStatement",
                        "src": "1667:21:183"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Modifier to protect an initializer function from being invoked twice.",
            "name": "initializer",
            "parameters": {
              "id": 55010,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1354:2:183"
            },
            "visibility": "internal"
          }
        ],
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\nbehind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\nexternal initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\nfunction so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\npossible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\nthat all initializers are idempotent. This is not verified automatically as constructors are by Solidity.",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          55045
        ],
        "name": "Initializable",
        "scope": 55046
      }
    ]
  },
  "id": 183
}