{
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "MAX_DURATION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint96",
          "name": "_priorWeightedStake",
          "type": "uint96"
        }
      ],
      "name": "MOCK_priorWeightedStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint96",
          "name": "_priorWeightedStake",
          "type": "uint96"
        },
        {
          "internalType": "uint256",
          "name": "_block",
          "type": "uint256"
        }
      ],
      "name": "MOCK_priorWeightedStakeAtBlock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "SOVToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "vesting",
          "type": "address"
        }
      ],
      "name": "addContractCodeHash",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_pauser",
          "type": "address"
        }
      ],
      "name": "addPauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "isAdmin",
          "type": "address"
        }
      ],
      "name": "admins",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "allUnlocked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "balance",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "vesting",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "startFrom",
          "type": "uint256"
        }
      ],
      "name": "cancelTeamVesting",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startDate",
          "type": "uint256"
        }
      ],
      "name": "computeWeightByDate",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "weight",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "lockDate",
          "type": "uint256"
        }
      ],
      "name": "delegate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "delagatee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "index",
          "type": "uint32"
        }
      ],
      "name": "delegateStakingCheckpoints",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "fromBlock",
              "type": "uint32"
            },
            {
              "internalType": "uint96",
              "name": "stake",
              "type": "uint96"
            }
          ],
          "internalType": "struct IStakingModuleBlockMockup.Checkpoint",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "until",
          "type": "uint256"
        }
      ],
      "name": "delegates",
      "outputs": [
        {
          "internalType": "address",
          "name": "_delegate",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "previousLock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "until",
          "type": "uint256"
        }
      ],
      "name": "extendStakingDuration",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "feeSharing",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "_freeze",
          "type": "bool"
        }
      ],
      "name": "freezeUnfreeze",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "frozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "lockedTS",
          "type": "uint256"
        }
      ],
      "name": "getCurrentStakedUntil",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getCurrentVotes",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPriorStakeByDateForDelegatee",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPriorTotalStakesForDate",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint32",
          "name": "blockNumber",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "getPriorTotalVotingPower",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPriorUserStakeByDate",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPriorVestingStakeByDate",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "getPriorVestingWeightedStake",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "votes",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "getPriorVotes",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "getPriorWeightedStake",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "priorWeightedStake",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_block",
          "type": "uint256"
        }
      ],
      "name": "getPriorWeightedStakeAtBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getStakes",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "dates",
          "type": "uint256[]"
        },
        {
          "internalType": "uint96[]",
          "name": "stakes",
          "type": "uint96[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStorageDefaultWeightScaling",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStorageDelegationTypehash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStorageDomainTypehash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStorageMaxDurationToStakeTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStorageMaxVotingWeight",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStorageName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStorageRangeForWeightScaling",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "minWeightScaling",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxWeightScaling",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStorageWeightFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint96",
          "name": "amount",
          "type": "uint96"
        },
        {
          "internalType": "uint256",
          "name": "until",
          "type": "uint256"
        }
      ],
      "name": "getWithdrawAmounts",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        },
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint96",
          "name": "amount",
          "type": "uint96"
        },
        {
          "internalType": "uint256",
          "name": "until",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "governanceWithdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "stakerAddress",
          "type": "address"
        }
      ],
      "name": "isVestingContract",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "kickoffTS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "migrateToNewStakingContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "newStakingContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "numDelegateStakingCheckpoints",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "checkpointsQty",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "numTotalStakingCheckpoints",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "checkpointsQty",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "numUserStakingCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "checkpointsQty",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "numVestingCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "checkpointsQty",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "_pause",
          "type": "bool"
        }
      ],
      "name": "pauseUnpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "isPauser",
          "type": "address"
        }
      ],
      "name": "pausers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_block",
          "type": "uint256"
        }
      ],
      "name": "priorWeightedStakeAtBlock",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "receiveApproval",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "removeAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "vesting",
          "type": "address"
        }
      ],
      "name": "removeContractCodeHash",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_pauser",
          "type": "address"
        }
      ],
      "name": "removePauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_blockMockUp",
          "type": "address"
        }
      ],
      "name": "setBlockMockUpAddr",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeSharing",
          "type": "address"
        }
      ],
      "name": "setFeeSharing",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_newStakingContract",
          "type": "address"
        }
      ],
      "name": "setNewStakingContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_vestingRegistryProxy",
          "type": "address"
        }
      ],
      "name": "setVestingRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "lockedDates",
          "type": "uint256[]"
        },
        {
          "internalType": "uint96[]",
          "name": "values",
          "type": "uint96[]"
        }
      ],
      "name": "setVestingStakes",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint96",
          "name": "_weightScaling",
          "type": "uint96"
        }
      ],
      "name": "setWeightScaling",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint96",
          "name": "amount",
          "type": "uint96"
        },
        {
          "internalType": "uint256",
          "name": "until",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "stakeFor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "name": "stake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "cliff",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "intervalLength",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "stakeFor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "name": "stakeBySchedule",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint96",
          "name": "amount",
          "type": "uint96"
        },
        {
          "internalType": "uint256",
          "name": "until",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "stakeFor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "name": "stakeWithApproval",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "cliff",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "intervalLength",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "stakeFor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "name": "stakesBySchedule",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "timestampToLockDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "index",
          "type": "uint32"
        }
      ],
      "name": "totalStakingCheckpoints",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "fromBlock",
              "type": "uint32"
            },
            {
              "internalType": "uint96",
              "name": "stake",
              "type": "uint96"
            }
          ],
          "internalType": "struct IStakingModuleBlockMockup.Checkpoint",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unlockAllTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "index",
          "type": "uint32"
        }
      ],
      "name": "userStakingCheckpoints",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "fromBlock",
              "type": "uint32"
            },
            {
              "internalType": "uint96",
              "name": "stake",
              "type": "uint96"
            }
          ],
          "internalType": "struct IStakingModuleBlockMockup.Checkpoint",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "index",
          "type": "uint32"
        }
      ],
      "name": "vestingCheckpoints",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "fromBlock",
              "type": "uint32"
            },
            {
              "internalType": "uint96",
              "name": "stake",
              "type": "uint96"
            }
          ],
          "internalType": "struct IStakingModuleBlockMockup.Checkpoint",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "vestingLogicCodeHash",
          "type": "bytes32"
        }
      ],
      "name": "vestingCodeHashes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "vestingRegistryLogic",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "isWhitelisted",
          "type": "address"
        }
      ],
      "name": "vestingWhitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weightScaling",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "weightedStakeByDate",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "power",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint96",
          "name": "amount",
          "type": "uint96"
        },
        {
          "internalType": "uint256",
          "name": "until",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "MAX_DURATION()": "b1724b46",
    "MOCK_priorWeightedStake(uint96)": "0130f0bf",
    "MOCK_priorWeightedStakeAtBlock(uint96,uint256)": "4a15290e",
    "SOVToken()": "a58848c5",
    "addAdmin(address)": "70480275",
    "addContractCodeHash(address)": "a20d8d03",
    "addPauser(address)": "82dc1ec4",
    "admins(address)": "429b62e5",
    "allUnlocked()": "9929e886",
    "balanceOf(address)": "70a08231",
    "cancelTeamVesting(address,address,uint256)": "765dade9",
    "computeWeightByDate(uint256,uint256)": "62cf8a08",
    "delegate(address,uint256)": "026e402b",
    "delegateStakingCheckpoints(address,uint256,uint32)": "6b6fde0e",
    "delegates(address,uint256)": "27dd1b00",
    "extendStakingDuration(uint256,uint256)": "eefb8c47",
    "feeSharing()": "03a18fa3",
    "freezeUnfreeze(bool)": "9604c618",
    "frozen()": "054f7d9c",
    "getCurrentStakedUntil(uint256)": "d5c38464",
    "getCurrentVotes(address)": "b4b5ea57",
    "getPriorStakeByDateForDelegatee(address,uint256,uint256)": "e97ffacb",
    "getPriorTotalStakesForDate(uint256,uint256)": "f09cfc64",
    "getPriorTotalVotingPower(uint32,uint256)": "2522d7ba",
    "getPriorUserStakeByDate(address,uint256,uint256)": "cf7b684a",
    "getPriorVestingStakeByDate(uint256,uint256)": "c70a7e96",
    "getPriorVestingWeightedStake(uint256,uint256)": "cdbe7155",
    "getPriorVotes(address,uint256,uint256)": "836eebee",
    "getPriorWeightedStake(address,uint256,uint256)": "37e6b1c1",
    "getPriorWeightedStakeAtBlock(uint256)": "a4813fee",
    "getStakes(address)": "7ba6f458",
    "getStorageDefaultWeightScaling()": "805c49f3",
    "getStorageDelegationTypehash()": "332647b6",
    "getStorageDomainTypehash()": "a9d3ad1c",
    "getStorageMaxDurationToStakeTokens()": "9e5ff1eb",
    "getStorageMaxVotingWeight()": "d8fc90e8",
    "getStorageName()": "1ca6cbeb",
    "getStorageRangeForWeightScaling()": "8cdf855f",
    "getStorageWeightFactor()": "048c9588",
    "getWithdrawAmounts(uint96,uint256)": "96a590c1",
    "governanceWithdraw(uint96,uint256,address)": "800b64ca",
    "isOwner()": "8f32d59b",
    "isVestingContract(address)": "ca6860df",
    "kickoffTS()": "00073f99",
    "migrateToNewStakingContract()": "5419675f",
    "newStakingContract()": "ae81dfe4",
    "nonces(address)": "7ecebe00",
    "numDelegateStakingCheckpoints(address,uint256)": "94c2ce58",
    "numTotalStakingCheckpoints(uint256)": "9436e7d4",
    "numUserStakingCheckpoints(address,uint256)": "db27ec18",
    "numVestingCheckpoints(uint256)": "bb533cf2",
    "owner()": "8da5cb5b",
    "pauseUnpause(bool)": "b0667f7a",
    "paused()": "5c975abb",
    "pausers(address)": "80f51c12",
    "priorWeightedStakeAtBlock(uint256)": "4de7adea",
    "receiveApproval(address,uint256,address,bytes)": "8f4ffcb1",
    "removeAdmin(address)": "1785f53c",
    "removeContractCodeHash(address)": "25464cc5",
    "removePauser(address)": "6b2c0f55",
    "setBlockMockUpAddr(address)": "a377f244",
    "setFeeSharing(address)": "626ee2d9",
    "setNewStakingContract(address)": "9a377b82",
    "setVestingRegistry(address)": "450b0601",
    "setVestingStakes(uint256[],uint96[])": "6e56c1dd",
    "setWeightScaling(uint96)": "b8a98732",
    "stake(uint96,uint256,address,address)": "25629ec0",
    "stakeBySchedule(uint256,uint256,uint256,uint256,address,address)": "c1b79b05",
    "stakeWithApproval(address,uint96,uint256,address,address)": "0c09ddfd",
    "stakesBySchedule(uint256,uint256,uint256,uint256,address,address)": "4b2fea1e",
    "timestampToLockDate(uint256)": "72ec9795",
    "totalStakingCheckpoints(uint256,uint32)": "dfb267c2",
    "transferOwnership(address)": "f2fde38b",
    "unlockAllTokens()": "5e0be607",
    "userStakingCheckpoints(address,uint256,uint32)": "68cefccc",
    "vestingCheckpoints(uint256,uint32)": "f3f19731",
    "vestingCodeHashes(bytes32)": "07392cc0",
    "vestingRegistryLogic()": "104932cf",
    "vestingWhitelist(address)": "adae9002",
    "weightScaling()": "bf626ec1",
    "weightedStakeByDate(address,uint256,uint256,uint256)": "8dae1b16",
    "withdraw(uint96,uint256,address)": "dab6ca44"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"MAX_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"_priorWeightedStake\",\"type\":\"uint96\"}],\"name\":\"MOCK_priorWeightedStake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"_priorWeightedStake\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"_block\",\"type\":\"uint256\"}],\"name\":\"MOCK_priorWeightedStakeAtBlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SOVToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"vesting\",\"type\":\"address\"}],\"name\":\"addContractCodeHash\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pauser\",\"type\":\"address\"}],\"name\":\"addPauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"isAdmin\",\"type\":\"address\"}],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allUnlocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"vesting\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startFrom\",\"type\":\"uint256\"}],\"name\":\"cancelTeamVesting\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"}],\"name\":\"computeWeightByDate\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"weight\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lockDate\",\"type\":\"uint256\"}],\"name\":\"delegate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"delagatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"delegateStakingCheckpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakingModuleBlockMockup.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"until\",\"type\":\"uint256\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"previousLock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"until\",\"type\":\"uint256\"}],\"name\":\"extendStakingDuration\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeSharing\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_freeze\",\"type\":\"bool\"}],\"name\":\"freezeUnfreeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"frozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lockedTS\",\"type\":\"uint256\"}],\"name\":\"getCurrentStakedUntil\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCurrentVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorStakeByDateForDelegatee\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorTotalStakesForDate\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"getPriorTotalVotingPower\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorUserStakeByDate\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorVestingStakeByDate\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"getPriorVestingWeightedStake\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"votes\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"getPriorVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"getPriorWeightedStake\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"priorWeightedStake\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_block\",\"type\":\"uint256\"}],\"name\":\"getPriorWeightedStakeAtBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getStakes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"dates\",\"type\":\"uint256[]\"},{\"internalType\":\"uint96[]\",\"name\":\"stakes\",\"type\":\"uint96[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStorageDefaultWeightScaling\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStorageDelegationTypehash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStorageDomainTypehash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStorageMaxDurationToStakeTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStorageMaxVotingWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStorageName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStorageRangeForWeightScaling\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minWeightScaling\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWeightScaling\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStorageWeightFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"until\",\"type\":\"uint256\"}],\"name\":\"getWithdrawAmounts\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"until\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"governanceWithdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakerAddress\",\"type\":\"address\"}],\"name\":\"isVestingContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kickoffTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"migrateToNewStakingContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newStakingContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"numDelegateStakingCheckpoints\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"checkpointsQty\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"numTotalStakingCheckpoints\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"checkpointsQty\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"numUserStakingCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"checkpointsQty\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"numVestingCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"checkpointsQty\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_pause\",\"type\":\"bool\"}],\"name\":\"pauseUnpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"isPauser\",\"type\":\"address\"}],\"name\":\"pausers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_block\",\"type\":\"uint256\"}],\"name\":\"priorWeightedStakeAtBlock\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"receiveApproval\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"vesting\",\"type\":\"address\"}],\"name\":\"removeContractCodeHash\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pauser\",\"type\":\"address\"}],\"name\":\"removePauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_blockMockUp\",\"type\":\"address\"}],\"name\":\"setBlockMockUpAddr\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeSharing\",\"type\":\"address\"}],\"name\":\"setFeeSharing\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newStakingContract\",\"type\":\"address\"}],\"name\":\"setNewStakingContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vestingRegistryProxy\",\"type\":\"address\"}],\"name\":\"setVestingRegistry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"lockedDates\",\"type\":\"uint256[]\"},{\"internalType\":\"uint96[]\",\"name\":\"values\",\"type\":\"uint96[]\"}],\"name\":\"setVestingStakes\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"_weightScaling\",\"type\":\"uint96\"}],\"name\":\"setWeightScaling\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"until\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"stakeFor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"stake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cliff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"intervalLength\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"stakeFor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"stakeBySchedule\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"until\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"stakeFor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"stakeWithApproval\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cliff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"intervalLength\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"stakeFor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"stakesBySchedule\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"timestampToLockDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"totalStakingCheckpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakingModuleBlockMockup.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unlockAllTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"userStakingCheckpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakingModuleBlockMockup.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"vestingCheckpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakingModuleBlockMockup.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"vestingLogicCodeHash\",\"type\":\"bytes32\"}],\"name\":\"vestingCodeHashes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"vestingRegistryLogic\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"isWhitelisted\",\"type\":\"address\"}],\"name\":\"vestingWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weightScaling\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"weightedStakeByDate\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"power\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"until\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"MAX_DURATION()\":{\"return\":\"uint96 MAX_DURATION for staking*\"},\"addAdmin(address)\":{\"params\":{\"_admin\":\"The addresses of the account to grant permissions.\"}},\"addContractCodeHash(address)\":{\"details\":\"We need it to use isVestingContract() function instead of isContract()\",\"params\":{\"vesting\":\"The address of Vesting contract.\"}},\"addPauser(address)\":{\"params\":{\"_pauser\":\"The address to grant pauser permissions.\"}},\"admins(address)\":{\"details\":\"user => flag whether user has admin role.multisig should be an admin, admin can invoke only governanceWithdrawVesting function, \\tthis function works only with Team Vesting contracts\"},\"balanceOf(address)\":{\"details\":\"Iterate checkpoints adding up stakes.\",\"params\":{\"account\":\"The address of the account to get the balance of.\"},\"return\":\"The number of tokens held.\"},\"cancelTeamVesting(address,address,uint256)\":{\"params\":{\"receiver\":\"The receiving address.\",\"startFrom\":\"The start value for the iterations.\",\"vesting\":\"The vesting address.\"}},\"computeWeightByDate(uint256,uint256)\":{\"params\":{\"date\":\"The unlocking date.\",\"startDate\":\"We compute the weight for the tokens staked until 'date' on 'startDate'.\"},\"return\":\"The weighted stake the account had as of the given block.\"},\"delegate(address,uint256)\":{\"params\":{\"delegatee\":\"The address to delegate votes to.\",\"lockDate\":\"the date if the position to delegate.\"}},\"delegateStakingCheckpoints(address,uint256,uint32)\":{\"details\":\"delegateStakingCheckpoints[delegatee][date][index] is a checkpoint.\"},\"delegates(address,uint256)\":{\"params\":{\"staker\":\"- the delegating address\",\"until\":\"- delegated voting\"},\"return\":\"_delegate - voting power delegated to address\"},\"extendStakingDuration(uint256,uint256)\":{\"params\":{\"previousLock\":\"The old unlocking timestamp.\",\"until\":\"The new unlocking timestamp in seconds.\"}},\"freezeUnfreeze(bool)\":{\"details\":\"When freezing, pause is always applied too. When unfreezing, the contract is left in paused stated.\",\"params\":{\"_freeze\":\"true when freezing, false when unfreezing\"}},\"frozen()\":{\"details\":\"Staking contract is frozen\"},\"getCurrentStakedUntil(uint256)\":{\"params\":{\"lockedTS\":\"The timestamp to get the staked tokens for.\"}},\"getCurrentVotes(address)\":{\"details\":\"This is a wrapper to simplify arguments. The actual computation is performed on WeightedStaking parent contract.\",\"params\":{\"account\":\"The address to get votes balance.\"},\"return\":\"The number of current votes for a user account.\"},\"getPriorStakeByDateForDelegatee(address,uint256,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.\",\"params\":{\"account\":\"The address of the account to check.\",\"blockNumber\":\"The block number to get the vote balance at.\",\"date\":\"The staking date to compute the power for.\"},\"return\":\"The number of votes the account had as of the given block.\"},\"getPriorTotalStakesForDate(uint256,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation. TODO: WeightedStaking::getPriorTotalStakesForDate should probably better be internal instead of a public function.\",\"params\":{\"blockNumber\":\"The block number to get the vote balance at.\",\"date\":\"The date to check the stakes for.\"},\"return\":\"The number of votes the account had as of the given block.\"},\"getPriorTotalVotingPower(uint32,uint256)\":{\"params\":{\"blockNumber\":\"The block number, needed for checkpointing.\",\"time\":\"The timestamp for which to calculate the total voting power.\"},\"return\":\"The total voting power at the given time.\"},\"getPriorUserStakeByDate(address,uint256,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.\",\"params\":{\"account\":\"The address of the account to check.\",\"blockNumber\":\"The block number to get the vote balance at.\",\"date\":\"The lock date.\"},\"return\":\"The number of votes the account had as of the given block.\"},\"getPriorVestingStakeByDate(uint256,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.\",\"params\":{\"blockNumber\":\"The block number to get the vote balance at.\",\"date\":\"The lock date.\"},\"return\":\"The number of votes the account had as of the given block.\"},\"getPriorVestingWeightedStake(uint256,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.     Used for fee sharing, not voting. TODO: WeightedStaking::getPriorVestingWeightedStake is using the variable name \\\"votes\\\" to add up token stake, and that could be misleading.\",\"params\":{\"blockNumber\":\"The block number to get the vote balance at.\",\"date\":\"The staking date to compute the power for.\"},\"return\":\"The weighted stake the account had as of the given block.\"},\"getPriorVotes(address,uint256,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.     Used for Voting, not for fee sharing.\",\"params\":{\"account\":\"The address of the account to check.\",\"blockNumber\":\"The block number to get the vote balance at.\",\"date\":\"The staking date to compute the power for.\"},\"return\":\"The number of votes the delegatee had as of the given block.\"},\"getPriorWeightedStake(address,uint256,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.     Used for fee sharing, not voting.\",\"params\":{\"account\":\"The address of the account to check.\",\"blockNumber\":\"The block number to get the vote balance at.\",\"date\":\"The date/timestamp of the unstaking time.\"},\"return\":\"The weighted stake the account had as of the given block.\"},\"getStakes(address)\":{\"params\":{\"account\":\"The address to get stakes.\"},\"return\":\"The arrays of dates and stakes.\"},\"getStorageDefaultWeightScaling()\":{\"return\":\"uint256(DEFAULT_WEIGHT_SCALING);\"},\"getStorageDelegationTypehash()\":{\"return\":\"uint256(DELEGATION_TYPEHASH);\"},\"getStorageDomainTypehash()\":{\"return\":\"uint256(DOMAIN_TYPEHASH);\"},\"getStorageMaxDurationToStakeTokens()\":{\"return\":\"MAX_DURATION to stake tokens\"},\"getStorageMaxVotingWeight()\":{\"return\":\"uint256(MAX_VOTING_WEIGHT);\"},\"getStorageName()\":{\"return\":\"name;\"},\"getStorageWeightFactor()\":{\"details\":\"MAX_VOTING_WEIGHT * WEIGHT_FACTOR needs to be < 792, because there are 100,000,000 SOV with 18 decimals\",\"return\":\"uint256(WEIGHT_FACTOR);\"},\"getWithdrawAmounts(uint96,uint256)\":{\"params\":{\"amount\":\"The number of tokens to withdraw.\",\"until\":\"The date until which the tokens were staked.\"}},\"governanceWithdraw(uint96,uint256,address)\":{\"details\":\"Can be invoked only by whitelisted contract passed to governanceWithdrawVesting**WARNING** This function should not be no longer used by Sovryn Protocol. Sovryn protocol will use the cancelTeamVesting function for the withdrawal moving forward.\",\"params\":{\"amount\":\"The number of tokens to withdraw.\",\"receiver\":\"The receiver of the tokens. If not specified, send to the msg.sender\",\"until\":\"The date until which the tokens were staked.\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"isVestingContract(address)\":{\"params\":{\"stakerAddress\":\"the address to check\"}},\"migrateToNewStakingContract()\":{\"details\":\"Staking contract needs to be set before by the owner. Currently not implemented, just needed for the interface.     In case it's needed at some point in the future,     the implementation needs to be changed first.\"},\"nonces(address)\":{\"details\":\"nonces[user] is a number.\"},\"numDelegateStakingCheckpoints(address,uint256)\":{\"details\":\"numDelegateStakingCheckpoints[delegatee][date] is a number.\"},\"numTotalStakingCheckpoints(uint256)\":{\"details\":\"numTotalStakingCheckpoints[date] is a number.\"},\"numUserStakingCheckpoints(address,uint256)\":{\"details\":\"numUserStakingCheckpoints[user][date] is a number\"},\"numVestingCheckpoints(uint256)\":{\"details\":\"numVestingCheckpoints[date] is a number.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pauseUnpause(bool)\":{\"params\":{\"_pause\":\"true when pausing, false when unpausing\"}},\"paused()\":{\"details\":\"Staking contract is paused\"},\"pausers(address)\":{\"details\":\"user => flag whether user has pauser role.\"},\"receiveApproval(address,uint256,address,bytes)\":{\"params\":{\"_data\":\"The data will be used for low level call.\"}},\"removeAdmin(address)\":{\"params\":{\"_admin\":\"The addresses of the account to revoke permissions.\"}},\"removeContractCodeHash(address)\":{\"details\":\"We need it to use isVestingContract() function instead of isContract()\",\"params\":{\"vesting\":\"The address of Vesting contract.\"}},\"removePauser(address)\":{\"params\":{\"_pauser\":\"The address to grant pauser permissions.\"}},\"setBlockMockUpAddr(address)\":{\"params\":{\"_blockMockUp\":\"the address of BlockMockUp\"}},\"setFeeSharing(address)\":{\"params\":{\"_feeSharing\":\"The address of FeeSharingCollectorProxy contract.\"}},\"setNewStakingContract(address)\":{\"details\":\"Doesn't have any influence as long as migrateToNewStakingContract is not implemented.\",\"params\":{\"_newStakingContract\":\"The address of the new staking contract.\"}},\"setVestingRegistry(address)\":{\"details\":\"_vestingRegistryProxy can be set to 0 as this function can be reused by various other functionalities without the necessity of linking it with Vesting Registry\",\"params\":{\"_vestingRegistryProxy\":\"the address of vesting registry proxy contract\"}},\"setVestingStakes(uint256[],uint96[])\":{\"params\":{\"lockedDates\":\"The arrays of lock dates.\",\"values\":\"The array of values to add to the staked balance.\"}},\"setWeightScaling(uint96)\":{\"params\":{\"_weightScaling\":\"The weight scaling.\"}},\"stake(uint96,uint256,address,address)\":{\"params\":{\"amount\":\"The number of tokens to stake.\",\"delegatee\":\"The address of the delegatee or 0x0 if there is none.\",\"stakeFor\":\"The address to stake the tokens for or 0x0 if staking for oneself.\",\"until\":\"Timestamp indicating the date until which to stake.\"}},\"stakeBySchedule(uint256,uint256,uint256,uint256,address,address)\":{\"params\":{\"amount\":\"The amount of tokens to stake.\",\"cliff\":\"The time interval to the first withdraw.\",\"delegatee\":\"The address of the delegatee or 0x0 if there is none.\",\"duration\":\"The staking duration.\",\"intervalLength\":\"The length of each staking interval when cliff passed.\",\"stakeFor\":\"The address to stake the tokens for or 0x0 if staking for oneself.\"}},\"stakeWithApproval(address,uint96,uint256,address,address)\":{\"details\":\"This function will be invoked from receiveApprovalSOV.approveAndCall -> this.receiveApproval -> this.stakeWithApproval\",\"params\":{\"amount\":\"The number of tokens to stake.\",\"delegatee\":\"The address of the delegatee or 0x0 if there is none.\",\"sender\":\"The sender of SOV.approveAndCall\",\"stakeFor\":\"The address to stake the tokens for or 0x0 if staking for oneself.\",\"until\":\"Timestamp indicating the date until which to stake.\"}},\"stakesBySchedule(uint256,uint256,uint256,uint256,address,address)\":{\"details\":\"DO NOT USE this misspelled function. Use stakeBySchedule function instead. This function cannot be deprecated while we have non-upgradeable vesting contracts.\"},\"timestampToLockDate(uint256)\":{\"params\":{\"timestamp\":\"The unlocking timestamp.\"},\"return\":\"The actual unlocking date (might be up to 2 weeks shorter than intended).\"},\"totalStakingCheckpoints(uint256,uint32)\":{\"details\":\"totalStakingCheckpoints[date][index] is a checkpoint\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unlockAllTokens()\":{\"details\":\"Last resort.\"},\"userStakingCheckpoints(address,uint256,uint32)\":{\"details\":\"userStakingCheckpoints[user][date][index] is a checkpoint.\"},\"vestingCheckpoints(uint256,uint32)\":{\"details\":\"vestingCheckpoints[date][index] is a checkpoint.\"},\"vestingCodeHashes(bytes32)\":{\"details\":\"vesting contract code hash => flag whether it's registered code hash\"},\"vestingWhitelist(address)\":{\"details\":\"vestingWhitelist[contract] is true/false.\"},\"weightScaling()\":{\"return\":\"uint96 DEFAULT_WEIGHT_SCALING\"},\"weightedStakeByDate(address,uint256,uint256,uint256)\":{\"params\":{\"account\":\"The user address.\",\"blockNumber\":\"The block number, needed for checkpointing.\",\"date\":\"The staking date to compute the power for.\",\"startDate\":\"The date for which we need to know the power of the stake.\"},\"return\":\"The stacking power.\"},\"withdraw(uint96,uint256,address)\":{\"params\":{\"amount\":\"The number of tokens to withdraw.\",\"receiver\":\"The receiver of the tokens. If not specified, send to the msg.sender\",\"until\":\"The date until which the tokens were staked.\"}}},\"title\":\"Interface for Staking modules governance/Staking/modules\"},\"userdoc\":{\"methods\":{\"MAX_DURATION()\":{\"notice\":\"Returns public constant MAX_DURATION preserved for backwards compatibility Use getStorageMaxDurationToStakeTokens()\"},\"SOVToken()\":{\"notice\":\"The token to be staked\"},\"addAdmin(address)\":{\"notice\":\"Add account to Admins ACL.\"},\"addContractCodeHash(address)\":{\"notice\":\"Add vesting contract's code hash to a map of code hashes.\"},\"addPauser(address)\":{\"notice\":\"Add account to pausers ACL.\"},\"allUnlocked()\":{\"notice\":\"If this flag is set to true, all tokens are unlocked immediately see function unlockAllTokens() for details\"},\"balanceOf(address)\":{\"notice\":\"Get the number of staked tokens held by the user account.\"},\"cancelTeamVesting(address,address,uint256)\":{\"notice\":\"Governance withdraw vesting directly through staking contract. This direct withdraw vesting solves the out of gas issue when there are too many iterations when withdrawing. This function only allows cancelling vesting contract of the TeamVesting type.\"},\"computeWeightByDate(uint256,uint256)\":{\"notice\":\"Compute the weight for a specific date.\"},\"delegate(address,uint256)\":{\"notice\":\"Delegate votes from `msg.sender` which are locked until lockDate to `delegatee`.\"},\"delegateStakingCheckpoints(address,uint256,uint32)\":{\"notice\":\"A record of tokens to be unstaked at a given time which were delegated to a certain address. For delegatee voting power computation. Voting weights get adjusted bi-weekly.\"},\"delegates(address,uint256)\":{\"notice\":\"Stakers delegated voting power\"},\"extendStakingDuration(uint256,uint256)\":{\"notice\":\"Extend the staking duration until the specified date.\"},\"feeSharing()\":{\"notice\":\"SLASHING ///the address of FeeSharingCollectorProxy contract, we need it for unstaking with slashing.\"},\"freezeUnfreeze(bool)\":{\"notice\":\"Freeze contract - disable all functions\"},\"getCurrentStakedUntil(uint256)\":{\"notice\":\"Get the current number of tokens staked for a day.\"},\"getCurrentVotes(address)\":{\"notice\":\"Get the current votes balance for a user account.\"},\"getPriorStakeByDateForDelegatee(address,uint256,uint256)\":{\"notice\":\"Determine the prior number of stake for an account as of a block number.\"},\"getPriorTotalStakesForDate(uint256,uint256)\":{\"notice\":\"Determine the prior number of stake for an unlocking date as of a block number.\"},\"getPriorTotalVotingPower(uint32,uint256)\":{\"notice\":\"Compute the total voting power at a given time.\"},\"getPriorUserStakeByDate(address,uint256,uint256)\":{\"notice\":\"Determine the prior number of stake for an account until a certain lock date as of a block number.\"},\"getPriorVestingStakeByDate(uint256,uint256)\":{\"notice\":\"Determine the prior number of vested stake for an account until a certain lock date as of a block number.\"},\"getPriorVestingWeightedStake(uint256,uint256)\":{\"notice\":\"Determine the prior weighted vested amount for an account as of a block number. Iterate through checkpoints adding up voting power.\"},\"getPriorVotes(address,uint256,uint256)\":{\"notice\":\"Determine the prior number of votes for a delegatee as of a block number. Iterate through checkpoints adding up voting power.\"},\"getPriorWeightedStake(address,uint256,uint256)\":{\"notice\":\"Determine the prior weighted stake for an account as of a block number. Iterate through checkpoints adding up voting power.\"},\"getStakes(address)\":{\"notice\":\"Get list of stakes for a user account.\"},\"getStorageDelegationTypehash()\":{\"notice\":\"The EIP-712 typehash for the delegation struct used by the contract.\"},\"getStorageDomainTypehash()\":{\"notice\":\"The EIP-712 typehash for the contract's domain.\"},\"getStorageMaxDurationToStakeTokens()\":{\"notice\":\"The maximum duration to stake tokens\"},\"getStorageMaxVotingWeight()\":{\"notice\":\"The maximum possible voting weight before adding +1 (actually 10, but need 9 for computation).\"},\"getStorageRangeForWeightScaling()\":{\"notice\":\"return (uint256(MIN_WEIGHT_SCALING), uint256(MAX_WEIGHT_SCALING))\"},\"getStorageWeightFactor()\":{\"notice\":\"weight is multiplied with this factor (for allowing decimals, like 1.2x).\"},\"getWithdrawAmounts(uint96,uint256)\":{\"notice\":\"Get available and punished amount for withdrawing.\"},\"governanceWithdraw(uint96,uint256,address)\":{\"notice\":\"Withdraw the given amount of tokens.\"},\"isVestingContract(address)\":{\"notice\":\"Return flag whether the given address is a registered vesting contract.\"},\"kickoffTS()\":{\"notice\":\"AUTOGENERATED FUNCTIONS FROM THE STAKING STORAGE PUBLIC VARIABLES ///The timestamp of contract creation. Base for the staking period calculation.\"},\"migrateToNewStakingContract()\":{\"notice\":\"Allow a staker to migrate his positions to the new staking contract.\"},\"newStakingContract()\":{\"notice\":\"Used for stake migrations to a new staking contract with a different storage structure\"},\"nonces(address)\":{\"notice\":\"A record of states for signing / validating signatures\"},\"numDelegateStakingCheckpoints(address,uint256)\":{\"notice\":\"The number of total staking checkpoints for each date per delegate.\"},\"numTotalStakingCheckpoints(uint256)\":{\"notice\":\"The number of total staking checkpoints for each date.\"},\"numUserStakingCheckpoints(address,uint256)\":{\"notice\":\"The number of total staking checkpoints for each date per user.\"},\"numVestingCheckpoints(uint256)\":{\"notice\":\"The number of total vesting checkpoints for each date.\"},\"pauseUnpause(bool)\":{\"notice\":\"Pause/unpause contract\"},\"receiveApproval(address,uint256,address,bytes)\":{\"notice\":\"Receives approval from SOV token.\"},\"removeAdmin(address)\":{\"notice\":\"Remove account from Admins ACL.\"},\"removeContractCodeHash(address)\":{\"notice\":\"Remove vesting contract's code hash to a map of code hashes.\"},\"removePauser(address)\":{\"notice\":\"Remove account from pausers ACL.\"},\"setBlockMockUpAddr(address)\":{\"notice\":\"gets block number from BlockMockUp\"},\"setFeeSharing(address)\":{\"notice\":\"Allows the owner to set a fee sharing proxy contract. We need it for unstaking with slashing.\"},\"setNewStakingContract(address)\":{\"notice\":\"Allow the owner to set a new staking contract. As a consequence it allows the stakers to migrate their positions to the new contract.\"},\"setVestingRegistry(address)\":{\"notice\":\"sets vesting registry\"},\"setVestingStakes(uint256[],uint96[])\":{\"notice\":\"Sets the users' vesting stakes for a giving lock dates and writes checkpoints.\"},\"setWeightScaling(uint96)\":{\"notice\":\"Allow the owner to set weight scaling. We need it for unstaking with slashing.\"},\"stake(uint96,uint256,address,address)\":{\"notice\":\"Stake the given amount for the given duration of time.\"},\"stakeBySchedule(uint256,uint256,uint256,uint256,address,address)\":{\"notice\":\"Stake tokens according to the vesting schedule.\"},\"stakeWithApproval(address,uint96,uint256,address,address)\":{\"notice\":\"Stake the given amount for the given duration of time.\"},\"timestampToLockDate(uint256)\":{\"notice\":\"Unstaking is possible every 2 weeks only. This means, to calculate the key value for the staking checkpoints, we need to map the intended timestamp to the closest available date.\"},\"totalStakingCheckpoints(uint256,uint32)\":{\"notice\":\"A record of tokens to be unstaked at a given time in total. For total voting power computation. Voting weights get adjusted bi-weekly.\"},\"unlockAllTokens()\":{\"notice\":\"Allow the owner to unlock all tokens in case the staking contract is going to be replaced Note: Not reversible on purpose. once unlocked, everything is unlocked. The owner should not be able to just quickly unlock to withdraw his own tokens and lock again.\"},\"userStakingCheckpoints(address,uint256,uint32)\":{\"notice\":\"A record of tokens to be unstaked at a given time which per user address (address -> lockDate -> stake checkpoint)\"},\"vestingCheckpoints(uint256,uint32)\":{\"notice\":\"A record of tokens to be unstaked from vesting contract at a given time (lockDate -> vest checkpoint)\"},\"vestingRegistryLogic()\":{\"notice\":\"vesting registry contract PROXY address\"},\"vestingWhitelist(address)\":{\"notice\":\"List of vesting contracts, tokens for these contracts won't be slashed if unstaked by governance.\"},\"weightScaling()\":{\"notice\":\"used for weight scaling when unstaking with slashing.\"},\"weightedStakeByDate(address,uint256,uint256,uint256)\":{\"notice\":\"Compute the voting power for a specific date. Power = stake * weight TODO: WeightedStaking::weightedStakeByDate should probably better be internal instead of a public function.\"},\"withdraw(uint96,uint256,address)\":{\"notice\":\"Withdraw the given amount of tokens if they are unlocked.\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/mockup/modules/IStakingModuleBlockMockup.sol\":\"IStakingModuleBlockMockup\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@ethereum-waffle/=node_modules/@ethereum-waffle/\",\":ds-test/=foundry/lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=foundry/lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":truffle/=node_modules/truffle/\"]},\"sources\":{\"contracts/mockup/modules/IStakingModuleBlockMockup.sol\":{\"keccak256\":\"0xd02249e800870172786820d4806a134a425deec4b6bf57ada000174c4e73f493\",\"urls\":[\"bzz-raw://45ca84c0e415fcbd0e5ea006ff527a7b98f4bedc171306443d9204e416b40fef\",\"dweb:/ipfs/QmNbjqTujCiWJwoXquF1FZWup9pyiiHe9tmAMsgP1P2G1H\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.5.17+commit.d19bba13"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_DURATION",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "_priorWeightedStake",
              "type": "uint96"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "MOCK_priorWeightedStake"
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "_priorWeightedStake",
              "type": "uint96"
            },
            {
              "internalType": "uint256",
              "name": "_block",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "MOCK_priorWeightedStakeAtBlock"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SOVToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_admin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addAdmin"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "vesting",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addContractCodeHash"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_pauser",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addPauser"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "isAdmin",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "admins",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allUnlocked",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "balance",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "vesting",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "startFrom",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelTeamVesting"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "computeWeightByDate",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "weight",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "lockDate",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delagatee",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "index",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegateStakingCheckpoints",
          "outputs": [
            {
              "internalType": "struct IStakingModuleBlockMockup.Checkpoint",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "fromBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "uint96",
                  "name": "stake",
                  "type": "uint96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "until",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegates",
          "outputs": [
            {
              "internalType": "address",
              "name": "_delegate",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "previousLock",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "until",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "extendStakingDuration"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeSharing",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_freeze",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "freezeUnfreeze"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frozen",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "lockedTS",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentStakedUntil",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentVotes",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPriorStakeByDateForDelegatee",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPriorTotalStakesForDate",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "blockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPriorTotalVotingPower",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPriorUserStakeByDate",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPriorVestingStakeByDate",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPriorVestingWeightedStake",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "votes",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPriorVotes",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPriorWeightedStake",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "priorWeightedStake",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_block",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPriorWeightedStakeAtBlock",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakes",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "dates",
              "type": "uint256[]"
            },
            {
              "internalType": "uint96[]",
              "name": "stakes",
              "type": "uint96[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getStorageDefaultWeightScaling",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getStorageDelegationTypehash",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getStorageDomainTypehash",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getStorageMaxDurationToStakeTokens",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getStorageMaxVotingWeight",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getStorageName",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getStorageRangeForWeightScaling",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "minWeightScaling",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxWeightScaling",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getStorageWeightFactor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "amount",
              "type": "uint96"
            },
            {
              "internalType": "uint256",
              "name": "until",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getWithdrawAmounts",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            },
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "amount",
              "type": "uint96"
            },
            {
              "internalType": "uint256",
              "name": "until",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "governanceWithdraw"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isOwner",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "stakerAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isVestingContract",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "kickoffTS",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "migrateToNewStakingContract"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "newStakingContract",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "numDelegateStakingCheckpoints",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "checkpointsQty",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "numTotalStakingCheckpoints",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "checkpointsQty",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "numUserStakingCheckpoints",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "checkpointsQty",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "numVestingCheckpoints",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "checkpointsQty",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_pause",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pauseUnpause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "isPauser",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pausers",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_block",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "priorWeightedStakeAtBlock",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "receiveApproval"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_admin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeAdmin"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "vesting",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeContractCodeHash"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_pauser",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removePauser"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_blockMockUp",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setBlockMockUpAddr"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_feeSharing",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFeeSharing"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newStakingContract",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setNewStakingContract"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_vestingRegistryProxy",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setVestingRegistry"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "lockedDates",
              "type": "uint256[]"
            },
            {
              "internalType": "uint96[]",
              "name": "values",
              "type": "uint96[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setVestingStakes"
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "_weightScaling",
              "type": "uint96"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setWeightScaling"
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "amount",
              "type": "uint96"
            },
            {
              "internalType": "uint256",
              "name": "until",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "stakeFor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stake"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cliff",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "intervalLength",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "stakeFor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stakeBySchedule"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "amount",
              "type": "uint96"
            },
            {
              "internalType": "uint256",
              "name": "until",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "stakeFor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stakeWithApproval"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cliff",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "intervalLength",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "stakeFor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stakesBySchedule"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "timestampToLockDate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "index",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "totalStakingCheckpoints",
          "outputs": [
            {
              "internalType": "struct IStakingModuleBlockMockup.Checkpoint",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "fromBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "uint96",
                  "name": "stake",
                  "type": "uint96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unlockAllTokens"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "index",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userStakingCheckpoints",
          "outputs": [
            {
              "internalType": "struct IStakingModuleBlockMockup.Checkpoint",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "fromBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "uint96",
                  "name": "stake",
                  "type": "uint96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "index",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "vestingCheckpoints",
          "outputs": [
            {
              "internalType": "struct IStakingModuleBlockMockup.Checkpoint",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "fromBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "uint96",
                  "name": "stake",
                  "type": "uint96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "vestingLogicCodeHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "vestingCodeHashes",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vestingRegistryLogic",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "isWhitelisted",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "vestingWhitelist",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "weightScaling",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "weightedStakeByDate",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "power",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "amount",
              "type": "uint96"
            },
            {
              "internalType": "uint256",
              "name": "until",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        }
      ],
      "devdoc": {
        "methods": {
          "MAX_DURATION()": {
            "return": "uint96 MAX_DURATION for staking*"
          },
          "addAdmin(address)": {
            "params": {
              "_admin": "The addresses of the account to grant permissions."
            }
          },
          "addContractCodeHash(address)": {
            "details": "We need it to use isVestingContract() function instead of isContract()",
            "params": {
              "vesting": "The address of Vesting contract."
            }
          },
          "addPauser(address)": {
            "params": {
              "_pauser": "The address to grant pauser permissions."
            }
          },
          "admins(address)": {
            "details": "user => flag whether user has admin role.multisig should be an admin, admin can invoke only governanceWithdrawVesting function, \tthis function works only with Team Vesting contracts"
          },
          "balanceOf(address)": {
            "details": "Iterate checkpoints adding up stakes.",
            "params": {
              "account": "The address of the account to get the balance of."
            },
            "return": "The number of tokens held."
          },
          "cancelTeamVesting(address,address,uint256)": {
            "params": {
              "receiver": "The receiving address.",
              "startFrom": "The start value for the iterations.",
              "vesting": "The vesting address."
            }
          },
          "computeWeightByDate(uint256,uint256)": {
            "params": {
              "date": "The unlocking date.",
              "startDate": "We compute the weight for the tokens staked until 'date' on 'startDate'."
            },
            "return": "The weighted stake the account had as of the given block."
          },
          "delegate(address,uint256)": {
            "params": {
              "delegatee": "The address to delegate votes to.",
              "lockDate": "the date if the position to delegate."
            }
          },
          "delegateStakingCheckpoints(address,uint256,uint32)": {
            "details": "delegateStakingCheckpoints[delegatee][date][index] is a checkpoint."
          },
          "delegates(address,uint256)": {
            "params": {
              "staker": "- the delegating address",
              "until": "- delegated voting"
            },
            "return": "_delegate - voting power delegated to address"
          },
          "extendStakingDuration(uint256,uint256)": {
            "params": {
              "previousLock": "The old unlocking timestamp.",
              "until": "The new unlocking timestamp in seconds."
            }
          },
          "freezeUnfreeze(bool)": {
            "details": "When freezing, pause is always applied too. When unfreezing, the contract is left in paused stated.",
            "params": {
              "_freeze": "true when freezing, false when unfreezing"
            }
          },
          "frozen()": {
            "details": "Staking contract is frozen"
          },
          "getCurrentStakedUntil(uint256)": {
            "params": {
              "lockedTS": "The timestamp to get the staked tokens for."
            }
          },
          "getCurrentVotes(address)": {
            "details": "This is a wrapper to simplify arguments. The actual computation is performed on WeightedStaking parent contract.",
            "params": {
              "account": "The address to get votes balance."
            },
            "return": "The number of current votes for a user account."
          },
          "getPriorStakeByDateForDelegatee(address,uint256,uint256)": {
            "details": "Block number must be a finalized block or else this function will revert to prevent misinformation.",
            "params": {
              "account": "The address of the account to check.",
              "blockNumber": "The block number to get the vote balance at.",
              "date": "The staking date to compute the power for."
            },
            "return": "The number of votes the account had as of the given block."
          },
          "getPriorTotalStakesForDate(uint256,uint256)": {
            "details": "Block number must be a finalized block or else this function will revert to prevent misinformation. TODO: WeightedStaking::getPriorTotalStakesForDate should probably better be internal instead of a public function.",
            "params": {
              "blockNumber": "The block number to get the vote balance at.",
              "date": "The date to check the stakes for."
            },
            "return": "The number of votes the account had as of the given block."
          },
          "getPriorTotalVotingPower(uint32,uint256)": {
            "params": {
              "blockNumber": "The block number, needed for checkpointing.",
              "time": "The timestamp for which to calculate the total voting power."
            },
            "return": "The total voting power at the given time."
          },
          "getPriorUserStakeByDate(address,uint256,uint256)": {
            "details": "Block number must be a finalized block or else this function will revert to prevent misinformation.",
            "params": {
              "account": "The address of the account to check.",
              "blockNumber": "The block number to get the vote balance at.",
              "date": "The lock date."
            },
            "return": "The number of votes the account had as of the given block."
          },
          "getPriorVestingStakeByDate(uint256,uint256)": {
            "details": "Block number must be a finalized block or else this function will revert to prevent misinformation.",
            "params": {
              "blockNumber": "The block number to get the vote balance at.",
              "date": "The lock date."
            },
            "return": "The number of votes the account had as of the given block."
          },
          "getPriorVestingWeightedStake(uint256,uint256)": {
            "details": "Block number must be a finalized block or else this function will revert to prevent misinformation.     Used for fee sharing, not voting. TODO: WeightedStaking::getPriorVestingWeightedStake is using the variable name \"votes\" to add up token stake, and that could be misleading.",
            "params": {
              "blockNumber": "The block number to get the vote balance at.",
              "date": "The staking date to compute the power for."
            },
            "return": "The weighted stake the account had as of the given block."
          },
          "getPriorVotes(address,uint256,uint256)": {
            "details": "Block number must be a finalized block or else this function will revert to prevent misinformation.     Used for Voting, not for fee sharing.",
            "params": {
              "account": "The address of the account to check.",
              "blockNumber": "The block number to get the vote balance at.",
              "date": "The staking date to compute the power for."
            },
            "return": "The number of votes the delegatee had as of the given block."
          },
          "getPriorWeightedStake(address,uint256,uint256)": {
            "details": "Block number must be a finalized block or else this function will revert to prevent misinformation.     Used for fee sharing, not voting.",
            "params": {
              "account": "The address of the account to check.",
              "blockNumber": "The block number to get the vote balance at.",
              "date": "The date/timestamp of the unstaking time."
            },
            "return": "The weighted stake the account had as of the given block."
          },
          "getStakes(address)": {
            "params": {
              "account": "The address to get stakes."
            },
            "return": "The arrays of dates and stakes."
          },
          "getStorageDefaultWeightScaling()": {
            "return": "uint256(DEFAULT_WEIGHT_SCALING);"
          },
          "getStorageDelegationTypehash()": {
            "return": "uint256(DELEGATION_TYPEHASH);"
          },
          "getStorageDomainTypehash()": {
            "return": "uint256(DOMAIN_TYPEHASH);"
          },
          "getStorageMaxDurationToStakeTokens()": {
            "return": "MAX_DURATION to stake tokens"
          },
          "getStorageMaxVotingWeight()": {
            "return": "uint256(MAX_VOTING_WEIGHT);"
          },
          "getStorageName()": {
            "return": "name;"
          },
          "getStorageWeightFactor()": {
            "details": "MAX_VOTING_WEIGHT * WEIGHT_FACTOR needs to be < 792, because there are 100,000,000 SOV with 18 decimals",
            "return": "uint256(WEIGHT_FACTOR);"
          },
          "getWithdrawAmounts(uint96,uint256)": {
            "params": {
              "amount": "The number of tokens to withdraw.",
              "until": "The date until which the tokens were staked."
            }
          },
          "governanceWithdraw(uint96,uint256,address)": {
            "details": "Can be invoked only by whitelisted contract passed to governanceWithdrawVesting**WARNING** This function should not be no longer used by Sovryn Protocol. Sovryn protocol will use the cancelTeamVesting function for the withdrawal moving forward.",
            "params": {
              "amount": "The number of tokens to withdraw.",
              "receiver": "The receiver of the tokens. If not specified, send to the msg.sender",
              "until": "The date until which the tokens were staked."
            }
          },
          "isOwner()": {
            "details": "Returns true if the caller is the current owner."
          },
          "isVestingContract(address)": {
            "params": {
              "stakerAddress": "the address to check"
            }
          },
          "migrateToNewStakingContract()": {
            "details": "Staking contract needs to be set before by the owner. Currently not implemented, just needed for the interface.     In case it's needed at some point in the future,     the implementation needs to be changed first."
          },
          "nonces(address)": {
            "details": "nonces[user] is a number."
          },
          "numDelegateStakingCheckpoints(address,uint256)": {
            "details": "numDelegateStakingCheckpoints[delegatee][date] is a number."
          },
          "numTotalStakingCheckpoints(uint256)": {
            "details": "numTotalStakingCheckpoints[date] is a number."
          },
          "numUserStakingCheckpoints(address,uint256)": {
            "details": "numUserStakingCheckpoints[user][date] is a number"
          },
          "numVestingCheckpoints(uint256)": {
            "details": "numVestingCheckpoints[date] is a number."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pauseUnpause(bool)": {
            "params": {
              "_pause": "true when pausing, false when unpausing"
            }
          },
          "paused()": {
            "details": "Staking contract is paused"
          },
          "pausers(address)": {
            "details": "user => flag whether user has pauser role."
          },
          "receiveApproval(address,uint256,address,bytes)": {
            "params": {
              "_data": "The data will be used for low level call."
            }
          },
          "removeAdmin(address)": {
            "params": {
              "_admin": "The addresses of the account to revoke permissions."
            }
          },
          "removeContractCodeHash(address)": {
            "details": "We need it to use isVestingContract() function instead of isContract()",
            "params": {
              "vesting": "The address of Vesting contract."
            }
          },
          "removePauser(address)": {
            "params": {
              "_pauser": "The address to grant pauser permissions."
            }
          },
          "setBlockMockUpAddr(address)": {
            "params": {
              "_blockMockUp": "the address of BlockMockUp"
            }
          },
          "setFeeSharing(address)": {
            "params": {
              "_feeSharing": "The address of FeeSharingCollectorProxy contract."
            }
          },
          "setNewStakingContract(address)": {
            "details": "Doesn't have any influence as long as migrateToNewStakingContract is not implemented.",
            "params": {
              "_newStakingContract": "The address of the new staking contract."
            }
          },
          "setVestingRegistry(address)": {
            "details": "_vestingRegistryProxy can be set to 0 as this function can be reused by various other functionalities without the necessity of linking it with Vesting Registry",
            "params": {
              "_vestingRegistryProxy": "the address of vesting registry proxy contract"
            }
          },
          "setVestingStakes(uint256[],uint96[])": {
            "params": {
              "lockedDates": "The arrays of lock dates.",
              "values": "The array of values to add to the staked balance."
            }
          },
          "setWeightScaling(uint96)": {
            "params": {
              "_weightScaling": "The weight scaling."
            }
          },
          "stake(uint96,uint256,address,address)": {
            "params": {
              "amount": "The number of tokens to stake.",
              "delegatee": "The address of the delegatee or 0x0 if there is none.",
              "stakeFor": "The address to stake the tokens for or 0x0 if staking for oneself.",
              "until": "Timestamp indicating the date until which to stake."
            }
          },
          "stakeBySchedule(uint256,uint256,uint256,uint256,address,address)": {
            "params": {
              "amount": "The amount of tokens to stake.",
              "cliff": "The time interval to the first withdraw.",
              "delegatee": "The address of the delegatee or 0x0 if there is none.",
              "duration": "The staking duration.",
              "intervalLength": "The length of each staking interval when cliff passed.",
              "stakeFor": "The address to stake the tokens for or 0x0 if staking for oneself."
            }
          },
          "stakeWithApproval(address,uint96,uint256,address,address)": {
            "details": "This function will be invoked from receiveApprovalSOV.approveAndCall -> this.receiveApproval -> this.stakeWithApproval",
            "params": {
              "amount": "The number of tokens to stake.",
              "delegatee": "The address of the delegatee or 0x0 if there is none.",
              "sender": "The sender of SOV.approveAndCall",
              "stakeFor": "The address to stake the tokens for or 0x0 if staking for oneself.",
              "until": "Timestamp indicating the date until which to stake."
            }
          },
          "stakesBySchedule(uint256,uint256,uint256,uint256,address,address)": {
            "details": "DO NOT USE this misspelled function. Use stakeBySchedule function instead. This function cannot be deprecated while we have non-upgradeable vesting contracts."
          },
          "timestampToLockDate(uint256)": {
            "params": {
              "timestamp": "The unlocking timestamp."
            },
            "return": "The actual unlocking date (might be up to 2 weeks shorter than intended)."
          },
          "totalStakingCheckpoints(uint256,uint32)": {
            "details": "totalStakingCheckpoints[date][index] is a checkpoint"
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "unlockAllTokens()": {
            "details": "Last resort."
          },
          "userStakingCheckpoints(address,uint256,uint32)": {
            "details": "userStakingCheckpoints[user][date][index] is a checkpoint."
          },
          "vestingCheckpoints(uint256,uint32)": {
            "details": "vestingCheckpoints[date][index] is a checkpoint."
          },
          "vestingCodeHashes(bytes32)": {
            "details": "vesting contract code hash => flag whether it's registered code hash"
          },
          "vestingWhitelist(address)": {
            "details": "vestingWhitelist[contract] is true/false."
          },
          "weightScaling()": {
            "return": "uint96 DEFAULT_WEIGHT_SCALING"
          },
          "weightedStakeByDate(address,uint256,uint256,uint256)": {
            "params": {
              "account": "The user address.",
              "blockNumber": "The block number, needed for checkpointing.",
              "date": "The staking date to compute the power for.",
              "startDate": "The date for which we need to know the power of the stake."
            },
            "return": "The stacking power."
          },
          "withdraw(uint96,uint256,address)": {
            "params": {
              "amount": "The number of tokens to withdraw.",
              "receiver": "The receiver of the tokens. If not specified, send to the msg.sender",
              "until": "The date until which the tokens were staked."
            }
          }
        }
      },
      "userdoc": {
        "methods": {
          "MAX_DURATION()": {
            "notice": "Returns public constant MAX_DURATION preserved for backwards compatibility Use getStorageMaxDurationToStakeTokens()"
          },
          "SOVToken()": {
            "notice": "The token to be staked"
          },
          "addAdmin(address)": {
            "notice": "Add account to Admins ACL."
          },
          "addContractCodeHash(address)": {
            "notice": "Add vesting contract's code hash to a map of code hashes."
          },
          "addPauser(address)": {
            "notice": "Add account to pausers ACL."
          },
          "allUnlocked()": {
            "notice": "If this flag is set to true, all tokens are unlocked immediately see function unlockAllTokens() for details"
          },
          "balanceOf(address)": {
            "notice": "Get the number of staked tokens held by the user account."
          },
          "cancelTeamVesting(address,address,uint256)": {
            "notice": "Governance withdraw vesting directly through staking contract. This direct withdraw vesting solves the out of gas issue when there are too many iterations when withdrawing. This function only allows cancelling vesting contract of the TeamVesting type."
          },
          "computeWeightByDate(uint256,uint256)": {
            "notice": "Compute the weight for a specific date."
          },
          "delegate(address,uint256)": {
            "notice": "Delegate votes from `msg.sender` which are locked until lockDate to `delegatee`."
          },
          "delegateStakingCheckpoints(address,uint256,uint32)": {
            "notice": "A record of tokens to be unstaked at a given time which were delegated to a certain address. For delegatee voting power computation. Voting weights get adjusted bi-weekly."
          },
          "delegates(address,uint256)": {
            "notice": "Stakers delegated voting power"
          },
          "extendStakingDuration(uint256,uint256)": {
            "notice": "Extend the staking duration until the specified date."
          },
          "feeSharing()": {
            "notice": "SLASHING ///the address of FeeSharingCollectorProxy contract, we need it for unstaking with slashing."
          },
          "freezeUnfreeze(bool)": {
            "notice": "Freeze contract - disable all functions"
          },
          "getCurrentStakedUntil(uint256)": {
            "notice": "Get the current number of tokens staked for a day."
          },
          "getCurrentVotes(address)": {
            "notice": "Get the current votes balance for a user account."
          },
          "getPriorStakeByDateForDelegatee(address,uint256,uint256)": {
            "notice": "Determine the prior number of stake for an account as of a block number."
          },
          "getPriorTotalStakesForDate(uint256,uint256)": {
            "notice": "Determine the prior number of stake for an unlocking date as of a block number."
          },
          "getPriorTotalVotingPower(uint32,uint256)": {
            "notice": "Compute the total voting power at a given time."
          },
          "getPriorUserStakeByDate(address,uint256,uint256)": {
            "notice": "Determine the prior number of stake for an account until a certain lock date as of a block number."
          },
          "getPriorVestingStakeByDate(uint256,uint256)": {
            "notice": "Determine the prior number of vested stake for an account until a certain lock date as of a block number."
          },
          "getPriorVestingWeightedStake(uint256,uint256)": {
            "notice": "Determine the prior weighted vested amount for an account as of a block number. Iterate through checkpoints adding up voting power."
          },
          "getPriorVotes(address,uint256,uint256)": {
            "notice": "Determine the prior number of votes for a delegatee as of a block number. Iterate through checkpoints adding up voting power."
          },
          "getPriorWeightedStake(address,uint256,uint256)": {
            "notice": "Determine the prior weighted stake for an account as of a block number. Iterate through checkpoints adding up voting power."
          },
          "getStakes(address)": {
            "notice": "Get list of stakes for a user account."
          },
          "getStorageDelegationTypehash()": {
            "notice": "The EIP-712 typehash for the delegation struct used by the contract."
          },
          "getStorageDomainTypehash()": {
            "notice": "The EIP-712 typehash for the contract's domain."
          },
          "getStorageMaxDurationToStakeTokens()": {
            "notice": "The maximum duration to stake tokens"
          },
          "getStorageMaxVotingWeight()": {
            "notice": "The maximum possible voting weight before adding +1 (actually 10, but need 9 for computation)."
          },
          "getStorageRangeForWeightScaling()": {
            "notice": "return (uint256(MIN_WEIGHT_SCALING), uint256(MAX_WEIGHT_SCALING))"
          },
          "getStorageWeightFactor()": {
            "notice": "weight is multiplied with this factor (for allowing decimals, like 1.2x)."
          },
          "getWithdrawAmounts(uint96,uint256)": {
            "notice": "Get available and punished amount for withdrawing."
          },
          "governanceWithdraw(uint96,uint256,address)": {
            "notice": "Withdraw the given amount of tokens."
          },
          "isVestingContract(address)": {
            "notice": "Return flag whether the given address is a registered vesting contract."
          },
          "kickoffTS()": {
            "notice": "AUTOGENERATED FUNCTIONS FROM THE STAKING STORAGE PUBLIC VARIABLES ///The timestamp of contract creation. Base for the staking period calculation."
          },
          "migrateToNewStakingContract()": {
            "notice": "Allow a staker to migrate his positions to the new staking contract."
          },
          "newStakingContract()": {
            "notice": "Used for stake migrations to a new staking contract with a different storage structure"
          },
          "nonces(address)": {
            "notice": "A record of states for signing / validating signatures"
          },
          "numDelegateStakingCheckpoints(address,uint256)": {
            "notice": "The number of total staking checkpoints for each date per delegate."
          },
          "numTotalStakingCheckpoints(uint256)": {
            "notice": "The number of total staking checkpoints for each date."
          },
          "numUserStakingCheckpoints(address,uint256)": {
            "notice": "The number of total staking checkpoints for each date per user."
          },
          "numVestingCheckpoints(uint256)": {
            "notice": "The number of total vesting checkpoints for each date."
          },
          "pauseUnpause(bool)": {
            "notice": "Pause/unpause contract"
          },
          "receiveApproval(address,uint256,address,bytes)": {
            "notice": "Receives approval from SOV token."
          },
          "removeAdmin(address)": {
            "notice": "Remove account from Admins ACL."
          },
          "removeContractCodeHash(address)": {
            "notice": "Remove vesting contract's code hash to a map of code hashes."
          },
          "removePauser(address)": {
            "notice": "Remove account from pausers ACL."
          },
          "setBlockMockUpAddr(address)": {
            "notice": "gets block number from BlockMockUp"
          },
          "setFeeSharing(address)": {
            "notice": "Allows the owner to set a fee sharing proxy contract. We need it for unstaking with slashing."
          },
          "setNewStakingContract(address)": {
            "notice": "Allow the owner to set a new staking contract. As a consequence it allows the stakers to migrate their positions to the new contract."
          },
          "setVestingRegistry(address)": {
            "notice": "sets vesting registry"
          },
          "setVestingStakes(uint256[],uint96[])": {
            "notice": "Sets the users' vesting stakes for a giving lock dates and writes checkpoints."
          },
          "setWeightScaling(uint96)": {
            "notice": "Allow the owner to set weight scaling. We need it for unstaking with slashing."
          },
          "stake(uint96,uint256,address,address)": {
            "notice": "Stake the given amount for the given duration of time."
          },
          "stakeBySchedule(uint256,uint256,uint256,uint256,address,address)": {
            "notice": "Stake tokens according to the vesting schedule."
          },
          "stakeWithApproval(address,uint96,uint256,address,address)": {
            "notice": "Stake the given amount for the given duration of time."
          },
          "timestampToLockDate(uint256)": {
            "notice": "Unstaking is possible every 2 weeks only. This means, to calculate the key value for the staking checkpoints, we need to map the intended timestamp to the closest available date."
          },
          "totalStakingCheckpoints(uint256,uint32)": {
            "notice": "A record of tokens to be unstaked at a given time in total. For total voting power computation. Voting weights get adjusted bi-weekly."
          },
          "unlockAllTokens()": {
            "notice": "Allow the owner to unlock all tokens in case the staking contract is going to be replaced Note: Not reversible on purpose. once unlocked, everything is unlocked. The owner should not be able to just quickly unlock to withdraw his own tokens and lock again."
          },
          "userStakingCheckpoints(address,uint256,uint32)": {
            "notice": "A record of tokens to be unstaked at a given time which per user address (address -> lockDate -> stake checkpoint)"
          },
          "vestingCheckpoints(uint256,uint32)": {
            "notice": "A record of tokens to be unstaked from vesting contract at a given time (lockDate -> vest checkpoint)"
          },
          "vestingRegistryLogic()": {
            "notice": "vesting registry contract PROXY address"
          },
          "vestingWhitelist(address)": {
            "notice": "List of vesting contracts, tokens for these contracts won't be slashed if unstaked by governance."
          },
          "weightScaling()": {
            "notice": "used for weight scaling when unstaking with slashing."
          },
          "weightedStakeByDate(address,uint256,uint256,uint256)": {
            "notice": "Compute the voting power for a specific date. Power = stake * weight TODO: WeightedStaking::weightedStakeByDate should probably better be internal instead of a public function."
          },
          "withdraw(uint96,uint256,address)": {
            "notice": "Withdraw the given amount of tokens if they are unlocked."
          }
        }
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@ethereum-waffle/=node_modules/@ethereum-waffle/",
        ":ds-test/=foundry/lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=foundry/lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":truffle/=node_modules/truffle/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "compilationTarget": {
        "contracts/mockup/modules/IStakingModuleBlockMockup.sol": "IStakingModuleBlockMockup"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/mockup/modules/IStakingModuleBlockMockup.sol": {
        "keccak256": "0xd02249e800870172786820d4806a134a425deec4b6bf57ada000174c4e73f493",
        "urls": [
          "bzz-raw://45ca84c0e415fcbd0e5ea006ff527a7b98f4bedc171306443d9204e416b40fef",
          "dweb:/ipfs/QmNbjqTujCiWJwoXquF1FZWup9pyiiHe9tmAMsgP1P2G1H"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/mockup/modules/IStakingModuleBlockMockup.sol",
    "id": 40639,
    "exportedSymbols": {
      "IStakingModuleBlockMockup": [
        40638
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:26842:152",
    "nodes": [
      {
        "id": 40037,
        "nodeType": "PragmaDirective",
        "src": "0:24:152",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".17"
        ]
      },
      {
        "id": 40038,
        "nodeType": "PragmaDirective",
        "src": "26:33:152",
        "nodes": [],
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ]
      },
      {
        "id": 40638,
        "nodeType": "ContractDefinition",
        "src": "137:26704:152",
        "nodes": [
          {
            "id": 40043,
            "nodeType": "FunctionDefinition",
            "src": "393:43:152",
            "nodes": [],
            "documentation": "@notice Add account to Admins ACL.\n@param _admin The addresses of the account to grant permissions.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addAdmin",
            "parameters": {
              "id": 40041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40040,
                  "name": "_admin",
                  "nodeType": "VariableDeclaration",
                  "scope": 40043,
                  "src": "411:14:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40039,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "411:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "410:16:152"
            },
            "returnParameters": {
              "id": 40042,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "435:0:152"
            },
            "scope": 40638,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40048,
            "nodeType": "FunctionDefinition",
            "src": "580:46:152",
            "nodes": [],
            "documentation": "@notice Remove account from Admins ACL.\n@param _admin The addresses of the account to revoke permissions.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeAdmin",
            "parameters": {
              "id": 40046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40045,
                  "name": "_admin",
                  "nodeType": "VariableDeclaration",
                  "scope": 40048,
                  "src": "601:14:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40044,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "601:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "600:16:152"
            },
            "returnParameters": {
              "id": 40047,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "625:0:152"
            },
            "scope": 40638,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40053,
            "nodeType": "FunctionDefinition",
            "src": "756:45:152",
            "nodes": [],
            "documentation": "@notice Add account to pausers ACL.\n@param _pauser The address to grant pauser permissions.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addPauser",
            "parameters": {
              "id": 40051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40050,
                  "name": "_pauser",
                  "nodeType": "VariableDeclaration",
                  "scope": 40053,
                  "src": "775:15:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40049,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "775:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "774:17:152"
            },
            "returnParameters": {
              "id": 40052,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "800:0:152"
            },
            "scope": 40638,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40058,
            "nodeType": "FunctionDefinition",
            "src": "936:48:152",
            "nodes": [],
            "documentation": "@notice Remove account from pausers ACL.\n@param _pauser The address to grant pauser permissions.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removePauser",
            "parameters": {
              "id": 40056,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40055,
                  "name": "_pauser",
                  "nodeType": "VariableDeclaration",
                  "scope": 40058,
                  "src": "958:15:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40054,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "958:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "957:17:152"
            },
            "returnParameters": {
              "id": 40057,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "983:0:152"
            },
            "scope": 40638,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40063,
            "nodeType": "FunctionDefinition",
            "src": "1107:44:152",
            "nodes": [],
            "documentation": "@notice Pause/unpause contract\n@param _pause true when pausing, false when unpausing\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pauseUnpause",
            "parameters": {
              "id": 40061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40060,
                  "name": "_pause",
                  "nodeType": "VariableDeclaration",
                  "scope": 40063,
                  "src": "1129:11:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 40059,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1129:4:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1128:13:152"
            },
            "returnParameters": {
              "id": 40062,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1150:0:152"
            },
            "scope": 40638,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40068,
            "nodeType": "FunctionDefinition",
            "src": "1406:47:152",
            "nodes": [],
            "documentation": "@notice Freeze contract - disable all functions\n@param _freeze true when freezing, false when unfreezing\n@dev When freezing, pause is always applied too. When unfreezing, the contract is left in paused stated.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "freezeUnfreeze",
            "parameters": {
              "id": 40066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40065,
                  "name": "_freeze",
                  "nodeType": "VariableDeclaration",
                  "scope": 40068,
                  "src": "1430:12:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 40064,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1430:4:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1429:14:152"
            },
            "returnParameters": {
              "id": 40067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1452:0:152"
            },
            "scope": 40638,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40073,
            "nodeType": "FunctionDefinition",
            "src": "1669:53:152",
            "nodes": [],
            "documentation": "@notice Allows the owner to set a fee sharing proxy contract.\nWe need it for unstaking with slashing.\n@param _feeSharing The address of FeeSharingCollectorProxy contract.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeSharing",
            "parameters": {
              "id": 40071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40070,
                  "name": "_feeSharing",
                  "nodeType": "VariableDeclaration",
                  "scope": 40073,
                  "src": "1692:19:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40069,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1692:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1691:21:152"
            },
            "returnParameters": {
              "id": 40072,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1721:0:152"
            },
            "scope": 40638,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40078,
            "nodeType": "FunctionDefinition",
            "src": "1896:58:152",
            "nodes": [],
            "documentation": "@notice Allow the owner to set weight scaling.\nWe need it for unstaking with slashing.\n@param _weightScaling The weight scaling.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setWeightScaling",
            "parameters": {
              "id": 40076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40075,
                  "name": "_weightScaling",
                  "nodeType": "VariableDeclaration",
                  "scope": 40078,
                  "src": "1922:21:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 40074,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "1922:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1921:23:152"
            },
            "returnParameters": {
              "id": 40077,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1953:0:152"
            },
            "scope": 40638,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40083,
            "nodeType": "FunctionDefinition",
            "src": "2321:69:152",
            "nodes": [],
            "documentation": "@notice Allow the owner to set a new staking contract.\nAs a consequence it allows the stakers to migrate their positions\nto the new contract.\n@dev Doesn't have any influence as long as migrateToNewStakingContract\nis not implemented.\n@param _newStakingContract The address of the new staking contract.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setNewStakingContract",
            "parameters": {
              "id": 40081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40080,
                  "name": "_newStakingContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 40083,
                  "src": "2352:27:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40079,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2352:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2351:29:152"
            },
            "returnParameters": {
              "id": 40082,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2389:0:152"
            },
            "scope": 40638,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40086,
            "nodeType": "FunctionDefinition",
            "src": "2748:48:152",
            "nodes": [],
            "documentation": "@notice Allow a staker to migrate his positions to the new staking contract.\n@dev Staking contract needs to be set before by the owner.\nCurrently not implemented, just needed for the interface.\n     In case it's needed at some point in the future,\n     the implementation needs to be changed first.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "migrateToNewStakingContract",
            "parameters": {
              "id": 40084,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2784:2:152"
            },
            "returnParameters": {
              "id": 40085,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2795:0:152"
            },
            "scope": 40638,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40095,
            "nodeType": "FunctionDefinition",
            "src": "3214:123:152",
            "nodes": [],
            "documentation": "@notice Compute the total voting power at a given time.\n@param blockNumber The block number, needed for checkpointing.\n@param time The timestamp for which to calculate the total voting power.\n@return The total voting power at the given time.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPriorTotalVotingPower",
            "parameters": {
              "id": 40091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40088,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 40095,
                  "src": "3248:18:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 40087,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3248:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40090,
                  "name": "time",
                  "nodeType": "VariableDeclaration",
                  "scope": 40095,
                  "src": "3268:12:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40089,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3268:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3247:34:152"
            },
            "returnParameters": {
              "id": 40094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40093,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40095,
                  "src": "3329:6:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 40092,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "3329:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3328:8:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40102,
            "nodeType": "FunctionDefinition",
            "src": "3677:73:152",
            "nodes": [],
            "documentation": "@notice Get the current votes balance for a user account.\n@param account The address to get votes balance.\n@dev This is a wrapper to simplify arguments. The actual computation is\nperformed on WeightedStaking parent contract.\n@return The number of current votes for a user account.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentVotes",
            "parameters": {
              "id": 40098,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40097,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 40102,
                  "src": "3702:15:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40096,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3702:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3701:17:152"
            },
            "returnParameters": {
              "id": 40101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40100,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40102,
                  "src": "3742:6:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 40099,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "3742:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3741:8:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40113,
            "nodeType": "FunctionDefinition",
            "src": "4359:136:152",
            "nodes": [],
            "documentation": "@notice Determine the prior number of votes for a delegatee as of a block number.\nIterate through checkpoints adding up voting power.\n@dev Block number must be a finalized block or else this function will revert\nto prevent misinformation.\n     Used for Voting, not for fee sharing.\n@param account The address of the account to check.\n@param blockNumber The block number to get the vote balance at.\n@param date The staking date to compute the power for.\n@return The number of votes the delegatee had as of the given block.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPriorVotes",
            "parameters": {
              "id": 40109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40104,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 40113,
                  "src": "4391:15:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4391:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40106,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 40113,
                  "src": "4416:19:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40105,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4416:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40108,
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "scope": 40113,
                  "src": "4445:12:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4445:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4381:82:152"
            },
            "returnParameters": {
              "id": 40112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40111,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40113,
                  "src": "4487:6:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 40110,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "4487:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4486:8:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40124,
            "nodeType": "FunctionDefinition",
            "src": "4992:154:152",
            "nodes": [],
            "documentation": "@notice Determine the prior number of stake for an account as of a block number.\n@dev Block number must be a finalized block or else this function will\nrevert to prevent misinformation.\n@param account The address of the account to check.\n@param date The staking date to compute the power for.\n@param blockNumber The block number to get the vote balance at.\n@return The number of votes the account had as of the given block.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPriorStakeByDateForDelegatee",
            "parameters": {
              "id": 40120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40115,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 40124,
                  "src": "5042:15:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5042:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40117,
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "scope": 40124,
                  "src": "5067:12:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40116,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5067:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40119,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 40124,
                  "src": "5089:19:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40118,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5089:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5032:82:152"
            },
            "returnParameters": {
              "id": 40123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40122,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40124,
                  "src": "5138:6:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 40121,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "5138:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5137:8:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40133,
            "nodeType": "FunctionDefinition",
            "src": "5711:126:152",
            "nodes": [],
            "documentation": "@notice Determine the prior number of stake for an unlocking date as of a block number.\n@dev Block number must be a finalized block or else this function will\nrevert to prevent misinformation.\nTODO: WeightedStaking::getPriorTotalStakesForDate should probably better\nbe internal instead of a public function.\n@param date The date to check the stakes for.\n@param blockNumber The block number to get the vote balance at.\n@return The number of votes the account had as of the given block.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPriorTotalStakesForDate",
            "parameters": {
              "id": 40129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40126,
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "scope": 40133,
                  "src": "5747:12:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5747:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40128,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 40133,
                  "src": "5761:19:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40127,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5761:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5746:35:152"
            },
            "returnParameters": {
              "id": 40132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40131,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40133,
                  "src": "5829:6:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 40130,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "5829:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5828:8:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40140,
            "nodeType": "FunctionDefinition",
            "src": "6076:64:152",
            "nodes": [],
            "documentation": "@notice Delegate votes from `msg.sender` which are locked until lockDate to `delegatee`.\n@param delegatee The address to delegate votes to.\n@param lockDate the date if the position to delegate.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "delegate",
            "parameters": {
              "id": 40138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40135,
                  "name": "delegatee",
                  "nodeType": "VariableDeclaration",
                  "scope": 40140,
                  "src": "6094:17:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40134,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6094:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40137,
                  "name": "lockDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 40140,
                  "src": "6113:16:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6113:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6093:37:152"
            },
            "returnParameters": {
              "id": 40139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6139:0:152"
            },
            "scope": 40638,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40151,
            "nodeType": "FunctionDefinition",
            "src": "6608:129:152",
            "nodes": [],
            "documentation": "@notice Stake the given amount for the given duration of time.\n@param amount The number of tokens to stake.\n@param until Timestamp indicating the date until which to stake.\n@param stakeFor The address to stake the tokens for or 0x0 if staking for oneself.\n@param delegatee The address of the delegatee or 0x0 if there is none.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "parameters": {
              "id": 40149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40142,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 40151,
                  "src": "6632:13:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 40141,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "6632:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40144,
                  "name": "until",
                  "nodeType": "VariableDeclaration",
                  "scope": 40151,
                  "src": "6655:13:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6655:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40146,
                  "name": "stakeFor",
                  "nodeType": "VariableDeclaration",
                  "scope": 40151,
                  "src": "6678:16:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40145,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6678:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40148,
                  "name": "delegatee",
                  "nodeType": "VariableDeclaration",
                  "scope": 40151,
                  "src": "6704:17:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40147,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6704:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6622:105:152"
            },
            "returnParameters": {
              "id": 40150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6736:0:152"
            },
            "scope": 40638,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40164,
            "nodeType": "FunctionDefinition",
            "src": "7321:165:152",
            "nodes": [],
            "documentation": "@notice Stake the given amount for the given duration of time.\n@dev This function will be invoked from receiveApproval\n@dev SOV.approveAndCall -> this.receiveApproval -> this.stakeWithApproval\n@param sender The sender of SOV.approveAndCall\n@param amount The number of tokens to stake.\n@param until Timestamp indicating the date until which to stake.\n@param stakeFor The address to stake the tokens for or 0x0 if staking for oneself.\n@param delegatee The address of the delegatee or 0x0 if there is none.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stakeWithApproval",
            "parameters": {
              "id": 40162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40153,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 40164,
                  "src": "7357:14:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40152,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7357:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40155,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 40164,
                  "src": "7381:13:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 40154,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "7381:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40157,
                  "name": "until",
                  "nodeType": "VariableDeclaration",
                  "scope": 40164,
                  "src": "7404:13:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40156,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7404:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40159,
                  "name": "stakeFor",
                  "nodeType": "VariableDeclaration",
                  "scope": 40164,
                  "src": "7427:16:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7427:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40161,
                  "name": "delegatee",
                  "nodeType": "VariableDeclaration",
                  "scope": 40164,
                  "src": "7453:17:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40160,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7453:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7347:129:152"
            },
            "returnParameters": {
              "id": 40163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7485:0:152"
            },
            "scope": 40638,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40171,
            "nodeType": "FunctionDefinition",
            "src": "7695:77:152",
            "nodes": [],
            "documentation": "@notice Extend the staking duration until the specified date.\n@param previousLock The old unlocking timestamp.\n@param until The new unlocking timestamp in seconds.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "extendStakingDuration",
            "parameters": {
              "id": 40169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40166,
                  "name": "previousLock",
                  "nodeType": "VariableDeclaration",
                  "scope": 40171,
                  "src": "7726:20:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7726:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40168,
                  "name": "until",
                  "nodeType": "VariableDeclaration",
                  "scope": 40171,
                  "src": "7748:13:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40167,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7748:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7725:37:152"
            },
            "returnParameters": {
              "id": 40170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7771:0:152"
            },
            "scope": 40638,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40186,
            "nodeType": "FunctionDefinition",
            "src": "7974:199:152",
            "nodes": [],
            "documentation": "@dev DO NOT USE this misspelled function. Use stakeBySchedule function instead.\nThis function cannot be deprecated while we have non-upgradeable vesting contracts.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stakesBySchedule",
            "parameters": {
              "id": 40184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40173,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 40186,
                  "src": "8009:14:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40172,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8009:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40175,
                  "name": "cliff",
                  "nodeType": "VariableDeclaration",
                  "scope": 40186,
                  "src": "8033:13:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8033:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40177,
                  "name": "duration",
                  "nodeType": "VariableDeclaration",
                  "scope": 40186,
                  "src": "8056:16:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40176,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8056:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40179,
                  "name": "intervalLength",
                  "nodeType": "VariableDeclaration",
                  "scope": 40186,
                  "src": "8082:22:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8082:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40181,
                  "name": "stakeFor",
                  "nodeType": "VariableDeclaration",
                  "scope": 40186,
                  "src": "8114:16:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40180,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8114:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40183,
                  "name": "delegatee",
                  "nodeType": "VariableDeclaration",
                  "scope": 40186,
                  "src": "8140:17:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40182,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8140:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7999:164:152"
            },
            "returnParameters": {
              "id": 40185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8172:0:152"
            },
            "scope": 40638,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40201,
            "nodeType": "FunctionDefinition",
            "src": "8670:198:152",
            "nodes": [],
            "documentation": "@notice Stake tokens according to the vesting schedule.\n@param amount The amount of tokens to stake.\n@param cliff The time interval to the first withdraw.\n@param duration The staking duration.\n@param intervalLength The length of each staking interval when cliff passed.\n@param stakeFor The address to stake the tokens for or 0x0 if staking for oneself.\n@param delegatee The address of the delegatee or 0x0 if there is none.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stakeBySchedule",
            "parameters": {
              "id": 40199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40188,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 40201,
                  "src": "8704:14:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40187,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8704:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40190,
                  "name": "cliff",
                  "nodeType": "VariableDeclaration",
                  "scope": 40201,
                  "src": "8728:13:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40189,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8728:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40192,
                  "name": "duration",
                  "nodeType": "VariableDeclaration",
                  "scope": 40201,
                  "src": "8751:16:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40191,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8751:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40194,
                  "name": "intervalLength",
                  "nodeType": "VariableDeclaration",
                  "scope": 40201,
                  "src": "8777:22:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40193,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8777:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40196,
                  "name": "stakeFor",
                  "nodeType": "VariableDeclaration",
                  "scope": 40201,
                  "src": "8809:16:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40195,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8809:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40198,
                  "name": "delegatee",
                  "nodeType": "VariableDeclaration",
                  "scope": 40201,
                  "src": "8835:17:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8835:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8694:164:152"
            },
            "returnParameters": {
              "id": 40200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8867:0:152"
            },
            "scope": 40638,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40208,
            "nodeType": "FunctionDefinition",
            "src": "9129:75:152",
            "nodes": [],
            "documentation": "@notice Get the number of staked tokens held by the user account.\n@dev Iterate checkpoints adding up stakes.\n@param account The address of the account to get the balance of.\n@return The number of tokens held.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "parameters": {
              "id": 40204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40203,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 40208,
                  "src": "9148:15:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40202,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9148:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9147:17:152"
            },
            "returnParameters": {
              "id": 40207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40206,
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 40208,
                  "src": "9188:14:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 40205,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "9188:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9187:16:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40215,
            "nodeType": "FunctionDefinition",
            "src": "9361:80:152",
            "nodes": [],
            "documentation": "@notice Get the current number of tokens staked for a day.\n@param lockedTS The timestamp to get the staked tokens for.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentStakedUntil",
            "parameters": {
              "id": 40211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40210,
                  "name": "lockedTS",
                  "nodeType": "VariableDeclaration",
                  "scope": 40215,
                  "src": "9392:16:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40209,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9392:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9391:18:152"
            },
            "returnParameters": {
              "id": 40214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40213,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40215,
                  "src": "9433:6:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 40212,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "9433:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9432:8:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40226,
            "nodeType": "FunctionDefinition",
            "src": "9615:131:152",
            "nodes": [],
            "documentation": "@notice Get list of stakes for a user account.\n@param account The address to get stakes.\n@return The arrays of dates and stakes.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStakes",
            "parameters": {
              "id": 40218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40217,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 40226,
                  "src": "9634:15:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40216,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9634:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9633:17:152"
            },
            "returnParameters": {
              "id": 40225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40221,
                  "name": "dates",
                  "nodeType": "VariableDeclaration",
                  "scope": 40226,
                  "src": "9698:22:152",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 40219,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9698:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 40220,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "9698:9:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40224,
                  "name": "stakes",
                  "nodeType": "VariableDeclaration",
                  "scope": 40226,
                  "src": "9722:22:152",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint96_$dyn_memory_ptr",
                    "typeString": "uint96[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 40222,
                      "name": "uint96",
                      "nodeType": "ElementaryTypeName",
                      "src": "9722:6:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "id": 40223,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "9722:8:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint96_$dyn_storage_ptr",
                      "typeString": "uint96[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9697:48:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40233,
            "nodeType": "FunctionDefinition",
            "src": "10116:80:152",
            "nodes": [],
            "documentation": "@notice Unstaking is possible every 2 weeks only. This means, to\ncalculate the key value for the staking checkpoints, we need to\nmap the intended timestamp to the closest available date.\n@param timestamp The unlocking timestamp.\n@return The actual unlocking date (might be up to 2 weeks shorter than intended).\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "timestampToLockDate",
            "parameters": {
              "id": 40229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40228,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 40233,
                  "src": "10145:17:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40227,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10145:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10144:19:152"
            },
            "returnParameters": {
              "id": 40232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40231,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40233,
                  "src": "10187:7:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40230,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10187:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10186:9:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40238,
            "nodeType": "FunctionDefinition",
            "src": "10384:78:152",
            "nodes": [],
            "documentation": "@notice The maximum duration to stake tokens\n @return MAX_DURATION to stake tokens",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStorageMaxDurationToStakeTokens",
            "parameters": {
              "id": 40234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10427:2:152"
            },
            "returnParameters": {
              "id": 40237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40236,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40238,
                  "src": "10453:7:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40235,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10453:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10452:9:152"
            },
            "scope": 40638,
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40243,
            "nodeType": "FunctionDefinition",
            "src": "10623:69:152",
            "nodes": [],
            "documentation": "@notice The maximum possible voting weight before adding +1 (actually 10, but need 9 for computation).\n @return uint256(MAX_VOTING_WEIGHT);",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStorageMaxVotingWeight",
            "parameters": {
              "id": 40239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10657:2:152"
            },
            "returnParameters": {
              "id": 40242,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40241,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40243,
                  "src": "10683:7:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40240,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10683:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10682:9:152"
            },
            "scope": 40638,
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40248,
            "nodeType": "FunctionDefinition",
            "src": "10945:66:152",
            "nodes": [],
            "documentation": "@notice weight is multiplied with this factor (for allowing decimals, like 1.2x).\n @dev MAX_VOTING_WEIGHT * WEIGHT_FACTOR needs to be < 792, because there are 100,000,000 SOV with 18 decimals\n @return uint256(WEIGHT_FACTOR);",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStorageWeightFactor",
            "parameters": {
              "id": 40244,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10976:2:152"
            },
            "returnParameters": {
              "id": 40247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40246,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40248,
                  "src": "11002:7:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40245,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11002:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11001:9:152"
            },
            "scope": 40638,
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40253,
            "nodeType": "FunctionDefinition",
            "src": "11066:74:152",
            "nodes": [],
            "documentation": "@return uint256(DEFAULT_WEIGHT_SCALING);",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStorageDefaultWeightScaling",
            "parameters": {
              "id": 40249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11105:2:152"
            },
            "returnParameters": {
              "id": 40252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40251,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40253,
                  "src": "11131:7:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11131:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11130:9:152"
            },
            "scope": 40638,
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40260,
            "nodeType": "FunctionDefinition",
            "src": "11228:142:152",
            "nodes": [],
            "documentation": "@notice return (uint256(MIN_WEIGHT_SCALING), uint256(MAX_WEIGHT_SCALING))",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStorageRangeForWeightScaling",
            "parameters": {
              "id": 40254,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11268:2:152"
            },
            "returnParameters": {
              "id": 40259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40256,
                  "name": "minWeightScaling",
                  "nodeType": "VariableDeclaration",
                  "scope": 40260,
                  "src": "11318:24:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40255,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11318:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40258,
                  "name": "maxWeightScaling",
                  "nodeType": "VariableDeclaration",
                  "scope": 40260,
                  "src": "11344:24:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40257,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11344:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11317:52:152"
            },
            "scope": 40638,
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40265,
            "nodeType": "FunctionDefinition",
            "src": "11482:68:152",
            "nodes": [],
            "documentation": "@notice The EIP-712 typehash for the contract's domain.\n @return uint256(DOMAIN_TYPEHASH);",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStorageDomainTypehash",
            "parameters": {
              "id": 40261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11515:2:152"
            },
            "returnParameters": {
              "id": 40264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40263,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40265,
                  "src": "11541:7:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40262,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11541:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11540:9:152"
            },
            "scope": 40638,
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40270,
            "nodeType": "FunctionDefinition",
            "src": "11687:72:152",
            "nodes": [],
            "documentation": "@notice The EIP-712 typehash for the delegation struct used by the contract.\n @return uint256(DELEGATION_TYPEHASH);",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStorageDelegationTypehash",
            "parameters": {
              "id": 40266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11724:2:152"
            },
            "returnParameters": {
              "id": 40269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40268,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40270,
                  "src": "11750:7:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40267,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11750:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11749:9:152"
            },
            "scope": 40638,
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40275,
            "nodeType": "FunctionDefinition",
            "src": "11787:64:152",
            "nodes": [],
            "documentation": "@return name;",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStorageName",
            "parameters": {
              "id": 40271,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11810:2:152"
            },
            "returnParameters": {
              "id": 40274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40273,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40275,
                  "src": "11836:13:152",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 40272,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11836:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11835:15:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40280,
            "nodeType": "FunctionDefinition",
            "src": "12029:53:152",
            "nodes": [],
            "documentation": "AUTOGENERATED FUNCTIONS FROM THE STAKING STORAGE PUBLIC VARIABLES ///\n @notice The timestamp of contract creation. Base for the staking period calculation.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "kickoffTS",
            "parameters": {
              "id": 40276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12047:2:152"
            },
            "returnParameters": {
              "id": 40279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40278,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40280,
                  "src": "12073:7:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40277,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12073:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12072:9:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40285,
            "nodeType": "FunctionDefinition",
            "src": "12127:52:152",
            "nodes": [],
            "documentation": "@notice The token to be staked",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "SOVToken",
            "parameters": {
              "id": 40281,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12144:2:152"
            },
            "returnParameters": {
              "id": 40284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40283,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40285,
                  "src": "12170:7:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40282,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12170:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12169:9:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40294,
            "nodeType": "FunctionDefinition",
            "src": "12381:92:152",
            "nodes": [],
            "documentation": "@notice Stakers delegated voting power\n @param staker - the delegating address\n @param until - delegated voting\n @return _delegate - voting power delegated to address",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "delegates",
            "parameters": {
              "id": 40290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40287,
                  "name": "staker",
                  "nodeType": "VariableDeclaration",
                  "scope": 40294,
                  "src": "12400:14:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40286,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12400:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40289,
                  "name": "until",
                  "nodeType": "VariableDeclaration",
                  "scope": 40294,
                  "src": "12416:13:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40288,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12416:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12399:31:152"
            },
            "returnParameters": {
              "id": 40293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40292,
                  "name": "_delegate",
                  "nodeType": "VariableDeclaration",
                  "scope": 40294,
                  "src": "12454:17:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40291,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12454:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12453:19:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40299,
            "nodeType": "FunctionDefinition",
            "src": "12611:52:152",
            "nodes": [],
            "documentation": "@notice If this flag is set to true, all tokens are unlocked immediately\n see function unlockAllTokens() for details",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "allUnlocked",
            "parameters": {
              "id": 40295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12631:2:152"
            },
            "returnParameters": {
              "id": 40298,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40297,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40299,
                  "src": "12657:4:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 40296,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12657:4:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12656:6:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40304,
            "nodeType": "FunctionDefinition",
            "src": "12772:62:152",
            "nodes": [],
            "documentation": "@notice Used for stake migrations to a new staking contract with a different storage structure",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "newStakingContract",
            "parameters": {
              "id": 40300,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12799:2:152"
            },
            "returnParameters": {
              "id": 40303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40302,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40304,
                  "src": "12825:7:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40301,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12825:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12824:9:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40309,
            "nodeType": "StructDefinition",
            "src": "12860:73:152",
            "nodes": [],
            "canonicalName": "IStakingModuleBlockMockup.Checkpoint",
            "members": [
              {
                "constant": false,
                "id": 40306,
                "name": "fromBlock",
                "nodeType": "VariableDeclaration",
                "scope": 40309,
                "src": "12888:16:152",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 40305,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "12888:6:152",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40308,
                "name": "stake",
                "nodeType": "VariableDeclaration",
                "scope": 40309,
                "src": "12914:12:152",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint96",
                  "typeString": "uint96"
                },
                "typeName": {
                  "id": 40307,
                  "name": "uint96",
                  "nodeType": "ElementaryTypeName",
                  "src": "12914:6:152",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Checkpoint",
            "scope": 40638,
            "visibility": "public"
          },
          {
            "id": 40318,
            "nodeType": "FunctionDefinition",
            "src": "13164:127:152",
            "nodes": [],
            "documentation": "@notice A record of tokens to be unstaked at a given time in total.\n For total voting power computation. Voting weights get adjusted bi-weekly.\n @dev totalStakingCheckpoints[date][index] is a checkpoint",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalStakingCheckpoints",
            "parameters": {
              "id": 40314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40311,
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "scope": 40318,
                  "src": "13197:12:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40310,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13197:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40313,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 40318,
                  "src": "13211:12:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 40312,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13211:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13196:28:152"
            },
            "returnParameters": {
              "id": 40317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40316,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40318,
                  "src": "13272:17:152",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Checkpoint_$40309_memory_ptr",
                    "typeString": "struct IStakingModuleBlockMockup.Checkpoint"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 40315,
                    "name": "Checkpoint",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 40309,
                    "src": "13272:10:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Checkpoint_$40309_storage_ptr",
                      "typeString": "struct IStakingModuleBlockMockup.Checkpoint"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13271:19:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40325,
            "nodeType": "FunctionDefinition",
            "src": "13427:121:152",
            "nodes": [],
            "documentation": "@notice The number of total staking checkpoints for each date.\n @dev numTotalStakingCheckpoints[date] is a number.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "numTotalStakingCheckpoints",
            "parameters": {
              "id": 40321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40320,
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "scope": 40325,
                  "src": "13463:12:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40319,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13463:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13462:14:152"
            },
            "returnParameters": {
              "id": 40324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40323,
                  "name": "checkpointsQty",
                  "nodeType": "VariableDeclaration",
                  "scope": 40325,
                  "src": "13524:22:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 40322,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13524:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13523:24:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40336,
            "nodeType": "FunctionDefinition",
            "src": "13831:155:152",
            "nodes": [],
            "documentation": "@notice A record of tokens to be unstaked at a given time which were delegated to a certain address.\n For delegatee voting power computation. Voting weights get adjusted bi-weekly.\n @dev delegateStakingCheckpoints[delegatee][date][index] is a checkpoint.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "delegateStakingCheckpoints",
            "parameters": {
              "id": 40332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40327,
                  "name": "delagatee",
                  "nodeType": "VariableDeclaration",
                  "scope": 40336,
                  "src": "13876:17:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40326,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13876:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40329,
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "scope": 40336,
                  "src": "13903:12:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40328,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13903:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40331,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 40336,
                  "src": "13925:12:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 40330,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13925:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13866:77:152"
            },
            "returnParameters": {
              "id": 40335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40334,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40336,
                  "src": "13967:17:152",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Checkpoint_$40309_memory_ptr",
                    "typeString": "struct IStakingModuleBlockMockup.Checkpoint"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 40333,
                    "name": "Checkpoint",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 40309,
                    "src": "13967:10:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Checkpoint_$40309_storage_ptr",
                      "typeString": "struct IStakingModuleBlockMockup.Checkpoint"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13966:19:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40345,
            "nodeType": "FunctionDefinition",
            "src": "14149:143:152",
            "nodes": [],
            "documentation": "@notice The number of total staking checkpoints for each date per delegate.\n @dev numDelegateStakingCheckpoints[delegatee][date] is a number.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "numDelegateStakingCheckpoints",
            "parameters": {
              "id": 40341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40338,
                  "name": "delegatee",
                  "nodeType": "VariableDeclaration",
                  "scope": 40345,
                  "src": "14188:17:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40337,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14188:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40340,
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "scope": 40345,
                  "src": "14207:12:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40339,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14207:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14187:33:152"
            },
            "returnParameters": {
              "id": 40344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40343,
                  "name": "checkpointsQty",
                  "nodeType": "VariableDeclaration",
                  "scope": 40345,
                  "src": "14268:22:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 40342,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14268:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14267:24:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40356,
            "nodeType": "FunctionDefinition",
            "src": "14501:146:152",
            "nodes": [],
            "documentation": "@notice A record of tokens to be unstaked at a given time which per user address (address -> lockDate -> stake checkpoint)\n @dev userStakingCheckpoints[user][date][index] is a checkpoint.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "userStakingCheckpoints",
            "parameters": {
              "id": 40352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40347,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 40356,
                  "src": "14542:12:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14542:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40349,
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "scope": 40356,
                  "src": "14564:12:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40348,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14564:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40351,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 40356,
                  "src": "14586:12:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 40350,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14586:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14532:72:152"
            },
            "returnParameters": {
              "id": 40355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40354,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40356,
                  "src": "14628:17:152",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Checkpoint_$40309_memory_ptr",
                    "typeString": "struct IStakingModuleBlockMockup.Checkpoint"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 40353,
                    "name": "Checkpoint",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 40309,
                    "src": "14628:10:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Checkpoint_$40309_storage_ptr",
                      "typeString": "struct IStakingModuleBlockMockup.Checkpoint"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14627:19:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40365,
            "nodeType": "FunctionDefinition",
            "src": "14796:133:152",
            "nodes": [],
            "documentation": "@notice The number of total staking checkpoints for each date per user.\n @dev numUserStakingCheckpoints[user][date] is a number",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "numUserStakingCheckpoints",
            "parameters": {
              "id": 40361,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40358,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 40365,
                  "src": "14831:12:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40357,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14831:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40360,
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "scope": 40365,
                  "src": "14845:12:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40359,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14845:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14830:28:152"
            },
            "returnParameters": {
              "id": 40364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40363,
                  "name": "checkpointsQty",
                  "nodeType": "VariableDeclaration",
                  "scope": 40365,
                  "src": "14906:21:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 40362,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14906:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14905:23:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40372,
            "nodeType": "FunctionDefinition",
            "src": "15045:68:152",
            "nodes": [],
            "documentation": "@notice A record of states for signing / validating signatures\n @dev nonces[user] is a number.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "nonces",
            "parameters": {
              "id": 40368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40367,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 40372,
                  "src": "15061:12:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40366,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15061:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15060:14:152"
            },
            "returnParameters": {
              "id": 40371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40370,
                  "name": "nonce",
                  "nodeType": "VariableDeclaration",
                  "scope": 40372,
                  "src": "15098:13:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40369,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15098:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15097:15:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40377,
            "nodeType": "FunctionDefinition",
            "src": "15247:54:152",
            "nodes": [],
            "documentation": "SLASHING ///\n @notice the address of FeeSharingCollectorProxy contract, we need it for unstaking with slashing.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "feeSharing",
            "parameters": {
              "id": 40373,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15266:2:152"
            },
            "returnParameters": {
              "id": 40376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40375,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40377,
                  "src": "15292:7:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40374,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15292:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15291:9:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40382,
            "nodeType": "FunctionDefinition",
            "src": "15423:56:152",
            "nodes": [],
            "documentation": "@notice used for weight scaling when unstaking with slashing.\n @return uint96 DEFAULT_WEIGHT_SCALING",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "weightScaling",
            "parameters": {
              "id": 40378,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15445:2:152"
            },
            "returnParameters": {
              "id": 40381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40380,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40382,
                  "src": "15471:6:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 40379,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "15471:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15470:8:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40389,
            "nodeType": "FunctionDefinition",
            "src": "15654:78:152",
            "nodes": [],
            "documentation": "@notice List of vesting contracts, tokens for these contracts won't be slashed if unstaked by governance.\n @dev vestingWhitelist[contract] is true/false.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "vestingWhitelist",
            "parameters": {
              "id": 40385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40384,
                  "name": "isWhitelisted",
                  "nodeType": "VariableDeclaration",
                  "scope": 40389,
                  "src": "15680:21:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40383,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15680:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15679:23:152"
            },
            "returnParameters": {
              "id": 40388,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40387,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40389,
                  "src": "15726:4:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 40386,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15726:4:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15725:6:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40396,
            "nodeType": "FunctionDefinition",
            "src": "15955:62:152",
            "nodes": [],
            "documentation": "@dev user => flag whether user has admin role.\n @dev multisig should be an admin, admin can invoke only governanceWithdrawVesting function,\n \tthis function works only with Team Vesting contracts",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "admins",
            "parameters": {
              "id": 40392,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40391,
                  "name": "isAdmin",
                  "nodeType": "VariableDeclaration",
                  "scope": 40396,
                  "src": "15971:15:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40390,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15971:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15970:17:152"
            },
            "returnParameters": {
              "id": 40395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40394,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40396,
                  "src": "16011:4:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 40393,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "16011:4:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16010:6:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40403,
            "nodeType": "FunctionDefinition",
            "src": "16105:86:152",
            "nodes": [],
            "documentation": "@dev vesting contract code hash => flag whether it's registered code hash",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "vestingCodeHashes",
            "parameters": {
              "id": 40399,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40398,
                  "name": "vestingLogicCodeHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 40403,
                  "src": "16132:28:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 40397,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16132:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16131:30:152"
            },
            "returnParameters": {
              "id": 40402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40401,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40403,
                  "src": "16185:4:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 40400,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "16185:4:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16184:6:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40412,
            "nodeType": "FunctionDefinition",
            "src": "16377:122:152",
            "nodes": [],
            "documentation": "@notice A record of tokens to be unstaked from vesting contract at a given time (lockDate -> vest checkpoint)\n @dev vestingCheckpoints[date][index] is a checkpoint.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "vestingCheckpoints",
            "parameters": {
              "id": 40408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40405,
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "scope": 40412,
                  "src": "16405:12:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40404,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16405:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40407,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 40412,
                  "src": "16419:12:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 40406,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16419:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16404:28:152"
            },
            "returnParameters": {
              "id": 40411,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40410,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40412,
                  "src": "16480:17:152",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Checkpoint_$40309_memory_ptr",
                    "typeString": "struct IStakingModuleBlockMockup.Checkpoint"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 40409,
                    "name": "Checkpoint",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 40309,
                    "src": "16480:10:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Checkpoint_$40309_storage_ptr",
                      "typeString": "struct IStakingModuleBlockMockup.Checkpoint"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16479:19:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40419,
            "nodeType": "FunctionDefinition",
            "src": "16630:91:152",
            "nodes": [],
            "documentation": "@notice The number of total vesting checkpoints for each date.\n @dev numVestingCheckpoints[date] is a number.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "numVestingCheckpoints",
            "parameters": {
              "id": 40415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40414,
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "scope": 40419,
                  "src": "16661:12:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40413,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16661:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16660:14:152"
            },
            "returnParameters": {
              "id": 40418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40417,
                  "name": "checkpointsQty",
                  "nodeType": "VariableDeclaration",
                  "scope": 40419,
                  "src": "16698:21:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 40416,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16698:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16697:23:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40424,
            "nodeType": "FunctionDefinition",
            "src": "16782:64:152",
            "nodes": [],
            "documentation": "@notice vesting registry contract PROXY address",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "vestingRegistryLogic",
            "parameters": {
              "id": 40420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16811:2:152"
            },
            "returnParameters": {
              "id": 40423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40422,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40424,
                  "src": "16837:7:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40421,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16837:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16836:9:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40431,
            "nodeType": "FunctionDefinition",
            "src": "16908:64:152",
            "nodes": [],
            "documentation": "@dev user => flag whether user has pauser role.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pausers",
            "parameters": {
              "id": 40427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40426,
                  "name": "isPauser",
                  "nodeType": "VariableDeclaration",
                  "scope": 40431,
                  "src": "16925:16:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40425,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16925:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16924:18:152"
            },
            "returnParameters": {
              "id": 40430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40429,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40431,
                  "src": "16966:4:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 40428,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "16966:4:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16965:6:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40436,
            "nodeType": "FunctionDefinition",
            "src": "17018:47:152",
            "nodes": [],
            "documentation": "@dev Staking contract is paused",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "paused",
            "parameters": {
              "id": 40432,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17033:2:152"
            },
            "returnParameters": {
              "id": 40435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40434,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40436,
                  "src": "17059:4:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 40433,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17059:4:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17058:6:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40441,
            "nodeType": "FunctionDefinition",
            "src": "17111:47:152",
            "nodes": [],
            "documentation": "@dev Staking contract is frozen",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "frozen",
            "parameters": {
              "id": 40437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17126:2:152"
            },
            "returnParameters": {
              "id": 40440,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40439,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40441,
                  "src": "17152:4:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 40438,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17152:4:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17151:6:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40448,
            "nodeType": "FunctionDefinition",
            "src": "17400:79:152",
            "nodes": [],
            "documentation": "@notice Return flag whether the given address is a registered vesting contract.\n@param stakerAddress the address to check",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isVestingContract",
            "parameters": {
              "id": 40444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40443,
                  "name": "stakerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 40448,
                  "src": "17427:21:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40442,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17427:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17426:23:152"
            },
            "returnParameters": {
              "id": 40447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40446,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40448,
                  "src": "17473:4:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 40445,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17473:4:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17472:6:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40453,
            "nodeType": "FunctionDefinition",
            "src": "17715:58:152",
            "nodes": [],
            "documentation": "@notice Remove vesting contract's code hash to a map of code hashes.\n@param vesting The address of Vesting contract.\n@dev We need it to use isVestingContract() function instead of isContract()",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeContractCodeHash",
            "parameters": {
              "id": 40451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40450,
                  "name": "vesting",
                  "nodeType": "VariableDeclaration",
                  "scope": 40453,
                  "src": "17747:15:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40449,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17747:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17746:17:152"
            },
            "returnParameters": {
              "id": 40452,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17772:0:152"
            },
            "scope": 40638,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40458,
            "nodeType": "FunctionDefinition",
            "src": "18006:55:152",
            "nodes": [],
            "documentation": "@notice Add vesting contract's code hash to a map of code hashes.\n@param vesting The address of Vesting contract.\n@dev We need it to use isVestingContract() function instead of isContract()",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addContractCodeHash",
            "parameters": {
              "id": 40456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40455,
                  "name": "vesting",
                  "nodeType": "VariableDeclaration",
                  "scope": 40458,
                  "src": "18035:15:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40454,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18035:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18034:17:152"
            },
            "returnParameters": {
              "id": 40457,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18060:0:152"
            },
            "scope": 40638,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40467,
            "nodeType": "FunctionDefinition",
            "src": "18511:126:152",
            "nodes": [],
            "documentation": "@notice Determine the prior number of vested stake for an account until a\ncertain lock date as of a block number.\n@dev Block number must be a finalized block or else this function\nwill revert to prevent misinformation.\n@param date The lock date.\n@param blockNumber The block number to get the vote balance at.\n@return The number of votes the account had as of the given block.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPriorVestingStakeByDate",
            "parameters": {
              "id": 40463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40460,
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "scope": 40467,
                  "src": "18547:12:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40459,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18547:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40462,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 40467,
                  "src": "18561:19:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40461,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18561:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18546:35:152"
            },
            "returnParameters": {
              "id": 40466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40465,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40467,
                  "src": "18629:6:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 40464,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "18629:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18628:8:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40476,
            "nodeType": "FunctionDefinition",
            "src": "19347:134:152",
            "nodes": [],
            "documentation": "@notice Determine the prior weighted vested amount for an account as of a block number.\nIterate through checkpoints adding up voting power.\n@dev Block number must be a finalized block or else this function will\nrevert to prevent misinformation.\n     Used for fee sharing, not voting.\nTODO: WeightedStaking::getPriorVestingWeightedStake is using the variable name \"votes\"\nto add up token stake, and that could be misleading.\n     * @param blockNumber The block number to get the vote balance at.\n@param date The staking date to compute the power for.\n@return The weighted stake the account had as of the given block.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPriorVestingWeightedStake",
            "parameters": {
              "id": 40472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40469,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 40476,
                  "src": "19385:19:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40468,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19385:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40471,
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "scope": 40476,
                  "src": "19406:12:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40470,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19406:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19384:35:152"
            },
            "returnParameters": {
              "id": 40475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40474,
                  "name": "votes",
                  "nodeType": "VariableDeclaration",
                  "scope": 40476,
                  "src": "19467:12:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 40473,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "19467:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19466:14:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40487,
            "nodeType": "FunctionDefinition",
            "src": "19983:146:152",
            "nodes": [],
            "documentation": "@notice Determine the prior number of stake for an account until a\ncertain lock date as of a block number.\n@dev Block number must be a finalized block or else this function\nwill revert to prevent misinformation.\n@param account The address of the account to check.\n@param date The lock date.\n@param blockNumber The block number to get the vote balance at.\n@return The number of votes the account had as of the given block.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPriorUserStakeByDate",
            "parameters": {
              "id": 40483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40478,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 40487,
                  "src": "20025:15:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40477,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20025:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40480,
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "scope": 40487,
                  "src": "20050:12:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40479,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20050:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40482,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 40487,
                  "src": "20072:19:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40481,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20072:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "20015:82:152"
            },
            "returnParameters": {
              "id": 40486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40485,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40487,
                  "src": "20121:6:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 40484,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "20121:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "20120:8:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40496,
            "nodeType": "FunctionDefinition",
            "src": "20368:93:152",
            "nodes": [],
            "documentation": "@notice Sets the users' vesting stakes for a giving lock dates and writes checkpoints.\n@param lockedDates The arrays of lock dates.\n@param values The array of values to add to the staked balance.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setVestingStakes",
            "parameters": {
              "id": 40494,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40490,
                  "name": "lockedDates",
                  "nodeType": "VariableDeclaration",
                  "scope": 40496,
                  "src": "20394:30:152",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 40488,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "20394:7:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 40489,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "20394:9:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40493,
                  "name": "values",
                  "nodeType": "VariableDeclaration",
                  "scope": 40496,
                  "src": "20426:24:152",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint96_$dyn_calldata_ptr",
                    "typeString": "uint96[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 40491,
                      "name": "uint96",
                      "nodeType": "ElementaryTypeName",
                      "src": "20426:6:152",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "id": 40492,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "20426:8:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint96_$dyn_storage_ptr",
                      "typeString": "uint96[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "20393:58:152"
            },
            "returnParameters": {
              "id": 40495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20460:0:152"
            },
            "scope": 40638,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40501,
            "nodeType": "FunctionDefinition",
            "src": "20782:68:152",
            "nodes": [],
            "documentation": "@notice sets vesting registry\n@param _vestingRegistryProxy the address of vesting registry proxy contract\n@dev _vestingRegistryProxy can be set to 0 as this function can be reused by\nvarious other functionalities without the necessity of linking it with Vesting Registry",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setVestingRegistry",
            "parameters": {
              "id": 40499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40498,
                  "name": "_vestingRegistryProxy",
                  "nodeType": "VariableDeclaration",
                  "scope": 40501,
                  "src": "20810:29:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40497,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20810:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "20809:31:152"
            },
            "returnParameters": {
              "id": 40500,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20849:0:152"
            },
            "scope": 40638,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40510,
            "nodeType": "FunctionDefinition",
            "src": "21244:105:152",
            "nodes": [],
            "documentation": "@notice Withdraw the given amount of tokens if they are unlocked.\n@param amount The number of tokens to withdraw.\n@param until The date until which the tokens were staked.\n@param receiver The receiver of the tokens. If not specified, send to the msg.sender\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "parameters": {
              "id": 40508,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40503,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 40510,
                  "src": "21271:13:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 40502,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "21271:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40505,
                  "name": "until",
                  "nodeType": "VariableDeclaration",
                  "scope": 40510,
                  "src": "21294:13:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40504,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21294:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40507,
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 40510,
                  "src": "21317:16:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40506,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21317:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "21261:78:152"
            },
            "returnParameters": {
              "id": 40509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21348:0:152"
            },
            "scope": 40638,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40519,
            "nodeType": "FunctionDefinition",
            "src": "21914:115:152",
            "nodes": [],
            "documentation": "@notice Withdraw the given amount of tokens.\n@param amount The number of tokens to withdraw.\n@param until The date until which the tokens were staked.\n@param receiver The receiver of the tokens. If not specified, send to the msg.sender\n@dev Can be invoked only by whitelisted contract passed to governanceWithdrawVesting\n@dev **WARNING** This function should not be no longer used by Sovryn Protocol.\nSovryn protocol will use the cancelTeamVesting function for the withdrawal moving forward.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "governanceWithdraw",
            "parameters": {
              "id": 40517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40512,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 40519,
                  "src": "21951:13:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 40511,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "21951:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40514,
                  "name": "until",
                  "nodeType": "VariableDeclaration",
                  "scope": 40519,
                  "src": "21974:13:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40513,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21974:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40516,
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 40519,
                  "src": "21997:16:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40515,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21997:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "21941:78:152"
            },
            "returnParameters": {
              "id": 40518,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22028:0:152"
            },
            "scope": 40638,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40528,
            "nodeType": "FunctionDefinition",
            "src": "22488:120:152",
            "nodes": [],
            "documentation": "@notice Governance withdraw vesting directly through staking contract.\nThis direct withdraw vesting solves the out of gas issue when there are too many iterations when withdrawing.\nThis function only allows cancelling vesting contract of the TeamVesting type.\n     * @param vesting The vesting address.\n@param receiver The receiving address.\n@param startFrom The start value for the iterations.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "cancelTeamVesting",
            "parameters": {
              "id": 40526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40521,
                  "name": "vesting",
                  "nodeType": "VariableDeclaration",
                  "scope": 40528,
                  "src": "22524:15:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40520,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22524:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40523,
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 40528,
                  "src": "22549:16:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40522,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22549:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40525,
                  "name": "startFrom",
                  "nodeType": "VariableDeclaration",
                  "scope": 40528,
                  "src": "22575:17:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40524,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22575:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22514:84:152"
            },
            "returnParameters": {
              "id": 40527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22607:0:152"
            },
            "scope": 40638,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40539,
            "nodeType": "FunctionDefinition",
            "src": "22818:121:152",
            "nodes": [],
            "documentation": "@notice Get available and punished amount for withdrawing.\n@param amount The number of tokens to withdraw.\n@param until The date until which the tokens were staked.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getWithdrawAmounts",
            "parameters": {
              "id": 40533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40530,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 40539,
                  "src": "22846:13:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 40529,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "22846:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40532,
                  "name": "until",
                  "nodeType": "VariableDeclaration",
                  "scope": 40539,
                  "src": "22861:13:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40531,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22861:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22845:30:152"
            },
            "returnParameters": {
              "id": 40538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40535,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40539,
                  "src": "22923:6:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 40534,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "22923:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40537,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40539,
                  "src": "22931:6:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 40536,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "22931:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22922:16:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40542,
            "nodeType": "FunctionDefinition",
            "src": "23288:36:152",
            "nodes": [],
            "documentation": "@notice Allow the owner to unlock all tokens in case the staking contract\nis going to be replaced\nNote: Not reversible on purpose. once unlocked, everything is unlocked.\nThe owner should not be able to just quickly unlock to withdraw his own\ntokens and lock again.\n@dev Last resort.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "unlockAllTokens",
            "parameters": {
              "id": 40540,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23312:2:152"
            },
            "returnParameters": {
              "id": 40541,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23323:0:152"
            },
            "scope": 40638,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40553,
            "nodeType": "FunctionDefinition",
            "src": "24015:163:152",
            "nodes": [],
            "documentation": "@notice Determine the prior weighted stake for an account as of a block number.\nIterate through checkpoints adding up voting power.\n@dev Block number must be a finalized block or else this function will\nrevert to prevent misinformation.\n     Used for fee sharing, not voting.\n     * @param account The address of the account to check.\n@param blockNumber The block number to get the vote balance at.\n@param date The date/timestamp of the unstaking time.\n@return The weighted stake the account had as of the given block.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPriorWeightedStake",
            "parameters": {
              "id": 40549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40544,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 40553,
                  "src": "24055:15:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40543,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24055:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40546,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 40553,
                  "src": "24080:19:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40545,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24080:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40548,
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "scope": 40553,
                  "src": "24109:12:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40547,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24109:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "24045:82:152"
            },
            "returnParameters": {
              "id": 40552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40551,
                  "name": "priorWeightedStake",
                  "nodeType": "VariableDeclaration",
                  "scope": 40553,
                  "src": "24151:25:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 40550,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "24151:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "24150:27:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40566,
            "nodeType": "FunctionDefinition",
            "src": "24705:175:152",
            "nodes": [],
            "documentation": "@notice Compute the voting power for a specific date.\nPower = stake * weight\nTODO: WeightedStaking::weightedStakeByDate should probably better\nbe internal instead of a public function.\n@param account The user address.\n@param date The staking date to compute the power for.\n@param startDate The date for which we need to know the power of the stake.\n@param blockNumber The block number, needed for checkpointing.\n@return The stacking power.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "weightedStakeByDate",
            "parameters": {
              "id": 40562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40555,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 40566,
                  "src": "24743:15:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40554,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24743:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40557,
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "scope": 40566,
                  "src": "24768:12:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40556,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24768:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40559,
                  "name": "startDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 40566,
                  "src": "24790:17:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40558,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24790:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40561,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 40566,
                  "src": "24817:19:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40560,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24817:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "24733:109:152"
            },
            "returnParameters": {
              "id": 40565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40564,
                  "name": "power",
                  "nodeType": "VariableDeclaration",
                  "scope": 40566,
                  "src": "24866:12:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 40563,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "24866:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "24865:14:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40575,
            "nodeType": "FunctionDefinition",
            "src": "25168:124:152",
            "nodes": [],
            "documentation": "@notice Compute the weight for a specific date.\n@param date The unlocking date.\n@param startDate We compute the weight for the tokens staked until 'date' on 'startDate'.\n@return The weighted stake the account had as of the given block.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "computeWeightByDate",
            "parameters": {
              "id": 40571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40568,
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "scope": 40575,
                  "src": "25197:12:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40567,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25197:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40570,
                  "name": "startDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 40575,
                  "src": "25211:17:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40569,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25211:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25196:33:152"
            },
            "returnParameters": {
              "id": 40574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40573,
                  "name": "weight",
                  "nodeType": "VariableDeclaration",
                  "scope": 40575,
                  "src": "25277:13:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 40572,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "25277:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25276:15:152"
            },
            "scope": 40638,
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40580,
            "nodeType": "FunctionDefinition",
            "src": "25507:56:152",
            "nodes": [],
            "documentation": "@notice Returns public constant MAX_DURATION\npreserved for backwards compatibility\nUse getStorageMaxDurationToStakeTokens()\n@return uint96 MAX_DURATION for staking*",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "MAX_DURATION",
            "parameters": {
              "id": 40576,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25528:2:152"
            },
            "returnParameters": {
              "id": 40579,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40578,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40580,
                  "src": "25554:7:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40577,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25554:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25553:9:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40585,
            "nodeType": "FunctionDefinition",
            "src": "25639:49:152",
            "nodes": [],
            "documentation": "@dev Returns the address of the current owner.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "owner",
            "parameters": {
              "id": 40581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25653:2:152"
            },
            "returnParameters": {
              "id": 40584,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40583,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40585,
                  "src": "25679:7:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40582,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25679:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25678:9:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40590,
            "nodeType": "FunctionDefinition",
            "src": "25771:48:152",
            "nodes": [],
            "documentation": "@dev Returns true if the caller is the current owner.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isOwner",
            "parameters": {
              "id": 40586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25787:2:152"
            },
            "returnParameters": {
              "id": 40589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40588,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40590,
                  "src": "25813:4:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 40587,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "25813:4:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25812:6:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40595,
            "nodeType": "FunctionDefinition",
            "src": "25968:54:152",
            "nodes": [],
            "documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnership",
            "parameters": {
              "id": 40593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40592,
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 40595,
                  "src": "25995:16:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40591,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25995:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25994:18:152"
            },
            "returnParameters": {
              "id": 40594,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26021:0:152"
            },
            "scope": 40638,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40600,
            "nodeType": "FunctionDefinition",
            "src": "26148:59:152",
            "nodes": [],
            "documentation": "@notice gets block number from BlockMockUp\n@param _blockMockUp the address of BlockMockUp",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setBlockMockUpAddr",
            "parameters": {
              "id": 40598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40597,
                  "name": "_blockMockUp",
                  "nodeType": "VariableDeclaration",
                  "scope": 40600,
                  "src": "26176:20:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40596,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "26176:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26175:22:152"
            },
            "returnParameters": {
              "id": 40599,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26206:0:152"
            },
            "scope": 40638,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40605,
            "nodeType": "FunctionDefinition",
            "src": "26213:70:152",
            "nodes": [],
            "documentation": null,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "MOCK_priorWeightedStake",
            "parameters": {
              "id": 40603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40602,
                  "name": "_priorWeightedStake",
                  "nodeType": "VariableDeclaration",
                  "scope": 40605,
                  "src": "26246:26:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 40601,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "26246:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26245:28:152"
            },
            "returnParameters": {
              "id": 40604,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26282:0:152"
            },
            "scope": 40638,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40612,
            "nodeType": "FunctionDefinition",
            "src": "26289:93:152",
            "nodes": [],
            "documentation": null,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "MOCK_priorWeightedStakeAtBlock",
            "parameters": {
              "id": 40610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40607,
                  "name": "_priorWeightedStake",
                  "nodeType": "VariableDeclaration",
                  "scope": 40612,
                  "src": "26329:26:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 40606,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "26329:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40609,
                  "name": "_block",
                  "nodeType": "VariableDeclaration",
                  "scope": 40612,
                  "src": "26357:14:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40608,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26357:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26328:44:152"
            },
            "returnParameters": {
              "id": 40611,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26381:0:152"
            },
            "scope": 40638,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40619,
            "nodeType": "FunctionDefinition",
            "src": "26388:86:152",
            "nodes": [],
            "documentation": null,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPriorWeightedStakeAtBlock",
            "parameters": {
              "id": 40615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40614,
                  "name": "_block",
                  "nodeType": "VariableDeclaration",
                  "scope": 40619,
                  "src": "26426:14:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40613,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26426:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26425:16:152"
            },
            "returnParameters": {
              "id": 40618,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40617,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40619,
                  "src": "26465:7:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40616,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26465:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26464:9:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40626,
            "nodeType": "FunctionDefinition",
            "src": "26480:82:152",
            "nodes": [],
            "documentation": null,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "priorWeightedStakeAtBlock",
            "parameters": {
              "id": 40622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40621,
                  "name": "_block",
                  "nodeType": "VariableDeclaration",
                  "scope": 40626,
                  "src": "26515:14:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40620,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26515:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26514:16:152"
            },
            "returnParameters": {
              "id": 40625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40624,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40626,
                  "src": "26554:6:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 40623,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "26554:6:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26553:8:152"
            },
            "scope": 40638,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 40637,
            "nodeType": "FunctionDefinition",
            "src": "26695:144:152",
            "nodes": [],
            "documentation": "@notice Receives approval from SOV token.\n@param _data The data will be used for low level call.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "receiveApproval",
            "parameters": {
              "id": 40635,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40628,
                  "name": "_sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 40637,
                  "src": "26729:15:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40627,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "26729:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40630,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 40637,
                  "src": "26754:15:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40629,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26754:7:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40632,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 40637,
                  "src": "26779:14:152",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40631,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "26779:7:152",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40634,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 40637,
                  "src": "26803:20:152",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 40633,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "26803:5:152",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26719:110:152"
            },
            "returnParameters": {
              "id": 40636,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26838:0:152"
            },
            "scope": 40638,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@title Interface for Staking modules governance/Staking/modules",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          40638
        ],
        "name": "IStakingModuleBlockMockup",
        "scope": 40639
      }
    ]
  },
  "id": 152
}