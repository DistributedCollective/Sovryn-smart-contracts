{
  "address": "0x6138a1c3c2a419075E50f2C8A8600366D4105f8d",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_safeAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_lockDrop",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_sovToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_depositor",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "lockDrop",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DepositSOVToLockdrop",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "lockDrop",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DepositToLockdrop",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "depositor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "MapDepositorToReceiver",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Pause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldDepositor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newDepositor",
          "type": "address"
        }
      ],
      "name": "SetDepositorAddress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldLockDrop",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newLockDrop",
          "type": "address"
        }
      ],
      "name": "SetLockDropAddress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Stop",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Unpause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "WithdrawBalanceFromSafe",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ETH_TOKEN_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "enum GnosisSafe.Operation",
          "name": "operation",
          "type": "uint8"
        }
      ],
      "name": "execTransactionFromSafe",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDepositorAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLockDropAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSafeAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSovTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStopBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isStopped",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "mapDepositorToReceiver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "sovAmount",
          "type": "uint256"
        }
      ],
      "name": "sendToLockDropContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newDepositor",
          "type": "address"
        }
      ],
      "name": "setDepositorAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newLockdrop",
          "type": "address"
        }
      ],
      "name": "setLockDropAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stop",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "withdrawAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x3d05387b947975b0b2fb26dbf2a8543fc5dea9a9d8659f748fc51508a090f4a8",
  "receipt": {
    "to": null,
    "from": "0xCF311E7375083b9513566a47B9f3e93F1FcdCfBF",
    "contractAddress": "0x6138a1c3c2a419075E50f2C8A8600366D4105f8d",
    "transactionIndex": 19,
    "gasUsed": "2352650",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x56c37436efe5799dc4213df72a605b57990f773ea3359acb2fb211652617d06e",
    "transactionHash": "0x3d05387b947975b0b2fb26dbf2a8543fc5dea9a9d8659f748fc51508a090f4a8",
    "logs": [],
    "blockNumber": 5577011,
    "cumulativeGasUsed": "4105874",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x064A379c959dB1Ed1318114E2363a6c8d103ADd3",
    "0x007b3aa69a846cb1f76b60b3088230a52d2a83ac",
    "0x3E610F32806e09C2Ba65b8c88A6E4f777c8Cb559",
    "0x86de732721fffcdf163629c64e3925b5bf7f371a"
  ],
  "numDeployments": 4,
  "solcInputHash": "b6ccc7dc4fb34511b9d8d031557b3d58",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_safeAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_lockDrop\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sovToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_depositor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lockDrop\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositSOVToLockdrop\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lockDrop\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositToLockdrop\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"MapDepositorToReceiver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldDepositor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newDepositor\",\"type\":\"address\"}],\"name\":\"SetDepositorAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldLockDrop\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newLockDrop\",\"type\":\"address\"}],\"name\":\"SetLockDropAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Stop\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"WithdrawBalanceFromSafe\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ETH_TOKEN_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum GnosisSafe.Operation\",\"name\":\"operation\",\"type\":\"uint8\"}],\"name\":\"execTransactionFromSafe\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDepositorAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLockDropAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSafeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSovTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStopBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isStopped\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"mapDepositorToReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"sovAmount\",\"type\":\"uint256\"}],\"name\":\"sendToLockDropContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newDepositor\",\"type\":\"address\"}],\"name\":\"setDepositorAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newLockdrop\",\"type\":\"address\"}],\"name\":\"setLockDropAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_depositor\":\"Address of the depositor account\",\"_lockDrop\":\"Address of the BOB FusionLock contract\",\"_safeAddress\":\"Address of the Gnosis Safe\",\"_sovToken\":\"Address of the SOV token contract\"}},\"execTransactionFromSafe(address,uint256,bytes,uint8)\":{\"params\":{\"data\":\"Data payload of module transaction.\",\"operation\":\"Operation type of module transaction.\",\"to\":\"Destination address of module transaction.\",\"value\":\"Ether value of module transaction.\"},\"returns\":{\"success\":\"Boolean flag indicating if the call succeeded.\"}},\"mapDepositorToReceiver(address)\":{\"params\":{\"receiver\":\"Receiver address on BOB. The depositor address will be replaced with the receiver address for distribution of LP tokens and rewards on BOB\"}},\"sendToLockDropContract(address[],uint256[],uint256)\":{\"details\":\"This function is for sending tokens to the LockDrop contract for users to receive rewards and to be bridged to the BOB mainnet for Sovryn DEXThe function is allowed to be called only by the lockdropDepositorAddressToken amounts and SOV amount to send are calculated offchain\",\"params\":{\"amounts\":\"List of amounts of tokens to send\",\"sovAmount\":\"Amount of SOV tokens to send\",\"tokens\":\"List of tokens to send\"}},\"setDepositorAddress(address)\":{\"details\":\"Only Safe can call this functionNew depositor can be zero address\",\"params\":{\"_newDepositor\":\"New depositor address\"}},\"setLockDropAddress(address)\":{\"details\":\"Only Safe can call this functionNew LockDrop can't be zero address\",\"params\":{\"_newLockdrop\":\"New depositor address\"}},\"withdraw(address[],uint256[],address)\":{\"details\":\"Only Safe can call this functionRecipient should not be a zero address\",\"params\":{\"amounts\":\"List of token amounts to withdraw\",\"recipient\":\"Recipient address\",\"tokens\":\"List of token addresses to withdraw\"}},\"withdrawAll(address[],address)\":{\"details\":\"Only Safe can call this functionRecipient should not be a zero address\",\"params\":{\"recipient\":\"Recipient address\",\"tokens\":\"List of token addresses to withdraw\"}}},\"title\":\"SafeDepositsSender\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"execTransactionFromSafe(address,uint256,bytes,uint8)\":{\"notice\":\"Execute `operation` (0: Call, 1: DelegateCall) to `to` with `value` (Native Token) from Safe\"},\"mapDepositorToReceiver(address)\":{\"notice\":\"Maps depositor on ethereum to receiver on BOBReceiver from the last emitted event called by msg.sender will be used\"},\"pause()\":{\"notice\":\"pause the contract - no funds can be sent to the LockDrop contract\"},\"sendToLockDropContract(address[],uint256[],uint256)\":{\"notice\":\"Sends tokens to the LockDrop contract\"},\"setDepositorAddress(address)\":{\"notice\":\"Sets new depositor address\"},\"setLockDropAddress(address)\":{\"notice\":\"Sets new LockDrop address\"},\"stop()\":{\"notice\":\"stops the contract - no funds can be sent to the LockDrop contract, this is irreversible\"},\"unpause()\":{\"notice\":\"unpause the contract\"},\"withdraw(address[],uint256[],address)\":{\"notice\":\"Withdraws tokens from this contract to a recipient addressWithdrawal to the Safe address will affect balances and rewardsAmount > 0 should be checked by the caller before calling this function\"},\"withdrawAll(address[],address)\":{\"notice\":\"Withdraws all tokens from this contract to a recipientAmount > 0 should be checked by the caller before calling this functionWithdrawal to the Safe address will affect balances and rewards\"}},\"notice\":\"This contract is a gateway for depositing funds into the Bob locker contracts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/integrations/bob/SafeDepositsSender.sol\":\"SafeDepositsSender\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@contracts/=contracts/\",\":ds-test/=foundry/lib/forge-std/lib/ds-test/src/\",\":forge-std/=foundry/lib/forge-std/src/\"]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"contracts/integrations/bob/SafeDepositsSender.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport { ISafeDepositsSender } from \\\"./interfaces/ISafeDepositsSender.sol\\\";\\nimport { SafeERC20, IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\ninterface GnosisSafe {\\n    enum Operation {\\n        Call,\\n        DelegateCall\\n    }\\n\\n    /// @dev Allows a Module to execute a Safe transaction without any further confirmations.\\n    /// @param to Destination address of module transaction.\\n    /// @param value Ether value of module transaction.\\n    /// @param data Data payload of module transaction.\\n    /// @param operation Operation type of module transaction.\\n    function execTransactionFromModule(\\n        address to,\\n        uint256 value,\\n        bytes calldata data,\\n        Operation operation\\n    ) external returns (bool success);\\n}\\n\\n/**\\n * @title SafeDepositsSender\\n * @notice This contract is a gateway for depositing funds into the Bob locker contracts\\n */\\ncontract SafeDepositsSender is ISafeDepositsSender {\\n    using SafeERC20 for IERC20;\\n    address public constant ETH_TOKEN_ADDRESS = address(0x01);\\n    GnosisSafe private immutable SAFE;\\n    address private immutable SOV_TOKEN_ADDRESS;\\n    address private lockdropDepositorAddress; // address used by automation script to deposit to the LockDrop contract\\n    address private lockDropAddress;\\n    uint256 private stopBlock; // if set the contract is stopped forever - irreversible\\n    bool private paused;\\n\\n    /**\\n     * @param _safeAddress Address of the Gnosis Safe\\n     * @param _lockDrop Address of the BOB FusionLock contract\\n     * @param _sovToken Address of the SOV token contract\\n     * @param _depositor Address of the depositor account\\n     */\\n    constructor(address _safeAddress, address _lockDrop, address _sovToken, address _depositor) {\\n        require(_safeAddress != address(0), \\\"SafeDepositsSender: Invalid safe address\\\");\\n        require(_lockDrop != address(0), \\\"SafeDepositsSender: Invalid lockdrop address\\\");\\n        require(_sovToken != address(0), \\\"SafeDepositsSender: Invalid sov token address\\\");\\n        require(_depositor != address(0), \\\"SafeDepositsSender: Invalid depositor token address\\\");\\n        SAFE = GnosisSafe(_safeAddress);\\n        SOV_TOKEN_ADDRESS = _sovToken;\\n        lockdropDepositorAddress = _depositor;\\n        lockDropAddress = _lockDrop;\\n    }\\n\\n    receive() external payable {}\\n\\n    // MODIFIERS //\\n\\n    modifier onlySafe() {\\n        require(msg.sender == address(SAFE), \\\"SafeDepositsSender: Only Safe\\\");\\n        _;\\n    }\\n\\n    modifier onlyDepositor() {\\n        require(msg.sender == lockdropDepositorAddress, \\\"SafeDepositsSender: Only Depositor\\\");\\n        _;\\n    }\\n\\n    modifier onlyDepositorOrSafe() {\\n        require(\\n            msg.sender == lockdropDepositorAddress || msg.sender == address(SAFE),\\n            \\\"SafeDepositsSender: Only Depositor or Safe\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier whenNotPaused() {\\n        require(!paused, \\\"SafeDepositsSender: Paused\\\");\\n        _;\\n    }\\n\\n    modifier whenPaused() {\\n        require(paused, \\\"SafeDepositsSender: Not paused\\\");\\n        _;\\n    }\\n\\n    modifier whenUnstopped() {\\n        require(stopBlock == 0, \\\"SafeDepositsSender: Stopped\\\");\\n        _;\\n    }\\n\\n    modifier notZeroAddress(address _address) {\\n        require(_address != address(0), \\\"SafeDepositsSender: Invalid address\\\");\\n        _;\\n    }\\n\\n    // CORE FUNCTIONS\\n\\n    /**\\n     * @notice Sends tokens to the LockDrop contract\\n     * @dev This function is for sending tokens to the LockDrop contract for users to receive rewards and to be bridged to the BOB mainnet for Sovryn DEX\\n     * @dev The function is allowed to be called only by the lockdropDepositorAddress\\n     * @dev Token amounts and SOV amount to send are calculated offchain\\n     * @param tokens List of tokens to send\\n     * @param amounts List of amounts of tokens to send\\n     * @param sovAmount Amount of SOV tokens to send\\n     */\\n    function sendToLockDropContract(\\n        address[] calldata tokens,\\n        uint256[] calldata amounts,\\n        uint256 sovAmount\\n    ) external onlyDepositorOrSafe whenNotPaused whenUnstopped {\\n        require(\\n            tokens.length == amounts.length,\\n            \\\"SafeDepositsSender: Tokens and amounts length mismatch\\\"\\n        );\\n        require(sovAmount > 0, \\\"SafeDepositsSender: Invalid SOV amount\\\");\\n\\n        bytes memory data;\\n\\n        for (uint256 i = 0; i < tokens.length; i++) {\\n            require(\\n                tokens[i] != SOV_TOKEN_ADDRESS,\\n                \\\"SafeDepositsSender: SOV token is transferred separately\\\"\\n            );\\n\\n            // transfer native token\\n            uint256 balance;\\n            uint256 transferAmount;\\n            if (tokens[i] == ETH_TOKEN_ADDRESS) {\\n                require(\\n                    address(SAFE).balance >= amounts[i],\\n                    \\\"SafeDepositsSender: Not enough eth balance to deposit\\\"\\n                );\\n                data = abi.encodeWithSignature(\\\"depositEth()\\\");\\n                require(\\n                    SAFE.execTransactionFromModule(\\n                        lockDropAddress,\\n                        amounts[i],\\n                        data,\\n                        GnosisSafe.Operation.Call\\n                    ),\\n                    \\\"SafeDepositsSender: Could not deposit ether\\\"\\n                );\\n\\n                // withdraw balance to this contract left after deposit to the LockDrop\\n                balance = address(SAFE).balance;\\n                transferAmount = balance < amounts[i] ? balance : amounts[i];\\n                if (transferAmount > 0) {\\n                    require(\\n                        SAFE.execTransactionFromModule(\\n                            address(this),\\n                            transferAmount,\\n                            \\\"\\\",\\n                            GnosisSafe.Operation.Call\\n                        ),\\n                        \\\"SafeDepositsSender: Could not withdraw ether after deposit\\\"\\n                    );\\n                    emit WithdrawBalanceFromSafe(tokens[i], transferAmount);\\n                }\\n            } else {\\n                // transfer ERC20 tokens\\n                IERC20 token = IERC20(tokens[i]);\\n                balance = token.balanceOf(address(SAFE));\\n                require(balance >= amounts[i], \\\"SafeDepositsSender: Not enough tokens to deposit\\\");\\n\\n                data = abi.encodeWithSignature(\\n                    \\\"approve(address,uint256)\\\",\\n                    lockDropAddress,\\n                    amounts[i]\\n                );\\n                require(\\n                    SAFE.execTransactionFromModule(tokens[i], 0, data, GnosisSafe.Operation.Call),\\n                    \\\"SafeDepositsSender: Could not approve token transfer\\\"\\n                );\\n\\n                data = abi.encodeWithSignature(\\n                    \\\"depositERC20(address,uint256)\\\",\\n                    tokens[i],\\n                    amounts[i]\\n                );\\n                require(\\n                    SAFE.execTransactionFromModule(\\n                        lockDropAddress,\\n                        0,\\n                        data,\\n                        GnosisSafe.Operation.Call\\n                    ),\\n                    \\\"SafeDepositsSender: Could not deposit token\\\"\\n                );\\n\\n                // withdraw balance to this contract left after deposit to the LockDrop\\n                balance = token.balanceOf(address(SAFE));\\n                transferAmount = balance < amounts[i] ? balance : amounts[i];\\n                if (transferAmount > 0) {\\n                    data = abi.encodeWithSignature(\\n                        \\\"transfer(address,uint256)\\\",\\n                        address(this),\\n                        transferAmount\\n                    );\\n                    require(\\n                        SAFE.execTransactionFromModule(\\n                            tokens[i],\\n                            0,\\n                            data,\\n                            GnosisSafe.Operation.Call\\n                        ),\\n                        \\\"SafeDepositsSender: Could not withdraw token after deposit\\\"\\n                    );\\n                    emit WithdrawBalanceFromSafe(tokens[i], transferAmount);\\n                }\\n            }\\n            emit DepositToLockdrop(lockDropAddress, tokens[i], amounts[i]);\\n        }\\n\\n        // transfer SOV\\n        data = abi.encodeWithSignature(\\\"approve(address,uint256)\\\", lockDropAddress, sovAmount);\\n        require(\\n            SAFE.execTransactionFromModule(SOV_TOKEN_ADDRESS, 0, data, GnosisSafe.Operation.Call),\\n            \\\"SafeDepositsSender: Could not execute SOV transfer\\\"\\n        );\\n        data = abi.encodeWithSignature(\\n            \\\"depositERC20(address,uint256)\\\",\\n            SOV_TOKEN_ADDRESS,\\n            sovAmount\\n        );\\n        require(\\n            SAFE.execTransactionFromModule(lockDropAddress, 0, data, GnosisSafe.Operation.Call),\\n            \\\"SafeDepositsSender: Could not execute SOV transfer\\\"\\n        );\\n\\n        emit DepositSOVToLockdrop(lockDropAddress, sovAmount);\\n    }\\n\\n    /// @notice Maps depositor on ethereum to receiver on BOB\\n    /// @notice Receiver from the last emitted event called by msg.sender will be used\\n    /// @param receiver Receiver address on BOB. The depositor address will be replaced with the receiver address for distribution of LP tokens and rewards on BOB\\n    function mapDepositorToReceiver(address receiver) external {\\n        emit MapDepositorToReceiver(msg.sender, receiver);\\n    }\\n\\n    // ADMINISTRATIVE FUNCTIONS //\\n\\n    /**\\n     * @notice Execute `operation` (0: Call, 1: DelegateCall) to `to` with `value` (Native Token) from Safe\\n     * @param to Destination address of module transaction.\\n     * @param value Ether value of module transaction.\\n     * @param data Data payload of module transaction.\\n     * @param operation Operation type of module transaction.\\n     * @return success Boolean flag indicating if the call succeeded.\\n     */\\n    function execTransactionFromSafe(\\n        address to,\\n        uint256 value,\\n        bytes memory data,\\n        GnosisSafe.Operation operation\\n    ) external onlySafe returns (bool success) {\\n        success = execute(to, value, data, operation, type(uint256).max);\\n    }\\n\\n    /**\\n     * @notice Executes either a delegatecall or a call with provided parameters.\\n     * @dev This method doesn't perform any sanity check of the transaction, such as:\\n     *      - if the contract at `to` address has code or not\\n     *      It is the responsibility of the caller to perform such checks.\\n     * @param to Destination address.\\n     * @param value Ether value.\\n     * @param data Data payload.\\n     * @param operation Operation type.\\n     * @return success boolean flag indicating if the call succeeded.\\n     */\\n    function execute(\\n        address to,\\n        uint256 value,\\n        bytes memory data,\\n        GnosisSafe.Operation operation,\\n        uint256 txGas\\n    ) internal returns (bool success) {\\n        if (operation == GnosisSafe.Operation.DelegateCall) {\\n            /* solhint-disable no-inline-assembly */\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                success := delegatecall(txGas, to, add(data, 0x20), mload(data), 0, 0)\\n            }\\n            /* solhint-enable no-inline-assembly */\\n        } else {\\n            /* solhint-disable no-inline-assembly */\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                success := call(txGas, to, value, add(data, 0x20), mload(data), 0, 0)\\n            }\\n            /* solhint-enable no-inline-assembly */\\n        }\\n    }\\n\\n    /// @notice There is no check if _newDepositor is not zero on purpose - that could be required\\n\\n    /**\\n     * @notice Sets new depositor address\\n     * @dev Only Safe can call this function\\n     * @dev New depositor can be zero address\\n     * @param _newDepositor New depositor address\\n     */\\n    function setDepositorAddress(address _newDepositor) external onlySafe {\\n        emit SetDepositorAddress(lockdropDepositorAddress, _newDepositor);\\n        lockdropDepositorAddress = _newDepositor;\\n    }\\n\\n    /**\\n     * @notice Sets new LockDrop address\\n     * @dev Only Safe can call this function\\n     * @dev New LockDrop can't be zero address\\n     * @param _newLockdrop New depositor address\\n     */\\n    function setLockDropAddress(address _newLockdrop) external onlySafe {\\n        require(_newLockdrop != address(0), \\\"SafeDepositsSender: Zero address not allowed\\\");\\n        emit SetLockDropAddress(lockDropAddress, _newLockdrop);\\n        lockDropAddress = _newLockdrop;\\n    }\\n\\n    /**\\n     * @notice Withdraws tokens from this contract to a recipient address\\n     * @notice Withdrawal to the Safe address will affect balances and rewards\\n     * @notice Amount > 0 should be checked by the caller before calling this function\\n     * @dev Only Safe can call this function\\n     * @dev Recipient should not be a zero address\\n     * @param tokens List of token addresses to withdraw\\n     * @param amounts List of token amounts to withdraw\\n     * @param recipient Recipient address\\n     */\\n    function withdraw(\\n        address[] calldata tokens,\\n        uint256[] calldata amounts,\\n        address recipient\\n    ) external onlySafe notZeroAddress(recipient) {\\n        require(\\n            tokens.length == amounts.length,\\n            \\\"SafeDepositsSender: Tokens and amounts length mismatch\\\"\\n        );\\n\\n        for (uint256 i = 0; i < tokens.length; i++) {\\n            require(tokens[i] != address(0x00), \\\"SafeDepositsSender: Zero address not allowed\\\");\\n            require(amounts[i] != 0, \\\"SafeDepositsSender: Zero amount not allowed\\\");\\n            if (tokens[i] == ETH_TOKEN_ADDRESS) {\\n                require(\\n                    address(this).balance >= amounts[i],\\n                    \\\"SafeDepositsSender: Not enough funds\\\"\\n                );\\n                (bool success, ) = payable(recipient).call{ value: amounts[i] }(\\\"\\\");\\n                require(success, \\\"Could not withdraw ether\\\");\\n                continue;\\n            }\\n\\n            IERC20 token = IERC20(tokens[i]);\\n            uint256 balance = token.balanceOf(address(this));\\n            require(balance >= amounts[i], \\\"SafeDepositsSender: Not enough funds\\\");\\n\\n            token.safeTransfer(recipient, amounts[i]);\\n\\n            emit Withdraw(recipient, tokens[i], amounts[i]);\\n        }\\n    }\\n\\n    /**\\n     * @notice Withdraws all tokens from this contract to a recipient\\n     * @notice Amount > 0 should be checked by the caller before calling this function\\n     * @dev Only Safe can call this function\\n     * @dev Recipient should not be a zero address\\n     * @notice Withdrawal to the Safe address will affect balances and rewards\\n     * @param tokens List of token addresses to withdraw\\n     * @param recipient Recipient address\\n     */\\n    function withdrawAll(\\n        address[] calldata tokens,\\n        address recipient\\n    ) external onlySafe notZeroAddress(recipient) {\\n        for (uint256 i = 0; i < tokens.length; i++) {\\n            if (tokens[i] == ETH_TOKEN_ADDRESS) {\\n                (bool success, ) = payable(recipient).call{ value: address(this).balance }(\\\"\\\");\\n                require(success, \\\"SafeDepositsSender: Could not withdraw ether\\\");\\n                continue;\\n            }\\n            IERC20 token = IERC20(tokens[i]);\\n            uint256 balance = token.balanceOf(address(this));\\n            if (balance > 0) {\\n                token.safeTransfer(recipient, balance);\\n            }\\n\\n            emit Withdraw(recipient, tokens[i], balance);\\n        }\\n    }\\n\\n    /// @notice pause the contract - no funds can be sent to the LockDrop contract\\n    function pause() external onlySafe whenNotPaused {\\n        paused = true;\\n        emit Pause();\\n    }\\n\\n    /// @notice unpause the contract\\n    function unpause() external onlySafe whenPaused {\\n        paused = false;\\n        emit Unpause();\\n    }\\n\\n    /// @notice stops the contract - no funds can be sent to the LockDrop contract, this is irreversible\\n    function stop() external onlySafe {\\n        stopBlock = block.number;\\n        emit Stop();\\n    }\\n\\n    // GETTERS //\\n    function getSafeAddress() external view returns (address) {\\n        return address(SAFE);\\n    }\\n\\n    function getLockDropAddress() external view returns (address) {\\n        return lockDropAddress;\\n    }\\n\\n    function getSovTokenAddress() external view returns (address) {\\n        return SOV_TOKEN_ADDRESS;\\n    }\\n\\n    function getDepositorAddress() external view returns (address) {\\n        return lockdropDepositorAddress;\\n    }\\n\\n    function isStopped() external view returns (bool) {\\n        return stopBlock != 0;\\n    }\\n\\n    function getStopBlock() external view returns (uint256) {\\n        return stopBlock;\\n    }\\n\\n    function isPaused() external view returns (bool) {\\n        return paused;\\n    }\\n}\\n\",\"keccak256\":\"0x7b0054d143e6643b8f9e17cf4fe8d931a16012bdbdc8f0cd70c6db441ee4273d\",\"license\":\"MIT\"},\"contracts/integrations/bob/interfaces/ISafeDepositsSender.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\ninterface ISafeDepositsSender {\\n    event Withdraw(address indexed from, address indexed token, uint256 amount);\\n    event DepositToLockdrop(address indexed lockDrop, address indexed token, uint256 amount);\\n    event DepositSOVToLockdrop(address indexed lockDrop, uint256 amount);\\n    event WithdrawBalanceFromSafe(address indexed token, uint256 balance);\\n    event Pause();\\n    event Unpause();\\n    event Stop();\\n    event SetDepositorAddress(address indexed oldDepositor, address indexed newDepositor);\\n    event SetLockDropAddress(address indexed oldLockDrop, address indexed newLockDrop);\\n    event MapDepositorToReceiver(address indexed depositor, address indexed receiver);\\n\\n    function getSafeAddress() external view returns (address);\\n    function getLockDropAddress() external view returns (address);\\n    function getSovTokenAddress() external view returns (address);\\n    function getDepositorAddress() external view returns (address);\\n    function isStopped() external view returns (bool);\\n    function isPaused() external view returns (bool);\\n\\n    // @note amount > 0 should be checked by the caller\\n    function withdraw(\\n        address[] calldata tokens,\\n        uint256[] calldata amounts,\\n        address recipient\\n    ) external;\\n\\n    function withdrawAll(address[] calldata tokens, address recipient) external;\\n\\n    function pause() external;\\n\\n    function unpause() external;\\n\\n    function stop() external;\\n\\n    function setDepositorAddress(address _newDepositor) external;\\n\\n    function sendToLockDropContract(\\n        address[] calldata tokens,\\n        uint256[] calldata amounts,\\n        uint256 sovAmount\\n    ) external;\\n}\\n\",\"keccak256\":\"0xb80080b92446a1edc1a9f4ed3576ffea3df483aaff33b33a2d2168212f7d2812\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061010d5760003560e01c80635d9dac1011610095578063b187bd2611610064578063b187bd26146102be578063b6e7377d146102d6578063d17b8f98146102f6578063d7c3e7b314610329578063f5f52e2e1461034957600080fd5b80635d9dac101461024b578063813ddbf41461026b5780638456cb5914610289578063af0776521461029e57600080fd5b8063397a079b116100dc578063397a079b146101a25780633f4ba83a146101c25780633f683b6a146101d75780634768b497146101fa5780634bcfe7261461021857600080fd5b806307da68f5146101195780631878d1f1146101305780631d1372e41461016257806326f915061461018257600080fd5b3661011457005b600080fd5b34801561012557600080fd5b5061012e610367565b005b34801561013c57600080fd5b50610145600181565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561016e57600080fd5b5061012e61017d366004612272565b6103e7565b34801561018e57600080fd5b5061012e61019d3660046122e0565b610420565b3480156101ae57600080fd5b5061012e6101bd366004612361565b610864565b3480156101ce57600080fd5b5061012e610b15565b3480156101e357600080fd5b5060025415155b6040519015158152602001610159565b34801561020657600080fd5b506000546001600160a01b0316610145565b34801561022457600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610145565b34801561025757600080fd5b5061012e610266366004612272565b610be4565b34801561027757600080fd5b506001546001600160a01b0316610145565b34801561029557600080fd5b5061012e610c87565b3480156102aa57600080fd5b5061012e6102b93660046123b5565b610d5a565b3480156102ca57600080fd5b5060035460ff166101ea565b3480156102e257600080fd5b5061012e6102f1366004612272565b611e29565b34801561030257600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610145565b34801561033557600080fd5b506101ea61034436600461244e565b611ef3565b34801561035557600080fd5b50600254604051908152602001610159565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103b85760405162461bcd60e51b81526004016103af9061252a565b60405180910390fd5b436002556040517fbedf0f4abfe86d4ffad593d9607fe70e83ea706033d44d24b3b6283cf3fc4f6b90600090a1565b6040516001600160a01b0382169033907f256f07b5eef8212c06c8cbb78abeb76d2b66770a68e81686fd14c3a0454551e190600090a350565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104685760405162461bcd60e51b81526004016103af9061252a565b806001600160a01b03811661048f5760405162461bcd60e51b81526004016103af90612561565b8483146104ae5760405162461bcd60e51b81526004016103af906125a4565b60005b8581101561085b5760008787838181106104cd576104cd6125fa565b90506020020160208101906104e29190612272565b6001600160a01b0316036105085760405162461bcd60e51b81526004016103af90612610565b84848281811061051a5761051a6125fa565b905060200201356000036105845760405162461bcd60e51b815260206004820152602b60248201527f536166654465706f7369747353656e6465723a205a65726f20616d6f756e742060448201526a1b9bdd08185b1b1bddd95960aa1b60648201526084016103af565b6001878783818110610598576105986125fa565b90506020020160208101906105ad9190612272565b6001600160a01b0316036106b4578484828181106105cd576105cd6125fa565b905060200201354710156105f35760405162461bcd60e51b81526004016103af9061265c565b6000836001600160a01b0316868684818110610611576106116125fa565b9050602002013560405160006040518083038185875af1925050503d8060008114610658576040519150601f19603f3d011682016040523d82523d6000602084013e61065d565b606091505b50509050806106ae5760405162461bcd60e51b815260206004820152601860248201527f436f756c64206e6f74207769746864726177206574686572000000000000000060448201526064016103af565b50610849565b60008787838181106106c8576106c86125fa565b90506020020160208101906106dd9190612272565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610727573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074b91906126a0565b905086868481811061075f5761075f6125fa565b905060200201358110156107855760405162461bcd60e51b81526004016103af9061265c565b6107bb8588888681811061079b5761079b6125fa565b90506020020135846001600160a01b0316611f559092919063ffffffff16565b8888848181106107cd576107cd6125fa565b90506020020160208101906107e29190612272565b6001600160a01b0316856001600160a01b03167f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb898987818110610828576108286125fa565b9050602002013560405161083e91815260200190565b60405180910390a350505b80610853816126b9565b9150506104b1565b50505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108ac5760405162461bcd60e51b81526004016103af9061252a565b806001600160a01b0381166108d35760405162461bcd60e51b81526004016103af90612561565b60005b83811015610b0e5760018585838181106108f2576108f26125fa565b90506020020160208101906109079190612272565b6001600160a01b0316036109d3576000836001600160a01b03164760405160006040518083038185875af1925050503d8060008114610962576040519150601f19603f3d011682016040523d82523d6000602084013e610967565b606091505b50509050806109cd5760405162461bcd60e51b815260206004820152602c60248201527f536166654465706f7369747353656e6465723a20436f756c64206e6f7420776960448201526b3a34323930bb9032ba3432b960a11b60648201526084016103af565b50610afc565b60008585838181106109e7576109e76125fa565b90506020020160208101906109fc9190612272565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610a46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6a91906126a0565b90508015610a8657610a866001600160a01b0383168683611f55565b868684818110610a9857610a986125fa565b9050602002016020810190610aad9190612272565b6001600160a01b0316856001600160a01b03167f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb83604051610af191815260200190565b60405180910390a350505b80610b06816126b9565b9150506108d6565b5050505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b5d5760405162461bcd60e51b81526004016103af9061252a565b60035460ff16610baf5760405162461bcd60e51b815260206004820152601e60248201527f536166654465706f7369747353656e6465723a204e6f7420706175736564000060448201526064016103af565b6003805460ff191690556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c2c5760405162461bcd60e51b81526004016103af9061252a565b600080546040516001600160a01b03808516939216917fad63b85612b3c457488f5a3a8fe770cdb830f4a4c74ed076937f49c50ca6a82091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ccf5760405162461bcd60e51b81526004016103af9061252a565b60035460ff1615610d225760405162461bcd60e51b815260206004820152601a60248201527f536166654465706f7369747353656e6465723a2050617573656400000000000060448201526064016103af565b6003805460ff191660011790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b6000546001600160a01b0316331480610d9b5750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b610dfa5760405162461bcd60e51b815260206004820152602a60248201527f536166654465706f7369747353656e6465723a204f6e6c79204465706f7369746044820152696f72206f72205361666560b01b60648201526084016103af565b60035460ff1615610e4d5760405162461bcd60e51b815260206004820152601a60248201527f536166654465706f7369747353656e6465723a2050617573656400000000000060448201526064016103af565b60025415610e9d5760405162461bcd60e51b815260206004820152601b60248201527f536166654465706f7369747353656e6465723a2053746f70706564000000000060448201526064016103af565b838214610ebc5760405162461bcd60e51b81526004016103af906125a4565b60008111610f1b5760405162461bcd60e51b815260206004820152602660248201527f536166654465706f7369747353656e6465723a20496e76616c696420534f5620604482015265185b5bdd5b9d60d21b60648201526084016103af565b606060005b85811015611ba3577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316878783818110610f6457610f646125fa565b9050602002016020810190610f799190612272565b6001600160a01b031603610ff55760405162461bcd60e51b815260206004820152603760248201527f536166654465706f7369747353656e6465723a20534f5620746f6b656e20697360448201527f207472616e736665727265642073657061726174656c7900000000000000000060648201526084016103af565b600080600189898581811061100c5761100c6125fa565b90506020020160208101906110219190612272565b6001600160a01b03160361140857868684818110611041576110416125fa565b905060200201357f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163110156110df5760405162461bcd60e51b815260206004820152603560248201527f536166654465706f7369747353656e6465723a204e6f7420656e6f75676820656044820152741d1a0818985b185b98d9481d1bc819195c1bdcda5d605a1b60648201526084016103af565b6040805160048152602481019091526020810180516001600160e01b031663439370b160e01b1790526001549094506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169163468721a79116898987818110611153576111536125fa565b905060200201358760006040518563ffffffff1660e01b815260040161117c9493929190612768565b6020604051808303816000875af115801561119b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111bf919061279e565b61121f5760405162461bcd60e51b815260206004820152602b60248201527f536166654465706f7369747353656e6465723a20436f756c64206e6f7420646560448201526a3837b9b4ba1032ba3432b960a91b60648201526084016103af565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031631915086868481811061125e5761125e6125fa565b9050602002013582106112895786868481811061127d5761127d6125fa565b9050602002013561128b565b815b905080156114035760405163468721a760e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063468721a7906112e490309085906000906004016127c0565b6020604051808303816000875af1158015611303573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611327919061279e565b6113995760405162461bcd60e51b815260206004820152603a60248201527f536166654465706f7369747353656e6465723a20436f756c64206e6f7420776960448201527f746864726177206574686572206166746572206465706f73697400000000000060648201526084016103af565b8888848181106113ab576113ab6125fa565b90506020020160208101906113c09190612272565b6001600160a01b03167f2217f1638c9922c1b7608f3e57b1f418e86204e8dd975c4ca5bd4fbcb270b692826040516113fa91815260200190565b60405180910390a25b611b06565b600089898581811061141c5761141c6125fa565b90506020020160208101906114319190612272565b6040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152919250908216906370a0823190602401602060405180830381865afa15801561149b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114bf91906126a0565b92508787858181106114d3576114d36125fa565b905060200201358310156115425760405162461bcd60e51b815260206004820152603060248201527f536166654465706f7369747353656e6465723a204e6f7420656e6f756768207460448201526f1bdad95b9cc81d1bc819195c1bdcda5d60821b60648201526084016103af565b6001546001600160a01b0316888886818110611560576115606125fa565b6040516001600160a01b039094166024850152602002919091013560448301525060640160408051601f198184030181529190526020810180516001600160e01b031663095ea7b360e01b17905294506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663468721a78b8b878181106115f1576115f16125fa565b90506020020160208101906116069190612272565b60008860006040518563ffffffff1660e01b815260040161162a9493929190612768565b6020604051808303816000875af1158015611649573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061166d919061279e565b6116d65760405162461bcd60e51b815260206004820152603460248201527f536166654465706f7369747353656e6465723a20436f756c64206e6f74206170604482015273383937bb32903a37b5b2b7103a3930b739b332b960611b60648201526084016103af565b8989858181106116e8576116e86125fa565b90506020020160208101906116fd9190612272565b88888681811061170f5761170f6125fa565b6040516001600160a01b039094166024850152602002919091013560448301525060640160408051601f198184030181529181526020820180516001600160e01b0316634bff5c9360e11b179052600154905163468721a760e01b81529196506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169263468721a7926117b69216906000908a908290600401612768565b6020604051808303816000875af11580156117d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f9919061279e565b6118595760405162461bcd60e51b815260206004820152602b60248201527f536166654465706f7369747353656e6465723a20436f756c64206e6f7420646560448201526a3837b9b4ba103a37b5b2b760a91b60648201526084016103af565b6040516370a0823160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301528216906370a0823190602401602060405180830381865afa1580156118bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e391906126a0565b92508787858181106118f7576118f76125fa565b90506020020135831061192257878785818110611916576119166125fa565b90506020020135611924565b825b91508115611b04576040513060248201526044810183905260640160408051601f198184030181529190526020810180516001600160e01b031663a9059cbb60e01b17905294506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663468721a78b8b878181106119ac576119ac6125fa565b90506020020160208101906119c19190612272565b60008860006040518563ffffffff1660e01b81526004016119e59493929190612768565b6020604051808303816000875af1158015611a04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a28919061279e565b611a9a5760405162461bcd60e51b815260206004820152603a60248201527f536166654465706f7369747353656e6465723a20436f756c64206e6f7420776960448201527f74686472617720746f6b656e206166746572206465706f73697400000000000060648201526084016103af565b898985818110611aac57611aac6125fa565b9050602002016020810190611ac19190612272565b6001600160a01b03167f2217f1638c9922c1b7608f3e57b1f418e86204e8dd975c4ca5bd4fbcb270b69283604051611afb91815260200190565b60405180910390a25b505b888884818110611b1857611b186125fa565b9050602002016020810190611b2d9190612272565b6001546001600160a01b0391821691167f83e351ace74af42916cc159bb2c353842d1fe21125f26f3ab645aeac206b663c898987818110611b7057611b706125fa565b90506020020135604051611b8691815260200190565b60405180910390a350508080611b9b906126b9565b915050610f20565b506001546040516001600160a01b0390911660248201526044810183905260640160408051601f198184030181529181526020820180516001600160e01b031663095ea7b360e01b1790525163468721a760e01b81529091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063468721a790611c62907f00000000000000000000000000000000000000000000000000000000000000009060009086908290600401612768565b6020604051808303816000875af1158015611c81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ca5919061279e565b611cc15760405162461bcd60e51b81526004016103af906127f3565b6040516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201526044810183905260640160408051601f198184030181529181526020820180516001600160e01b0316634bff5c9360e11b179052600154905163468721a760e01b81529192506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169263468721a792611d8092169060009086908290600401612768565b6020604051808303816000875af1158015611d9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dc3919061279e565b611ddf5760405162461bcd60e51b81526004016103af906127f3565b6001546040518381526001600160a01b03909116907fece2604abb1c0d8f143c1c8961c88ecda8a2c7b650545e98255665063e7321859060200160405180910390a2505050505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611e715760405162461bcd60e51b81526004016103af9061252a565b6001600160a01b038116611e975760405162461bcd60e51b81526004016103af90612610565b6001546040516001600160a01b038084169216907f571b0cfddc37eea7ea50ec6529f701f4c53e523eb459eb1238fb38a16fee9d4490600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611f3d5760405162461bcd60e51b81526004016103af9061252a565b611f4c85858585600019611fac565b95945050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611fa7908490611ff1565b505050565b60006001836001811115611fc257611fc2612730565b03611fda576000808551602087018986f49050611f4c565b600080855160208701888a87f19695505050505050565b6000612046826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166120c69092919063ffffffff16565b9050805160001480612067575080806020019051810190612067919061279e565b611fa75760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103af565b60606120d584846000856120dd565b949350505050565b60608247101561213e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016103af565b600080866001600160a01b0316858760405161215a9190612845565b60006040518083038185875af1925050503d8060008114612197576040519150601f19603f3d011682016040523d82523d6000602084013e61219c565b606091505b50915091506121ad878383876121b8565b979650505050505050565b60608315612227578251600003612220576001600160a01b0385163b6122205760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103af565b50816120d5565b6120d5838381511561223c5781518083602001fd5b8060405162461bcd60e51b81526004016103af9190612861565b80356001600160a01b038116811461226d57600080fd5b919050565b60006020828403121561228457600080fd5b61228d82612256565b9392505050565b60008083601f8401126122a657600080fd5b50813567ffffffffffffffff8111156122be57600080fd5b6020830191508360208260051b85010111156122d957600080fd5b9250929050565b6000806000806000606086880312156122f857600080fd5b853567ffffffffffffffff8082111561231057600080fd5b61231c89838a01612294565b9097509550602088013591508082111561233557600080fd5b5061234288828901612294565b9094509250612355905060408701612256565b90509295509295909350565b60008060006040848603121561237657600080fd5b833567ffffffffffffffff81111561238d57600080fd5b61239986828701612294565b90945092506123ac905060208501612256565b90509250925092565b6000806000806000606086880312156123cd57600080fd5b853567ffffffffffffffff808211156123e557600080fd5b6123f189838a01612294565b9097509550602088013591508082111561240a57600080fd5b5061241788828901612294565b96999598509660400135949350505050565b634e487b7160e01b600052604160045260246000fd5b80356002811061226d57600080fd5b6000806000806080858703121561246457600080fd5b61246d85612256565b935060208501359250604085013567ffffffffffffffff8082111561249157600080fd5b818701915087601f8301126124a557600080fd5b8135818111156124b7576124b7612429565b604051601f8201601f19908116603f011681019083821181831017156124df576124df612429565b816040528281528a60208487010111156124f857600080fd5b82602086016020830137600060208483010152809650505050505061251f6060860161243f565b905092959194509250565b6020808252601d908201527f536166654465706f7369747353656e6465723a204f6e6c792053616665000000604082015260600190565b60208082526023908201527f536166654465706f7369747353656e6465723a20496e76616c6964206164647260408201526265737360e81b606082015260800190565b60208082526036908201527f536166654465706f7369747353656e6465723a20546f6b656e7320616e6420616040820152750dadeeadce8e640d8cadccee8d040dad2e6dac2e8c6d60531b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6020808252602c908201527f536166654465706f7369747353656e6465723a205a65726f206164647265737360408201526b081b9bdd08185b1b1bddd95960a21b606082015260800190565b60208082526024908201527f536166654465706f7369747353656e6465723a204e6f7420656e6f7567682066604082015263756e647360e01b606082015260800190565b6000602082840312156126b257600080fd5b5051919050565b6000600182016126d957634e487b7160e01b600052601160045260246000fd5b5060010190565b60005b838110156126fb5781810151838201526020016126e3565b50506000910152565b6000815180845261271c8160208601602086016126e0565b601f01601f19169290920160200192915050565b634e487b7160e01b600052602160045260246000fd5b6002811061276457634e487b7160e01b600052602160045260246000fd5b9052565b60018060a01b038516815283602082015260806040820152600061278f6080830185612704565b9050611f4c6060830184612746565b6000602082840312156127b057600080fd5b8151801515811461228d57600080fd5b6001600160a01b03841681526020810183905260806040820181905260009082015260a081016120d56060830184612746565b60208082526032908201527f536166654465706f7369747353656e6465723a20436f756c64206e6f7420657860408201527132b1baba329029a7ab103a3930b739b332b960711b606082015260800190565b600082516128578184602087016126e0565b9190910192915050565b60208152600061228d602083018461270456fea264697066735822122079436df57107ad03a8a62cb0ffaabfeebb3ab9643ced815126b2474370014c4c64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_depositor": "Address of the depositor account",
          "_lockDrop": "Address of the BOB FusionLock contract",
          "_safeAddress": "Address of the Gnosis Safe",
          "_sovToken": "Address of the SOV token contract"
        }
      },
      "execTransactionFromSafe(address,uint256,bytes,uint8)": {
        "params": {
          "data": "Data payload of module transaction.",
          "operation": "Operation type of module transaction.",
          "to": "Destination address of module transaction.",
          "value": "Ether value of module transaction."
        },
        "returns": {
          "success": "Boolean flag indicating if the call succeeded."
        }
      },
      "mapDepositorToReceiver(address)": {
        "params": {
          "receiver": "Receiver address on BOB. The depositor address will be replaced with the receiver address for distribution of LP tokens and rewards on BOB"
        }
      },
      "sendToLockDropContract(address[],uint256[],uint256)": {
        "details": "This function is for sending tokens to the LockDrop contract for users to receive rewards and to be bridged to the BOB mainnet for Sovryn DEXThe function is allowed to be called only by the lockdropDepositorAddressToken amounts and SOV amount to send are calculated offchain",
        "params": {
          "amounts": "List of amounts of tokens to send",
          "sovAmount": "Amount of SOV tokens to send",
          "tokens": "List of tokens to send"
        }
      },
      "setDepositorAddress(address)": {
        "details": "Only Safe can call this functionNew depositor can be zero address",
        "params": {
          "_newDepositor": "New depositor address"
        }
      },
      "setLockDropAddress(address)": {
        "details": "Only Safe can call this functionNew LockDrop can't be zero address",
        "params": {
          "_newLockdrop": "New depositor address"
        }
      },
      "withdraw(address[],uint256[],address)": {
        "details": "Only Safe can call this functionRecipient should not be a zero address",
        "params": {
          "amounts": "List of token amounts to withdraw",
          "recipient": "Recipient address",
          "tokens": "List of token addresses to withdraw"
        }
      },
      "withdrawAll(address[],address)": {
        "details": "Only Safe can call this functionRecipient should not be a zero address",
        "params": {
          "recipient": "Recipient address",
          "tokens": "List of token addresses to withdraw"
        }
      }
    },
    "title": "SafeDepositsSender",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "execTransactionFromSafe(address,uint256,bytes,uint8)": {
        "notice": "Execute `operation` (0: Call, 1: DelegateCall) to `to` with `value` (Native Token) from Safe"
      },
      "mapDepositorToReceiver(address)": {
        "notice": "Maps depositor on ethereum to receiver on BOBReceiver from the last emitted event called by msg.sender will be used"
      },
      "pause()": {
        "notice": "pause the contract - no funds can be sent to the LockDrop contract"
      },
      "sendToLockDropContract(address[],uint256[],uint256)": {
        "notice": "Sends tokens to the LockDrop contract"
      },
      "setDepositorAddress(address)": {
        "notice": "Sets new depositor address"
      },
      "setLockDropAddress(address)": {
        "notice": "Sets new LockDrop address"
      },
      "stop()": {
        "notice": "stops the contract - no funds can be sent to the LockDrop contract, this is irreversible"
      },
      "unpause()": {
        "notice": "unpause the contract"
      },
      "withdraw(address[],uint256[],address)": {
        "notice": "Withdraws tokens from this contract to a recipient addressWithdrawal to the Safe address will affect balances and rewardsAmount > 0 should be checked by the caller before calling this function"
      },
      "withdrawAll(address[],address)": {
        "notice": "Withdraws all tokens from this contract to a recipientAmount > 0 should be checked by the caller before calling this functionWithdrawal to the Safe address will affect balances and rewards"
      }
    },
    "notice": "This contract is a gateway for depositing funds into the Bob locker contracts",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 865,
        "contract": "contracts/integrations/bob/SafeDepositsSender.sol:SafeDepositsSender",
        "label": "lockdropDepositorAddress",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 867,
        "contract": "contracts/integrations/bob/SafeDepositsSender.sol:SafeDepositsSender",
        "label": "lockDropAddress",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 869,
        "contract": "contracts/integrations/bob/SafeDepositsSender.sol:SafeDepositsSender",
        "label": "stopBlock",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 871,
        "contract": "contracts/integrations/bob/SafeDepositsSender.sol:SafeDepositsSender",
        "label": "paused",
        "offset": 0,
        "slot": "3",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}