{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lockedSOV",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_SOV",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_multisig",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_releaseTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_depositLimit",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "DepositLimitReached",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "EscrowActivated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "EscrowFundExpired",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "EscrowInHoldingState",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "EscrowInWithdrawState",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_initiator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_lockedSOV",
          "type": "address"
        }
      ],
      "name": "LockedSOVUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_initiator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_newMultisig",
          "type": "address"
        }
      ],
      "name": "NewMultisig",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_initiator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "RewardDepositByMultisig",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_initiator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "RewardTokenWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_initiator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "TokenDeposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_initiator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "TokenDepositByMultisig",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_initiator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_depositLimit",
          "type": "uint256"
        }
      ],
      "name": "TokenDepositLimitUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_initiator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_releaseTimestamp",
          "type": "uint256"
        }
      ],
      "name": "TokenReleaseUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_initiator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "TokenWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_initiator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "TokenWithdrawByMultisig",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "SOV",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "changeStateToHolding",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "depositLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositRewardByMultisig",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositTokensByMultisig",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "getReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "getUserBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "init",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lockedSOV",
      "outputs": [
        {
          "internalType": "contract ILockedSOV",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "multisig",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "releaseTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "status",
      "outputs": [
        {
          "internalType": "enum Escrow.Status",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalRewardDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newDepositLimit",
          "type": "uint256"
        }
      ],
      "name": "updateDepositLimit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_lockedSOV",
          "type": "address"
        }
      ],
      "name": "updateLockedSOV",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_newMultisig",
          "type": "address"
        }
      ],
      "name": "updateMultisig",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newReleaseTime",
          "type": "uint256"
        }
      ],
      "name": "updateReleaseTimestamp",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawTokensAndReward",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiverAddress",
          "type": "address"
        }
      ],
      "name": "withdrawTokensByMultisig",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50604051611bb0380380611bb0833981810160405260a081101561003357600080fd5b50805160208201516040830151606084015160809094015192939192909190838383836001600160a01b0384166100b1576040805162461bcd60e51b815260206004820152601460248201527f496e76616c696420534f5620416464726573732e000000000000000000000000604482015290519081900360640190fd5b6001600160a01b03831661010c576040805162461bcd60e51b815260206004820152601960248201527f496e76616c6964204d756c746973696720416464726573732e00000000000000604482015290519081900360640190fd5b600380546001600160a01b038087166001600160a01b03199283161790925560048054928616929091168217905560405133907fc49ab2967e3eb278a95b7304998ed5b0e5d6c090c37f3ba3cabd40ad7ca3b67d90600090a360019190915560025550506006805460ff191690556001600160a01b038516156101a557600880546001600160a01b0319166001600160a01b0387161790555b50505050506119f7806101b96000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806377c5e10e116100b8578063c00007b01161007c578063c00007b0146102e7578063dd49756e1461030d578063e1c7392a1461032a578063ecf7085814610332578063f2f46b3b1461033a578063f6153ccd1461034257610142565b806377c5e10e146102a15780638d8f2adb146102c7578063b595c1d9146102cf578063b91d4001146102d7578063b92fd178146102df57610142565b806327debc0f1161010a57806327debc0f146101f95780632929c25c14610216578063309481e41461023c57806347734892146102445780634783c35b1461027c57806363683e5b1461028457610142565b80630570a9ed1461014757806308dcb3601461016f57806309d9287f146101935780630c6ca129146101b0578063200d2ed2146101cd575b600080fd5b61016d6004803603602081101561015d57600080fd5b50356001600160a01b031661034a565b005b61017761043e565b604080516001600160a01b039092168252519081900360200190f35b61016d600480360360208110156101a957600080fd5b503561044d565b61016d600480360360208110156101c657600080fd5b50356106dd565b6101d5610768565b604051808260048111156101e557fe5b60ff16815260200191505060405180910390f35b61016d6004803603602081101561020f57600080fd5b5035610771565b61016d6004803603602081101561022c57600080fd5b50356001600160a01b031661083d565b61016d610931565b61026a6004803603602081101561025a57600080fd5b50356001600160a01b0316610ab3565b60408051918252519081900360200190f35b610177610ad2565b61016d6004803603602081101561029a57600080fd5b5035610ae1565b61016d600480360360208110156102b757600080fd5b50356001600160a01b0316610d93565b61016d610fbc565b61016d611167565b61026a61123d565b61026a611243565b61026a600480360360208110156102fd57600080fd5b50356001600160a01b0316611249565b61016d6004803603602081101561032357600080fd5b50356112bb565b61016d6114f0565b61026a6115c6565b6101776115cc565b61026a6115db565b6004546001600160a01b03163314610397576040805162461bcd60e51b815260206004820152601c6024820152600080516020611962833981519152604482015290519081900360640190fd5b6001600160a01b0381166103f2576040805162461bcd60e51b815260206004820152601d60248201527f496e76616c69642052657761726420546f6b656e20416464726573732e000000604482015290519081900360640190fd5b600880546001600160a01b0319166001600160a01b03831690811790915560405133907f2e1c61b104d80d0244d7aa46590a2e67c165723a6e43fcb389731dd090e324d490600090a350565b6003546001600160a01b031681565b6004546001600160a01b0316331461049a576040805162461bcd60e51b815260206004820152601c6024820152600080516020611962833981519152604482015290519081900360640190fd5b60028060065460ff1660048111156104ae57fe5b146104ea5760405162461bcd60e51b81526004018080602001828103825260278152602001806118636027913960400191505060405180910390fd5b600082116105295760405162461bcd60e51b81526004018080602001828103825260248152602001806119046024913960400191505060405180910390fd5b600354604080516323b872dd60e01b81523360048201523060248201526044810185905290516000926001600160a01b0316916323b872dd91606480830192602092919082900301818787803b15801561058257600080fd5b505af1158015610596573d6000803e3d6000fd5b505050506040513d60208110156105ac57600080fd5b50519050806105ec5760405162461bcd60e51b815260040180806020018281038252602281526020018061181c6022913960400191505060405180910390fd5b60408051848152905133917fb40939319ce4aad757337edb909235104a5db50bad569e463b37e1441780f371919081900360200190a2600054600354604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b15801561067057600080fd5b505afa158015610684573d6000803e3d6000fd5b505050506040513d602081101561069a57600080fd5b5051106106d8576006805460ff191660031790556040517fffd2e76576dce3794f83afe36ea9bbb778ba46b7e4c95d032832ca5858568ecb90600090a15b505050565b6004546001600160a01b0316331461072a576040805162461bcd60e51b815260206004820152601c6024820152600080516020611962833981519152604482015290519081900360640190fd5b600181905560408051828152905133917fe616a7b2221bdb5ebbb119ffc520a3c55372c015f171cbbdf2b923dbdc5bd8e9919081900360200190a250565b60065460ff1681565b6004546001600160a01b031633146107be576040805162461bcd60e51b815260206004820152601c6024820152600080516020611962833981519152604482015290519081900360640190fd5b6000548110156107ff5760405162461bcd60e51b815260040180806020018281038252603781526020018061188a6037913960400191505060405180910390fd5b600281905560408051828152905133917f955882670f7f0d0c27f69140aa26b5b036247f64a181423f02ee40e37422267b919081900360200190a250565b6004546001600160a01b0316331461088a576040805162461bcd60e51b815260206004820152601c6024820152600080516020611962833981519152604482015290519081900360640190fd5b6001600160a01b0381166108e5576040805162461bcd60e51b815260206004820152601d60248201527f4e6577204d756c7469736967206164647265737320696e76616c69642e000000604482015290519081900360640190fd5b600480546001600160a01b0319166001600160a01b03831690811790915560405133907fc49ab2967e3eb278a95b7304998ed5b0e5d6c090c37f3ba3cabd40ad7ca3b67d90600090a350565b6001541580159061094457504260015411155b61097f5760405162461bcd60e51b815260040180806020018281038252602581526020018061183e6025913960400191505060405180910390fd5b60038060065460ff16600481111561099357fe5b146109cf5760405162461bcd60e51b81526004018080602001828103825260278152602001806118636027913960400191505060405180910390fd5b6000805460075433835260056020526040832054610a0492916109f8919063ffffffff6115e116565b9063ffffffff61164116565b9050610a0e610fbc565b6008546040805163f33bf9a160e01b81523360048201526024810184905290516001600160a01b039092169163f33bf9a19160448082019260009290919082900301818387803b158015610a6157600080fd5b505af1158015610a75573d6000803e3d6000fd5b50506040805184815290513393507f278428ce6b15e876f936987c0935aca544a92b62407b9be13fec411694abbf2792509081900360200190a25050565b6001600160a01b0381166000908152600560205260409020545b919050565b6004546001600160a01b031681565b6004546001600160a01b03163314610b2e576040805162461bcd60e51b815260206004820152601c6024820152600080516020611962833981519152604482015290519081900360640190fd5b600360065460ff166004811115610b4157fe5b1415610b7e5760405162461bcd60e51b81526004018080602001828103825260418152602001806119826041913960600191505060405180910390fd5b60008111610bbd5760405162461bcd60e51b81526004018080602001828103825260248152602001806119046024913960400191505060405180910390fd5b600354604080516323b872dd60e01b81523360048201523060248201526044810184905290516000926001600160a01b0316916323b872dd91606480830192602092919082900301818787803b158015610c1657600080fd5b505af1158015610c2a573d6000803e3d6000fd5b505050506040513d6020811015610c4057600080fd5b5051905080610c805760405162461bcd60e51b815260040180806020018281038252602281526020018061181c6022913960400191505060405180910390fd5b600754610c93908363ffffffff61168316565b60078190556003546008546040805163095ea7b360e01b81526001600160a01b03928316600482015260248101949094525191169163095ea7b39160448083019260209291908290030181600087803b158015610cef57600080fd5b505af1158015610d03573d6000803e3d6000fd5b505050506040513d6020811015610d1957600080fd5b5051905080610d595760405162461bcd60e51b81526004018080602001828103825260228152602001806118c16022913960400191505060405180910390fd5b60408051838152905133917f9a9344d822c6480033db9b9da83bffd3abf8d38bae52c1d5085c47da18a52f71919081900360200190a25050565b6004546001600160a01b03163314610de0576040805162461bcd60e51b815260206004820152601c6024820152600080516020611962833981519152604482015290519081900360640190fd5b60028060065460ff166004811115610df457fe5b14610e305760405162461bcd60e51b81526004018080602001828103825260278152602001806118636027913960400191505060405180910390fd5b336001600160a01b03831615610e435750815b600354604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015610e8e57600080fd5b505afa158015610ea2573d6000803e3d6000fd5b505050506040513d6020811015610eb857600080fd5b50516003546040805163a9059cbb60e01b81526001600160a01b038681166004830152602482018590529151939450600093919092169163a9059cbb91604480830192602092919082900301818787803b158015610f1557600080fd5b505af1158015610f29573d6000803e3d6000fd5b505050506040513d6020811015610f3f57600080fd5b5051905080610f7f5760405162461bcd60e51b815260040180806020018281038252603a815260200180611928603a913960400191505060405180910390fd5b60408051838152905133917f5544e408756a3a50668b8a21fb8c1c15f76575cb77c51fa4dc602167737dc336919081900360200190a25050505050565b60015415801590610fcf57504260015411155b61100a5760405162461bcd60e51b815260040180806020018281038252602581526020018061183e6025913960400191505060405180910390fd5b60038060065460ff16600481111561101e57fe5b1461105a5760405162461bcd60e51b81526004018080602001828103825260278152602001806118636027913960400191505060405180910390fd5b336000818152600560209081526040808320805490849055600354825163a9059cbb60e01b8152600481019690965260248601829052915190946001600160a01b039092169263a9059cbb926044808201939182900301818787803b1580156110c257600080fd5b505af11580156110d6573d6000803e3d6000fd5b505050506040513d60208110156110ec57600080fd5b505190508061112c5760405162461bcd60e51b815260040180806020018281038252603a815260200180611928603a913960400191505060405180910390fd5b60408051838152905133917f68577e4d693c1b056a60bc4e39438810239a0bfe64869c4eb7e3baebb5f65634919081900360200190a2505050565b6004546001600160a01b031633146111b4576040805162461bcd60e51b815260206004820152601c6024820152600080516020611962833981519152604482015290519081900360640190fd5b60018060065460ff1660048111156111c857fe5b146112045760405162461bcd60e51b81526004018080602001828103825260278152602001806118636027913960400191505060405180910390fd5b6006805460ff191660021790556040517f5b088f927628e8de338290d95ecd2b47be7d5cf32f833c4e83139128e9e95b2a90600090a150565b60015481565b60075481565b6007546001600160a01b0382166000908152600560205260408120549091611277919063ffffffff6115e116565b61128357506000610acd565b600080546007546001600160a01b038516835260056020526040909220546112b5926109f8919063ffffffff6115e116565b92915050565b60018060065460ff1660048111156112cf57fe5b1461130b5760405162461bcd60e51b81526004018080602001828103825260278152602001806118636027913960400191505060405180910390fd5b6000821161134a5760405162461bcd60e51b81526004018080602001828103825260248152602001806119046024913960400191505060405180910390fd5b600254600054839190611363908363ffffffff61168316565b106113aa5760005460025461137d9163ffffffff6116dd16565b6040519091507f248455798e33b4871de4258bfab3fb4b1bc826e576369d72ee7c613e411d262f90600090a15b600354604080516323b872dd60e01b81523360048201523060248201526044810184905290516000926001600160a01b0316916323b872dd91606480830192602092919082900301818787803b15801561140357600080fd5b505af1158015611417573d6000803e3d6000fd5b505050506040513d602081101561142d57600080fd5b505190508061146d5760405162461bcd60e51b815260040180806020018281038252602281526020018061181c6022913960400191505060405180910390fd5b3360009081526005602052604090205461148d908363ffffffff61168316565b33600090815260056020526040812091909155546114b1908363ffffffff61168316565b60005560408051838152905133917f20b3fc91390f6ceba342f697a9490734680fd3556633f40efa146f1dbe79d05f919081900360200190a250505050565b6004546001600160a01b0316331461153d576040805162461bcd60e51b815260206004820152601c6024820152600080516020611962833981519152604482015290519081900360640190fd5b60008060065460ff16600481111561155157fe5b1461158d5760405162461bcd60e51b81526004018080602001828103825260278152602001806118636027913960400191505060405180910390fd5b6006805460ff191660011790556040517f1295541c130ffcc33980a4c0939feefa3de1f7989fae02b43176efa73973de0d90600090a150565b60025481565b6008546001600160a01b031681565b60005481565b6000826115f0575060006112b5565b828202828482816115fd57fe5b041461163a5760405162461bcd60e51b81526004018080602001828103825260218152602001806118e36021913960400191505060405180910390fd5b9392505050565b600061163a83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061171f565b60008282018381101561163a576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600061163a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506117c1565b600081836117ab5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611770578181015183820152602001611758565b50505050905090810190601f16801561179d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816117b757fe5b0495945050505050565b600081848411156118135760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611770578181015183820152602001611758565b50505090039056fe546f6b656e207472616e7366657220776173206e6f74207375636365737366756c2e5468652072656c656173652074696d6520686173206e6f742073746172746564207965742e54686520636f6e7472616374206973206e6f7420696e207468652072696768742073746174652e4465706f73697420616c726561647920686967686572207468616e20746865206c696d697420747279696e6720746f206265207365742e546f6b656e20417070726f76616c20776173206e6f74207375636365737366756c2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77416d6f756e74206e6565647320746f20626520626967676572207468616e207a65726f2e546f6b656e207472616e7366657220776173206e6f74207375636365737366756c2e20436865636b20726563656976657220616464726573732e4f6e6c79204d756c74697369672063616e2063616c6c20746869732e0000000052657761726420546f6b656e206465706f736974206973206f6e6c7920616c6c6f776564206265666f72652055736572205769746864726177207374617274732ea265627a7a72315820c25edbab48cbf5ab62b8d4983a3bfd7a66ceb9567efef6ca3e2d77d238e0480864736f6c63430005110032",
    "sourceMap": "349:4408:25:-;;;1973:321;8:9:-1;5:2;;;30:1;27;20:12;5:2;1973:321:25;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;1973:321:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5128:18:24;;5120:51;;;;;-1:-1:-1;;;5120:51:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5189:23:24;;5181:61;;;;;-1:-1:-1;;;5181:61:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;5253:3;:18;;-1:-1:-1;;;;;5253:18:24;;;-1:-1:-1;;;;;;5253:18:24;;;;;;;5281:8;:20;;;;;;;;;;;;;5317:34;;5329:10;;5317:34;;5253:3;;5317:34;5362:11;:26;;;;5398:12;:28;-1:-1:-1;;5437:6:24;:24;;-1:-1:-1;;5437:24:24;;;-1:-1:-1;;;;;2203:24:25;;;2199:89;;2243:9;:34;;-1:-1:-1;;;;;;2243:34:25;-1:-1:-1;;;;;2243:34:25;;;;;2199:89;1973:321;;;;;349:4408;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101425760003560e01c806377c5e10e116100b8578063c00007b01161007c578063c00007b0146102e7578063dd49756e1461030d578063e1c7392a1461032a578063ecf7085814610332578063f2f46b3b1461033a578063f6153ccd1461034257610142565b806377c5e10e146102a15780638d8f2adb146102c7578063b595c1d9146102cf578063b91d4001146102d7578063b92fd178146102df57610142565b806327debc0f1161010a57806327debc0f146101f95780632929c25c14610216578063309481e41461023c57806347734892146102445780634783c35b1461027c57806363683e5b1461028457610142565b80630570a9ed1461014757806308dcb3601461016f57806309d9287f146101935780630c6ca129146101b0578063200d2ed2146101cd575b600080fd5b61016d6004803603602081101561015d57600080fd5b50356001600160a01b031661034a565b005b61017761043e565b604080516001600160a01b039092168252519081900360200190f35b61016d600480360360208110156101a957600080fd5b503561044d565b61016d600480360360208110156101c657600080fd5b50356106dd565b6101d5610768565b604051808260048111156101e557fe5b60ff16815260200191505060405180910390f35b61016d6004803603602081101561020f57600080fd5b5035610771565b61016d6004803603602081101561022c57600080fd5b50356001600160a01b031661083d565b61016d610931565b61026a6004803603602081101561025a57600080fd5b50356001600160a01b0316610ab3565b60408051918252519081900360200190f35b610177610ad2565b61016d6004803603602081101561029a57600080fd5b5035610ae1565b61016d600480360360208110156102b757600080fd5b50356001600160a01b0316610d93565b61016d610fbc565b61016d611167565b61026a61123d565b61026a611243565b61026a600480360360208110156102fd57600080fd5b50356001600160a01b0316611249565b61016d6004803603602081101561032357600080fd5b50356112bb565b61016d6114f0565b61026a6115c6565b6101776115cc565b61026a6115db565b6004546001600160a01b03163314610397576040805162461bcd60e51b815260206004820152601c6024820152600080516020611962833981519152604482015290519081900360640190fd5b6001600160a01b0381166103f2576040805162461bcd60e51b815260206004820152601d60248201527f496e76616c69642052657761726420546f6b656e20416464726573732e000000604482015290519081900360640190fd5b600880546001600160a01b0319166001600160a01b03831690811790915560405133907f2e1c61b104d80d0244d7aa46590a2e67c165723a6e43fcb389731dd090e324d490600090a350565b6003546001600160a01b031681565b6004546001600160a01b0316331461049a576040805162461bcd60e51b815260206004820152601c6024820152600080516020611962833981519152604482015290519081900360640190fd5b60028060065460ff1660048111156104ae57fe5b146104ea5760405162461bcd60e51b81526004018080602001828103825260278152602001806118636027913960400191505060405180910390fd5b600082116105295760405162461bcd60e51b81526004018080602001828103825260248152602001806119046024913960400191505060405180910390fd5b600354604080516323b872dd60e01b81523360048201523060248201526044810185905290516000926001600160a01b0316916323b872dd91606480830192602092919082900301818787803b15801561058257600080fd5b505af1158015610596573d6000803e3d6000fd5b505050506040513d60208110156105ac57600080fd5b50519050806105ec5760405162461bcd60e51b815260040180806020018281038252602281526020018061181c6022913960400191505060405180910390fd5b60408051848152905133917fb40939319ce4aad757337edb909235104a5db50bad569e463b37e1441780f371919081900360200190a2600054600354604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b15801561067057600080fd5b505afa158015610684573d6000803e3d6000fd5b505050506040513d602081101561069a57600080fd5b5051106106d8576006805460ff191660031790556040517fffd2e76576dce3794f83afe36ea9bbb778ba46b7e4c95d032832ca5858568ecb90600090a15b505050565b6004546001600160a01b0316331461072a576040805162461bcd60e51b815260206004820152601c6024820152600080516020611962833981519152604482015290519081900360640190fd5b600181905560408051828152905133917fe616a7b2221bdb5ebbb119ffc520a3c55372c015f171cbbdf2b923dbdc5bd8e9919081900360200190a250565b60065460ff1681565b6004546001600160a01b031633146107be576040805162461bcd60e51b815260206004820152601c6024820152600080516020611962833981519152604482015290519081900360640190fd5b6000548110156107ff5760405162461bcd60e51b815260040180806020018281038252603781526020018061188a6037913960400191505060405180910390fd5b600281905560408051828152905133917f955882670f7f0d0c27f69140aa26b5b036247f64a181423f02ee40e37422267b919081900360200190a250565b6004546001600160a01b0316331461088a576040805162461bcd60e51b815260206004820152601c6024820152600080516020611962833981519152604482015290519081900360640190fd5b6001600160a01b0381166108e5576040805162461bcd60e51b815260206004820152601d60248201527f4e6577204d756c7469736967206164647265737320696e76616c69642e000000604482015290519081900360640190fd5b600480546001600160a01b0319166001600160a01b03831690811790915560405133907fc49ab2967e3eb278a95b7304998ed5b0e5d6c090c37f3ba3cabd40ad7ca3b67d90600090a350565b6001541580159061094457504260015411155b61097f5760405162461bcd60e51b815260040180806020018281038252602581526020018061183e6025913960400191505060405180910390fd5b60038060065460ff16600481111561099357fe5b146109cf5760405162461bcd60e51b81526004018080602001828103825260278152602001806118636027913960400191505060405180910390fd5b6000805460075433835260056020526040832054610a0492916109f8919063ffffffff6115e116565b9063ffffffff61164116565b9050610a0e610fbc565b6008546040805163f33bf9a160e01b81523360048201526024810184905290516001600160a01b039092169163f33bf9a19160448082019260009290919082900301818387803b158015610a6157600080fd5b505af1158015610a75573d6000803e3d6000fd5b50506040805184815290513393507f278428ce6b15e876f936987c0935aca544a92b62407b9be13fec411694abbf2792509081900360200190a25050565b6001600160a01b0381166000908152600560205260409020545b919050565b6004546001600160a01b031681565b6004546001600160a01b03163314610b2e576040805162461bcd60e51b815260206004820152601c6024820152600080516020611962833981519152604482015290519081900360640190fd5b600360065460ff166004811115610b4157fe5b1415610b7e5760405162461bcd60e51b81526004018080602001828103825260418152602001806119826041913960600191505060405180910390fd5b60008111610bbd5760405162461bcd60e51b81526004018080602001828103825260248152602001806119046024913960400191505060405180910390fd5b600354604080516323b872dd60e01b81523360048201523060248201526044810184905290516000926001600160a01b0316916323b872dd91606480830192602092919082900301818787803b158015610c1657600080fd5b505af1158015610c2a573d6000803e3d6000fd5b505050506040513d6020811015610c4057600080fd5b5051905080610c805760405162461bcd60e51b815260040180806020018281038252602281526020018061181c6022913960400191505060405180910390fd5b600754610c93908363ffffffff61168316565b60078190556003546008546040805163095ea7b360e01b81526001600160a01b03928316600482015260248101949094525191169163095ea7b39160448083019260209291908290030181600087803b158015610cef57600080fd5b505af1158015610d03573d6000803e3d6000fd5b505050506040513d6020811015610d1957600080fd5b5051905080610d595760405162461bcd60e51b81526004018080602001828103825260228152602001806118c16022913960400191505060405180910390fd5b60408051838152905133917f9a9344d822c6480033db9b9da83bffd3abf8d38bae52c1d5085c47da18a52f71919081900360200190a25050565b6004546001600160a01b03163314610de0576040805162461bcd60e51b815260206004820152601c6024820152600080516020611962833981519152604482015290519081900360640190fd5b60028060065460ff166004811115610df457fe5b14610e305760405162461bcd60e51b81526004018080602001828103825260278152602001806118636027913960400191505060405180910390fd5b336001600160a01b03831615610e435750815b600354604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015610e8e57600080fd5b505afa158015610ea2573d6000803e3d6000fd5b505050506040513d6020811015610eb857600080fd5b50516003546040805163a9059cbb60e01b81526001600160a01b038681166004830152602482018590529151939450600093919092169163a9059cbb91604480830192602092919082900301818787803b158015610f1557600080fd5b505af1158015610f29573d6000803e3d6000fd5b505050506040513d6020811015610f3f57600080fd5b5051905080610f7f5760405162461bcd60e51b815260040180806020018281038252603a815260200180611928603a913960400191505060405180910390fd5b60408051838152905133917f5544e408756a3a50668b8a21fb8c1c15f76575cb77c51fa4dc602167737dc336919081900360200190a25050505050565b60015415801590610fcf57504260015411155b61100a5760405162461bcd60e51b815260040180806020018281038252602581526020018061183e6025913960400191505060405180910390fd5b60038060065460ff16600481111561101e57fe5b1461105a5760405162461bcd60e51b81526004018080602001828103825260278152602001806118636027913960400191505060405180910390fd5b336000818152600560209081526040808320805490849055600354825163a9059cbb60e01b8152600481019690965260248601829052915190946001600160a01b039092169263a9059cbb926044808201939182900301818787803b1580156110c257600080fd5b505af11580156110d6573d6000803e3d6000fd5b505050506040513d60208110156110ec57600080fd5b505190508061112c5760405162461bcd60e51b815260040180806020018281038252603a815260200180611928603a913960400191505060405180910390fd5b60408051838152905133917f68577e4d693c1b056a60bc4e39438810239a0bfe64869c4eb7e3baebb5f65634919081900360200190a2505050565b6004546001600160a01b031633146111b4576040805162461bcd60e51b815260206004820152601c6024820152600080516020611962833981519152604482015290519081900360640190fd5b60018060065460ff1660048111156111c857fe5b146112045760405162461bcd60e51b81526004018080602001828103825260278152602001806118636027913960400191505060405180910390fd5b6006805460ff191660021790556040517f5b088f927628e8de338290d95ecd2b47be7d5cf32f833c4e83139128e9e95b2a90600090a150565b60015481565b60075481565b6007546001600160a01b0382166000908152600560205260408120549091611277919063ffffffff6115e116565b61128357506000610acd565b600080546007546001600160a01b038516835260056020526040909220546112b5926109f8919063ffffffff6115e116565b92915050565b60018060065460ff1660048111156112cf57fe5b1461130b5760405162461bcd60e51b81526004018080602001828103825260278152602001806118636027913960400191505060405180910390fd5b6000821161134a5760405162461bcd60e51b81526004018080602001828103825260248152602001806119046024913960400191505060405180910390fd5b600254600054839190611363908363ffffffff61168316565b106113aa5760005460025461137d9163ffffffff6116dd16565b6040519091507f248455798e33b4871de4258bfab3fb4b1bc826e576369d72ee7c613e411d262f90600090a15b600354604080516323b872dd60e01b81523360048201523060248201526044810184905290516000926001600160a01b0316916323b872dd91606480830192602092919082900301818787803b15801561140357600080fd5b505af1158015611417573d6000803e3d6000fd5b505050506040513d602081101561142d57600080fd5b505190508061146d5760405162461bcd60e51b815260040180806020018281038252602281526020018061181c6022913960400191505060405180910390fd5b3360009081526005602052604090205461148d908363ffffffff61168316565b33600090815260056020526040812091909155546114b1908363ffffffff61168316565b60005560408051838152905133917f20b3fc91390f6ceba342f697a9490734680fd3556633f40efa146f1dbe79d05f919081900360200190a250505050565b6004546001600160a01b0316331461153d576040805162461bcd60e51b815260206004820152601c6024820152600080516020611962833981519152604482015290519081900360640190fd5b60008060065460ff16600481111561155157fe5b1461158d5760405162461bcd60e51b81526004018080602001828103825260278152602001806118636027913960400191505060405180910390fd5b6006805460ff191660011790556040517f1295541c130ffcc33980a4c0939feefa3de1f7989fae02b43176efa73973de0d90600090a150565b60025481565b6008546001600160a01b031681565b60005481565b6000826115f0575060006112b5565b828202828482816115fd57fe5b041461163a5760405162461bcd60e51b81526004018080602001828103825260218152602001806118e36021913960400191505060405180910390fd5b9392505050565b600061163a83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061171f565b60008282018381101561163a576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600061163a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506117c1565b600081836117ab5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611770578181015183820152602001611758565b50505050905090810190601f16801561179d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816117b757fe5b0495945050505050565b600081848411156118135760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611770578181015183820152602001611758565b50505090039056fe546f6b656e207472616e7366657220776173206e6f74207375636365737366756c2e5468652072656c656173652074696d6520686173206e6f742073746172746564207965742e54686520636f6e7472616374206973206e6f7420696e207468652072696768742073746174652e4465706f73697420616c726561647920686967686572207468616e20746865206c696d697420747279696e6720746f206265207365742e546f6b656e20417070726f76616c20776173206e6f74207375636365737366756c2e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77416d6f756e74206e6565647320746f20626520626967676572207468616e207a65726f2e546f6b656e207472616e7366657220776173206e6f74207375636365737366756c2e20436865636b20726563656976657220616464726573732e4f6e6c79204d756c74697369672063616e2063616c6c20746869732e0000000052657761726420546f6b656e206465706f736974206973206f6e6c7920616c6c6f776564206265666f72652055736572205769746864726177207374617274732ea265627a7a72315820c25edbab48cbf5ab62b8d4983a3bfd7a66ceb9567efef6ca3e2d77d238e0480864736f6c63430005110032",
    "sourceMap": "349:4408:25:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;349:4408:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2446:251;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2446:251:25;-1:-1:-1;;;;;2446:251:25;;:::i;:::-;;832:17:24;;;:::i;:::-;;;;-1:-1:-1;;;;;832:17:24;;;;;;;;;;;;;;9740:559;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9740:559:24;;:::i;6398:189::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6398:189:24;;:::i;1481:20::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6767:338;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6767:338:24;;:::i;5934:240::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5934:240:24;-1:-1:-1;;;;;5934:240:24;;:::i;3844:410:25:-;;;:::i;11011:122:24:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11011:122:24;-1:-1:-1;;;;;11011:122:24;;:::i;:::-;;;;;;;;;;;;;;;;918:23;;;:::i;2932:700:25:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2932:700:25;;:::i;8789:603:24:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8789:603:24;-1:-1:-1;;;;;8789:603:24;;:::i;10443:367::-;;;:::i;8326:160::-;;;:::i;649:26::-;;;:::i;578:33:25:-;;;:::i;4501:254::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4501:254:25;-1:-1:-1;;;;;4501:254:25;;:::i;7415:663:24:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7415:663:24;;:::i;5673:140::-;;;:::i;758:27::-;;;:::i;659::25:-;;;:::i;552::24:-;;;:::i;2446:251:25:-;4264:8:24;;-1:-1:-1;;;;;4264:8:24;4250:10;:22;4242:63;;;;;-1:-1:-1;;;4242:63:24;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4242:63:24;;;;;;;;;;;;;;;-1:-1:-1;;;;;2531:24:25;;2523:66;;;;;-1:-1:-1;;;2523:66:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;2600:9;:34;;-1:-1:-1;;;;;;2600:34:25;-1:-1:-1;;;;;2600:34:25;;;;;;;;2650:40;;2667:10;;2650:40;;-1:-1:-1;;2650:40:25;2446:251;:::o;832:17:24:-;;;-1:-1:-1;;;;;832:17:24;;:::o;9740:559::-;4264:8;;-1:-1:-1;;;;;4264:8:24;4250:10;:22;4242:63;;;;;-1:-1:-1;;;4242:63:24;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4242:63:24;;;;;;;;;;;;;;;9848:14;;4378:6;;;;:11;;;;;;;;;4370:63;;;;-1:-1:-1;;;4370:63:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9896:1;9886:7;:11;9878:60;;;;-1:-1:-1;;;9878:60:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9965:3;;:52;;;-1:-1:-1;;;9965:52:24;;9982:10;9965:52;;;;10002:4;9965:52;;;;;;;;;;;;9949:13;;-1:-1:-1;;;;;9965:3:24;;:16;;:52;;;;;;;;;;;;;;9949:13;9965:3;:52;;;5:2:-1;;;;30:1;27;20:12;5:2;9965:52:24;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9965:52:24;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9965:52:24;;-1:-1:-1;9965:52:24;10027:55;;;;-1:-1:-1;;;10027:55:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10098:43;;;;;;;;10121:10;;10098:43;;;;;;;;;;10188:12;;10156:3;;:28;;;-1:-1:-1;;;10156:28:24;;10178:4;10156:28;;;;;;-1:-1:-1;;;;;10156:3:24;;;;:13;;:28;;;;;;;;;;;;;;;:3;:28;;;5:2:-1;;;;30:1;27;20:12;5:2;10156:28:24;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10156:28:24;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10156:28:24;:44;10152:141;;10216:6;:24;;-1:-1:-1;;10216:24:24;10225:15;10216:24;;;10259:23;;;;-1:-1:-1;;10259:23:24;10152:141;4443:1;4315;9740:559;:::o;6398:189::-;4264:8;;-1:-1:-1;;;;;4264:8:24;4250:10;:22;4242:63;;;;;-1:-1:-1;;;4242:63:24;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4242:63:24;;;;;;;;;;;;;;;6487:11;:29;;;6532:48;;;;;;;;6552:10;;6532:48;;;;;;;;;;6398:189;:::o;1481:20::-;;;;;;:::o;6767:338::-;4264:8;;-1:-1:-1;;;;;4264:8:24;4250:10;:22;4242:63;;;;;-1:-1:-1;;;4242:63:24;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4242:63:24;;;;;;;;;;;;;;;6894:12;;6874:16;:32;;6853:134;;;;-1:-1:-1;;;6853:134:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6997:12;:31;;;7044:54;;;;;;;;7069:10;;7044:54;;;;;;;;;;6767:338;:::o;5934:240::-;4264:8;;-1:-1:-1;;;;;4264:8:24;4250:10;:22;4242:63;;;;;-1:-1:-1;;;4242:63:24;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4242:63:24;;;;;;;;;;;;;;;-1:-1:-1;;;;;6020:26:24;;6012:68;;;;;-1:-1:-1;;;6012:68:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;6091:8;:23;;-1:-1:-1;;;;;;6091:23:24;-1:-1:-1;;;;;6091:23:24;;;;;;;;6130:37;;6142:10;;6130:37;;-1:-1:-1;;6130:37:24;5934:240;:::o;3844:410:25:-;4512:11:24;;:16;;;;:50;;;4547:15;4532:11;;:30;;4512:50;4491:134;;;;-1:-1:-1;;;4491:134:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3913:15:25;;4378:6:24;;;;:11;;;;;;;;;4370:63;;;;-1:-1:-1;;;4370:63:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4032:14:25;4102:12;;4078:18;;4062:10;4049:24;;:12;:24;;;;;;:66;;4102:12;4049:48;;:24;:48;:28;:48;:::i;:::-;:52;:66;:52;:66;:::i;:::-;4032:83;;4125:16;:14;:16::i;:::-;4152:9;;:40;;;-1:-1:-1;;;4152:40:25;;4173:10;4152:40;;;;;;;;;;;;-1:-1:-1;;;;;4152:9:25;;;;:20;;:40;;;;;:9;;:40;;;;;;;;:9;;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;4152:40:25;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;4208:39:25;;;;;;;;4228:10;;-1:-1:-1;4208:39:25;;-1:-1:-1;4208:39:25;;;;;;;;4443:1:24;4635;3844:410:25:o;11011:122:24:-;-1:-1:-1;;;;;11107:19:24;;11073:15;11107:19;;;:12;:19;;;;;;11011:122;;;;:::o;918:23::-;;;-1:-1:-1;;;;;918:23:24;;:::o;2932:700:25:-;4264:8:24;;-1:-1:-1;;;;;4264:8:24;4250:10;:22;4242:63;;;;;-1:-1:-1;;;4242:63:24;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4242:63:24;;;;;;;;;;;;;;;3045:15:25;3035:6;;;;:25;;;;;;;;;;3014:137;;;;-1:-1:-1;;;3014:137:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3179:1;3169:7;:11;3161:60;;;;-1:-1:-1;;;3161:60:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3248:3;;:52;;;-1:-1:-1;;;3248:52:25;;3265:10;3248:52;;;;3285:4;3248:52;;;;;;;;;;;;3232:13;;-1:-1:-1;;;;;3248:3:25;;:16;;:52;;;;;;;;;;;;;;3232:13;3248:3;:52;;;5:2:-1;;;;30:1;27;20:12;5:2;3248:52:25;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3248:52:25;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3248:52:25;;-1:-1:-1;3248:52:25;3310:55;;;;-1:-1:-1;;;3310:55:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3397:18;;:31;;3420:7;3397:31;:22;:31;:::i;:::-;3376:18;:52;;;3449:3;;3469:9;;3449:51;;;-1:-1:-1;;;3449:51:25;;-1:-1:-1;;;;;3469:9:25;;;3449:51;;;;;;;;;;;;:3;;;:11;;:51;;;;;;;;;;;;;;:3;;:51;;;5:2:-1;;;;30:1;27;20:12;5:2;3449:51:25;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3449:51:25;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3449:51:25;;-1:-1:-1;3449:51:25;3510:55;;;;-1:-1:-1;;;3510:55:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3581:44;;;;;;;;3605:10;;3581:44;;;;;;;;;;4315:1:24;2932:700:25;:::o;8789:603:24:-;4264:8;;-1:-1:-1;;;;;4264:8:24;4250:10;:22;4242:63;;;;;-1:-1:-1;;;4242:63:24;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4242:63:24;;;;;;;;;;;;;;;8907:14;;4378:6;;;;:11;;;;;;;;;4370:63;;;;-1:-1:-1;;;4370:63:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8963:10;-1:-1:-1;;;;;8987:30:24;;;8983:95;;-1:-1:-1;9051:16:24;8983:95;9104:3;;:28;;;-1:-1:-1;;;9104:28:24;;9126:4;9104:28;;;;;;9088:13;;-1:-1:-1;;;;;9104:3:24;;:13;;:28;;;;;;;;;;;;;;:3;:28;;;5:2:-1;;;;30:1;27;20:12;5:2;9104:28:24;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9104:28:24;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9104:28:24;9202:3;;:36;;;-1:-1:-1;;;9202:36:24;;-1:-1:-1;;;;;9202:36:24;;;;;;;;;;;;;;;9104:28;;-1:-1:-1;9186:13:24;;9202:3;;;;;:12;;:36;;;;;9104:28;;9202:36;;;;;;;9186:13;9202:3;:36;;;5:2:-1;;;;30:1;27;20:12;5:2;9202:36:24;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9202:36:24;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9202:36:24;;-1:-1:-1;9202:36:24;9248:79;;;;-1:-1:-1;;;9248:79:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9343:42;;;;;;;;9367:10;;9343:42;;;;;;;;;;4443:1;;;4315;8789:603;:::o;10443:367::-;4512:11;;:16;;;;:50;;;4547:15;4532:11;;:30;;4512:50;4491:134;;;;-1:-1:-1;;;4491:134:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10501:15;;4378:6;;;;:11;;;;;;;;;4370:63;;;;-1:-1:-1;;;4370:63:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10558:10;10528:14;10545:24;;;:12;:24;;;;;;;;;;10579:28;;;;10633:3;;:32;;-1:-1:-1;;;10633:32:24;;;;;;;;;;;;;;;;;10545:24;;-1:-1:-1;;;;;10633:3:24;;;;:12;;:32;;;;;;;;;;;10528:14;10633:3;:32;;;5:2:-1;;;;30:1;27;20:12;5:2;10633:32:24;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10633:32:24;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10633:32:24;;-1:-1:-1;10633:32:24;10675:79;;;;-1:-1:-1;;;10675:79:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10770:33;;;;;;;;10784:10;;10770:33;;;;;;;;;;4443:1;;4635;10443:367::o;8326:160::-;4264:8;;-1:-1:-1;;;;;4264:8:24;4250:10;:22;4242:63;;;;;-1:-1:-1;;;4242:63:24;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4242:63:24;;;;;;;;;;;;;;;8392:14;;4378:6;;;;:11;;;;;;;;;4370:63;;;;-1:-1:-1;;;4370:63:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8418:6;:23;;-1:-1:-1;;8418:23:24;8427:14;8418:23;;;8457:22;;;;-1:-1:-1;;8457:22:24;4315:1;8326:160::o;649:26::-;;;;:::o;578:33:25:-;;;;:::o;4501:254::-;4612:18;;-1:-1:-1;;;;;4588:19:25;;4558:14;4588:19;;;:12;:19;;;;;;4558:14;;4588:43;;:19;:43;:23;:43;:::i;:::-;4584:87;;-1:-1:-1;4659:1:25;4652:8;;4584:87;4735:12;;;4711:18;;-1:-1:-1;;;;;4687:19:25;;;;:12;:19;;;;;;;:61;;:43;;:19;:43;:23;:43;:::i;:61::-;4680:68;4501:254;-1:-1:-1;;4501:254:25:o;7415:663:24:-;7476:14;;4378:6;;;;:11;;;;;;;;;4370:63;;;;-1:-1:-1;;;4370:63:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7520:1;7510:7;:11;7502:60;;;;-1:-1:-1;;;7502:60:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7640:12;;7572:14;7611:12;7589:7;;7640:12;7611:25;;7589:7;7611:25;:16;:25;:::i;:::-;:41;7607:151;;7694:12;;7677;;:30;;;:16;:30;:::i;:::-;7726:21;;7668:39;;-1:-1:-1;7726:21:24;;;;;7607:151;7784:3;;:51;;;-1:-1:-1;;;7784:51:24;;7801:10;7784:51;;;;7821:4;7784:51;;;;;;;;;;;;7768:13;;-1:-1:-1;;;;;7784:3:24;;:16;;:51;;;;;;;;;;;;;;7768:13;7784:3;:51;;;5:2:-1;;;;30:1;27;20:12;5:2;7784:51:24;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7784:51:24;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7784:51:24;;-1:-1:-1;7784:51:24;7845:55;;;;-1:-1:-1;;;7845:55:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7951:10;7938:24;;;;:12;:24;;;;;;:36;;7967:6;7938:36;:28;:36;:::i;:::-;7924:10;7911:24;;;;:12;:24;;;;;:63;;;;7999:12;:24;;8016:6;7999:24;:16;:24;:::i;:::-;7984:12;:39;8039:32;;;;;;;;8052:10;;8039:32;;;;;;;;;;4443:1;;7415:663;;:::o;5673:140::-;4264:8;;-1:-1:-1;;;;;4264:8:24;4250:10;:22;4242:63;;;;;-1:-1:-1;;;4242:63:24;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4242:63:24;;;;;;;;;;;;;;;5723:15;;4378:6;;;;:11;;;;;;;;;4370:63;;;;-1:-1:-1;;;4370:63:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5750:6;:23;;-1:-1:-1;;5750:23:24;5759:14;5750:23;;;5789:17;;;;-1:-1:-1;;5789:17:24;4315:1;5673:140::o;758:27::-;;;;:::o;659::25:-;;;-1:-1:-1;;;;;659:27:25;;:::o;552::24:-;;;;:::o;2197:459:188:-;2255:7;2496:6;2492:45;;-1:-1:-1;2525:1:188;2518:8;;2492:45;2559:5;;;2563:1;2559;:5;:1;2582:5;;;;;:10;2574:56;;;;-1:-1:-1;;;2574:56:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2648:1;2197:459;-1:-1:-1;;;2197:459:188:o;3111:130::-;3169:7;3195:39;3199:1;3202;3195:39;;;;;;;;;;;;;;;;;:3;:39::i;842:176::-;900:7;931:5;;;954:6;;;;946:46;;;;;-1:-1:-1;;;946:46:188;;;;;;;;;;;;;;;;;;;;;;;;;;;1282:134;1340:7;1366:43;1370:1;1373;1366:43;;;;;;;;;;;;;;;;;:3;:43::i;3756:369::-;3872:7;3973:12;3965:6;3957:29;;;;-1:-1:-1;;;3957:29:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3957:29:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3996:9;4012:1;4008;:5;;;;;;;3756:369;-1:-1:-1;;;;;3756:369:188:o;1740:217::-;1856:7;1891:12;1883:6;;;;1875:29;;;;-1:-1:-1;;;1875:29:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;1875:29:188;-1:-1:-1;;;1926:5:188;;;1740:217::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "SOV()": "08dcb360",
    "changeStateToHolding()": "b595c1d9",
    "depositLimit()": "ecf70858",
    "depositRewardByMultisig(uint256)": "63683e5b",
    "depositTokens(uint256)": "dd49756e",
    "depositTokensByMultisig(uint256)": "09d9287f",
    "getReward(address)": "c00007b0",
    "getUserBalance(address)": "47734892",
    "init()": "e1c7392a",
    "lockedSOV()": "f2f46b3b",
    "multisig()": "4783c35b",
    "releaseTime()": "b91d4001",
    "status()": "200d2ed2",
    "totalDeposit()": "f6153ccd",
    "totalRewardDeposit()": "b92fd178",
    "updateDepositLimit(uint256)": "27debc0f",
    "updateLockedSOV(address)": "0570a9ed",
    "updateMultisig(address)": "2929c25c",
    "updateReleaseTimestamp(uint256)": "0c6ca129",
    "withdrawTokens()": "8d8f2adb",
    "withdrawTokensAndReward()": "309481e4",
    "withdrawTokensByMultisig(address)": "77c5e10e"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lockedSOV\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_SOV\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_multisig\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_releaseTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_depositLimit\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"DepositLimitReached\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EscrowActivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EscrowFundExpired\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EscrowInHoldingState\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EscrowInWithdrawState\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_initiator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_lockedSOV\",\"type\":\"address\"}],\"name\":\"LockedSOVUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_initiator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newMultisig\",\"type\":\"address\"}],\"name\":\"NewMultisig\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_initiator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"RewardDepositByMultisig\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_initiator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"RewardTokenWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_initiator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TokenDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_initiator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TokenDepositByMultisig\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_initiator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_depositLimit\",\"type\":\"uint256\"}],\"name\":\"TokenDepositLimitUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_initiator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_releaseTimestamp\",\"type\":\"uint256\"}],\"name\":\"TokenReleaseUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_initiator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TokenWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_initiator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TokenWithdrawByMultisig\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"SOV\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"changeStateToHolding\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"depositLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositRewardByMultisig\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositTokensByMultisig\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getUserBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"init\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lockedSOV\",\"outputs\":[{\"internalType\":\"contract ILockedSOV\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"multisig\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"releaseTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"status\",\"outputs\":[{\"internalType\":\"enum Escrow.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalRewardDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newDepositLimit\",\"type\":\"uint256\"}],\"name\":\"updateDepositLimit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lockedSOV\",\"type\":\"address\"}],\"name\":\"updateLockedSOV\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newMultisig\",\"type\":\"address\"}],\"name\":\"updateMultisig\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newReleaseTime\",\"type\":\"uint256\"}],\"name\":\"updateReleaseTimestamp\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawTokensAndReward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiverAddress\",\"type\":\"address\"}],\"name\":\"withdrawTokensByMultisig\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Franklin Richards - powerhousefrank@protonmail.com\",\"methods\":{\"changeStateToHolding()\":{\"details\":\"Once called, the contract no longer accepts any more deposits. The multisig can now withdraw tokens from the contract after the contract is in Holding State.\"},\"constructor\":{\"params\":{\"_SOV\":\"The SOV token address.\",\"_depositLimit\":\"The amount of tokens we will be accepting.\",\"_lockedSOV\":\"The Locked SOV Contract address.\",\"_multisig\":\"The owner of the tokens & contract.\",\"_releaseTime\":\"The token release time, zero if undecided.\"}},\"depositRewardByMultisig(uint256)\":{\"details\":\"The contract has to be approved by the multisig inorder for this function to work.\",\"params\":{\"_amount\":\"the amount of tokens deposited.\"}},\"depositTokens(uint256)\":{\"details\":\"The contract has to be approved by the user inorder for this function to work. These tokens can be withdrawn/transferred during Holding State by the Multisig.\",\"params\":{\"_amount\":\"the amount of tokens deposited.\"}},\"depositTokensByMultisig(uint256)\":{\"details\":\"The contract has to be approved by the multisig inorder for this function to work. Once the token deposit is higher than the total deposits done, the contract state is changed to Withdraw.\",\"params\":{\"_amount\":\"the amount of tokens deposited.\"}},\"getReward(address)\":{\"params\":{\"_addr\":\"The address of the user whose reward is to be read.\"},\"return\":\"reward The reward received by the user.\"},\"getUserBalance(address)\":{\"return\":\"_addr The user address whose balance has to be checked.\"},\"init()\":{\"details\":\"Without calling this function, the contract will not start accepting tokens.\"},\"updateDepositLimit(uint256)\":{\"details\":\"IMPORTANT: Should not decrease than already deposited.\",\"params\":{\"_newDepositLimit\":\"The new deposit limit.\"}},\"updateLockedSOV(address)\":{\"params\":{\"_lockedSOV\":\"The Locked SOV Contract address.\"}},\"updateMultisig(address)\":{\"params\":{\"_newMultisig\":\"The new owner of the tokens & contract.\"}},\"updateReleaseTimestamp(uint256)\":{\"details\":\"Zero is also a valid timestamp, if the release time is not scheduled yet.\",\"params\":{\"_newReleaseTime\":\"The new release timestamp for token release.\"}},\"withdrawTokens()\":{\"details\":\"Only works after the contract state is in Withdraw.\"},\"withdrawTokensAndReward()\":{\"details\":\"Only works after the contract state is in Withdraw.\"},\"withdrawTokensByMultisig(address)\":{\"details\":\"Can only be called after the token state is changed to Holding.\",\"params\":{\"_receiverAddress\":\"The address where the tokens has to be transferred. Zero address if the withdraw is to be done in Multisig.\"}}},\"title\":\"A reward distribution contract for Sovryn Ethereum Pool Escrow Contract.\"},\"userdoc\":{\"methods\":{\"changeStateToHolding()\":{\"notice\":\"Update contract state to Holding.\"},\"constructor\":\"Setup the required parameters.\",\"depositRewardByMultisig(uint256)\":{\"notice\":\"Deposit tokens to this contract by the Multisig.\"},\"depositTokens(uint256)\":{\"notice\":\"Deposit tokens to this contract by User.\"},\"depositTokensByMultisig(uint256)\":{\"notice\":\"Deposit tokens to this contract by the Multisig.\"},\"getReward(address)\":{\"notice\":\"Function to read the reward a particular user can get.\"},\"getUserBalance(address)\":{\"notice\":\"Function to read the current token balance of a particular user.\"},\"init()\":{\"notice\":\"This function is called once after deployment for starting the deposit action.\"},\"updateDepositLimit(uint256)\":{\"notice\":\"Update Deposit Limit.\"},\"updateLockedSOV(address)\":{\"notice\":\"Set the Locked SOV Contract Address if not already done.\"},\"updateMultisig(address)\":{\"notice\":\"Update Multisig.\"},\"updateReleaseTimestamp(uint256)\":{\"notice\":\"Update Release Timestamp.\"},\"withdrawTokens()\":{\"notice\":\"Withdraws token from the contract by User.\"},\"withdrawTokensAndReward()\":{\"notice\":\"Withdraws token and reward from the contract by User. Reward is gone to lockedSOV contract for future vesting.\"},\"withdrawTokensByMultisig(address)\":{\"notice\":\"Withdraws all token from the contract by Multisig.\"}},\"notice\":\"Multisig can use this contract for depositing of Reward tokens based on the total token deposit.\"}},\"settings\":{\"compilationTarget\":{\"contracts/escrow/EscrowReward.sol\":\"EscrowReward\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@ethereum-waffle/=node_modules/@ethereum-waffle/\",\":ds-test/=foundry/lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=foundry/lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":truffle/=node_modules/truffle/\"]},\"sources\":{\"contracts/escrow/Escrow.sol\":{\"keccak256\":\"0xb68dc63d2c1f67a13f881b933f68e4a2a5ab4809e05b18196a59d2b88365a60d\",\"urls\":[\"bzz-raw://6e1c557f17f9c530eac8cc6d6c1866fa82c238258f9a1157aa85f594a1bfbb73\",\"dweb:/ipfs/QmchhP2Rxb49TjTNmAnn5xp2ZVpjxBFKpVqouHAx9eMxAq\"]},\"contracts/escrow/EscrowReward.sol\":{\"keccak256\":\"0x71d042a2735d106191061b4934a89ba4b5ae00ae3409b258cf786776a7adf496\",\"urls\":[\"bzz-raw://ef9f45aacc304ea5f20eccd7454eb2679582aabef1cdb1fbd0665de5af915844\",\"dweb:/ipfs/Qmd5oCG1cw2nw4NJRkR7L3tq9kNc6CrvArtHfaBnEXbBVf\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xea0bb1bf7d022130bb42a4efdfd875ef76ac5ac730a94ddd7b8c9949d4253855\",\"urls\":[\"bzz-raw://2050b03a2a1d4203698261daf2f46749bf5b72e3d23c272553e047e6bea4af40\",\"dweb:/ipfs/QmPY8bbNv3KxnyQ4Z6DtHkYu2U1Kfd7ooRDRUWNuw6v4Jt\"]},\"contracts/locked/ILockedSOV.sol\":{\"keccak256\":\"0x2ecf9d6c3704b4210b86d15a35650b34a1c44d0fb57795668fd2b2b4eab6104f\",\"urls\":[\"bzz-raw://eaaa0dffb62e76ea397dc90b6a9e5ba497950ee1e57a97e6537a5b02ee045312\",\"dweb:/ipfs/QmaihaZugWsrSQttSprvThscmPrFhUj4gxTry94TNMx386\"]},\"contracts/openzeppelin/SafeMath.sol\":{\"keccak256\":\"0xbff8d6273e1a6870d1a142c0c23acd63a4dd47760f250390f49ee56333bcb6e8\",\"urls\":[\"bzz-raw://379880c293771d9db34b4db282bd22f0536d41f1db2a7fb887124984a5bcd719\",\"dweb:/ipfs/QmUrUzEJPp9WxyvFFZSaqv7qjnSwrkApNUkMny5cCcY2a6\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.5.17+commit.d19bba13"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_lockedSOV",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_SOV",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_multisig",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_releaseTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_depositLimit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "event",
          "name": "DepositLimitReached",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "EscrowActivated",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "EscrowFundExpired",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "EscrowInHoldingState",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "EscrowInWithdrawState",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_initiator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_lockedSOV",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "LockedSOVUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_initiator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_newMultisig",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NewMultisig",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_initiator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardDepositByMultisig",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_initiator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardTokenWithdraw",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_initiator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenDeposit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_initiator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenDepositByMultisig",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_initiator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_depositLimit",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenDepositLimitUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_initiator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_releaseTimestamp",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenReleaseUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_initiator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenWithdraw",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_initiator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenWithdrawByMultisig",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SOV",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeStateToHolding"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "depositLimit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositRewardByMultisig"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositTokens"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositTokensByMultisig"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_addr",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getReward",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "reward",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_addr",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "init"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lockedSOV",
          "outputs": [
            {
              "internalType": "contract ILockedSOV",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "multisig",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "releaseTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "status",
          "outputs": [
            {
              "internalType": "enum Escrow.Status",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalRewardDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_newDepositLimit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateDepositLimit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_lockedSOV",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateLockedSOV"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newMultisig",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateMultisig"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_newReleaseTime",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateReleaseTimestamp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawTokens"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawTokensAndReward"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiverAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawTokensByMultisig"
        }
      ],
      "devdoc": {
        "methods": {
          "changeStateToHolding()": {
            "details": "Once called, the contract no longer accepts any more deposits. The multisig can now withdraw tokens from the contract after the contract is in Holding State."
          },
          "constructor": {
            "params": {
              "_SOV": "The SOV token address.",
              "_depositLimit": "The amount of tokens we will be accepting.",
              "_lockedSOV": "The Locked SOV Contract address.",
              "_multisig": "The owner of the tokens & contract.",
              "_releaseTime": "The token release time, zero if undecided."
            }
          },
          "depositRewardByMultisig(uint256)": {
            "details": "The contract has to be approved by the multisig inorder for this function to work.",
            "params": {
              "_amount": "the amount of tokens deposited."
            }
          },
          "depositTokens(uint256)": {
            "details": "The contract has to be approved by the user inorder for this function to work. These tokens can be withdrawn/transferred during Holding State by the Multisig.",
            "params": {
              "_amount": "the amount of tokens deposited."
            }
          },
          "depositTokensByMultisig(uint256)": {
            "details": "The contract has to be approved by the multisig inorder for this function to work. Once the token deposit is higher than the total deposits done, the contract state is changed to Withdraw.",
            "params": {
              "_amount": "the amount of tokens deposited."
            }
          },
          "getReward(address)": {
            "params": {
              "_addr": "The address of the user whose reward is to be read."
            },
            "return": "reward The reward received by the user."
          },
          "getUserBalance(address)": {
            "return": "_addr The user address whose balance has to be checked."
          },
          "init()": {
            "details": "Without calling this function, the contract will not start accepting tokens."
          },
          "updateDepositLimit(uint256)": {
            "details": "IMPORTANT: Should not decrease than already deposited.",
            "params": {
              "_newDepositLimit": "The new deposit limit."
            }
          },
          "updateLockedSOV(address)": {
            "params": {
              "_lockedSOV": "The Locked SOV Contract address."
            }
          },
          "updateMultisig(address)": {
            "params": {
              "_newMultisig": "The new owner of the tokens & contract."
            }
          },
          "updateReleaseTimestamp(uint256)": {
            "details": "Zero is also a valid timestamp, if the release time is not scheduled yet.",
            "params": {
              "_newReleaseTime": "The new release timestamp for token release."
            }
          },
          "withdrawTokens()": {
            "details": "Only works after the contract state is in Withdraw."
          },
          "withdrawTokensAndReward()": {
            "details": "Only works after the contract state is in Withdraw."
          },
          "withdrawTokensByMultisig(address)": {
            "details": "Can only be called after the token state is changed to Holding.",
            "params": {
              "_receiverAddress": "The address where the tokens has to be transferred. Zero address if the withdraw is to be done in Multisig."
            }
          }
        }
      },
      "userdoc": {
        "methods": {
          "changeStateToHolding()": {
            "notice": "Update contract state to Holding."
          },
          "constructor": "Setup the required parameters.",
          "depositRewardByMultisig(uint256)": {
            "notice": "Deposit tokens to this contract by the Multisig."
          },
          "depositTokens(uint256)": {
            "notice": "Deposit tokens to this contract by User."
          },
          "depositTokensByMultisig(uint256)": {
            "notice": "Deposit tokens to this contract by the Multisig."
          },
          "getReward(address)": {
            "notice": "Function to read the reward a particular user can get."
          },
          "getUserBalance(address)": {
            "notice": "Function to read the current token balance of a particular user."
          },
          "init()": {
            "notice": "This function is called once after deployment for starting the deposit action."
          },
          "updateDepositLimit(uint256)": {
            "notice": "Update Deposit Limit."
          },
          "updateLockedSOV(address)": {
            "notice": "Set the Locked SOV Contract Address if not already done."
          },
          "updateMultisig(address)": {
            "notice": "Update Multisig."
          },
          "updateReleaseTimestamp(uint256)": {
            "notice": "Update Release Timestamp."
          },
          "withdrawTokens()": {
            "notice": "Withdraws token from the contract by User."
          },
          "withdrawTokensAndReward()": {
            "notice": "Withdraws token and reward from the contract by User. Reward is gone to lockedSOV contract for future vesting."
          },
          "withdrawTokensByMultisig(address)": {
            "notice": "Withdraws all token from the contract by Multisig."
          }
        }
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@ethereum-waffle/=node_modules/@ethereum-waffle/",
        ":ds-test/=foundry/lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=foundry/lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":truffle/=node_modules/truffle/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "compilationTarget": {
        "contracts/escrow/EscrowReward.sol": "EscrowReward"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/escrow/Escrow.sol": {
        "keccak256": "0xb68dc63d2c1f67a13f881b933f68e4a2a5ab4809e05b18196a59d2b88365a60d",
        "urls": [
          "bzz-raw://6e1c557f17f9c530eac8cc6d6c1866fa82c238258f9a1157aa85f594a1bfbb73",
          "dweb:/ipfs/QmchhP2Rxb49TjTNmAnn5xp2ZVpjxBFKpVqouHAx9eMxAq"
        ],
        "license": null
      },
      "contracts/escrow/EscrowReward.sol": {
        "keccak256": "0x71d042a2735d106191061b4934a89ba4b5ae00ae3409b258cf786776a7adf496",
        "urls": [
          "bzz-raw://ef9f45aacc304ea5f20eccd7454eb2679582aabef1cdb1fbd0665de5af915844",
          "dweb:/ipfs/Qmd5oCG1cw2nw4NJRkR7L3tq9kNc6CrvArtHfaBnEXbBVf"
        ],
        "license": null
      },
      "contracts/interfaces/IERC20.sol": {
        "keccak256": "0xea0bb1bf7d022130bb42a4efdfd875ef76ac5ac730a94ddd7b8c9949d4253855",
        "urls": [
          "bzz-raw://2050b03a2a1d4203698261daf2f46749bf5b72e3d23c272553e047e6bea4af40",
          "dweb:/ipfs/QmPY8bbNv3KxnyQ4Z6DtHkYu2U1Kfd7ooRDRUWNuw6v4Jt"
        ],
        "license": null
      },
      "contracts/locked/ILockedSOV.sol": {
        "keccak256": "0x2ecf9d6c3704b4210b86d15a35650b34a1c44d0fb57795668fd2b2b4eab6104f",
        "urls": [
          "bzz-raw://eaaa0dffb62e76ea397dc90b6a9e5ba497950ee1e57a97e6537a5b02ee045312",
          "dweb:/ipfs/QmaihaZugWsrSQttSprvThscmPrFhUj4gxTry94TNMx386"
        ],
        "license": null
      },
      "contracts/openzeppelin/SafeMath.sol": {
        "keccak256": "0xbff8d6273e1a6870d1a142c0c23acd63a4dd47760f250390f49ee56333bcb6e8",
        "urls": [
          "bzz-raw://379880c293771d9db34b4db282bd22f0536d41f1db2a7fb887124984a5bcd719",
          "dweb:/ipfs/QmUrUzEJPp9WxyvFFZSaqv7qjnSwrkApNUkMny5cCcY2a6"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/escrow/EscrowReward.sol",
    "id": 7145,
    "exportedSymbols": {
      "EscrowReward": [
        7144
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:4758:25",
    "nodes": [
      {
        "id": 6914,
        "nodeType": "PragmaDirective",
        "src": "0:24:25",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".17"
        ]
      },
      {
        "id": 6915,
        "nodeType": "ImportDirective",
        "src": "26:22:25",
        "nodes": [],
        "absolutePath": "contracts/escrow/Escrow.sol",
        "file": "./Escrow.sol",
        "scope": 7145,
        "sourceUnit": 6913,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6916,
        "nodeType": "ImportDirective",
        "src": "49:34:25",
        "nodes": [],
        "absolutePath": "contracts/locked/ILockedSOV.sol",
        "file": "../locked/ILockedSOV.sol",
        "scope": 7145,
        "sourceUnit": 34183,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7144,
        "nodeType": "ContractDefinition",
        "src": "349:4408:25",
        "nodes": [
          {
            "id": 6921,
            "nodeType": "UsingForDirective",
            "src": "387:27:25",
            "nodes": [],
            "libraryName": {
              "contractScope": null,
              "id": 6919,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 55835,
              "src": "393:8:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$55835",
                "typeString": "library SafeMath"
              }
            },
            "typeName": {
              "id": 6920,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "406:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 6923,
            "nodeType": "VariableDeclaration",
            "src": "578:33:25",
            "nodes": [],
            "constant": false,
            "name": "totalRewardDeposit",
            "scope": 7144,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6922,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "578:7:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "id": 6925,
            "nodeType": "VariableDeclaration",
            "src": "659:27:25",
            "nodes": [],
            "constant": false,
            "name": "lockedSOV",
            "scope": 7144,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ILockedSOV_$34182",
              "typeString": "contract ILockedSOV"
            },
            "typeName": {
              "contractScope": null,
              "id": 6924,
              "name": "ILockedSOV",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 34182,
              "src": "659:10:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILockedSOV_$34182",
                "typeString": "contract ILockedSOV"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "id": 6931,
            "nodeType": "EventDefinition",
            "src": "930:79:25",
            "nodes": [],
            "anonymous": false,
            "documentation": "@notice Emitted when the Locked SOV Contract address is updated.\n @param _initiator The address which initiated this event to be emitted.\n @param _lockedSOV The address of the Locked SOV Contract.",
            "name": "LockedSOVUpdated",
            "parameters": {
              "id": 6930,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6927,
                  "indexed": true,
                  "name": "_initiator",
                  "nodeType": "VariableDeclaration",
                  "scope": 6931,
                  "src": "953:26:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6926,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "953:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6929,
                  "indexed": true,
                  "name": "_lockedSOV",
                  "nodeType": "VariableDeclaration",
                  "scope": 6931,
                  "src": "981:26:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6928,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "981:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "952:56:25"
            }
          },
          {
            "id": 6937,
            "nodeType": "EventDefinition",
            "src": "1226:75:25",
            "nodes": [],
            "anonymous": false,
            "documentation": "@notice Emitted when a new reward token deposit is done by Multisig.\n @param _initiator The address which initiated this event to be emitted.\n @param _amount The amount of token deposited.",
            "name": "RewardDepositByMultisig",
            "parameters": {
              "id": 6936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6933,
                  "indexed": true,
                  "name": "_initiator",
                  "nodeType": "VariableDeclaration",
                  "scope": 6937,
                  "src": "1256:26:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6932,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1256:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6935,
                  "indexed": false,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 6937,
                  "src": "1284:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6934,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1284:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1255:45:25"
            }
          },
          {
            "id": 6943,
            "nodeType": "EventDefinition",
            "src": "1512:71:25",
            "nodes": [],
            "anonymous": false,
            "documentation": "@notice Emitted when a Reward token withdraw is done by User.\n @param _initiator The address which initiated this event to be emitted.\n @param _amount The amount of token withdrawed.",
            "name": "RewardTokenWithdraw",
            "parameters": {
              "id": 6942,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6939,
                  "indexed": true,
                  "name": "_initiator",
                  "nodeType": "VariableDeclaration",
                  "scope": 6943,
                  "src": "1538:26:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6938,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1538:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6941,
                  "indexed": false,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 6943,
                  "src": "1566:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6940,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1566:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1537:45:25"
            }
          },
          {
            "id": 6976,
            "nodeType": "FunctionDefinition",
            "src": "1973:321:25",
            "nodes": [],
            "body": {
              "id": 6975,
              "nodeType": "Block",
              "src": "2189:105:25",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 6966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 6962,
                      "name": "_lockedSOV",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6945,
                      "src": "2203:10:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 6964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2225:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 6963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2217:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 6965,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2217:10:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2203:24:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 6974,
                  "nodeType": "IfStatement",
                  "src": "2199:89:25",
                  "trueBody": {
                    "id": 6973,
                    "nodeType": "Block",
                    "src": "2229:59:25",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 6971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 6967,
                            "name": "lockedSOV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6925,
                            "src": "2243:9:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILockedSOV_$34182",
                              "typeString": "contract ILockedSOV"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 6969,
                                "name": "_lockedSOV",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6945,
                                "src": "2266:10:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 6968,
                              "name": "ILockedSOV",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34182,
                              "src": "2255:10:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ILockedSOV_$34182_$",
                                "typeString": "type(contract ILockedSOV)"
                              }
                            },
                            "id": 6970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2255:22:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILockedSOV_$34182",
                              "typeString": "contract ILockedSOV"
                            }
                          },
                          "src": "2243:34:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILockedSOV_$34182",
                            "typeString": "contract ILockedSOV"
                          }
                        },
                        "id": 6972,
                        "nodeType": "ExpressionStatement",
                        "src": "2243:34:25"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice Setup the required parameters.\n@param _lockedSOV The Locked SOV Contract address.\n@param _SOV The SOV token address.\n@param _multisig The owner of the tokens & contract.\n@param _releaseTime The token release time, zero if undecided.\n@param _depositLimit The amount of tokens we will be accepting.",
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 6956,
                    "name": "_SOV",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6947,
                    "src": "2143:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6957,
                    "name": "_multisig",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6949,
                    "src": "2149:9:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6958,
                    "name": "_releaseTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6951,
                    "src": "2160:12:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6959,
                    "name": "_depositLimit",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6953,
                    "src": "2174:13:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 6960,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6955,
                  "name": "Escrow",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6912,
                  "src": "2136:6:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Escrow_$6912_$",
                    "typeString": "type(contract Escrow)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2136:52:25"
              }
            ],
            "name": "",
            "parameters": {
              "id": 6954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6945,
                  "name": "_lockedSOV",
                  "nodeType": "VariableDeclaration",
                  "scope": 6976,
                  "src": "1994:18:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6944,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1994:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6947,
                  "name": "_SOV",
                  "nodeType": "VariableDeclaration",
                  "scope": 6976,
                  "src": "2022:12:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6946,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2022:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6949,
                  "name": "_multisig",
                  "nodeType": "VariableDeclaration",
                  "scope": 6976,
                  "src": "2044:17:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6948,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2044:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6951,
                  "name": "_releaseTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 6976,
                  "src": "2071:20:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6950,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2071:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6953,
                  "name": "_depositLimit",
                  "nodeType": "VariableDeclaration",
                  "scope": 6976,
                  "src": "2101:21:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6952,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2101:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1984:144:25"
            },
            "returnParameters": {
              "id": 6961,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2189:0:25"
            },
            "scope": 7144,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "id": 7005,
            "nodeType": "FunctionDefinition",
            "src": "2446:251:25",
            "nodes": [],
            "body": {
              "id": 7004,
              "nodeType": "Block",
              "src": "2513:184:25",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 6984,
                          "name": "_lockedSOV",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6978,
                          "src": "2531:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 6986,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2553:1:25",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6985,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2545:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 6987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2545:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2531:24:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c69642052657761726420546f6b656e20416464726573732e",
                        "id": 6989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2557:31:25",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a346b6883fa1e84e37e896a6566393a7e37f3f4fcda61d4236c31a2078a4d253",
                          "typeString": "literal_string \"Invalid Reward Token Address.\""
                        },
                        "value": "Invalid Reward Token Address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a346b6883fa1e84e37e896a6566393a7e37f3f4fcda61d4236c31a2078a4d253",
                          "typeString": "literal_string \"Invalid Reward Token Address.\""
                        }
                      ],
                      "id": 6983,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        62994,
                        62995
                      ],
                      "referencedDeclaration": 62995,
                      "src": "2523:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2523:66:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6991,
                  "nodeType": "ExpressionStatement",
                  "src": "2523:66:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6992,
                      "name": "lockedSOV",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6925,
                      "src": "2600:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILockedSOV_$34182",
                        "typeString": "contract ILockedSOV"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 6994,
                          "name": "_lockedSOV",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6978,
                          "src": "2623:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 6993,
                        "name": "ILockedSOV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34182,
                        "src": "2612:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ILockedSOV_$34182_$",
                          "typeString": "type(contract ILockedSOV)"
                        }
                      },
                      "id": 6995,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2612:22:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILockedSOV_$34182",
                        "typeString": "contract ILockedSOV"
                      }
                    },
                    "src": "2600:34:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILockedSOV_$34182",
                      "typeString": "contract ILockedSOV"
                    }
                  },
                  "id": 6997,
                  "nodeType": "ExpressionStatement",
                  "src": "2600:34:25"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6999,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62991,
                          "src": "2667:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2667:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7001,
                        "name": "_lockedSOV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6978,
                        "src": "2679:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6998,
                      "name": "LockedSOVUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6931,
                      "src": "2650:16:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 7002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2650:40:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7003,
                  "nodeType": "EmitStatement",
                  "src": "2645:45:25"
                }
              ]
            },
            "documentation": "@notice Set the Locked SOV Contract Address if not already done.\n@param _lockedSOV The Locked SOV Contract address.",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 6981,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6980,
                  "name": "onlyMultisig",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6463,
                  "src": "2500:12:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2500:12:25"
              }
            ],
            "name": "updateLockedSOV",
            "parameters": {
              "id": 6979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6978,
                  "name": "_lockedSOV",
                  "nodeType": "VariableDeclaration",
                  "scope": 7005,
                  "src": "2471:18:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6977,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2471:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2470:20:25"
            },
            "returnParameters": {
              "id": 6982,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2513:0:25"
            },
            "scope": 7144,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 7073,
            "nodeType": "FunctionDefinition",
            "src": "2932:700:25",
            "nodes": [],
            "body": {
              "id": 7072,
              "nodeType": "Block",
              "src": "3004:628:25",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$6397",
                          "typeString": "enum Escrow.Status"
                        },
                        "id": 7016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7013,
                          "name": "status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6399,
                          "src": "3035:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$6397",
                            "typeString": "enum Escrow.Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 7014,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6397,
                            "src": "3045:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$6397_$",
                              "typeString": "type(enum Escrow.Status)"
                            }
                          },
                          "id": 7015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Withdraw",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3045:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$6397",
                            "typeString": "enum Escrow.Status"
                          }
                        },
                        "src": "3035:25:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "52657761726420546f6b656e206465706f736974206973206f6e6c7920616c6c6f776564206265666f72652055736572205769746864726177207374617274732e",
                        "id": 7017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3074:67:25",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe619a68edeebdc9ef7310594d24e09812205bfc510458a6e18a306a4e408aa1",
                          "typeString": "literal_string \"Reward Token deposit is only allowed before User Withdraw starts.\""
                        },
                        "value": "Reward Token deposit is only allowed before User Withdraw starts."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe619a68edeebdc9ef7310594d24e09812205bfc510458a6e18a306a4e408aa1",
                          "typeString": "literal_string \"Reward Token deposit is only allowed before User Withdraw starts.\""
                        }
                      ],
                      "id": 7012,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        62994,
                        62995
                      ],
                      "referencedDeclaration": 62995,
                      "src": "3014:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3014:137:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7019,
                  "nodeType": "ExpressionStatement",
                  "src": "3014:137:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7021,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7007,
                          "src": "3169:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 7022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3179:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3169:11:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416d6f756e74206e6565647320746f20626520626967676572207468616e207a65726f2e",
                        "id": 7024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3182:38:25",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96aa4f54f95d4bd7a69ac95c2c6307ff895411b17973b24dca85e672a893e2b2",
                          "typeString": "literal_string \"Amount needs to be bigger than zero.\""
                        },
                        "value": "Amount needs to be bigger than zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_96aa4f54f95d4bd7a69ac95c2c6307ff895411b17973b24dca85e672a893e2b2",
                          "typeString": "literal_string \"Amount needs to be bigger than zero.\""
                        }
                      ],
                      "id": 7020,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        62994,
                        62995
                      ],
                      "referencedDeclaration": 62995,
                      "src": "3161:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3161:60:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7026,
                  "nodeType": "ExpressionStatement",
                  "src": "3161:60:25"
                },
                {
                  "assignments": [
                    7028
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7028,
                      "name": "txStatus",
                      "nodeType": "VariableDeclaration",
                      "scope": 7072,
                      "src": "3232:13:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 7027,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3232:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7038,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7031,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62991,
                          "src": "3265:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3265:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7034,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63097,
                            "src": "3285:4:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_EscrowReward_$7144",
                              "typeString": "contract EscrowReward"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_EscrowReward_$7144",
                              "typeString": "contract EscrowReward"
                            }
                          ],
                          "id": 7033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3277:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 7035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3277:13:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7036,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7007,
                        "src": "3292:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7029,
                        "name": "SOV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6385,
                        "src": "3248:3:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$32410",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 7030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32393,
                      "src": "3248:16:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 7037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3248:52:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3232:68:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7040,
                        "name": "txStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7028,
                        "src": "3318:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6b656e207472616e7366657220776173206e6f74207375636365737366756c2e",
                        "id": 7041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3328:36:25",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3acc04fd9d2c6eeea33919248d7d1bf195501ebecaf681e8f7b20db8579eb309",
                          "typeString": "literal_string \"Token transfer was not successful.\""
                        },
                        "value": "Token transfer was not successful."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3acc04fd9d2c6eeea33919248d7d1bf195501ebecaf681e8f7b20db8579eb309",
                          "typeString": "literal_string \"Token transfer was not successful.\""
                        }
                      ],
                      "id": 7039,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        62994,
                        62995
                      ],
                      "referencedDeclaration": 62995,
                      "src": "3310:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3310:55:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7043,
                  "nodeType": "ExpressionStatement",
                  "src": "3310:55:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7044,
                      "name": "totalRewardDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6923,
                      "src": "3376:18:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7047,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7007,
                          "src": "3420:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 7045,
                          "name": "totalRewardDeposit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6923,
                          "src": "3397:18:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55602,
                        "src": "3397:22:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 7048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3397:31:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3376:52:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7050,
                  "nodeType": "ExpressionStatement",
                  "src": "3376:52:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7051,
                      "name": "txStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7028,
                      "src": "3438:8:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 7055,
                              "name": "lockedSOV",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6925,
                              "src": "3469:9:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILockedSOV_$34182",
                                "typeString": "contract ILockedSOV"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ILockedSOV_$34182",
                                "typeString": "contract ILockedSOV"
                              }
                            ],
                            "id": 7054,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3461:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 7056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3461:18:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 7057,
                          "name": "totalRewardDeposit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6923,
                          "src": "3481:18:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 7052,
                          "name": "SOV",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6385,
                          "src": "3449:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$32410",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 7053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "approve",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32373,
                        "src": "3449:11:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) external returns (bool)"
                        }
                      },
                      "id": 7058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3449:51:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3438:62:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7060,
                  "nodeType": "ExpressionStatement",
                  "src": "3438:62:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7062,
                        "name": "txStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7028,
                        "src": "3518:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6b656e20417070726f76616c20776173206e6f74207375636365737366756c2e",
                        "id": 7063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3528:36:25",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ec1a14dc1e130644fa0b3db996b117e4370676b61c1fab46d56300915b1786e",
                          "typeString": "literal_string \"Token Approval was not successful.\""
                        },
                        "value": "Token Approval was not successful."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ec1a14dc1e130644fa0b3db996b117e4370676b61c1fab46d56300915b1786e",
                          "typeString": "literal_string \"Token Approval was not successful.\""
                        }
                      ],
                      "id": 7061,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        62994,
                        62995
                      ],
                      "referencedDeclaration": 62995,
                      "src": "3510:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3510:55:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7065,
                  "nodeType": "ExpressionStatement",
                  "src": "3510:55:25"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7067,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62991,
                          "src": "3605:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3605:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7069,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7007,
                        "src": "3617:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7066,
                      "name": "RewardDepositByMultisig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6937,
                      "src": "3581:23:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3581:44:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7071,
                  "nodeType": "EmitStatement",
                  "src": "3576:49:25"
                }
              ]
            },
            "documentation": "@notice Deposit tokens to this contract by the Multisig.\n@param _amount the amount of tokens deposited.\n@dev The contract has to be approved by the multisig inorder for this function to work.",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 7010,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7009,
                  "name": "onlyMultisig",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6463,
                  "src": "2991:12:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2991:12:25"
              }
            ],
            "name": "depositRewardByMultisig",
            "parameters": {
              "id": 7008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7007,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 7073,
                  "src": "2965:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7006,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2965:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2964:17:25"
            },
            "returnParameters": {
              "id": 7011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3004:0:25"
            },
            "scope": 7144,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 7113,
            "nodeType": "FunctionDefinition",
            "src": "3844:410:25",
            "nodes": [],
            "body": {
              "id": 7112,
              "nodeType": "Block",
              "src": "3930:324:25",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    7083
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7083,
                      "name": "reward",
                      "nodeType": "VariableDeclaration",
                      "scope": 7112,
                      "src": "4032:14:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7082,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4032:7:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7094,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7092,
                        "name": "totalDeposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6379,
                        "src": "4102:12:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7089,
                            "name": "totalRewardDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6923,
                            "src": "4078:18:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7084,
                              "name": "userBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6391,
                              "src": "4049:12:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 7087,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7085,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 62991,
                                "src": "4062:3:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 7086,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4062:10:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4049:24:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 7088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 55679,
                          "src": "4049:28:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 7090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4049:48:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55695,
                      "src": "4049:52:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 7093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4049:66:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4032:83:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7095,
                      "name": "withdrawTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6899,
                      "src": "4125:14:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 7096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4125:16:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7097,
                  "nodeType": "ExpressionStatement",
                  "src": "4125:16:25"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7101,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62991,
                          "src": "4173:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4173:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7103,
                        "name": "reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7083,
                        "src": "4185:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7098,
                        "name": "lockedSOV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6925,
                        "src": "4152:9:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILockedSOV_$34182",
                          "typeString": "contract ILockedSOV"
                        }
                      },
                      "id": 7100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "depositSOV",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34152,
                      "src": "4152:20:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 7104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4152:40:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7105,
                  "nodeType": "ExpressionStatement",
                  "src": "4152:40:25"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7107,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62991,
                          "src": "4228:3:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4228:10:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7109,
                        "name": "reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7083,
                        "src": "4240:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7106,
                      "name": "RewardTokenWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6943,
                      "src": "4208:19:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4208:39:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7111,
                  "nodeType": "EmitStatement",
                  "src": "4203:44:25"
                }
              ]
            },
            "documentation": "@notice Withdraws token and reward from the contract by User. Reward is gone to lockedSOV contract for future vesting.\n@dev Only works after the contract state is in Withdraw.",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 7076,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7075,
                  "name": "checkRelease",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6492,
                  "src": "3888:12:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3888:12:25"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 7078,
                      "name": "Status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6397,
                      "src": "3913:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Status_$6397_$",
                        "typeString": "type(enum Escrow.Status)"
                      }
                    },
                    "id": 7079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Withdraw",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "3913:15:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$6397",
                      "typeString": "enum Escrow.Status"
                    }
                  }
                ],
                "id": 7080,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7077,
                  "name": "checkStatus",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6476,
                  "src": "3901:11:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_enum$_Status_$6397_$",
                    "typeString": "modifier (enum Escrow.Status)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3901:28:25"
              }
            ],
            "name": "withdrawTokensAndReward",
            "parameters": {
              "id": 7074,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3876:2:25"
            },
            "returnParameters": {
              "id": 7081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3930:0:25"
            },
            "scope": 7144,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 7143,
            "nodeType": "FunctionDefinition",
            "src": "4501:254:25",
            "nodes": [],
            "body": {
              "id": 7142,
              "nodeType": "Block",
              "src": "4574:181:25",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7124,
                          "name": "totalRewardDeposit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6923,
                          "src": "4612:18:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 7120,
                            "name": "userBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6391,
                            "src": "4588:12:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 7122,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 7121,
                            "name": "_addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7115,
                            "src": "4601:5:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4588:19:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mul",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55679,
                        "src": "4588:23:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 7125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4588:43:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 7126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4635:1:25",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4588:48:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 7131,
                  "nodeType": "IfStatement",
                  "src": "4584:87:25",
                  "trueBody": {
                    "id": 7130,
                    "nodeType": "Block",
                    "src": "4638:33:25",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 7128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4659:1:25",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 7119,
                        "id": 7129,
                        "nodeType": "Return",
                        "src": "4652:8:25"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7139,
                        "name": "totalDeposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6379,
                        "src": "4735:12:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7136,
                            "name": "totalRewardDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6923,
                            "src": "4711:18:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7132,
                              "name": "userBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6391,
                              "src": "4687:12:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 7134,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7133,
                              "name": "_addr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7115,
                              "src": "4700:5:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4687:19:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 7135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 55679,
                          "src": "4687:23:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 7137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4687:43:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55695,
                      "src": "4687:47:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 7140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4687:61:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7119,
                  "id": 7141,
                  "nodeType": "Return",
                  "src": "4680:68:25"
                }
              ]
            },
            "documentation": "@notice Function to read the reward a particular user can get.\n@param _addr The address of the user whose reward is to be read.\n@return reward The reward received by the user.",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getReward",
            "parameters": {
              "id": 7116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7115,
                  "name": "_addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7143,
                  "src": "4520:13:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4520:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4519:15:25"
            },
            "returnParameters": {
              "id": 7119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7118,
                  "name": "reward",
                  "nodeType": "VariableDeclaration",
                  "scope": 7143,
                  "src": "4558:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7117,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4558:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4557:16:25"
            },
            "scope": 7144,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6917,
              "name": "Escrow",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6912,
              "src": "374:6:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Escrow_$6912",
                "typeString": "contract Escrow"
              }
            },
            "id": 6918,
            "nodeType": "InheritanceSpecifier",
            "src": "374:6:25"
          }
        ],
        "contractDependencies": [
          6912
        ],
        "contractKind": "contract",
        "documentation": " @title A reward distribution contract for Sovryn Ethereum Pool Escrow Contract.\n @author Franklin Richards - powerhousefrank@protonmail.com\n @notice Multisig can use this contract for depositing of Reward tokens based on the total token deposit.",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          7144,
          6912
        ],
        "name": "EscrowReward",
        "scope": 7145
      }
    ]
  },
  "id": 25
}