{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_wrbtcTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_protocolTokenAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bool",
          "name": "isPaused",
          "type": "bool"
        }
      ],
      "name": "GlobalPricingPaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "amountInEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "ethAmount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "baseToken",
      "outputs": [
        {
          "internalType": "contract IWrbtcERC20",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "sourceToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "destToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "sourceAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "destAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxSlippage",
          "type": "uint256"
        }
      ],
      "name": "checkPriceDisagreement",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "sourceToDestSwapRate",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "loanToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "loanAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "getCurrentMargin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "currentMargin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralToLoanRate",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "loanToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "loanAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "getCurrentMarginAndCollateralSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "currentMargin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralInEthAmount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "loanToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "loanAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "margin",
          "type": "uint256"
        }
      ],
      "name": "getMaxDrawdown",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "maxDrawdown",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "globalPricingPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pricesFeeds",
      "outputs": [
        {
          "internalType": "contract IPriceFeedsExt",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "protocolTokenEthPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "sourceToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "destToken",
          "type": "address"
        }
      ],
      "name": "queryPrecision",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "sourceToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "destToken",
          "type": "address"
        }
      ],
      "name": "queryRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "precision",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "sourceToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "destToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "sourceAmount",
          "type": "uint256"
        }
      ],
      "name": "queryReturn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "destAmount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "rates",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "setDecimals",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "isPaused",
          "type": "bool"
        }
      ],
      "name": "setGlobalPricingPaused",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "contract IPriceFeedsExt[]",
          "name": "feeds",
          "type": "address[]"
        }
      ],
      "name": "setPriceFeed",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        }
      ],
      "name": "setProtocolTokenEthPrice",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sourceToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "destToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "name": "setRates",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "loanToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "loanAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maintenanceMargin",
          "type": "uint256"
        }
      ],
      "name": "shouldLiquidate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wrbtcToken",
      "outputs": [
        {
          "internalType": "contract IWrbtcERC20",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405265b5e620f480006006556007805460ff191690553480156200002557600080fd5b506040516200196938038062001969833981810160405260408110156200004b57600080fd5b50805160209091015181818160006200006c6001600160e01b036200014016565b600380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600560205260127f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746bc8190556001600160a01b038416600090815260409020556200010d836001600160e01b036200014416565b62000121826001600160e01b03620001b916565b62000135816001600160e01b036200022e16565b5050505050620002f5565b3390565b6200015a81620002b860201b620015671760201c565b620001975760405162461bcd60e51b8152600401808060200182810382526021815260200180620019246021913960400191505060405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b620001cf81620002b860201b620015671760201c565b6200020c5760405162461bcd60e51b8152600401808060200182810382526024815260200180620019456024913960400191505060405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6200024481620002b860201b620015671760201c565b62000296576040805162461bcd60e51b815260206004820181905260248201527f5f62617365546f6b656e41646472657373206e6f74206120636f6e7472616374604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590620002ed57508115155b949350505050565b61161f80620003056000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80638da5cb5b116100c3578063d138f9a11161007c578063d138f9a114610522578063d449a83214610558578063d601e3ff1461057e578063ecc5382d14610586578063f2fde38b146105c2578063f80b25fb146105e857610158565b80638da5cb5b146104665780638f32d59b1461046e578063aa2ec71014610476578063afe84009146104e6578063b2cf54ea146104ee578063c55dae631461051a57610158565b80632ff0d012116101155780632ff0d012146102b7578063502fad5f146102f35780635034709c14610329578063524efd4b146103eb5780637b0cf44d146104195780637c2badb71461044757610158565b806310f541661461015d5780631e2c62d31461017c57806322340070146101d057806329d5277c146101d85780632a8877021461021f5780632d485c5c14610275575b600080fd5b61017a6004803603602081101561017357600080fd5b503561062a565b005b6101be600480360360a081101561019257600080fd5b506001600160a01b038135811691602081013590911690604081013590606081013590608001356106b9565b60408051918252519081900360200190f35b6101be6107bd565b610206600480360360408110156101ee57600080fd5b506001600160a01b03813581169160200135166107c3565b6040805192835260208301919091528051918290030190f35b610261600480360360a081101561023557600080fd5b506001600160a01b038135811691602081013590911690604081013590606081013590608001356107dc565b604080519115158252519081900360200190f35b61029b6004803603602081101561028b57600080fd5b50356001600160a01b03166107fa565b604080516001600160a01b039092168252519081900360200190f35b610206600480360360808110156102cd57600080fd5b506001600160a01b03813581169160208101359091169060408101359060600135610815565b61017a6004803603606081101561030957600080fd5b506001600160a01b038135811691602081013590911690604001356108ee565b61017a6004803603604081101561033f57600080fd5b81019060208101813564010000000081111561035a57600080fd5b82018360208201111561036c57600080fd5b8035906020019184602083028401116401000000008311171561038e57600080fd5b9193909290916020810190356401000000008111156103ac57600080fd5b8201836020820111156103be57600080fd5b803590602001918460208302840111640100000000831117156103e057600080fd5b5090925090506109bc565b6101be6004803603604081101561040157600080fd5b506001600160a01b0381358116916020013516610acd565b6101be6004803603604081101561042f57600080fd5b506001600160a01b0381358116916020013516610b0a565b61017a6004803603602081101561045d57600080fd5b50351515610b27565b61029b610bbf565b610261610bce565b61017a6004803603602081101561048c57600080fd5b8101906020810181356401000000008111156104a757600080fd5b8201836020820111156104b957600080fd5b803590602001918460208302840111640100000000831117156104db57600080fd5b509092509050610bf4565b61029b610d05565b6101be6004803603604081101561050457600080fd5b506001600160a01b038135169060200135610d14565b61029b610d6e565b6101be6004803603606081101561053857600080fd5b506001600160a01b03813581169160208101359091169060400135610d7d565b6101be6004803603602081101561056e57600080fd5b50356001600160a01b0316610dc5565b610261610dd7565b6102066004803603608081101561059c57600080fd5b506001600160a01b03813581169160208101359091169060408101359060600135610de0565b61017a600480360360208110156105d857600080fd5b50356001600160a01b0316610e07565b6101be600480360360a08110156105fe57600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060800135610e58565b610632610bce565b610672576040805162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b604482015290519081900360640190fd5b806106b4576040805162461bcd60e51b815260206004820152600d60248201526c696e76616c696420707269636560981b604482015290519081900360640190fd5b600655565b60075460009060ff1615610708576040805162461bcd60e51b81526020600482015260116024820152701c1c9a58da5b99c81a5cc81c185d5cd959607a1b604482015290519081900360640190fd5b6000806107158888610ef6565b909250905061073a8661072e878463ffffffff61112516565b9063ffffffff61117e16565b9250828211156107b2578282036107648461072e8368056bc75e2d6310000063ffffffff61112516565b9050848111156107b0576040805162461bcd60e51b81526020600482015260126024820152711c1c9a58d948191a5cd859dc99595b595b9d60721b604482015290519081900360640190fd5b505b505095945050505050565b60065481565b6000806107d08484610ef6565b915091505b9250929050565b6000806107eb87878787610815565b50909210159695505050505050565b6004602052600090815260409020546001600160a01b031681565b6000806000866001600160a01b0316866001600160a01b031614156108465750670de0b6b3a7640000905082610895565b600061085287896107c3565b90935090506108738161072e85670de0b6b3a764000063ffffffff61112516565b9250610891670de0b6b3a764000061072e878663ffffffff61112516565b9150505b84158015906108a45750848110155b156108df576108d68561072e68056bc75e2d631000006108ca858463ffffffff6111c016565b9063ffffffff61112516565b92506108e59050565b50600091505b94509492505050565b6108f6610bce565b610936576040805162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b604482015290519081900360640190fd5b816001600160a01b0316836001600160a01b0316146109b7576001600160a01b0380841660009081526008602090815260408083209386168352929052208190556109906ec097ce7bc90715b34b9f10000000008261117e565b6001600160a01b038084166000908152600860209081526040808320938816835292905220555b505050565b6109c4610bce565b610a04576040805162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b604482015290519081900360640190fd5b828114610a49576040805162461bcd60e51b815260206004820152600e60248201526d0c6deeadce840dad2e6dac2e8c6d60931b604482015290519081900360640190fd5b60005b83811015610ac657828282818110610a6057fe5b905060200201356001600160a01b031660046000878785818110610a8057fe5b6001600160a01b03602091820293909301358316845283019390935260409091016000208054939091166001600160a01b03199093169290921790915550600101610a4c565b5050505050565b6000816001600160a01b0316836001600160a01b03161415610af757670de0b6b3a7640000610b01565b610b018383611202565b90505b92915050565b600860209081526000928352604080842090915290825290205481565b610b2f610bce565b610b6f576040805162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b604482015290519081900360640190fd5b60075460ff16151581151514610bbc576007805460ff191682151590811790915560405133907fd72570f3e3995824c4448eca84a22aed922dab8c58e23e9c5e60e74d0714f7f190600090a35b50565b6003546001600160a01b031690565b6003546000906001600160a01b0316610be561136c565b6001600160a01b031614905090565b610bfc610bce565b610c3c576040805162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b604482015290519081900360640190fd5b60005b818110156109b757828282818110610c5357fe5b905060200201356001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610c9b57600080fd5b505afa158015610caf573d6000803e3d6000fd5b505050506040513d6020811015610cc557600080fd5b505160ff1660056000858585818110610cda57fe5b602090810292909201356001600160a01b031683525081019190915260400160002055600101610c3f565b6000546001600160a01b031681565b600080546001600160a01b0384811691161415610d32575080610b04565b600080548190610d4c9086906001600160a01b03166107c3565b9092509050610d658161072e868563ffffffff61112516565b95945050505050565b6001546001600160a01b031681565b60075460009060ff1615610d9357506000610dbe565b600080610da08686610ef6565b9092509050610db98161072e868563ffffffff61112516565b925050505b9392505050565b60056020526000908152604090205481565b60075460ff1681565b600080610def86868686610815565b509150610dfc8584610d14565b905094509492505050565b610e0f610bce565b610e4f576040805162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b604482015290519081900360640190fd5b610bbc81611370565b600080866001600160a01b0316866001600160a01b03161415610e7c575083610ea7565b600080610e8989896107c3565b9092509050610ea28161072e898563ffffffff61112516565b925050505b6000610ed6610ec968056bc75e2d6310000061072e858863ffffffff61112516565b839063ffffffff61141116565b9050808511610ee6576000610eea565b8085035b98975050505050505050565b600754600090819060ff1615610f47576040805162461bcd60e51b81526020600482015260116024820152701c1c9a58da5b99c81a5cc81c185d5cd959607a1b604482015290519081900360640190fd5b826001600160a01b0316846001600160a01b03161415610f735750670de0b6b3a76400009050806107d5565b6002546001600160a01b0385811691161415610f93576006549150611112565b6002546001600160a01b0384811691161415610fcb57610fc46ec097ce7bc90715b34b9f100000000060065461117e565b9150611112565b6001600160a01b0380851660009081526008602090815260408083209387168352929052205415611023576001600160a01b038085166000908152600860209081526040808320938716835292905220549150611112565b6001600160a01b038085166000908152600860209081526040808320835490941683529290529081205461105f57670de0b6b3a7640000611088565b6001600160a01b0380861660009081526008602090815260408083208354909416835292905220545b600080546001600160a01b0390811682526008602090815260408084209289168452919052812054919250906110c657670de0b6b3a76400006110ef565b600080546001600160a01b03908116825260086020908152604080842092891684529190529020545b905061110d670de0b6b3a764000061072e848463ffffffff61112516565b935050505b61111c8484611202565b90509250929050565b60008261113457506000610b04565b8282028284828161114157fe5b0414610b015760405162461bcd60e51b81526004018080602001828103825260218152602001806115ca6021913960400191505060405180910390fd5b6000610b0183836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061146b565b6000610b0183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061150d565b6000816001600160a01b0316836001600160a01b0316141561122d5750670de0b6b3a7640000610b04565b6001600160a01b038316600090815260056020526040902054806112b657836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561128457600080fd5b505afa158015611298573d6000803e3d6000fd5b505050506040513d60208110156112ae57600080fd5b505160ff1690505b6001600160a01b0383166000908152600560205260409020548061133f57836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561130d57600080fd5b505afa158015611321573d6000803e3d6000fd5b505050506040513d602081101561133757600080fd5b505160ff1690505b81811061135f5761135360128383036111c0565b600a0a92505050610b04565b6113536012828403611411565b3390565b6001600160a01b0381166113b55760405162461bcd60e51b81526004018080602001828103825260268152602001806115a46026913960400191505060405180910390fd5b6003546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600380546001600160a01b0319166001600160a01b0392909216919091179055565b600082820183811015610b01576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600081836114f75760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156114bc5781810151838201526020016114a4565b50505050905090810190601f1680156114e95780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161150357fe5b0495945050505050565b6000818484111561155f5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156114bc5781810151838201526020016114a4565b505050900390565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061159b57508115155b94935050505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a265627a7a723158202c1ef24b4cdaf54821a659257d067ae25d556005afd9d5bd967863db865821c764736f6c634300051100325f7772627463546f6b656e41646472657373206e6f74206120636f6e74726163745f70726f746f636f6c546f6b656e41646472657373206e6f74206120636f6e7472616374",
    "sourceMap": "469:3173:50:-;;;1322:12:47;1283:51;;1373:39;;;-1:-1:-1;;1373:39:47;;;859:174:50;5:2:-1;;;;30:1;27;20:12;5:2;859:174:50;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;859:174:50;;;;;;;;;;701:17:184;721:12;-1:-1:-1;;;;;721:10:184;:12;:::i;:::-;743:6;:18;;-1:-1:-1;;;;;;743:18:184;-1:-1:-1;;;;;743:18:184;;;;;;;;776:43;;743:18;;-1:-1:-1;743:18:184;-1:-1:-1;;776:43:184;;-1:-1:-1;;776:43:184;-1:-1:-1;1916:8:47;:20;;1939:2;1916:20;:25;;;-1:-1:-1;;;;;1951:28:47;;1916:20;1951:28;;;1916:20;1951:28;;:33;1994:34;1960:18;-1:-1:-1;;;;;1994:14:47;:34;:::i;:::-;2038:47;2063:21;-1:-1:-1;;;;;2038:24:47;:47;:::i;:::-;2095:32;2109:17;-1:-1:-1;;;;;2095:13:47;:32;:::i;:::-;1730:404;;;859:174:50;;469:3173;;795:96:179;874:10;795:96;:::o;818:216:48:-;897:38;916:18;897;;;;;:38;;:::i;:::-;889:84;;;;-1:-1:-1;;;889:84:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;983:10;:44;;-1:-1:-1;;;;;;983:44:48;-1:-1:-1;;;;;983:44:48;;;;;;;;;;818:216::o;1179:235::-;1271:41;1290:21;1271:18;;;;;:41;;:::i;:::-;1263:90;;;;-1:-1:-1;;;1263:90:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1363:20;:44;;-1:-1:-1;;;;;;1363:44:48;-1:-1:-1;;;;;1363:44:48;;;;;;;;;;1179:235::o;1547:210::-;1624:37;1643:17;1624:18;;;;;:37;;:::i;:::-;1616:82;;;;;-1:-1:-1;;;1616:82:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1708:9;:42;;-1:-1:-1;;;;;;1708:42:48;-1:-1:-1;;;;;1708:42:48;;;;;;;;;;1547:210::o;693:630:178:-;753:4;1226:20;;1059:66;1273:23;;;;;;:42;;-1:-1:-1;1300:15:178;;;1273:42;1265:51;693:630;-1:-1:-1;;;;693:630:178:o;469:3173:50:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101585760003560e01c80638da5cb5b116100c3578063d138f9a11161007c578063d138f9a114610522578063d449a83214610558578063d601e3ff1461057e578063ecc5382d14610586578063f2fde38b146105c2578063f80b25fb146105e857610158565b80638da5cb5b146104665780638f32d59b1461046e578063aa2ec71014610476578063afe84009146104e6578063b2cf54ea146104ee578063c55dae631461051a57610158565b80632ff0d012116101155780632ff0d012146102b7578063502fad5f146102f35780635034709c14610329578063524efd4b146103eb5780637b0cf44d146104195780637c2badb71461044757610158565b806310f541661461015d5780631e2c62d31461017c57806322340070146101d057806329d5277c146101d85780632a8877021461021f5780632d485c5c14610275575b600080fd5b61017a6004803603602081101561017357600080fd5b503561062a565b005b6101be600480360360a081101561019257600080fd5b506001600160a01b038135811691602081013590911690604081013590606081013590608001356106b9565b60408051918252519081900360200190f35b6101be6107bd565b610206600480360360408110156101ee57600080fd5b506001600160a01b03813581169160200135166107c3565b6040805192835260208301919091528051918290030190f35b610261600480360360a081101561023557600080fd5b506001600160a01b038135811691602081013590911690604081013590606081013590608001356107dc565b604080519115158252519081900360200190f35b61029b6004803603602081101561028b57600080fd5b50356001600160a01b03166107fa565b604080516001600160a01b039092168252519081900360200190f35b610206600480360360808110156102cd57600080fd5b506001600160a01b03813581169160208101359091169060408101359060600135610815565b61017a6004803603606081101561030957600080fd5b506001600160a01b038135811691602081013590911690604001356108ee565b61017a6004803603604081101561033f57600080fd5b81019060208101813564010000000081111561035a57600080fd5b82018360208201111561036c57600080fd5b8035906020019184602083028401116401000000008311171561038e57600080fd5b9193909290916020810190356401000000008111156103ac57600080fd5b8201836020820111156103be57600080fd5b803590602001918460208302840111640100000000831117156103e057600080fd5b5090925090506109bc565b6101be6004803603604081101561040157600080fd5b506001600160a01b0381358116916020013516610acd565b6101be6004803603604081101561042f57600080fd5b506001600160a01b0381358116916020013516610b0a565b61017a6004803603602081101561045d57600080fd5b50351515610b27565b61029b610bbf565b610261610bce565b61017a6004803603602081101561048c57600080fd5b8101906020810181356401000000008111156104a757600080fd5b8201836020820111156104b957600080fd5b803590602001918460208302840111640100000000831117156104db57600080fd5b509092509050610bf4565b61029b610d05565b6101be6004803603604081101561050457600080fd5b506001600160a01b038135169060200135610d14565b61029b610d6e565b6101be6004803603606081101561053857600080fd5b506001600160a01b03813581169160208101359091169060400135610d7d565b6101be6004803603602081101561056e57600080fd5b50356001600160a01b0316610dc5565b610261610dd7565b6102066004803603608081101561059c57600080fd5b506001600160a01b03813581169160208101359091169060408101359060600135610de0565b61017a600480360360208110156105d857600080fd5b50356001600160a01b0316610e07565b6101be600480360360a08110156105fe57600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060800135610e58565b610632610bce565b610672576040805162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b604482015290519081900360640190fd5b806106b4576040805162461bcd60e51b815260206004820152600d60248201526c696e76616c696420707269636560981b604482015290519081900360640190fd5b600655565b60075460009060ff1615610708576040805162461bcd60e51b81526020600482015260116024820152701c1c9a58da5b99c81a5cc81c185d5cd959607a1b604482015290519081900360640190fd5b6000806107158888610ef6565b909250905061073a8661072e878463ffffffff61112516565b9063ffffffff61117e16565b9250828211156107b2578282036107648461072e8368056bc75e2d6310000063ffffffff61112516565b9050848111156107b0576040805162461bcd60e51b81526020600482015260126024820152711c1c9a58d948191a5cd859dc99595b595b9d60721b604482015290519081900360640190fd5b505b505095945050505050565b60065481565b6000806107d08484610ef6565b915091505b9250929050565b6000806107eb87878787610815565b50909210159695505050505050565b6004602052600090815260409020546001600160a01b031681565b6000806000866001600160a01b0316866001600160a01b031614156108465750670de0b6b3a7640000905082610895565b600061085287896107c3565b90935090506108738161072e85670de0b6b3a764000063ffffffff61112516565b9250610891670de0b6b3a764000061072e878663ffffffff61112516565b9150505b84158015906108a45750848110155b156108df576108d68561072e68056bc75e2d631000006108ca858463ffffffff6111c016565b9063ffffffff61112516565b92506108e59050565b50600091505b94509492505050565b6108f6610bce565b610936576040805162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b604482015290519081900360640190fd5b816001600160a01b0316836001600160a01b0316146109b7576001600160a01b0380841660009081526008602090815260408083209386168352929052208190556109906ec097ce7bc90715b34b9f10000000008261117e565b6001600160a01b038084166000908152600860209081526040808320938816835292905220555b505050565b6109c4610bce565b610a04576040805162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b604482015290519081900360640190fd5b828114610a49576040805162461bcd60e51b815260206004820152600e60248201526d0c6deeadce840dad2e6dac2e8c6d60931b604482015290519081900360640190fd5b60005b83811015610ac657828282818110610a6057fe5b905060200201356001600160a01b031660046000878785818110610a8057fe5b6001600160a01b03602091820293909301358316845283019390935260409091016000208054939091166001600160a01b03199093169290921790915550600101610a4c565b5050505050565b6000816001600160a01b0316836001600160a01b03161415610af757670de0b6b3a7640000610b01565b610b018383611202565b90505b92915050565b600860209081526000928352604080842090915290825290205481565b610b2f610bce565b610b6f576040805162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b604482015290519081900360640190fd5b60075460ff16151581151514610bbc576007805460ff191682151590811790915560405133907fd72570f3e3995824c4448eca84a22aed922dab8c58e23e9c5e60e74d0714f7f190600090a35b50565b6003546001600160a01b031690565b6003546000906001600160a01b0316610be561136c565b6001600160a01b031614905090565b610bfc610bce565b610c3c576040805162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b604482015290519081900360640190fd5b60005b818110156109b757828282818110610c5357fe5b905060200201356001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610c9b57600080fd5b505afa158015610caf573d6000803e3d6000fd5b505050506040513d6020811015610cc557600080fd5b505160ff1660056000858585818110610cda57fe5b602090810292909201356001600160a01b031683525081019190915260400160002055600101610c3f565b6000546001600160a01b031681565b600080546001600160a01b0384811691161415610d32575080610b04565b600080548190610d4c9086906001600160a01b03166107c3565b9092509050610d658161072e868563ffffffff61112516565b95945050505050565b6001546001600160a01b031681565b60075460009060ff1615610d9357506000610dbe565b600080610da08686610ef6565b9092509050610db98161072e868563ffffffff61112516565b925050505b9392505050565b60056020526000908152604090205481565b60075460ff1681565b600080610def86868686610815565b509150610dfc8584610d14565b905094509492505050565b610e0f610bce565b610e4f576040805162461bcd60e51b815260206004820152600c60248201526b1d5b985d5d1a1bdc9a5e995960a21b604482015290519081900360640190fd5b610bbc81611370565b600080866001600160a01b0316866001600160a01b03161415610e7c575083610ea7565b600080610e8989896107c3565b9092509050610ea28161072e898563ffffffff61112516565b925050505b6000610ed6610ec968056bc75e2d6310000061072e858863ffffffff61112516565b839063ffffffff61141116565b9050808511610ee6576000610eea565b8085035b98975050505050505050565b600754600090819060ff1615610f47576040805162461bcd60e51b81526020600482015260116024820152701c1c9a58da5b99c81a5cc81c185d5cd959607a1b604482015290519081900360640190fd5b826001600160a01b0316846001600160a01b03161415610f735750670de0b6b3a76400009050806107d5565b6002546001600160a01b0385811691161415610f93576006549150611112565b6002546001600160a01b0384811691161415610fcb57610fc46ec097ce7bc90715b34b9f100000000060065461117e565b9150611112565b6001600160a01b0380851660009081526008602090815260408083209387168352929052205415611023576001600160a01b038085166000908152600860209081526040808320938716835292905220549150611112565b6001600160a01b038085166000908152600860209081526040808320835490941683529290529081205461105f57670de0b6b3a7640000611088565b6001600160a01b0380861660009081526008602090815260408083208354909416835292905220545b600080546001600160a01b0390811682526008602090815260408084209289168452919052812054919250906110c657670de0b6b3a76400006110ef565b600080546001600160a01b03908116825260086020908152604080842092891684529190529020545b905061110d670de0b6b3a764000061072e848463ffffffff61112516565b935050505b61111c8484611202565b90509250929050565b60008261113457506000610b04565b8282028284828161114157fe5b0414610b015760405162461bcd60e51b81526004018080602001828103825260218152602001806115ca6021913960400191505060405180910390fd5b6000610b0183836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061146b565b6000610b0183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061150d565b6000816001600160a01b0316836001600160a01b0316141561122d5750670de0b6b3a7640000610b04565b6001600160a01b038316600090815260056020526040902054806112b657836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561128457600080fd5b505afa158015611298573d6000803e3d6000fd5b505050506040513d60208110156112ae57600080fd5b505160ff1690505b6001600160a01b0383166000908152600560205260409020548061133f57836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561130d57600080fd5b505afa158015611321573d6000803e3d6000fd5b505050506040513d602081101561133757600080fd5b505160ff1690505b81811061135f5761135360128383036111c0565b600a0a92505050610b04565b6113536012828403611411565b3390565b6001600160a01b0381166113b55760405162461bcd60e51b81526004018080602001828103825260268152602001806115a46026913960400191505060405180910390fd5b6003546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600380546001600160a01b0319166001600160a01b0392909216919091179055565b600082820183811015610b01576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600081836114f75760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156114bc5781810151838201526020016114a4565b50505050905090810190601f1680156114e95780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161150357fe5b0495945050505050565b6000818484111561155f5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156114bc5781810151838201526020016114a4565b505050900390565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061159b57508115155b94935050505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a265627a7a723158202c1ef24b4cdaf54821a659257d067ae25d556005afd9d5bd967863db865821c764736f6c63430005110032",
    "sourceMap": "469:3173:50:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;469:3173:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11933:169:47;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11933:169:47;;:::i;:::-;;5012:721;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;5012:721:47;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1283:51;;;:::i;2515:199::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2515:199:47;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11347:398;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;11347:398:47;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1084:53;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1084:53:47;-1:-1:-1;;;;;1084:53:47;;:::i;:::-;;;;-1:-1:-1;;;;;1084:53:47;;;;;;;;;;;;;;9764:1137;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;9764:1137:47;;;;;;;;;;;;;;;;;;;;;;:::i;3072:298:50:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3072:298:50;;;;;;;;;;;;;;;;;:::i;12337:306:47:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12337:306:47;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;12337:306:47;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;12337:306:47;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;12337:306:47;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;12337:306:47;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;12337:306:47;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;-1:-1;12337:306:47;;-1:-1:-1;12337:306:47;-1:-1:-1;12337:306:47;:::i;3065:198::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3065:198:47;;;;;;;;;;:::i;514:60:50:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;514:60:50;;;;;;;;;;:::i;13156:235:47:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13156:235:47;;;;:::i;902:77:184:-;;;:::i;1233:92::-;;;:::i;12818:202:47:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12818:202:47;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;12818:202:47;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;12818:202:47;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;-1:-1;12818:202:47;;-1:-1:-1;12818:202:47;-1:-1:-1;12818:202:47;:::i;567:29:48:-;;;:::i;6183:487:47:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6183:487:47;;;;;;;;:::i;602:28:48:-;;;:::i;3846:370:47:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3846:370:47;;;;;;;;;;;;;;;;;:::i;1182:43::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1182:43:47;-1:-1:-1;;;;;1182:43:47;;:::i;1373:39::-;;;:::i;8648:496::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;8648:496:47;;;;;;;;;;;;;;;;;;;;;;:::i;1474:107:184:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1474:107:184;-1:-1:-1;;;;;1474:107:184;;:::i;7442:748:47:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;7442:748:47;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;11933:169::-;1106:9:184;:7;:9::i;:::-;1098:34;;;;;-1:-1:-1;;;1098:34:184;;;;;;;;;;;;-1:-1:-1;;;1098:34:184;;;;;;;;;;;;;;;12022:13:47;12014:39;;;;;-1:-1:-1;;;12014:39:47;;;;;;;;;;;;-1:-1:-1;;;12014:39:47;;;;;;;;;;;;;;;12063:21;:32;11933:169::o;5012:721::-;5263:19;;5214:28;;5263:19;;5262:20;5254:50;;;;;-1:-1:-1;;;5254:50:47;;;;;;;;;;;;-1:-1:-1;;;5254:50:47;;;;;;;;;;;;;;;5315:12;5329:17;5350:34;5361:11;5374:9;5350:10;:34::i;:::-;5314:70;;-1:-1:-1;5314:70:47;-1:-1:-1;5418:43:47;5448:12;5418:25;:10;5314:70;5418:25;:14;:25;:::i;:::-;:29;:43;:29;:43;:::i;:::-;5395:66;;5483:20;5476:4;:27;5472:255;;;5541:27;;;5596:49;5548:20;5596:23;5541:27;5612:6;5596:23;:15;:23;:::i;:49::-;5582:63;;5682:11;5667;:26;;5659:57;;;;;-1:-1:-1;;;5659:57:47;;;;;;;;;;;;-1:-1:-1;;;5659:57:47;;;;;;;;;;;;;;;5472:255;;5012:721;;;;;;;;;:::o;1283:51::-;;;;:::o;2515:199::-;2619:12;2633:17;2673:34;2684:11;2697:9;2673:10;:34::i;:::-;2666:41;;;;2515:199;;;;;;:::o;11347:398::-;11556:4;11573:21;11612:74;11629:9;11640:15;11657:10;11669:16;11612;:74::i;:::-;-1:-1:-1;;;;11704:34:47;;11347:398;-1:-1:-1;;;;;;11347:398:47:o;1084:53::-;;;;;;;;;;;;-1:-1:-1;;;;;1084:53:47;;:::o;9764:1137::-;9939:21;9962:28;10002:30;10065:9;-1:-1:-1;;;;;10046:28:47;:15;-1:-1:-1;;;;;10046:28:47;;10042:551;;;-1:-1:-1;10168:6:47;;-1:-1:-1;10115:16:47;10042:551;;;10205:33;10304:83;10331:15;10364:9;10304;:83::i;:::-;10252:135;;-1:-1:-1;10252:135:47;-1:-1:-1;10425:63:47;10252:135;10425:32;10252:135;10450:6;10425:32;:24;:32;:::i;:63::-;10402:86;-1:-1:-1;10528:54:47;10575:6;10528:42;:16;10402:86;10528:42;:20;:42;:::i;:54::-;10503:79;;10042:551;;10607:15;;;;;:55;;;10652:10;10626:22;:36;;10607:55;10603:292;;;10703:66;10758:10;10703:50;10746:6;10703:38;:22;10758:10;10703:38;:26;:38;:::i;:::-;:42;:50;:42;:50;:::i;:66::-;10678:143;-1:-1:-1;10678:143:47;;-1:-1:-1;10678:143:47;10603:292;-1:-1:-1;10860:1:47;;-1:-1:-1;9764:1137:47;;;;;;;;:::o;3072:298:50:-;1106:9:184;:7;:9::i;:::-;1098:34;;;;;-1:-1:-1;;;1098:34:184;;;;;;;;;;;;-1:-1:-1;;;1098:34:184;;;;;;;;;;;;;;;3220:9:50;-1:-1:-1;;;;;3205:24:50;:11;-1:-1:-1;;;;;3205:24:50;;3201:163;;-1:-1:-1;;;;;3245:18:50;;;;;;;:5;:18;;;;;;;;:29;;;;;;;;;:36;;;3327:26;3340:6;3277:4;3327:12;:26::i;:::-;-1:-1:-1;;;;;3295:16:50;;;;;;;:5;:16;;;;;;;;:29;;;;;;;;;:58;3201:163;3072:298;;;:::o;12337:306:47:-;1106:9:184;:7;:9::i;:::-;1098:34;;;;;-1:-1:-1;;;1098:34:184;;;;;;;;;;;;-1:-1:-1;;;1098:34:184;;;;;;;;;;;;;;;12476:29:47;;;12468:56;;;;;-1:-1:-1;;;12468:56:47;;;;;;;;;;;;-1:-1:-1;;;12468:56:47;;;;;;;;;;;;;;;12540:9;12535:102;12555:17;;;12535:102;;;12618:5;;12624:1;12618:8;;;;;;;;;;;;;-1:-1:-1;;;;;12618:8:47;12593:11;:22;12605:6;;12612:1;12605:9;;;;;;;-1:-1:-1;;;;;12605:9:47;;;;;;;;;;;12593:22;;;;;;;;;;;;-1:-1:-1;12593:22:47;:33;;;;;;-1:-1:-1;;;;;;12593:33:47;;;;;;;;;;-1:-1:-1;12593:33:47;12574:3;12535:102;;;;12337:306;;;;:::o;3065:198::-;3150:7;3191:9;-1:-1:-1;;;;;3176:24:47;:11;-1:-1:-1;;;;;3176:24:47;;;:80;;3250:6;3176:80;;;3203:44;3224:11;3237:9;3203:20;:44::i;:::-;3169:87;;3065:198;;;;;:::o;514:60:50:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;13156:235:47:-;1106:9:184;:7;:9::i;:::-;1098:34;;;;;-1:-1:-1;;;1098:34:184;;;;;;;;;;;;-1:-1:-1;;;1098:34:184;;;;;;;;;;;;;;;13236:19:47;;;;:31;;;;;;13232:153;;13283:19;:30;;-1:-1:-1;;13283:30:47;;;;;;;;;;13333:41;;13353:10;;13333:41;;-1:-1:-1;;13333:41:47;13232:153;13156:235;:::o;902:77:184:-;966:6;;-1:-1:-1;;;;;966:6:184;902:77;:::o;1233:92::-;1312:6;;1273:4;;-1:-1:-1;;;;;1312:6:184;1296:12;:10;:12::i;:::-;-1:-1:-1;;;;;1296:22:184;;1289:29;;1233:92;:::o;12818:202:47:-;1106:9:184;:7;:9::i;:::-;1098:34;;;;;-1:-1:-1;;;1098:34:184;;;;;;;;;;;;-1:-1:-1;;;1098:34:184;;;;;;;;;;;;;;;12899:9:47;12894:120;12914:17;;;12894:120;;;12983:6;;12990:1;12983:9;;;;;;;;;;;;;-1:-1:-1;;;;;12983:9:47;-1:-1:-1;;;;;12983:18:47;;:20;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12983:20:47;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12983:20:47;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12983:20:47;12952:51;;:8;:28;12969:6;;12976:1;12969:9;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12969:9:47;12952:28;;-1:-1:-1;12952:28:47;;;;;;;;-1:-1:-1;12952:28:47;:51;12933:3;;12894:120;;567:29:48;;;-1:-1:-1;;;;;567:29:48;;:::o;6183:487:47:-;6287:17;6404:10;;-1:-1:-1;;;;;6380:35:47;;;6404:10;;6380:35;6376:288;;;-1:-1:-1;6443:6:47;6376:288;;;6481:17;6574:10;;6481:17;;6542:44;;6552:12;;-1:-1:-1;;;;;6574:10:47;6542:9;:44::i;:::-;6480:106;;-1:-1:-1;6480:106:47;-1:-1:-1;6612:41:47;6480:106;6612:21;:6;6480:106;6612:21;:10;:21;:::i;:41::-;6600:53;6183:487;-1:-1:-1;;;;;6183:487:47:o;602:28:48:-;;;-1:-1:-1;;;;;602:28:48;;:::o;3846:370:47:-;4014:19;;3980:18;;4014:19;;4010:58;;;-1:-1:-1;4056:1:47;4049:8;;4010:58;4079:12;4093:17;4114:34;4125:11;4138:9;4114:10;:34::i;:::-;4078:70;;-1:-1:-1;4078:70:47;-1:-1:-1;4172:37:47;4078:70;4172:22;:12;4078:70;4172:22;:16;:22;:::i;:37::-;4159:50;;3846:370;;;;;;;;:::o;1182:43::-;;;;;;;;;;;;;:::o;1373:39::-;;;;;;:::o;8648:496::-;8840:21;8863:29;8924:132;8954:9;8977:15;9006:10;9030:16;8924;:132::i;:::-;-1:-1:-1;8904:152:47;-1:-1:-1;9091:46:47;9103:15;9120:16;9091:11;:46::i;:::-;9067:70;;8648:496;;;;;;;:::o;1474:107:184:-;1106:9;:7;:9::i;:::-;1098:34;;;;;-1:-1:-1;;;1098:34:184;;;;;;;;;;;;-1:-1:-1;;;1098:34:184;;;;;;;;;;;;;;;1546:28;1565:8;1546:18;:28::i;7442:748:47:-;7639:19;7670:30;7733:9;-1:-1:-1;;;;;7714:28:47;:15;-1:-1:-1;;;;;7714:28:47;;7710:272;;;-1:-1:-1;7783:10:47;7710:272;;;7825:12;7839:17;7860:37;7870:9;7881:15;7860:9;:37::i;:::-;7824:73;;-1:-1:-1;7824:73:47;-1:-1:-1;7936:35:47;7824:73;7936:20;:10;7824:73;7936:20;:14;:20;:::i;:35::-;7911:60;;7710:272;;;7992:16;8023:74;8050:46;8089:6;8050:34;:22;8077:6;8050:34;:26;:34;:::i;:46::-;8023:22;;:74;:26;:74;:::i;:::-;7992:105;;8141:8;8122:16;:27;:61;;8182:1;8122:61;;;8171:8;8152:16;:27;8122:61;8108:75;7442:748;-1:-1:-1;;;;;;;;7442:748:47:o;1346:1471:50:-;1509:19;;1453:12;;;;1509:19;;1508:20;1500:50;;;;;-1:-1:-1;;;1500:50:50;;;;;;;;;;;;-1:-1:-1;;;1500:50:50;;;;;;;;;;;;;;;1580:9;-1:-1:-1;;;;;1565:24:50;:11;-1:-1:-1;;;;;1565:24:50;;1561:1250;;;-1:-1:-1;1612:6:50;;-1:-1:-1;1612:6:50;1561:1250;;;1700:20;;-1:-1:-1;;;;;1685:35:50;;;1700:20;;1685:35;1681:1050;;;1813:21;;1806:28;;1681:1050;;;1872:20;;-1:-1:-1;;;;;1859:33:50;;;1872:20;;1859:33;1855:876;;;1985:43;1998:6;2006:21;;1985:12;:43::i;:::-;1978:50;;1855:876;;;-1:-1:-1;;;;;2071:18:50;;;;;;;:5;:18;;;;;;;;:29;;;;;;;;;;:34;2067:650;;-1:-1:-1;;;;;2136:18:50;;;;;;;:5;:18;;;;;;;;:29;;;;;;;;;;;-1:-1:-1;2067:650:50;;;-1:-1:-1;;;;;2260:18:50;;;2212:21;2260:18;;;:5;:18;;;;;;;;2287:10;;;;;2260:39;;;;;;;;;:151;;2405:6;2260:151;;;-1:-1:-1;;;;;2335:18:50;;;;;;;:5;:18;;;;;;;;2362:10;;;;;2335:39;;;;;;;2260:151;2433:19;2493:10;;-1:-1:-1;;;;;2493:10:50;;;2479:26;;:5;:26;;;;;;;;:37;;;;;;;;;;;2212:199;;-1:-1:-1;2433:19:50;2479:147;;2620:6;2479:147;;;2552:26;2566:10;;-1:-1:-1;;;;;2566:10:50;;;2552:26;;:5;:26;;;;;;;;:37;;;;;;;;;;;2479:147;2433:193;-1:-1:-1;2656:42:50;2691:6;2656:30;:13;2433:193;2656:30;:17;:30;:::i;:42::-;2649:49;;2067:650;;;2756:44;2777:11;2790:9;2756:20;:44::i;:::-;2744:56;;1346:1471;;;;;:::o;2197:459:188:-;2255:7;2496:6;2492:45;;-1:-1:-1;2525:1:188;2518:8;;2492:45;2559:5;;;2563:1;2559;:5;:1;2582:5;;;;;:10;2574:56;;;;-1:-1:-1;;;2574:56:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3111:130;3169:7;3195:39;3199:1;3202;3195:39;;;;;;;;;;;;;;;;;:3;:39::i;1282:134::-;1340:7;1366:43;1370:1;1373;1366:43;;;;;;;;;;;;;;;;;:3;:43::i;15826:910:47:-;15943:7;16034:9;-1:-1:-1;;;;;16019:24:47;:11;-1:-1:-1;;;;;16019:24:47;;16015:715;;;-1:-1:-1;16066:6:47;16059:13;;16015:715;-1:-1:-1;;;;;16214:21:47;;16184:27;16214:21;;;:8;:21;;;;;;16253:24;16249:82;;16308:11;-1:-1:-1;;;;;16301:28:47;;:30;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16301:30:47;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16301:30:47;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;16301:30:47;16279:52;;;-1:-1:-1;16249:82:47;-1:-1:-1;;;;;16374:19:47;;16346:25;16374:19;;;:8;:19;;;;;;16411:22;16407:76;;16462:9;-1:-1:-1;;;;;16455:26:47;;:28;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16455:28:47;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16455:28:47;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;16455:28:47;16435:48;;;-1:-1:-1;16407:76:47;16523:19;16502:17;:40;16498:221;;16572:57;16585:2;16609:19;16589:17;:39;16572:12;:57::i;:::-;16567:2;:63;16560:70;;;;;;16498:221;16661:57;16674:2;16700:17;16678:19;:39;16661:12;:57::i;795:96:179:-;874:10;795:96;:::o;1682:225:184:-;-1:-1:-1;;;;;1755:22:184;;1747:73;;;;-1:-1:-1;;;1747:73:184;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1856:6;;1835:38;;-1:-1:-1;;;;;1835:38:184;;;;1856:6;;1835:38;;1856:6;;1835:38;1883:6;:17;;-1:-1:-1;;;;;;1883:17:184;-1:-1:-1;;;;;1883:17:184;;;;;;;;;;1682:225::o;842:176:188:-;900:7;931:5;;;954:6;;;;946:46;;;;;-1:-1:-1;;;946:46:188;;;;;;;;;;;;;;;;;;;;;;;;;;;3756:369;3872:7;3973:12;3965:6;3957:29;;;;-1:-1:-1;;;3957:29:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3957:29:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3996:9;4012:1;4008;:5;;;;;;;3756:369;-1:-1:-1;;;;;3756:369:188:o;1740:217::-;1856:7;1891:12;1883:6;;;;1875:29;;;;-1:-1:-1;;;1875:29:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;1875:29:188;-1:-1:-1;;;1926:5:188;;;1740:217::o;693:630:178:-;753:4;1226:20;;1059:66;1273:23;;;;;;:42;;-1:-1:-1;1300:15:178;;;1273:42;1265:51;693:630;-1:-1:-1;;;;693:630:178:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "amountInEth(address,uint256)": "b2cf54ea",
    "baseToken()": "c55dae63",
    "checkPriceDisagreement(address,address,uint256,uint256,uint256)": "1e2c62d3",
    "decimals(address)": "d449a832",
    "getCurrentMargin(address,address,uint256,uint256)": "2ff0d012",
    "getCurrentMarginAndCollateralSize(address,address,uint256,uint256)": "ecc5382d",
    "getMaxDrawdown(address,address,uint256,uint256,uint256)": "f80b25fb",
    "globalPricingPaused()": "d601e3ff",
    "isOwner()": "8f32d59b",
    "owner()": "8da5cb5b",
    "pricesFeeds(address)": "2d485c5c",
    "protocolTokenEthPrice()": "22340070",
    "queryPrecision(address,address)": "524efd4b",
    "queryRate(address,address)": "29d5277c",
    "queryReturn(address,address,uint256)": "d138f9a1",
    "rates(address,address)": "7b0cf44d",
    "setDecimals(address[])": "aa2ec710",
    "setGlobalPricingPaused(bool)": "7c2badb7",
    "setPriceFeed(address[],address[])": "5034709c",
    "setProtocolTokenEthPrice(uint256)": "10f54166",
    "setRates(address,address,uint256)": "502fad5f",
    "shouldLiquidate(address,address,uint256,uint256,uint256)": "2a887702",
    "transferOwnership(address)": "f2fde38b",
    "wrbtcToken()": "afe84009"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wrbtcTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_protocolTokenAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"GlobalPricingPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"amountInEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseToken\",\"outputs\":[{\"internalType\":\"contract IWrbtcERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sourceToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sourceAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSlippage\",\"type\":\"uint256\"}],\"name\":\"checkPriceDisagreement\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sourceToDestSwapRate\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"loanToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"getCurrentMargin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"currentMargin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralToLoanRate\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"loanToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"getCurrentMarginAndCollateralSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"currentMargin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralInEthAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"loanToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"}],\"name\":\"getMaxDrawdown\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxDrawdown\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"globalPricingPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pricesFeeds\",\"outputs\":[{\"internalType\":\"contract IPriceFeedsExt\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"protocolTokenEthPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sourceToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destToken\",\"type\":\"address\"}],\"name\":\"queryPrecision\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sourceToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destToken\",\"type\":\"address\"}],\"name\":\"queryRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"precision\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sourceToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sourceAmount\",\"type\":\"uint256\"}],\"name\":\"queryReturn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"destAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"setDecimals\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"setGlobalPricingPaused\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"contract IPriceFeedsExt[]\",\"name\":\"feeds\",\"type\":\"address[]\"}],\"name\":\"setPriceFeed\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"setProtocolTokenEthPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sourceToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"setRates\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"loanToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maintenanceMargin\",\"type\":\"uint256\"}],\"name\":\"shouldLiquidate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wrbtcToken\",\"outputs\":[{\"internalType\":\"contract IWrbtcERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"amountInEth(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to calculate price.\",\"tokenAddress\":\"The address of the token to calculate price.\"},\"return\":\"ethAmount The amount of rBTC equivalent.\"},\"checkPriceDisagreement(address,address,uint256,uint256,uint256)\":{\"params\":{\"destAmount\":\"The amount of destiny tokens.\",\"destToken\":\"The address of the destiny tokens.\",\"maxSlippage\":\"The maximum slippage limit.\",\"sourceAmount\":\"The amount of source tokens.\",\"sourceToken\":\"The address of the source tokens.\"},\"return\":\"sourceToDestSwapRate The swap rate between tokens.\"},\"constructor\":{\"params\":{\"_protocolTokenAddress\":\"The address of the protocol token instance.\",\"_wrbtcTokenAddress\":\"The address of the wrBTC instance.\"}},\"getCurrentMargin(address,address,uint256,uint256)\":{\"details\":\"current margin = (total position size - loan) / loan The collateral amount passed as parameter equals the total position size.\",\"params\":{\"collateralAmount\":\"The amount of the collateral.\",\"collateralToken\":\"The address of the collateral token.\",\"loanAmount\":\"The amount of the loan.\",\"loanToken\":\"The address of the loan token.\"},\"return\":\"currentMargin The margin of the loan.collateralToLoanRate The price ratio between collateral and  loan tokens.\"},\"getCurrentMarginAndCollateralSize(address,address,uint256,uint256)\":{\"params\":{\"collateralAmount\":\"The amount of the collateral.\",\"collateralToken\":\"The address of the collateral token.\",\"loanAmount\":\"The amount of the loan.\",\"loanToken\":\"The address of the loan token.\"},\"return\":\"currentMargin The margin of the loan.collateralInEthAmount The amount of collateral on rBTC.\"},\"getMaxDrawdown(address,address,uint256,uint256,uint256)\":{\"params\":{\"collateralAmount\":\"The amount of the collateral.\",\"collateralToken\":\"The address of the collateral token.\",\"loanAmount\":\"The amount of the loan.\",\"loanToken\":\"The address of the loan token.\",\"margin\":\"The relation between the position size and the loan.  margin = (total position size - loan) / loan\"},\"return\":\"maxDrawdown The maximum drawdown.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"queryPrecision(address,address)\":{\"details\":\"Public wrapper for _getDecimalPrecision internal function.\",\"params\":{\"destToken\":\"The address of the destiny tokens.\",\"sourceToken\":\"The address of the source tokens.\"},\"return\":\"The precision ratio source/dest.\"},\"queryRate(address,address)\":{\"details\":\"Public wrapper for _queryRate internal function.\",\"params\":{\"destToken\":\"The address of the destiny tokens.\",\"sourceToken\":\"The address of the source tokens.\"},\"return\":\"rate The price ratio source/dest.precision The ratio precision.\"},\"queryReturn(address,address,uint256)\":{\"details\":\"NOTE: This function returns 0 during a pause, rather than a revert. Ensure calling contracts handle correctly.\",\"params\":{\"destToken\":\"The address of the destiny tokens.\",\"sourceAmount\":\"The amount of the source tokens.\",\"sourceToken\":\"The address of the source tokens.\"},\"return\":\"destAmount The amount of destiny tokens equivalent in price  to the amount of source tokens.\"},\"setDecimals(address[])\":{\"params\":{\"tokens\":\"The array of tokens to loop and get values from.\"}},\"setGlobalPricingPaused(bool)\":{\"params\":{\"isPaused\":\"The new status of pause (true/false).\"}},\"setPriceFeed(address[],address[])\":{\"params\":{\"feeds\":\"The array of contract instances for every token.\",\"tokens\":\"The array of tokens to loop and get addresses.\"}},\"setProtocolTokenEthPrice(uint256)\":{\"params\":{\"newPrice\":\"The new value for protocolTokenEthPrice\"}},\"setRates(address,address,uint256)\":{\"params\":{\"destToken\":\"The address of the destiny tokens.\",\"rate\":\"The price ratio source/dest.\",\"sourceToken\":\"The address of the source tokens.\"}},\"shouldLiquidate(address,address,uint256,uint256,uint256)\":{\"params\":{\"collateralAmount\":\"The amount of the collateral.\",\"collateralToken\":\"The address of the collateral token.\",\"loanAmount\":\"The amount of the loan.\",\"loanToken\":\"The address of the loan token.\",\"maintenanceMargin\":\"The minimum margin before liquidation.\"},\"return\":\"True/false to liquidate the loan.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Price Feeds Local contract.\"},\"userdoc\":{\"methods\":{\"amountInEth(address,uint256)\":{\"notice\":\"Calculate the rBTC amount equivalent to a given token amount. Native coin on RSK is rBTC. This code comes from Ethereum applications, so Eth refers to 10**18 weis of native coin, i.e.: 1 rBTC.\"},\"checkPriceDisagreement(address,address,uint256,uint256,uint256)\":{\"notice\":\"Calculate the swap rate between two tokens.     * Regarding slippage, there is a hardcoded slippage limit of 5%, enforced by this function for all borrowing, lending and margin trading originated swaps performed in the Sovryn exchange.     * This means all operations in the Sovryn exchange are subject to losing up to 5% from the internal swap performed.\"},\"constructor\":\"Deploy local price feed contract.\",\"getCurrentMargin(address,address,uint256,uint256)\":{\"notice\":\"Calculate the margin of a loan.\"},\"getCurrentMarginAndCollateralSize(address,address,uint256,uint256)\":{\"notice\":\"Calculate the margin and the collateral on rBTC.\"},\"getMaxDrawdown(address,address,uint256,uint256,uint256)\":{\"notice\":\"Calculate the maximum drawdown of a loan.     * A drawdown is commonly defined as the decline from a high peak to a pullback low of a specific investment or equity in an account.     * Drawdown magnitude refers to the amount of value that a user loses during the drawdown period.\"},\"queryPrecision(address,address)\":{\"notice\":\"Calculate the relative precision between two tokens.\"},\"queryRate(address,address)\":{\"notice\":\"Calculate the price ratio between two tokens.\"},\"queryReturn(address,address,uint256)\":{\"notice\":\"Price conversor: Calculate the price of an amount of source tokens in destiny token units.\"},\"setDecimals(address[])\":{\"notice\":\"Populate decimals mapping w/ values from tokens[].decimals\"},\"setGlobalPricingPaused(bool)\":{\"notice\":\"Set flag globalPricingPaused\"},\"setPriceFeed(address[],address[])\":{\"notice\":\"Populate pricesFeeds mapping w/ values from feeds[]\"},\"setProtocolTokenEthPrice(uint256)\":{\"notice\":\"Set new value for protocolTokenEthPrice\"},\"setRates(address,address,uint256)\":{\"notice\":\"Owner set price ratio between two tokens.\"},\"shouldLiquidate(address,address,uint256,uint256,uint256)\":{\"notice\":\"Get assessment about liquidating a loan.\"}},\"notice\":\"This contract code comes from bZx. bZx is a protocol for tokenized margin trading and lending https://bzx.network similar to the dYdX protocol. * This contract contains the logic of setting and getting rates between two tokens.\"}},\"settings\":{\"compilationTarget\":{\"contracts/feeds/testnet/PriceFeedsLocal.sol\":\"PriceFeedsLocal\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@ethereum-waffle/=node_modules/@ethereum-waffle/\",\":ds-test/=foundry/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=foundry/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":truffle/=node_modules/truffle/\"]},\"sources\":{\"contracts/feeds/PriceFeeds.sol\":{\"keccak256\":\"0x1c90db64dc36611a0eca6a29a8cb138dac1821864920e6bcd5acb7e5071e2bf1\",\"urls\":[\"bzz-raw://fcad9db567fb499f1b67278be1e99148252fa49a7c64d538499ab5e86605bdd1\",\"dweb:/ipfs/QmY8bgKUHdcQcaiHRnnY5YLYXKXRcg5aWXanCc6GD1Kn8g\"]},\"contracts/feeds/PriceFeedsConstants.sol\":{\"keccak256\":\"0x0fa85c00dd41dff315be51bc3220bd8826430bd1388424eb969fb188e203f0af\",\"urls\":[\"bzz-raw://bfbacbad0daedbb1febbe08f0ea11f702c8ae49f298e998ecf2f200c6fbdb822\",\"dweb:/ipfs/QmQd8w8nEfyim1uQsLnm4Bwf9o3j3NGACkQhp4ZPqt5tzR\"]},\"contracts/feeds/testnet/PriceFeedsLocal.sol\":{\"keccak256\":\"0x96a5ec396f0b79176e16fe54515bf1870592d01afc9586de53bd39d22582f910\",\"urls\":[\"bzz-raw://3a3645745ee8d6103bba19320095960f17e73d58c4f15d0ea792c254644300c2\",\"dweb:/ipfs/Qmdw9y46JMMuSRmNnBqLJKVedQM6GhYfxLC2opTBAN6FM7\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xea0bb1bf7d022130bb42a4efdfd875ef76ac5ac730a94ddd7b8c9949d4253855\",\"urls\":[\"bzz-raw://2050b03a2a1d4203698261daf2f46749bf5b72e3d23c272553e047e6bea4af40\",\"dweb:/ipfs/QmPY8bbNv3KxnyQ4Z6DtHkYu2U1Kfd7ooRDRUWNuw6v4Jt\"]},\"contracts/interfaces/IWrbtc.sol\":{\"keccak256\":\"0x20fdfe4b5e32fd7f863b3fa128e3c80bd4ccf090a4ffba56186ef3b7f2a80492\",\"urls\":[\"bzz-raw://d1adc3348aded3938e587fead4d4becf8efbed346c9cdc73e1f8ed42cb43b2c9\",\"dweb:/ipfs/QmZPMshLwXDwH2UKkFeV5QPtz129swV354fQ25gqKWAV94\"]},\"contracts/interfaces/IWrbtcERC20.sol\":{\"keccak256\":\"0x7301a8c8ca7aa016ec94268a16d07366875f2e406442e929968dd745b1ee5be5\",\"urls\":[\"bzz-raw://12d22b4d1e74d95f82d2bc84b5e3c978e2341cb7a1b8fc383b64aaef59f13a00\",\"dweb:/ipfs/QmZkPrztJ5nwiKKudgz8aWX6kk3YHKCtmxJndMvV1NJuS6\"]},\"contracts/openzeppelin/Address.sol\":{\"keccak256\":\"0x23df48a01dbac9b25e86c9131174fb7752bbc7e741e63f1aa982de22e055ad54\",\"urls\":[\"bzz-raw://0928673cfdca6f6917432e1cff628b726b4396ed0f4b08d3281a7ebbdb2380e3\",\"dweb:/ipfs/QmY12enUUEaE7sC5PZAdqJo63JxaH2FqVJtHZxxB9HzVYE\"]},\"contracts/openzeppelin/Context.sol\":{\"keccak256\":\"0x7860cb1591dbd66bb497c60c46866d9fcdb56c73306ed86b25801000af1c7b2b\",\"urls\":[\"bzz-raw://79e480eab5cb03c034f7fb2c177f23874fddebbb3514d773729bb094a0fda826\",\"dweb:/ipfs/QmTfDHE4fnQE3gfycu7NePREWfWFgJgmaEmHDn4uyTnMBP\"]},\"contracts/openzeppelin/Ownable.sol\":{\"keccak256\":\"0x94496c375b3e82d87d7f01ce1577f008fab374312cf93012a0eca716e6aadb3a\",\"urls\":[\"bzz-raw://ea268f87bc9d256b99aae4d98f23931f485295b5720f505e0554223c9b54431a\",\"dweb:/ipfs/QmWCLqTijearegiDuWyhrkRQXXACT1sVUG6cF3L9pszb6Y\"]},\"contracts/openzeppelin/SafeMath.sol\":{\"keccak256\":\"0xbff8d6273e1a6870d1a142c0c23acd63a4dd47760f250390f49ee56333bcb6e8\",\"urls\":[\"bzz-raw://379880c293771d9db34b4db282bd22f0536d41f1db2a7fb887124984a5bcd719\",\"dweb:/ipfs/QmUrUzEJPp9WxyvFFZSaqv7qjnSwrkApNUkMny5cCcY2a6\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.5.17+commit.d19bba13"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_wrbtcTokenAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_protocolTokenAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "isPaused",
              "type": "bool",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "GlobalPricingPaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "amountInEth",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "ethAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "baseToken",
          "outputs": [
            {
              "internalType": "contract IWrbtcERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sourceToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "destToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "sourceAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "destAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxSlippage",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkPriceDisagreement",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "sourceToDestSwapRate",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "loanToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "loanAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentMargin",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "currentMargin",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralToLoanRate",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "loanToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "loanAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentMarginAndCollateralSize",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "currentMargin",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralInEthAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "loanToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "loanAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "margin",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMaxDrawdown",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "maxDrawdown",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "globalPricingPaused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isOwner",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pricesFeeds",
          "outputs": [
            {
              "internalType": "contract IPriceFeedsExt",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "protocolTokenEthPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sourceToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "destToken",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "queryPrecision",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sourceToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "destToken",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "queryRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "rate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "precision",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sourceToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "destToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "sourceAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "queryReturn",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "destAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "rates",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDecimals"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "isPaused",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setGlobalPricingPaused"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "contract IPriceFeedsExt[]",
              "name": "feeds",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPriceFeed"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setProtocolTokenEthPrice"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sourceToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "destToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "rate",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRates"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "loanToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "loanAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maintenanceMargin",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "shouldLiquidate",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "wrbtcToken",
          "outputs": [
            {
              "internalType": "contract IWrbtcERC20",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "methods": {
          "amountInEth(address,uint256)": {
            "params": {
              "amount": "The amount of tokens to calculate price.",
              "tokenAddress": "The address of the token to calculate price."
            },
            "return": "ethAmount The amount of rBTC equivalent."
          },
          "checkPriceDisagreement(address,address,uint256,uint256,uint256)": {
            "params": {
              "destAmount": "The amount of destiny tokens.",
              "destToken": "The address of the destiny tokens.",
              "maxSlippage": "The maximum slippage limit.",
              "sourceAmount": "The amount of source tokens.",
              "sourceToken": "The address of the source tokens."
            },
            "return": "sourceToDestSwapRate The swap rate between tokens."
          },
          "constructor": {
            "params": {
              "_protocolTokenAddress": "The address of the protocol token instance.",
              "_wrbtcTokenAddress": "The address of the wrBTC instance."
            }
          },
          "getCurrentMargin(address,address,uint256,uint256)": {
            "details": "current margin = (total position size - loan) / loan The collateral amount passed as parameter equals the total position size.",
            "params": {
              "collateralAmount": "The amount of the collateral.",
              "collateralToken": "The address of the collateral token.",
              "loanAmount": "The amount of the loan.",
              "loanToken": "The address of the loan token."
            },
            "return": "currentMargin The margin of the loan.collateralToLoanRate The price ratio between collateral and  loan tokens."
          },
          "getCurrentMarginAndCollateralSize(address,address,uint256,uint256)": {
            "params": {
              "collateralAmount": "The amount of the collateral.",
              "collateralToken": "The address of the collateral token.",
              "loanAmount": "The amount of the loan.",
              "loanToken": "The address of the loan token."
            },
            "return": "currentMargin The margin of the loan.collateralInEthAmount The amount of collateral on rBTC."
          },
          "getMaxDrawdown(address,address,uint256,uint256,uint256)": {
            "params": {
              "collateralAmount": "The amount of the collateral.",
              "collateralToken": "The address of the collateral token.",
              "loanAmount": "The amount of the loan.",
              "loanToken": "The address of the loan token.",
              "margin": "The relation between the position size and the loan.  margin = (total position size - loan) / loan"
            },
            "return": "maxDrawdown The maximum drawdown."
          },
          "isOwner()": {
            "details": "Returns true if the caller is the current owner."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "queryPrecision(address,address)": {
            "details": "Public wrapper for _getDecimalPrecision internal function.",
            "params": {
              "destToken": "The address of the destiny tokens.",
              "sourceToken": "The address of the source tokens."
            },
            "return": "The precision ratio source/dest."
          },
          "queryRate(address,address)": {
            "details": "Public wrapper for _queryRate internal function.",
            "params": {
              "destToken": "The address of the destiny tokens.",
              "sourceToken": "The address of the source tokens."
            },
            "return": "rate The price ratio source/dest.precision The ratio precision."
          },
          "queryReturn(address,address,uint256)": {
            "details": "NOTE: This function returns 0 during a pause, rather than a revert. Ensure calling contracts handle correctly.",
            "params": {
              "destToken": "The address of the destiny tokens.",
              "sourceAmount": "The amount of the source tokens.",
              "sourceToken": "The address of the source tokens."
            },
            "return": "destAmount The amount of destiny tokens equivalent in price  to the amount of source tokens."
          },
          "setDecimals(address[])": {
            "params": {
              "tokens": "The array of tokens to loop and get values from."
            }
          },
          "setGlobalPricingPaused(bool)": {
            "params": {
              "isPaused": "The new status of pause (true/false)."
            }
          },
          "setPriceFeed(address[],address[])": {
            "params": {
              "feeds": "The array of contract instances for every token.",
              "tokens": "The array of tokens to loop and get addresses."
            }
          },
          "setProtocolTokenEthPrice(uint256)": {
            "params": {
              "newPrice": "The new value for protocolTokenEthPrice"
            }
          },
          "setRates(address,address,uint256)": {
            "params": {
              "destToken": "The address of the destiny tokens.",
              "rate": "The price ratio source/dest.",
              "sourceToken": "The address of the source tokens."
            }
          },
          "shouldLiquidate(address,address,uint256,uint256,uint256)": {
            "params": {
              "collateralAmount": "The amount of the collateral.",
              "collateralToken": "The address of the collateral token.",
              "loanAmount": "The amount of the loan.",
              "loanToken": "The address of the loan token.",
              "maintenanceMargin": "The minimum margin before liquidation."
            },
            "return": "True/false to liquidate the loan."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        }
      },
      "userdoc": {
        "methods": {
          "amountInEth(address,uint256)": {
            "notice": "Calculate the rBTC amount equivalent to a given token amount. Native coin on RSK is rBTC. This code comes from Ethereum applications, so Eth refers to 10**18 weis of native coin, i.e.: 1 rBTC."
          },
          "checkPriceDisagreement(address,address,uint256,uint256,uint256)": {
            "notice": "Calculate the swap rate between two tokens.     * Regarding slippage, there is a hardcoded slippage limit of 5%, enforced by this function for all borrowing, lending and margin trading originated swaps performed in the Sovryn exchange.     * This means all operations in the Sovryn exchange are subject to losing up to 5% from the internal swap performed."
          },
          "constructor": "Deploy local price feed contract.",
          "getCurrentMargin(address,address,uint256,uint256)": {
            "notice": "Calculate the margin of a loan."
          },
          "getCurrentMarginAndCollateralSize(address,address,uint256,uint256)": {
            "notice": "Calculate the margin and the collateral on rBTC."
          },
          "getMaxDrawdown(address,address,uint256,uint256,uint256)": {
            "notice": "Calculate the maximum drawdown of a loan.     * A drawdown is commonly defined as the decline from a high peak to a pullback low of a specific investment or equity in an account.     * Drawdown magnitude refers to the amount of value that a user loses during the drawdown period."
          },
          "queryPrecision(address,address)": {
            "notice": "Calculate the relative precision between two tokens."
          },
          "queryRate(address,address)": {
            "notice": "Calculate the price ratio between two tokens."
          },
          "queryReturn(address,address,uint256)": {
            "notice": "Price conversor: Calculate the price of an amount of source tokens in destiny token units."
          },
          "setDecimals(address[])": {
            "notice": "Populate decimals mapping w/ values from tokens[].decimals"
          },
          "setGlobalPricingPaused(bool)": {
            "notice": "Set flag globalPricingPaused"
          },
          "setPriceFeed(address[],address[])": {
            "notice": "Populate pricesFeeds mapping w/ values from feeds[]"
          },
          "setProtocolTokenEthPrice(uint256)": {
            "notice": "Set new value for protocolTokenEthPrice"
          },
          "setRates(address,address,uint256)": {
            "notice": "Owner set price ratio between two tokens."
          },
          "shouldLiquidate(address,address,uint256,uint256,uint256)": {
            "notice": "Get assessment about liquidating a loan."
          }
        }
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@ethereum-waffle/=node_modules/@ethereum-waffle/",
        ":ds-test/=foundry/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=foundry/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":truffle/=node_modules/truffle/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "compilationTarget": {
        "contracts/feeds/testnet/PriceFeedsLocal.sol": "PriceFeedsLocal"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/feeds/PriceFeeds.sol": {
        "keccak256": "0x1c90db64dc36611a0eca6a29a8cb138dac1821864920e6bcd5acb7e5071e2bf1",
        "urls": [
          "bzz-raw://fcad9db567fb499f1b67278be1e99148252fa49a7c64d538499ab5e86605bdd1",
          "dweb:/ipfs/QmY8bgKUHdcQcaiHRnnY5YLYXKXRcg5aWXanCc6GD1Kn8g"
        ],
        "license": null
      },
      "contracts/feeds/PriceFeedsConstants.sol": {
        "keccak256": "0x0fa85c00dd41dff315be51bc3220bd8826430bd1388424eb969fb188e203f0af",
        "urls": [
          "bzz-raw://bfbacbad0daedbb1febbe08f0ea11f702c8ae49f298e998ecf2f200c6fbdb822",
          "dweb:/ipfs/QmQd8w8nEfyim1uQsLnm4Bwf9o3j3NGACkQhp4ZPqt5tzR"
        ],
        "license": null
      },
      "contracts/feeds/testnet/PriceFeedsLocal.sol": {
        "keccak256": "0x96a5ec396f0b79176e16fe54515bf1870592d01afc9586de53bd39d22582f910",
        "urls": [
          "bzz-raw://3a3645745ee8d6103bba19320095960f17e73d58c4f15d0ea792c254644300c2",
          "dweb:/ipfs/Qmdw9y46JMMuSRmNnBqLJKVedQM6GhYfxLC2opTBAN6FM7"
        ],
        "license": null
      },
      "contracts/interfaces/IERC20.sol": {
        "keccak256": "0xea0bb1bf7d022130bb42a4efdfd875ef76ac5ac730a94ddd7b8c9949d4253855",
        "urls": [
          "bzz-raw://2050b03a2a1d4203698261daf2f46749bf5b72e3d23c272553e047e6bea4af40",
          "dweb:/ipfs/QmPY8bbNv3KxnyQ4Z6DtHkYu2U1Kfd7ooRDRUWNuw6v4Jt"
        ],
        "license": null
      },
      "contracts/interfaces/IWrbtc.sol": {
        "keccak256": "0x20fdfe4b5e32fd7f863b3fa128e3c80bd4ccf090a4ffba56186ef3b7f2a80492",
        "urls": [
          "bzz-raw://d1adc3348aded3938e587fead4d4becf8efbed346c9cdc73e1f8ed42cb43b2c9",
          "dweb:/ipfs/QmZPMshLwXDwH2UKkFeV5QPtz129swV354fQ25gqKWAV94"
        ],
        "license": null
      },
      "contracts/interfaces/IWrbtcERC20.sol": {
        "keccak256": "0x7301a8c8ca7aa016ec94268a16d07366875f2e406442e929968dd745b1ee5be5",
        "urls": [
          "bzz-raw://12d22b4d1e74d95f82d2bc84b5e3c978e2341cb7a1b8fc383b64aaef59f13a00",
          "dweb:/ipfs/QmZkPrztJ5nwiKKudgz8aWX6kk3YHKCtmxJndMvV1NJuS6"
        ],
        "license": null
      },
      "contracts/openzeppelin/Address.sol": {
        "keccak256": "0x23df48a01dbac9b25e86c9131174fb7752bbc7e741e63f1aa982de22e055ad54",
        "urls": [
          "bzz-raw://0928673cfdca6f6917432e1cff628b726b4396ed0f4b08d3281a7ebbdb2380e3",
          "dweb:/ipfs/QmY12enUUEaE7sC5PZAdqJo63JxaH2FqVJtHZxxB9HzVYE"
        ],
        "license": null
      },
      "contracts/openzeppelin/Context.sol": {
        "keccak256": "0x7860cb1591dbd66bb497c60c46866d9fcdb56c73306ed86b25801000af1c7b2b",
        "urls": [
          "bzz-raw://79e480eab5cb03c034f7fb2c177f23874fddebbb3514d773729bb094a0fda826",
          "dweb:/ipfs/QmTfDHE4fnQE3gfycu7NePREWfWFgJgmaEmHDn4uyTnMBP"
        ],
        "license": null
      },
      "contracts/openzeppelin/Ownable.sol": {
        "keccak256": "0x94496c375b3e82d87d7f01ce1577f008fab374312cf93012a0eca716e6aadb3a",
        "urls": [
          "bzz-raw://ea268f87bc9d256b99aae4d98f23931f485295b5720f505e0554223c9b54431a",
          "dweb:/ipfs/QmWCLqTijearegiDuWyhrkRQXXACT1sVUG6cF3L9pszb6Y"
        ],
        "license": null
      },
      "contracts/openzeppelin/SafeMath.sol": {
        "keccak256": "0xbff8d6273e1a6870d1a142c0c23acd63a4dd47760f250390f49ee56333bcb6e8",
        "urls": [
          "bzz-raw://379880c293771d9db34b4db282bd22f0536d41f1db2a7fb887124984a5bcd719",
          "dweb:/ipfs/QmUrUzEJPp9WxyvFFZSaqv7qjnSwrkApNUkMny5cCcY2a6"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/feeds/testnet/PriceFeedsLocal.sol",
    "id": 12047,
    "exportedSymbols": {
      "PriceFeedsLocal": [
        12046
      ]
    },
    "nodeType": "SourceUnit",
    "src": "118:3525:50",
    "nodes": [
      {
        "id": 11840,
        "nodeType": "PragmaDirective",
        "src": "118:23:50",
        "nodes": [],
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ]
      },
      {
        "id": 11841,
        "nodeType": "ImportDirective",
        "src": "143:27:50",
        "nodes": [],
        "absolutePath": "contracts/feeds/PriceFeeds.sol",
        "file": "../PriceFeeds.sol",
        "scope": 12047,
        "sourceUnit": 11745,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12046,
        "nodeType": "ContractDefinition",
        "src": "469:3173:50",
        "nodes": [
          {
            "id": 11849,
            "nodeType": "VariableDeclaration",
            "src": "514:60:50",
            "nodes": [],
            "constant": false,
            "name": "rates",
            "scope": 12046,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 11848,
              "keyType": {
                "id": 11844,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "522:7:50",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "514:47:50",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 11847,
                "keyType": {
                  "id": 11845,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "541:7:50",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "533:27:50",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 11846,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "552:7:50",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "id": 11862,
            "nodeType": "FunctionDefinition",
            "src": "859:174:50",
            "nodes": [],
            "body": {
              "id": 11861,
              "nodeType": "Block",
              "src": "1031:2:50",
              "nodes": [],
              "statements": []
            },
            "documentation": "@notice Deploy local price feed contract.\n     * @param _wrbtcTokenAddress The address of the wrBTC instance.\n@param _protocolTokenAddress The address of the protocol token instance.\n",
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 11856,
                    "name": "_wrbtcTokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11851,
                    "src": "964:18:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 11857,
                    "name": "_protocolTokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11853,
                    "src": "984:21:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 11858,
                    "name": "_wrbtcTokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11851,
                    "src": "1007:18:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 11859,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11855,
                  "name": "PriceFeeds",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11744,
                  "src": "953:10:50",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_PriceFeeds_$11744_$",
                    "typeString": "type(contract PriceFeeds)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "953:73:50"
              }
            ],
            "name": "",
            "parameters": {
              "id": 11854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11851,
                  "name": "_wrbtcTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 11862,
                  "src": "871:26:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11850,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "871:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11853,
                  "name": "_protocolTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 11862,
                  "src": "899:29:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11852,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "899:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "870:59:50"
            },
            "returnParameters": {
              "id": 11860,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1031:0:50"
            },
            "scope": 12046,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "id": 12006,
            "nodeType": "FunctionDefinition",
            "src": "1346:1471:50",
            "nodes": [],
            "body": {
              "id": 12005,
              "nodeType": "Block",
              "src": "1490:1327:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1508:20:50",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 11874,
                          "name": "globalPricingPaused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10897,
                          "src": "1509:19:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "70726963696e6720697320706175736564",
                        "id": 11876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1530:19:50",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a691bf5e21c6bc6589b3bb5e4ec447b6123fc63906ff665341e863b863542691",
                          "typeString": "literal_string \"pricing is paused\""
                        },
                        "value": "pricing is paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a691bf5e21c6bc6589b3bb5e4ec447b6123fc63906ff665341e863b863542691",
                          "typeString": "literal_string \"pricing is paused\""
                        }
                      ],
                      "id": 11873,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        62895,
                        62896
                      ],
                      "referencedDeclaration": 62896,
                      "src": "1500:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1500:50:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11878,
                  "nodeType": "ExpressionStatement",
                  "src": "1500:50:50"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 11881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 11879,
                      "name": "sourceToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11864,
                      "src": "1565:11:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 11880,
                      "name": "destToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11866,
                      "src": "1580:9:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1565:24:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 12003,
                    "nodeType": "Block",
                    "src": "1667:1144:50",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 11897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 11895,
                            "name": "sourceToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11864,
                            "src": "1685:11:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 11896,
                            "name": "protocolTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11754,
                            "src": "1700:20:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1685:35:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 11905,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 11903,
                              "name": "destToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11866,
                              "src": "1859:9:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 11904,
                              "name": "protocolTokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11754,
                              "src": "1872:20:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "1859:33:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "id": 11993,
                            "nodeType": "Block",
                            "src": "2049:682:50",
                            "statements": [
                              {
                                "condition": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 11923,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 11917,
                                        "name": "rates",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 11849,
                                        "src": "2071:5:50",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                          "typeString": "mapping(address => mapping(address => uint256))"
                                        }
                                      },
                                      "id": 11919,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 11918,
                                        "name": "sourceToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 11864,
                                        "src": "2077:11:50",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2071:18:50",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 11921,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 11920,
                                      "name": "destToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 11866,
                                      "src": "2090:9:50",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2071:29:50",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 11922,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2104:1:50",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "2071:34:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "id": 11991,
                                  "nodeType": "Block",
                                  "src": "2190:527:50",
                                  "statements": [
                                    {
                                      "assignments": [
                                        11934
                                      ],
                                      "declarations": [
                                        {
                                          "constant": false,
                                          "id": 11934,
                                          "name": "sourceToEther",
                                          "nodeType": "VariableDeclaration",
                                          "scope": 11991,
                                          "src": "2212:21:50",
                                          "stateVariable": false,
                                          "storageLocation": "default",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "typeName": {
                                            "id": 11933,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "2212:7:50",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "value": null,
                                          "visibility": "internal"
                                        }
                                      ],
                                      "id": 11955,
                                      "initialValue": {
                                        "argumentTypes": null,
                                        "condition": {
                                          "argumentTypes": null,
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 11943,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "argumentTypes": null,
                                            "baseExpression": {
                                              "argumentTypes": null,
                                              "baseExpression": {
                                                "argumentTypes": null,
                                                "id": 11935,
                                                "name": "rates",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 11849,
                                                "src": "2260:5:50",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                                  "typeString": "mapping(address => mapping(address => uint256))"
                                                }
                                              },
                                              "id": 11937,
                                              "indexExpression": {
                                                "argumentTypes": null,
                                                "id": 11936,
                                                "name": "sourceToken",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 11864,
                                                "src": "2266:11:50",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "2260:18:50",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                "typeString": "mapping(address => uint256)"
                                              }
                                            },
                                            "id": 11941,
                                            "indexExpression": {
                                              "argumentTypes": null,
                                              "arguments": [
                                                {
                                                  "argumentTypes": null,
                                                  "id": 11939,
                                                  "name": "wrbtcToken",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 11750,
                                                  "src": "2287:10:50",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IWrbtcERC20_$34035",
                                                    "typeString": "contract IWrbtcERC20"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_contract$_IWrbtcERC20_$34035",
                                                    "typeString": "contract IWrbtcERC20"
                                                  }
                                                ],
                                                "id": 11938,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "2279:7:50",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_address_$",
                                                  "typeString": "type(address)"
                                                },
                                                "typeName": "address"
                                              },
                                              "id": 11940,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "2279:19:50",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "2260:39:50",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "!=",
                                          "rightExpression": {
                                            "argumentTypes": null,
                                            "hexValue": "30",
                                            "id": 11942,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2303:1:50",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          },
                                          "src": "2260:44:50",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "falseExpression": {
                                          "argumentTypes": null,
                                          "commonType": {
                                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                            "typeString": "int_const 1000000000000000000"
                                          },
                                          "id": 11953,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "argumentTypes": null,
                                            "hexValue": "3130",
                                            "id": 11951,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2405:2:50",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_10_by_1",
                                              "typeString": "int_const 10"
                                            },
                                            "value": "10"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "**",
                                          "rightExpression": {
                                            "argumentTypes": null,
                                            "hexValue": "3138",
                                            "id": 11952,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2409:2:50",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_18_by_1",
                                              "typeString": "int_const 18"
                                            },
                                            "value": "18"
                                          },
                                          "src": "2405:6:50",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                            "typeString": "int_const 1000000000000000000"
                                          }
                                        },
                                        "id": 11954,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "Conditional",
                                        "src": "2260:151:50",
                                        "trueExpression": {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "baseExpression": {
                                              "argumentTypes": null,
                                              "id": 11944,
                                              "name": "rates",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 11849,
                                              "src": "2335:5:50",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                                "typeString": "mapping(address => mapping(address => uint256))"
                                              }
                                            },
                                            "id": 11946,
                                            "indexExpression": {
                                              "argumentTypes": null,
                                              "id": 11945,
                                              "name": "sourceToken",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 11864,
                                              "src": "2341:11:50",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "2335:18:50",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                              "typeString": "mapping(address => uint256)"
                                            }
                                          },
                                          "id": 11950,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "arguments": [
                                              {
                                                "argumentTypes": null,
                                                "id": 11948,
                                                "name": "wrbtcToken",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 11750,
                                                "src": "2362:10:50",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_IWrbtcERC20_$34035",
                                                  "typeString": "contract IWrbtcERC20"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_IWrbtcERC20_$34035",
                                                  "typeString": "contract IWrbtcERC20"
                                                }
                                              ],
                                              "id": 11947,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "2354:7:50",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": "address"
                                            },
                                            "id": 11949,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "2354:19:50",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "2335:39:50",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "VariableDeclarationStatement",
                                      "src": "2212:199:50"
                                    },
                                    {
                                      "assignments": [
                                        11957
                                      ],
                                      "declarations": [
                                        {
                                          "constant": false,
                                          "id": 11957,
                                          "name": "etherToDest",
                                          "nodeType": "VariableDeclaration",
                                          "scope": 11991,
                                          "src": "2433:19:50",
                                          "stateVariable": false,
                                          "storageLocation": "default",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "typeName": {
                                            "id": 11956,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "2433:7:50",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "value": null,
                                          "visibility": "internal"
                                        }
                                      ],
                                      "id": 11978,
                                      "initialValue": {
                                        "argumentTypes": null,
                                        "condition": {
                                          "argumentTypes": null,
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 11966,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "argumentTypes": null,
                                            "baseExpression": {
                                              "argumentTypes": null,
                                              "baseExpression": {
                                                "argumentTypes": null,
                                                "id": 11958,
                                                "name": "rates",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 11849,
                                                "src": "2479:5:50",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                                  "typeString": "mapping(address => mapping(address => uint256))"
                                                }
                                              },
                                              "id": 11962,
                                              "indexExpression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                  {
                                                    "argumentTypes": null,
                                                    "id": 11960,
                                                    "name": "wrbtcToken",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 11750,
                                                    "src": "2493:10:50",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_contract$_IWrbtcERC20_$34035",
                                                      "typeString": "contract IWrbtcERC20"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_contract$_IWrbtcERC20_$34035",
                                                      "typeString": "contract IWrbtcERC20"
                                                    }
                                                  ],
                                                  "id": 11959,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "nodeType": "ElementaryTypeNameExpression",
                                                  "src": "2485:7:50",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_address_$",
                                                    "typeString": "type(address)"
                                                  },
                                                  "typeName": "address"
                                                },
                                                "id": 11961,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2485:19:50",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "2479:26:50",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                "typeString": "mapping(address => uint256)"
                                              }
                                            },
                                            "id": 11964,
                                            "indexExpression": {
                                              "argumentTypes": null,
                                              "id": 11963,
                                              "name": "destToken",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 11866,
                                              "src": "2506:9:50",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "2479:37:50",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "!=",
                                          "rightExpression": {
                                            "argumentTypes": null,
                                            "hexValue": "30",
                                            "id": 11965,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2520:1:50",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          },
                                          "src": "2479:42:50",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "falseExpression": {
                                          "argumentTypes": null,
                                          "commonType": {
                                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                            "typeString": "int_const 1000000000000000000"
                                          },
                                          "id": 11976,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "argumentTypes": null,
                                            "hexValue": "3130",
                                            "id": 11974,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2620:2:50",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_10_by_1",
                                              "typeString": "int_const 10"
                                            },
                                            "value": "10"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "**",
                                          "rightExpression": {
                                            "argumentTypes": null,
                                            "hexValue": "3138",
                                            "id": 11975,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2624:2:50",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_18_by_1",
                                              "typeString": "int_const 18"
                                            },
                                            "value": "18"
                                          },
                                          "src": "2620:6:50",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                            "typeString": "int_const 1000000000000000000"
                                          }
                                        },
                                        "id": 11977,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "Conditional",
                                        "src": "2479:147:50",
                                        "trueExpression": {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "baseExpression": {
                                              "argumentTypes": null,
                                              "id": 11967,
                                              "name": "rates",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 11849,
                                              "src": "2552:5:50",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                                "typeString": "mapping(address => mapping(address => uint256))"
                                              }
                                            },
                                            "id": 11971,
                                            "indexExpression": {
                                              "argumentTypes": null,
                                              "arguments": [
                                                {
                                                  "argumentTypes": null,
                                                  "id": 11969,
                                                  "name": "wrbtcToken",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 11750,
                                                  "src": "2566:10:50",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IWrbtcERC20_$34035",
                                                    "typeString": "contract IWrbtcERC20"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_contract$_IWrbtcERC20_$34035",
                                                    "typeString": "contract IWrbtcERC20"
                                                  }
                                                ],
                                                "id": 11968,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "2558:7:50",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_address_$",
                                                  "typeString": "type(address)"
                                                },
                                                "typeName": "address"
                                              },
                                              "id": 11970,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "2558:19:50",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "2552:26:50",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                              "typeString": "mapping(address => uint256)"
                                            }
                                          },
                                          "id": 11973,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "id": 11972,
                                            "name": "destToken",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 11866,
                                            "src": "2579:9:50",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "2552:37:50",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "VariableDeclarationStatement",
                                      "src": "2433:193:50"
                                    },
                                    {
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 11989,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "argumentTypes": null,
                                          "id": 11979,
                                          "name": "rate",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 11869,
                                          "src": "2649:4:50",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "commonType": {
                                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                "typeString": "int_const 1000000000000000000"
                                              },
                                              "id": 11987,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "argumentTypes": null,
                                                "hexValue": "3130",
                                                "id": 11985,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2691:2:50",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_10_by_1",
                                                  "typeString": "int_const 10"
                                                },
                                                "value": "10"
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "**",
                                              "rightExpression": {
                                                "argumentTypes": null,
                                                "hexValue": "3138",
                                                "id": 11986,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2695:2:50",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_18_by_1",
                                                  "typeString": "int_const 18"
                                                },
                                                "value": "18"
                                              },
                                              "src": "2691:6:50",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                "typeString": "int_const 1000000000000000000"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                "typeString": "int_const 1000000000000000000"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": null,
                                              "arguments": [
                                                {
                                                  "argumentTypes": null,
                                                  "id": 11982,
                                                  "name": "etherToDest",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 11957,
                                                  "src": "2674:11:50",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "id": 11980,
                                                  "name": "sourceToEther",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 11934,
                                                  "src": "2656:13:50",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 11981,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "mul",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 55580,
                                                "src": "2656:17:50",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 11983,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "2656:30:50",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 11984,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "div",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 55596,
                                            "src": "2656:34:50",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                          },
                                          "id": 11988,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "2656:42:50",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "2649:49:50",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 11990,
                                      "nodeType": "ExpressionStatement",
                                      "src": "2649:49:50"
                                    }
                                  ]
                                },
                                "id": 11992,
                                "nodeType": "IfStatement",
                                "src": "2067:650:50",
                                "trueBody": {
                                  "id": 11932,
                                  "nodeType": "Block",
                                  "src": "2107:77:50",
                                  "statements": [
                                    {
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 11930,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "argumentTypes": null,
                                          "id": 11924,
                                          "name": "rate",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 11869,
                                          "src": "2129:4:50",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "baseExpression": {
                                              "argumentTypes": null,
                                              "id": 11925,
                                              "name": "rates",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 11849,
                                              "src": "2136:5:50",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                                "typeString": "mapping(address => mapping(address => uint256))"
                                              }
                                            },
                                            "id": 11927,
                                            "indexExpression": {
                                              "argumentTypes": null,
                                              "id": 11926,
                                              "name": "sourceToken",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 11864,
                                              "src": "2142:11:50",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "2136:18:50",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                              "typeString": "mapping(address => uint256)"
                                            }
                                          },
                                          "id": 11929,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "id": 11928,
                                            "name": "destToken",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 11866,
                                            "src": "2155:9:50",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "2136:29:50",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "2129:36:50",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 11931,
                                      "nodeType": "ExpressionStatement",
                                      "src": "2129:36:50"
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "id": 11994,
                          "nodeType": "IfStatement",
                          "src": "1855:876:50",
                          "trueBody": {
                            "id": 11916,
                            "nodeType": "Block",
                            "src": "1894:149:50",
                            "statements": [
                              {
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 11914,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "argumentTypes": null,
                                    "id": 11906,
                                    "name": "rate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11869,
                                    "src": "1978:4:50",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                                          "typeString": "int_const 1000...(29 digits omitted)...0000"
                                        },
                                        "id": 11911,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "hexValue": "3130",
                                          "id": 11909,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "1998:2:50",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10_by_1",
                                            "typeString": "int_const 10"
                                          },
                                          "value": "10"
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "**",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "hexValue": "3336",
                                          "id": 11910,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "2002:2:50",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_36_by_1",
                                            "typeString": "int_const 36"
                                          },
                                          "value": "36"
                                        },
                                        "src": "1998:6:50",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                                          "typeString": "int_const 1000...(29 digits omitted)...0000"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "id": 11912,
                                        "name": "protocolTokenEthPrice",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10894,
                                        "src": "2006:21:50",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                                          "typeString": "int_const 1000...(29 digits omitted)...0000"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 11907,
                                        "name": "SafeMath",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 55736,
                                        "src": "1985:8:50",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$55736_$",
                                          "typeString": "type(library SafeMath)"
                                        }
                                      },
                                      "id": 11908,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "div",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 55596,
                                      "src": "1985:12:50",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 11913,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1985:43:50",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1978:50:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 11915,
                                "nodeType": "ExpressionStatement",
                                "src": "1978:50:50"
                              }
                            ]
                          }
                        },
                        "id": 11995,
                        "nodeType": "IfStatement",
                        "src": "1681:1050:50",
                        "trueBody": {
                          "id": 11902,
                          "nodeType": "Block",
                          "src": "1722:127:50",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 11900,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 11898,
                                  "name": "rate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11869,
                                  "src": "1806:4:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 11899,
                                  "name": "protocolTokenEthPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10894,
                                  "src": "1813:21:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1806:28:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 11901,
                              "nodeType": "ExpressionStatement",
                              "src": "1806:28:50"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 12001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 11996,
                            "name": "precision",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11871,
                            "src": "2744:9:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 11998,
                                "name": "sourceToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11864,
                                "src": "2777:11:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 11999,
                                "name": "destToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11866,
                                "src": "2790:9:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 11997,
                              "name": "_getDecimalPrecision",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11743,
                              "src": "2756:20:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address,address) view returns (uint256)"
                              }
                            },
                            "id": 12000,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2756:44:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2744:56:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 12002,
                        "nodeType": "ExpressionStatement",
                        "src": "2744:56:50"
                      }
                    ]
                  },
                  "id": 12004,
                  "nodeType": "IfStatement",
                  "src": "1561:1250:50",
                  "trueBody": {
                    "id": 11894,
                    "nodeType": "Block",
                    "src": "1591:70:50",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 11886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 11882,
                            "name": "rate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11869,
                            "src": "1605:4:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 11885,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 11883,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1612:2:50",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "3138",
                              "id": 11884,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1616:2:50",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "1612:6:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "1605:13:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 11887,
                        "nodeType": "ExpressionStatement",
                        "src": "1605:13:50"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 11892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 11888,
                            "name": "precision",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11871,
                            "src": "1632:9:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 11891,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 11889,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1644:2:50",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "3138",
                              "id": 11890,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1648:2:50",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "1644:6:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "1632:18:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 11893,
                        "nodeType": "ExpressionStatement",
                        "src": "1632:18:50"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice Calculate the price ratio between two tokens.\n     * @param sourceToken The address of the source tokens.\n@param destToken The address of the destiny tokens.\n     * @return rate The price ratio source/dest.\n@return precision The ratio precision.\n",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_queryRate",
            "parameters": {
              "id": 11867,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11864,
                  "name": "sourceToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 12006,
                  "src": "1366:19:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11863,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1366:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11866,
                  "name": "destToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 12006,
                  "src": "1387:17:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11865,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1387:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1365:40:50"
            },
            "returnParameters": {
              "id": 11872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11869,
                  "name": "rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 12006,
                  "src": "1453:12:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11868,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1453:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11871,
                  "name": "precision",
                  "nodeType": "VariableDeclaration",
                  "scope": 12006,
                  "src": "1467:17:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11870,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1467:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1452:33:50"
            },
            "scope": 12046,
            "stateMutability": "view",
            "superFunction": 11661,
            "visibility": "internal"
          },
          {
            "id": 12045,
            "nodeType": "FunctionDefinition",
            "src": "3072:298:50",
            "nodes": [],
            "body": {
              "id": 12044,
              "nodeType": "Block",
              "src": "3191:179:50",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 12019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 12017,
                      "name": "sourceToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12008,
                      "src": "3205:11:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 12018,
                      "name": "destToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12010,
                      "src": "3220:9:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3205:24:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 12043,
                  "nodeType": "IfStatement",
                  "src": "3201:163:50",
                  "trueBody": {
                    "id": 12042,
                    "nodeType": "Block",
                    "src": "3231:133:50",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 12026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 12020,
                                "name": "rates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11849,
                                "src": "3245:5:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 12023,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 12021,
                                "name": "sourceToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12008,
                                "src": "3251:11:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3245:18:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 12024,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 12022,
                              "name": "destToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12010,
                              "src": "3264:9:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3245:29:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 12025,
                            "name": "rate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12012,
                            "src": "3277:4:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3245:36:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 12027,
                        "nodeType": "ExpressionStatement",
                        "src": "3245:36:50"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 12040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 12028,
                                "name": "rates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11849,
                                "src": "3295:5:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 12031,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 12029,
                                "name": "destToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12010,
                                "src": "3301:9:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3295:16:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 12032,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 12030,
                              "name": "sourceToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12008,
                              "src": "3312:11:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3295:29:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                                  "typeString": "int_const 1000...(29 digits omitted)...0000"
                                },
                                "id": 12037,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "3130",
                                  "id": 12035,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3340:2:50",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "3336",
                                  "id": 12036,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3344:2:50",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_36_by_1",
                                    "typeString": "int_const 36"
                                  },
                                  "value": "36"
                                },
                                "src": "3340:6:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                                  "typeString": "int_const 1000...(29 digits omitted)...0000"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 12038,
                                "name": "rate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12012,
                                "src": "3348:4:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                                  "typeString": "int_const 1000...(29 digits omitted)...0000"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 12033,
                                "name": "SafeMath",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55736,
                                "src": "3327:8:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_SafeMath_$55736_$",
                                  "typeString": "type(library SafeMath)"
                                }
                              },
                              "id": 12034,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 55596,
                              "src": "3327:12:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 12039,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3327:26:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3295:58:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 12041,
                        "nodeType": "ExpressionStatement",
                        "src": "3295:58:50"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice Owner set price ratio between two tokens.\n     * @param sourceToken The address of the source tokens.\n@param destToken The address of the destiny tokens.\n@param rate The price ratio source/dest.\n",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 12015,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 12014,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 55096,
                  "src": "3181:9:50",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3181:9:50"
              }
            ],
            "name": "setRates",
            "parameters": {
              "id": 12013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12008,
                  "name": "sourceToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 12045,
                  "src": "3099:19:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12007,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3099:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12010,
                  "name": "destToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 12045,
                  "src": "3128:17:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12009,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3128:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12012,
                  "name": "rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 12045,
                  "src": "3155:12:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12011,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3155:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3089:84:50"
            },
            "returnParameters": {
              "id": 12016,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3191:0:50"
            },
            "scope": 12046,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11842,
              "name": "PriceFeeds",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11744,
              "src": "497:10:50",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PriceFeeds_$11744",
                "typeString": "contract PriceFeeds"
              }
            },
            "id": 11843,
            "nodeType": "InheritanceSpecifier",
            "src": "497:10:50"
          }
        ],
        "contractDependencies": [
          11744,
          11813,
          54471,
          55144
        ],
        "contractKind": "contract",
        "documentation": "@title Price Feeds Local contract.\n * @notice This contract code comes from bZx. bZx is a protocol for tokenized\nmargin trading and lending https://bzx.network similar to the dYdX protocol.\n * This contract contains the logic of setting and getting rates between two tokens.\n",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          12046,
          11744,
          55144,
          54471,
          11813
        ],
        "name": "PriceFeedsLocal",
        "scope": 12047
      }
    ]
  },
  "id": 50
}