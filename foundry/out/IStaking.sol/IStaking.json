{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lockedTS",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "value",
          "type": "uint96"
        }
      ],
      "name": "VestingStakeSet",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MAX_DURATION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "SOVToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "vesting",
          "type": "address"
        }
      ],
      "name": "addContractCodeHash",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_pauser",
          "type": "address"
        }
      ],
      "name": "addPauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "isAdmin",
          "type": "address"
        }
      ],
      "name": "admins",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "allUnlocked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "balance",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "vesting",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "startFrom",
          "type": "uint256"
        }
      ],
      "name": "cancelTeamVesting",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startDate",
          "type": "uint256"
        }
      ],
      "name": "computeWeightByDate",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "weight",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "lockDate",
          "type": "uint256"
        }
      ],
      "name": "delegate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "lockDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "delegateBySig",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "delagatee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "index",
          "type": "uint32"
        }
      ],
      "name": "delegateStakingCheckpoints",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "fromBlock",
              "type": "uint32"
            },
            {
              "internalType": "uint96",
              "name": "stake",
              "type": "uint96"
            }
          ],
          "internalType": "struct IStaking.Checkpoint",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "until",
          "type": "uint256"
        }
      ],
      "name": "delegates",
      "outputs": [
        {
          "internalType": "address",
          "name": "_delegate",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "previousLock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "until",
          "type": "uint256"
        }
      ],
      "name": "extendStakingDuration",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "feeSharing",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "_freeze",
          "type": "bool"
        }
      ],
      "name": "freezeUnfreeze",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "frozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "lockedTS",
          "type": "uint256"
        }
      ],
      "name": "getCurrentStakedUntil",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getCurrentVotes",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getMaxVestingWithdrawIterations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPriorStakeByDateForDelegatee",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPriorTotalStakesForDate",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint32",
          "name": "blockNumber",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "getPriorTotalVotingPower",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPriorUserStakeByDate",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPriorVestingStakeByDate",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "getPriorVestingWeightedStake",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "votes",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "getPriorVotes",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "getPriorWeightedStake",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "priorWeightedStake",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getStakes",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "dates",
          "type": "uint256[]"
        },
        {
          "internalType": "uint96[]",
          "name": "stakes",
          "type": "uint96[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStorageDefaultWeightScaling",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStorageDelegationTypehash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStorageDomainTypehash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStorageMaxDurationToStakeTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStorageMaxVotingWeight",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStorageName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStorageRangeForWeightScaling",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "minWeightScaling",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxWeightScaling",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStorageWeightFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint96",
          "name": "amount",
          "type": "uint96"
        },
        {
          "internalType": "uint256",
          "name": "until",
          "type": "uint256"
        }
      ],
      "name": "getWithdrawAmounts",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        },
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint96",
          "name": "amount",
          "type": "uint96"
        },
        {
          "internalType": "uint256",
          "name": "until",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "governanceWithdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "vesting",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "governanceWithdrawVesting",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "stakerAddress",
          "type": "address"
        }
      ],
      "name": "isVestingContract",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "kickoffTS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "migrateToNewStakingContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "newStakingContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "numDelegateStakingCheckpoints",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "checkpointsQty",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "numTotalStakingCheckpoints",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "checkpointsQty",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "numUserStakingCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "checkpointsQty",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "numVestingCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "checkpointsQty",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "_pause",
          "type": "bool"
        }
      ],
      "name": "pauseUnpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "isPauser",
          "type": "address"
        }
      ],
      "name": "pausers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "receiveApproval",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "removeAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "vesting",
          "type": "address"
        }
      ],
      "name": "removeContractCodeHash",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_pauser",
          "type": "address"
        }
      ],
      "name": "removePauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeSharing",
          "type": "address"
        }
      ],
      "name": "setFeeSharing",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "maxIterations",
          "type": "uint256"
        }
      ],
      "name": "setMaxVestingWithdrawIterations",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_newStakingContract",
          "type": "address"
        }
      ],
      "name": "setNewStakingContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_vestingRegistryProxy",
          "type": "address"
        }
      ],
      "name": "setVestingRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "lockedDates",
          "type": "uint256[]"
        },
        {
          "internalType": "uint96[]",
          "name": "values",
          "type": "uint96[]"
        }
      ],
      "name": "setVestingStakes",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint96",
          "name": "_weightScaling",
          "type": "uint96"
        }
      ],
      "name": "setWeightScaling",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint96",
          "name": "amount",
          "type": "uint96"
        },
        {
          "internalType": "uint256",
          "name": "until",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "stakeFor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "name": "stake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "cliff",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "intervalLength",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "stakeFor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "name": "stakeBySchedule",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint96",
          "name": "amount",
          "type": "uint96"
        },
        {
          "internalType": "uint256",
          "name": "until",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "stakeFor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "name": "stakeWithApproval",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "cliff",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "intervalLength",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "stakeFor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "name": "stakesBySchedule",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "timestampToLockDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "index",
          "type": "uint32"
        }
      ],
      "name": "totalStakingCheckpoints",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "fromBlock",
              "type": "uint32"
            },
            {
              "internalType": "uint96",
              "name": "stake",
              "type": "uint96"
            }
          ],
          "internalType": "struct IStaking.Checkpoint",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unlockAllTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "index",
          "type": "uint32"
        }
      ],
      "name": "userStakingCheckpoints",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "fromBlock",
              "type": "uint32"
            },
            {
              "internalType": "uint96",
              "name": "stake",
              "type": "uint96"
            }
          ],
          "internalType": "struct IStaking.Checkpoint",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "index",
          "type": "uint32"
        }
      ],
      "name": "vestingCheckpoints",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "fromBlock",
              "type": "uint32"
            },
            {
              "internalType": "uint96",
              "name": "stake",
              "type": "uint96"
            }
          ],
          "internalType": "struct IStaking.Checkpoint",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "vestingLogicCodeHash",
          "type": "bytes32"
        }
      ],
      "name": "vestingCodeHashes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "vestingRegistryLogic",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "isWhitelisted",
          "type": "address"
        }
      ],
      "name": "vestingWhitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weightScaling",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "weightedStakeByDate",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "power",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "weightedVestingStakeByDate",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "power",
          "type": "uint96"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint96",
          "name": "amount",
          "type": "uint96"
        },
        {
          "internalType": "uint256",
          "name": "until",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "MAX_DURATION()": "b1724b46",
    "SOVToken()": "a58848c5",
    "addAdmin(address)": "70480275",
    "addContractCodeHash(address)": "a20d8d03",
    "addPauser(address)": "82dc1ec4",
    "admins(address)": "429b62e5",
    "allUnlocked()": "9929e886",
    "balanceOf(address)": "70a08231",
    "cancelTeamVesting(address,address,uint256)": "765dade9",
    "computeWeightByDate(uint256,uint256)": "62cf8a08",
    "delegate(address,uint256)": "026e402b",
    "delegateBySig(address,uint256,uint256,uint256,uint8,bytes32,bytes32)": "e63a562e",
    "delegateStakingCheckpoints(address,uint256,uint32)": "6b6fde0e",
    "delegates(address,uint256)": "27dd1b00",
    "extendStakingDuration(uint256,uint256)": "eefb8c47",
    "feeSharing()": "03a18fa3",
    "freezeUnfreeze(bool)": "9604c618",
    "frozen()": "054f7d9c",
    "getCurrentStakedUntil(uint256)": "d5c38464",
    "getCurrentVotes(address)": "b4b5ea57",
    "getMaxVestingWithdrawIterations()": "ec8e0b29",
    "getPriorStakeByDateForDelegatee(address,uint256,uint256)": "e97ffacb",
    "getPriorTotalStakesForDate(uint256,uint256)": "f09cfc64",
    "getPriorTotalVotingPower(uint32,uint256)": "2522d7ba",
    "getPriorUserStakeByDate(address,uint256,uint256)": "cf7b684a",
    "getPriorVestingStakeByDate(uint256,uint256)": "c70a7e96",
    "getPriorVestingWeightedStake(uint256,uint256)": "cdbe7155",
    "getPriorVotes(address,uint256,uint256)": "836eebee",
    "getPriorWeightedStake(address,uint256,uint256)": "37e6b1c1",
    "getStakes(address)": "7ba6f458",
    "getStorageDefaultWeightScaling()": "805c49f3",
    "getStorageDelegationTypehash()": "332647b6",
    "getStorageDomainTypehash()": "a9d3ad1c",
    "getStorageMaxDurationToStakeTokens()": "9e5ff1eb",
    "getStorageMaxVotingWeight()": "d8fc90e8",
    "getStorageName()": "1ca6cbeb",
    "getStorageRangeForWeightScaling()": "8cdf855f",
    "getStorageWeightFactor()": "048c9588",
    "getWithdrawAmounts(uint96,uint256)": "96a590c1",
    "governanceWithdraw(uint96,uint256,address)": "800b64ca",
    "governanceWithdrawVesting(address,address)": "3827fca5",
    "isOwner()": "8f32d59b",
    "isVestingContract(address)": "ca6860df",
    "kickoffTS()": "00073f99",
    "migrateToNewStakingContract()": "5419675f",
    "newStakingContract()": "ae81dfe4",
    "nonces(address)": "7ecebe00",
    "numDelegateStakingCheckpoints(address,uint256)": "94c2ce58",
    "numTotalStakingCheckpoints(uint256)": "9436e7d4",
    "numUserStakingCheckpoints(address,uint256)": "db27ec18",
    "numVestingCheckpoints(uint256)": "bb533cf2",
    "owner()": "8da5cb5b",
    "pauseUnpause(bool)": "b0667f7a",
    "paused()": "5c975abb",
    "pausers(address)": "80f51c12",
    "receiveApproval(address,uint256,address,bytes)": "8f4ffcb1",
    "removeAdmin(address)": "1785f53c",
    "removeContractCodeHash(address)": "25464cc5",
    "removePauser(address)": "6b2c0f55",
    "setFeeSharing(address)": "626ee2d9",
    "setMaxVestingWithdrawIterations(uint256)": "5b66a324",
    "setNewStakingContract(address)": "9a377b82",
    "setVestingRegistry(address)": "450b0601",
    "setVestingStakes(uint256[],uint96[])": "6e56c1dd",
    "setWeightScaling(uint96)": "b8a98732",
    "stake(uint96,uint256,address,address)": "25629ec0",
    "stakeBySchedule(uint256,uint256,uint256,uint256,address,address)": "c1b79b05",
    "stakeWithApproval(address,uint96,uint256,address,address)": "0c09ddfd",
    "stakesBySchedule(uint256,uint256,uint256,uint256,address,address)": "4b2fea1e",
    "timestampToLockDate(uint256)": "72ec9795",
    "totalStakingCheckpoints(uint256,uint32)": "dfb267c2",
    "transferOwnership(address)": "f2fde38b",
    "unlockAllTokens()": "5e0be607",
    "userStakingCheckpoints(address,uint256,uint32)": "68cefccc",
    "vestingCheckpoints(uint256,uint32)": "f3f19731",
    "vestingCodeHashes(bytes32)": "07392cc0",
    "vestingRegistryLogic()": "104932cf",
    "vestingWhitelist(address)": "adae9002",
    "weightScaling()": "bf626ec1",
    "weightedStakeByDate(address,uint256,uint256,uint256)": "8dae1b16",
    "weightedVestingStakeByDate(uint256,uint256,uint256)": "ba21c6d7",
    "withdraw(uint96,uint256,address)": "dab6ca44"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockedTS\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"value\",\"type\":\"uint96\"}],\"name\":\"VestingStakeSet\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SOVToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"vesting\",\"type\":\"address\"}],\"name\":\"addContractCodeHash\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pauser\",\"type\":\"address\"}],\"name\":\"addPauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"isAdmin\",\"type\":\"address\"}],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allUnlocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"vesting\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startFrom\",\"type\":\"uint256\"}],\"name\":\"cancelTeamVesting\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"}],\"name\":\"computeWeightByDate\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"weight\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lockDate\",\"type\":\"uint256\"}],\"name\":\"delegate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lockDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"delagatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"delegateStakingCheckpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStaking.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"until\",\"type\":\"uint256\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"previousLock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"until\",\"type\":\"uint256\"}],\"name\":\"extendStakingDuration\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeSharing\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_freeze\",\"type\":\"bool\"}],\"name\":\"freezeUnfreeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"frozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lockedTS\",\"type\":\"uint256\"}],\"name\":\"getCurrentStakedUntil\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCurrentVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMaxVestingWithdrawIterations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorStakeByDateForDelegatee\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorTotalStakesForDate\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"getPriorTotalVotingPower\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorUserStakeByDate\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorVestingStakeByDate\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"getPriorVestingWeightedStake\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"votes\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"getPriorVotes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"getPriorWeightedStake\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"priorWeightedStake\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getStakes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"dates\",\"type\":\"uint256[]\"},{\"internalType\":\"uint96[]\",\"name\":\"stakes\",\"type\":\"uint96[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStorageDefaultWeightScaling\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStorageDelegationTypehash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStorageDomainTypehash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStorageMaxDurationToStakeTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStorageMaxVotingWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStorageName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStorageRangeForWeightScaling\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minWeightScaling\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWeightScaling\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStorageWeightFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"until\",\"type\":\"uint256\"}],\"name\":\"getWithdrawAmounts\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"until\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"governanceWithdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"vesting\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"governanceWithdrawVesting\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakerAddress\",\"type\":\"address\"}],\"name\":\"isVestingContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kickoffTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"migrateToNewStakingContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newStakingContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"numDelegateStakingCheckpoints\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"checkpointsQty\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"numTotalStakingCheckpoints\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"checkpointsQty\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"numUserStakingCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"checkpointsQty\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"numVestingCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"checkpointsQty\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_pause\",\"type\":\"bool\"}],\"name\":\"pauseUnpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"isPauser\",\"type\":\"address\"}],\"name\":\"pausers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"receiveApproval\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"vesting\",\"type\":\"address\"}],\"name\":\"removeContractCodeHash\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pauser\",\"type\":\"address\"}],\"name\":\"removePauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeSharing\",\"type\":\"address\"}],\"name\":\"setFeeSharing\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxIterations\",\"type\":\"uint256\"}],\"name\":\"setMaxVestingWithdrawIterations\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newStakingContract\",\"type\":\"address\"}],\"name\":\"setNewStakingContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vestingRegistryProxy\",\"type\":\"address\"}],\"name\":\"setVestingRegistry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"lockedDates\",\"type\":\"uint256[]\"},{\"internalType\":\"uint96[]\",\"name\":\"values\",\"type\":\"uint96[]\"}],\"name\":\"setVestingStakes\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"_weightScaling\",\"type\":\"uint96\"}],\"name\":\"setWeightScaling\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"until\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"stakeFor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"stake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cliff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"intervalLength\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"stakeFor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"stakeBySchedule\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"until\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"stakeFor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"stakeWithApproval\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cliff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"intervalLength\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"stakeFor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"stakesBySchedule\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"timestampToLockDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"totalStakingCheckpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStaking.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unlockAllTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"userStakingCheckpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStaking.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"vestingCheckpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStaking.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"vestingLogicCodeHash\",\"type\":\"bytes32\"}],\"name\":\"vestingCodeHashes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"vestingRegistryLogic\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"isWhitelisted\",\"type\":\"address\"}],\"name\":\"vestingWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weightScaling\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"weightedStakeByDate\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"power\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"weightedVestingStakeByDate\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"power\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"until\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"MAX_DURATION()\":{\"return\":\"uint96 MAX_DURATION for staking*\"},\"addAdmin(address)\":{\"params\":{\"_admin\":\"The addresses of the account to grant permissions.\"}},\"addContractCodeHash(address)\":{\"details\":\"We need it to use isVestingContract() function instead of isContract()\",\"params\":{\"vesting\":\"The address of Vesting contract.\"}},\"addPauser(address)\":{\"params\":{\"_pauser\":\"The address to grant pauser permissions.\"}},\"admins(address)\":{\"details\":\"user => flag whether user has admin role.multisig should be an admin, admin can invoke only governanceWithdrawVesting function, \\tthis function works only with Team Vesting contracts\"},\"balanceOf(address)\":{\"details\":\"Iterate checkpoints adding up stakes.\",\"params\":{\"account\":\"The address of the account to get the balance of.\"},\"return\":\"The number of tokens held.\"},\"cancelTeamVesting(address,address,uint256)\":{\"params\":{\"receiver\":\"The receiving address.\",\"startFrom\":\"The start value for the iterations.\",\"vesting\":\"The vesting address.\"}},\"computeWeightByDate(uint256,uint256)\":{\"params\":{\"date\":\"The unlocking date.\",\"startDate\":\"We compute the weight for the tokens staked until 'date' on 'startDate'.\"},\"return\":\"The weighted stake the account had as of the given block.\"},\"delegate(address,uint256)\":{\"params\":{\"delegatee\":\"The address to delegate votes to.\",\"lockDate\":\"the date if the position to delegate.\"}},\"delegateBySig(address,uint256,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The signature needs to be broken up into 3 parameters, known as v, r and s: const r = '0x' + sig.substring(2).substring(0, 64); const s = '0x' + sig.substring(2).substring(64, 128); const v = '0x' + sig.substring(2).substring(128, 130);\",\"params\":{\"delegatee\":\"The address to delegate votes to.\",\"expiry\":\"The time at which to expire the signature.\",\"lockDate\":\"The date until which the position is locked.\",\"nonce\":\"The contract state required to match the signature.\",\"r\":\"Half of the ECDSA signature pair.\",\"s\":\"Half of the ECDSA signature pair.\",\"v\":\"The recovery byte of the signature.\"}},\"delegateStakingCheckpoints(address,uint256,uint32)\":{\"details\":\"delegateStakingCheckpoints[delegatee][date][index] is a checkpoint.\"},\"delegates(address,uint256)\":{\"params\":{\"staker\":\"- the delegating address\",\"until\":\"- delegated voting\"},\"return\":\"_delegate - voting power delegated to address\"},\"extendStakingDuration(uint256,uint256)\":{\"params\":{\"previousLock\":\"The old unlocking timestamp.\",\"until\":\"The new unlocking timestamp in seconds.\"}},\"freezeUnfreeze(bool)\":{\"details\":\"When freezing, pause is always applied too. When unfreezing, the contract is left in paused stated.\",\"params\":{\"_freeze\":\"true when freezing, false when unfreezing\"}},\"frozen()\":{\"details\":\"Staking contract is frozen\"},\"getCurrentStakedUntil(uint256)\":{\"params\":{\"lockedTS\":\"The timestamp to get the staked tokens for.\"}},\"getCurrentVotes(address)\":{\"details\":\"This is a wrapper to simplify arguments. The actual computation is performed on WeightedStaking parent contract.\",\"params\":{\"account\":\"The address to get votes balance.\"},\"return\":\"The number of current votes for a user account.\"},\"getMaxVestingWithdrawIterations()\":{\"return\":\"max iteration value.\"},\"getPriorStakeByDateForDelegatee(address,uint256,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.\",\"params\":{\"account\":\"The address of the account to check.\",\"blockNumber\":\"The block number to get the vote balance at.\",\"date\":\"The staking date to compute the power for.\"},\"return\":\"The number of votes the account had as of the given block.\"},\"getPriorTotalStakesForDate(uint256,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation. TODO: WeightedStaking::getPriorTotalStakesForDate should probably better be internal instead of a public function.\",\"params\":{\"blockNumber\":\"The block number to get the vote balance at.\",\"date\":\"The date to check the stakes for.\"},\"return\":\"The number of votes the account had as of the given block.\"},\"getPriorTotalVotingPower(uint32,uint256)\":{\"params\":{\"blockNumber\":\"The block number, needed for checkpointing.\",\"time\":\"The timestamp for which to calculate the total voting power.\"},\"return\":\"The total voting power at the given time.\"},\"getPriorUserStakeByDate(address,uint256,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.\",\"params\":{\"account\":\"The address of the account to check.\",\"blockNumber\":\"The block number to get the vote balance at.\",\"date\":\"The lock date.\"},\"return\":\"The number of votes the account had as of the given block.\"},\"getPriorVestingStakeByDate(uint256,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.\",\"params\":{\"blockNumber\":\"The block number to get the vote balance at.\",\"date\":\"The lock date.\"},\"return\":\"The number of votes the account had as of the given block.\"},\"getPriorVestingWeightedStake(uint256,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.     Used for fee sharing, not voting. TODO: WeightedStaking::getPriorVestingWeightedStake is using the variable name \\\"votes\\\" to add up token stake, and that could be misleading.\",\"params\":{\"blockNumber\":\"The block number to get the vote balance at.\",\"date\":\"The staking date to compute the power for.\"},\"return\":\"The weighted stake the account had as of the given block.\"},\"getPriorVotes(address,uint256,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.     Used for Voting, not for fee sharing.\",\"params\":{\"account\":\"The address of the account to check.\",\"blockNumber\":\"The block number to get the vote balance at.\",\"date\":\"The staking date to compute the power for.\"},\"return\":\"The number of votes the delegatee had as of the given block.\"},\"getPriorWeightedStake(address,uint256,uint256)\":{\"details\":\"Block number must be a finalized block or else this function will revert to prevent misinformation.     Used for fee sharing, not voting.\",\"params\":{\"account\":\"The address of the account to check.\",\"blockNumber\":\"The block number to get the vote balance at.\",\"date\":\"The date/timestamp of the unstaking time.\"},\"return\":\"The weighted stake the account had as of the given block.\"},\"getStakes(address)\":{\"params\":{\"account\":\"The address to get stakes.\"},\"return\":\"The arrays of dates and stakes.\"},\"getStorageDefaultWeightScaling()\":{\"return\":\"uint256(DEFAULT_WEIGHT_SCALING);\"},\"getStorageDelegationTypehash()\":{\"return\":\"uint256(DELEGATION_TYPEHASH);\"},\"getStorageDomainTypehash()\":{\"return\":\"uint256(DOMAIN_TYPEHASH);\"},\"getStorageMaxDurationToStakeTokens()\":{\"return\":\"MAX_DURATION to stake tokens\"},\"getStorageMaxVotingWeight()\":{\"return\":\"uint256(MAX_VOTING_WEIGHT);\"},\"getStorageName()\":{\"return\":\"name;\"},\"getStorageWeightFactor()\":{\"details\":\"MAX_VOTING_WEIGHT * WEIGHT_FACTOR needs to be < 792, because there are 100,000,000 SOV with 18 decimals\",\"return\":\"uint256(WEIGHT_FACTOR);\"},\"getWithdrawAmounts(uint96,uint256)\":{\"params\":{\"amount\":\"The number of tokens to withdraw.\",\"until\":\"The date until which the tokens were staked.\"}},\"governanceWithdraw(uint96,uint256,address)\":{\"details\":\"Can be invoked only by whitelisted contract passed to governanceWithdrawVesting**WARNING** This function should not be no longer used by Sovryn Protocol. Sovryn protocol will use the cancelTeamVesting function for the withdrawal moving forward.\",\"params\":{\"amount\":\"The number of tokens to withdraw.\",\"receiver\":\"The receiver of the tokens. If not specified, send to the msg.sender\",\"until\":\"The date until which the tokens were staked.\"}},\"governanceWithdrawVesting(address,address)\":{\"details\":\"Can be invoked only by whitelisted contract passed to governanceWithdrawVesting.\",\"params\":{\"receiver\":\"The receiver of the tokens. If not specified, send to the msg.sender\",\"vesting\":\"The address of Vesting contract.\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"isVestingContract(address)\":{\"params\":{\"stakerAddress\":\"the address to check\"}},\"migrateToNewStakingContract()\":{\"details\":\"Staking contract needs to be set before by the owner. Currently not implemented, just needed for the interface.     In case it's needed at some point in the future,     the implementation needs to be changed first.\"},\"nonces(address)\":{\"details\":\"nonces[user] is a number.\"},\"numDelegateStakingCheckpoints(address,uint256)\":{\"details\":\"numDelegateStakingCheckpoints[delegatee][date] is a number.\"},\"numTotalStakingCheckpoints(uint256)\":{\"details\":\"numTotalStakingCheckpoints[date] is a number.\"},\"numUserStakingCheckpoints(address,uint256)\":{\"details\":\"numUserStakingCheckpoints[user][date] is a number\"},\"numVestingCheckpoints(uint256)\":{\"details\":\"numVestingCheckpoints[date] is a number.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pauseUnpause(bool)\":{\"params\":{\"_pause\":\"true when pausing, false when unpausing\"}},\"paused()\":{\"details\":\"Staking contract is paused\"},\"pausers(address)\":{\"details\":\"user => flag whether user has pauser role.\"},\"receiveApproval(address,uint256,address,bytes)\":{\"params\":{\"_data\":\"The data will be used for low level call.\"}},\"removeAdmin(address)\":{\"params\":{\"_admin\":\"The addresses of the account to revoke permissions.\"}},\"removeContractCodeHash(address)\":{\"details\":\"We need it to use isVestingContract() function instead of isContract()\",\"params\":{\"vesting\":\"The address of Vesting contract.\"}},\"removePauser(address)\":{\"params\":{\"_pauser\":\"The address to grant pauser permissions.\"}},\"setFeeSharing(address)\":{\"params\":{\"_feeSharing\":\"The address of FeeSharingCollectorProxy contract.\"}},\"setMaxVestingWithdrawIterations(uint256)\":{\"details\":\"set max withdraw iterations.\",\"params\":{\"maxIterations\":\"new max iterations value.\"}},\"setNewStakingContract(address)\":{\"details\":\"Doesn't have any influence as long as migrateToNewStakingContract is not implemented.\",\"params\":{\"_newStakingContract\":\"The address of the new staking contract.\"}},\"setVestingRegistry(address)\":{\"details\":\"_vestingRegistryProxy can be set to 0 as this function can be reused by various other functionalities without the necessity of linking it with Vesting Registry\",\"params\":{\"_vestingRegistryProxy\":\"the address of vesting registry proxy contract\"}},\"setVestingStakes(uint256[],uint96[])\":{\"params\":{\"lockedDates\":\"The arrays of lock dates.\",\"values\":\"The array of values to add to the staked balance.\"}},\"setWeightScaling(uint96)\":{\"params\":{\"_weightScaling\":\"The weight scaling.\"}},\"stake(uint96,uint256,address,address)\":{\"params\":{\"amount\":\"The number of tokens to stake.\",\"delegatee\":\"The address of the delegatee or 0x0 if there is none.\",\"stakeFor\":\"The address to stake the tokens for or 0x0 if staking for oneself.\",\"until\":\"Timestamp indicating the date until which to stake.\"}},\"stakeBySchedule(uint256,uint256,uint256,uint256,address,address)\":{\"params\":{\"amount\":\"The amount of tokens to stake.\",\"cliff\":\"The time interval to the first withdraw.\",\"delegatee\":\"The address of the delegatee or 0x0 if there is none.\",\"duration\":\"The staking duration.\",\"intervalLength\":\"The length of each staking interval when cliff passed.\",\"stakeFor\":\"The address to stake the tokens for or 0x0 if staking for oneself.\"}},\"stakeWithApproval(address,uint96,uint256,address,address)\":{\"details\":\"This function will be invoked from receiveApprovalSOV.approveAndCall -> this.receiveApproval -> this.stakeWithApproval\",\"params\":{\"amount\":\"The number of tokens to stake.\",\"delegatee\":\"The address of the delegatee or 0x0 if there is none.\",\"sender\":\"The sender of SOV.approveAndCall\",\"stakeFor\":\"The address to stake the tokens for or 0x0 if staking for oneself.\",\"until\":\"Timestamp indicating the date until which to stake.\"}},\"stakesBySchedule(uint256,uint256,uint256,uint256,address,address)\":{\"details\":\"DO NOT USE this misspelled function. Use stakeBySchedule function instead. This function cannot be deprecated while we have non-upgradeable vesting contracts.\"},\"timestampToLockDate(uint256)\":{\"params\":{\"timestamp\":\"The unlocking timestamp.\"},\"return\":\"The actual unlocking date (might be up to 2 weeks shorter than intended).\"},\"totalStakingCheckpoints(uint256,uint32)\":{\"details\":\"totalStakingCheckpoints[date][index] is a checkpoint\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unlockAllTokens()\":{\"details\":\"Last resort.\"},\"userStakingCheckpoints(address,uint256,uint32)\":{\"details\":\"userStakingCheckpoints[user][date][index] is a checkpoint.\"},\"vestingCheckpoints(uint256,uint32)\":{\"details\":\"vestingCheckpoints[date][index] is a checkpoint.\"},\"vestingCodeHashes(bytes32)\":{\"details\":\"vesting contract code hash => flag whether it's registered code hash\"},\"vestingWhitelist(address)\":{\"details\":\"vestingWhitelist[contract] is true/false.\"},\"weightScaling()\":{\"return\":\"uint96 DEFAULT_WEIGHT_SCALING\"},\"weightedStakeByDate(address,uint256,uint256,uint256)\":{\"params\":{\"account\":\"The user address.\",\"blockNumber\":\"The block number, needed for checkpointing.\",\"date\":\"The staking date to compute the power for.\",\"startDate\":\"The date for which we need to know the power of the stake.\"},\"return\":\"The stacking power.\"},\"weightedVestingStakeByDate(uint256,uint256,uint256)\":{\"params\":{\"blockNumber\":\"The block number, needed for checkpointing.\",\"date\":\"The staking date to compute the power for. Adjusted to the next valid lock date, if necessary.\",\"startDate\":\"The date for which we need to know the power of the stake.\"},\"return\":\"The stacking power.\"},\"withdraw(uint96,uint256,address)\":{\"params\":{\"amount\":\"The number of tokens to withdraw.\",\"receiver\":\"The receiver of the tokens. If not specified, send to the msg.sender\",\"until\":\"The date until which the tokens were staked.\"}}},\"title\":\"Interface for Staking modules governance/Staking/modules\"},\"userdoc\":{\"methods\":{\"MAX_DURATION()\":{\"notice\":\"Returns public constant MAX_DURATION preserved for backwards compatibility Use getStorageMaxDurationToStakeTokens()\"},\"SOVToken()\":{\"notice\":\"The token to be staked\"},\"addAdmin(address)\":{\"notice\":\"Add account to Admins ACL.\"},\"addContractCodeHash(address)\":{\"notice\":\"Add vesting contract's code hash to a map of code hashes.\"},\"addPauser(address)\":{\"notice\":\"Add account to pausers ACL.\"},\"allUnlocked()\":{\"notice\":\"If this flag is set to true, all tokens are unlocked immediately see function unlockAllTokens() for details\"},\"balanceOf(address)\":{\"notice\":\"Get the number of staked tokens held by the user account.\"},\"cancelTeamVesting(address,address,uint256)\":{\"notice\":\"Governance withdraw vesting directly through staking contract. This direct withdraw vesting solves the out of gas issue when there are too many iterations when withdrawing. This function only allows cancelling vesting contract of the TeamVesting type.\"},\"computeWeightByDate(uint256,uint256)\":{\"notice\":\"Compute the weight for a specific date.\"},\"delegate(address,uint256)\":{\"notice\":\"Delegate votes from `msg.sender` which are locked until lockDate to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Delegates votes from signatory to a delegatee account. Voting with EIP-712 Signatures.     * Voting power can be delegated to any address, and then can be used to vote on proposals. A key benefit to users of by-signature functionality is that they can create a signed vote transaction for free, and have a trusted third-party spend rBTC(or ETH) on gas fees and write it to the blockchain for them.     * The third party in this scenario, submitting the SOV-holder\\u2019s signed transaction holds a voting power that is for only a single proposal. The signatory still holds the power to vote on their own behalf in the proposal if the third party has not yet published the signed transaction that was given to them.\"},\"delegateStakingCheckpoints(address,uint256,uint32)\":{\"notice\":\"A record of tokens to be unstaked at a given time which were delegated to a certain address. For delegatee voting power computation. Voting weights get adjusted bi-weekly.\"},\"delegates(address,uint256)\":{\"notice\":\"Stakers delegated voting power\"},\"extendStakingDuration(uint256,uint256)\":{\"notice\":\"Extend the staking duration until the specified date.\"},\"feeSharing()\":{\"notice\":\"SLASHING ///the address of FeeSharingCollectorProxy contract, we need it for unstaking with slashing.\"},\"freezeUnfreeze(bool)\":{\"notice\":\"Freeze contract - disable all functions\"},\"getCurrentStakedUntil(uint256)\":{\"notice\":\"Get the current number of tokens staked for a day.\"},\"getCurrentVotes(address)\":{\"notice\":\"Get the current votes balance for a user account.\"},\"getMaxVestingWithdrawIterations()\":{\"notice\":\"Max iteration for direct withdrawal from staking to prevent out of gas issue.\"},\"getPriorStakeByDateForDelegatee(address,uint256,uint256)\":{\"notice\":\"Determine the prior number of stake for an account as of a block number.\"},\"getPriorTotalStakesForDate(uint256,uint256)\":{\"notice\":\"Determine the prior number of stake for an unlocking date as of a block number.\"},\"getPriorTotalVotingPower(uint32,uint256)\":{\"notice\":\"Compute the total voting power at a given time.\"},\"getPriorUserStakeByDate(address,uint256,uint256)\":{\"notice\":\"Determine the prior number of stake for an account until a certain lock date as of a block number.\"},\"getPriorVestingStakeByDate(uint256,uint256)\":{\"notice\":\"Determine the prior number of vested stake for an account until a certain lock date as of a block number.\"},\"getPriorVestingWeightedStake(uint256,uint256)\":{\"notice\":\"Determine the prior weighted vested amount for an account as of a block number. Iterate through checkpoints adding up voting power.\"},\"getPriorVotes(address,uint256,uint256)\":{\"notice\":\"Determine the prior number of votes for a delegatee as of a block number. Iterate through checkpoints adding up voting power.\"},\"getPriorWeightedStake(address,uint256,uint256)\":{\"notice\":\"Determine the prior weighted stake for an account as of a block number. Iterate through checkpoints adding up voting power.\"},\"getStakes(address)\":{\"notice\":\"Get list of stakes for a user account.\"},\"getStorageDelegationTypehash()\":{\"notice\":\"The EIP-712 typehash for the delegation struct used by the contract.\"},\"getStorageDomainTypehash()\":{\"notice\":\"The EIP-712 typehash for the contract's domain.\"},\"getStorageMaxDurationToStakeTokens()\":{\"notice\":\"The maximum duration to stake tokens\"},\"getStorageMaxVotingWeight()\":{\"notice\":\"The maximum possible voting weight before adding +1 (actually 10, but need 9 for computation).\"},\"getStorageRangeForWeightScaling()\":{\"notice\":\"return (uint256(MIN_WEIGHT_SCALING), uint256(MAX_WEIGHT_SCALING))\"},\"getStorageWeightFactor()\":{\"notice\":\"weight is multiplied with this factor (for allowing decimals, like 1.2x).\"},\"getWithdrawAmounts(uint96,uint256)\":{\"notice\":\"Get available and punished amount for withdrawing.\"},\"governanceWithdraw(uint96,uint256,address)\":{\"notice\":\"Withdraw the given amount of tokens.\"},\"governanceWithdrawVesting(address,address)\":{\"notice\":\"Withdraw tokens for vesting contract.\"},\"isVestingContract(address)\":{\"notice\":\"Return flag whether the given address is a registered vesting contract.\"},\"kickoffTS()\":{\"notice\":\"AUTOGENERATED FUNCTIONS FROM THE STAKING STORAGE PUBLIC VARIABLES ///The timestamp of contract creation. Base for the staking period calculation.\"},\"migrateToNewStakingContract()\":{\"notice\":\"Allow a staker to migrate his positions to the new staking contract.\"},\"newStakingContract()\":{\"notice\":\"Used for stake migrations to a new staking contract with a different storage structure\"},\"nonces(address)\":{\"notice\":\"A record of states for signing / validating signatures\"},\"numDelegateStakingCheckpoints(address,uint256)\":{\"notice\":\"The number of total staking checkpoints for each date per delegate.\"},\"numTotalStakingCheckpoints(uint256)\":{\"notice\":\"The number of total staking checkpoints for each date.\"},\"numUserStakingCheckpoints(address,uint256)\":{\"notice\":\"The number of total staking checkpoints for each date per user.\"},\"numVestingCheckpoints(uint256)\":{\"notice\":\"The number of total vesting checkpoints for each date.\"},\"pauseUnpause(bool)\":{\"notice\":\"Pause/unpause contract\"},\"receiveApproval(address,uint256,address,bytes)\":{\"notice\":\"Receives approval from SOV token.\"},\"removeAdmin(address)\":{\"notice\":\"Remove account from Admins ACL.\"},\"removeContractCodeHash(address)\":{\"notice\":\"Remove vesting contract's code hash to a map of code hashes.\"},\"removePauser(address)\":{\"notice\":\"Remove account from pausers ACL.\"},\"setFeeSharing(address)\":{\"notice\":\"Allows the owner to set a fee sharing proxy contract. We need it for unstaking with slashing.\"},\"setNewStakingContract(address)\":{\"notice\":\"Allow the owner to set a new staking contract. As a consequence it allows the stakers to migrate their positions to the new contract.\"},\"setVestingRegistry(address)\":{\"notice\":\"sets vesting registry\"},\"setVestingStakes(uint256[],uint96[])\":{\"notice\":\"Sets the users' vesting stakes for a giving lock dates and writes checkpoints.\"},\"setWeightScaling(uint96)\":{\"notice\":\"Allow the owner to set weight scaling. We need it for unstaking with slashing.\"},\"stake(uint96,uint256,address,address)\":{\"notice\":\"Stake the given amount for the given duration of time.\"},\"stakeBySchedule(uint256,uint256,uint256,uint256,address,address)\":{\"notice\":\"Stake tokens according to the vesting schedule.\"},\"stakeWithApproval(address,uint96,uint256,address,address)\":{\"notice\":\"Stake the given amount for the given duration of time.\"},\"timestampToLockDate(uint256)\":{\"notice\":\"Unstaking is possible every 2 weeks only. This means, to calculate the key value for the staking checkpoints, we need to map the intended timestamp to the closest available date.\"},\"totalStakingCheckpoints(uint256,uint32)\":{\"notice\":\"A record of tokens to be unstaked at a given time in total. For total voting power computation. Voting weights get adjusted bi-weekly.\"},\"unlockAllTokens()\":{\"notice\":\"Allow the owner to unlock all tokens in case the staking contract is going to be replaced Note: Not reversible on purpose. once unlocked, everything is unlocked. The owner should not be able to just quickly unlock to withdraw his own tokens and lock again.\"},\"userStakingCheckpoints(address,uint256,uint32)\":{\"notice\":\"A record of tokens to be unstaked at a given time which per user address (address -> lockDate -> stake checkpoint)\"},\"vestingCheckpoints(uint256,uint32)\":{\"notice\":\"A record of tokens to be unstaked from vesting contract at a given time (lockDate -> vest checkpoint)\"},\"vestingRegistryLogic()\":{\"notice\":\"vesting registry contract PROXY address\"},\"vestingWhitelist(address)\":{\"notice\":\"List of vesting contracts, tokens for these contracts won't be slashed if unstaked by governance.\"},\"weightScaling()\":{\"notice\":\"used for weight scaling when unstaking with slashing.\"},\"weightedStakeByDate(address,uint256,uint256,uint256)\":{\"notice\":\"Compute the voting power for a specific date. Power = stake * weight TODO: WeightedStaking::weightedStakeByDate should probably better be internal instead of a public function.\"},\"weightedVestingStakeByDate(uint256,uint256,uint256)\":{\"notice\":\"Compute the voting power for a specific date. Power = stake * weight\"},\"withdraw(uint96,uint256,address)\":{\"notice\":\"Withdraw the given amount of tokens if they are unlocked.\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/governance/Staking/interfaces/IStaking.sol\":\"IStaking\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@ethereum-waffle/=node_modules/@ethereum-waffle/\",\":ds-test/=foundry/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=foundry/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":truffle/=node_modules/truffle/\"]},\"sources\":{\"contracts/governance/Staking/interfaces/IStaking.sol\":{\"keccak256\":\"0x6777e38b4bd5a63e10f3bf7aba355401713bb649811c6dfa1bda40ebd8fee30b\",\"urls\":[\"bzz-raw://676e42641fb1d335dde7bb928779014ff2adf1eb1121f48a4a48e36f571287d4\",\"dweb:/ipfs/QmamokattcaQ6gRGaqUDVZejcv4rridScd9nayGcxxW1BL\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.5.17+commit.d19bba13"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "lockedTS",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint96",
              "name": "value",
              "type": "uint96",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VestingStakeSet",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_DURATION",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SOVToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_admin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addAdmin"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "vesting",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addContractCodeHash"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_pauser",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addPauser"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "isAdmin",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "admins",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allUnlocked",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "balance",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "vesting",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "startFrom",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelTeamVesting"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "computeWeightByDate",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "weight",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "lockDate",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "lockDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegateBySig"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delagatee",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "index",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegateStakingCheckpoints",
          "outputs": [
            {
              "internalType": "struct IStaking.Checkpoint",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "fromBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "uint96",
                  "name": "stake",
                  "type": "uint96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "until",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegates",
          "outputs": [
            {
              "internalType": "address",
              "name": "_delegate",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "previousLock",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "until",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "extendStakingDuration"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeSharing",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_freeze",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "freezeUnfreeze"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frozen",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "lockedTS",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentStakedUntil",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentVotes",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getMaxVestingWithdrawIterations",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPriorStakeByDateForDelegatee",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPriorTotalStakesForDate",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "blockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPriorTotalVotingPower",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPriorUserStakeByDate",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPriorVestingStakeByDate",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPriorVestingWeightedStake",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "votes",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPriorVotes",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPriorWeightedStake",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "priorWeightedStake",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakes",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "dates",
              "type": "uint256[]"
            },
            {
              "internalType": "uint96[]",
              "name": "stakes",
              "type": "uint96[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getStorageDefaultWeightScaling",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getStorageDelegationTypehash",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getStorageDomainTypehash",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getStorageMaxDurationToStakeTokens",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getStorageMaxVotingWeight",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getStorageName",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getStorageRangeForWeightScaling",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "minWeightScaling",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxWeightScaling",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getStorageWeightFactor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "amount",
              "type": "uint96"
            },
            {
              "internalType": "uint256",
              "name": "until",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getWithdrawAmounts",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            },
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "amount",
              "type": "uint96"
            },
            {
              "internalType": "uint256",
              "name": "until",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "governanceWithdraw"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "vesting",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "governanceWithdrawVesting"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isOwner",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "stakerAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isVestingContract",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "kickoffTS",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "migrateToNewStakingContract"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "newStakingContract",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "numDelegateStakingCheckpoints",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "checkpointsQty",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "numTotalStakingCheckpoints",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "checkpointsQty",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "numUserStakingCheckpoints",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "checkpointsQty",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "numVestingCheckpoints",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "checkpointsQty",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_pause",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pauseUnpause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "isPauser",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pausers",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "receiveApproval"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_admin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeAdmin"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "vesting",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeContractCodeHash"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_pauser",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removePauser"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_feeSharing",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFeeSharing"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "maxIterations",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMaxVestingWithdrawIterations"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newStakingContract",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setNewStakingContract"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_vestingRegistryProxy",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setVestingRegistry"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "lockedDates",
              "type": "uint256[]"
            },
            {
              "internalType": "uint96[]",
              "name": "values",
              "type": "uint96[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setVestingStakes"
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "_weightScaling",
              "type": "uint96"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setWeightScaling"
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "amount",
              "type": "uint96"
            },
            {
              "internalType": "uint256",
              "name": "until",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "stakeFor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stake"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cliff",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "intervalLength",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "stakeFor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stakeBySchedule"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "amount",
              "type": "uint96"
            },
            {
              "internalType": "uint256",
              "name": "until",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "stakeFor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stakeWithApproval"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cliff",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "intervalLength",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "stakeFor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stakesBySchedule"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "timestampToLockDate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "index",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "totalStakingCheckpoints",
          "outputs": [
            {
              "internalType": "struct IStaking.Checkpoint",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "fromBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "uint96",
                  "name": "stake",
                  "type": "uint96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unlockAllTokens"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "index",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userStakingCheckpoints",
          "outputs": [
            {
              "internalType": "struct IStaking.Checkpoint",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "fromBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "uint96",
                  "name": "stake",
                  "type": "uint96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "index",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "vestingCheckpoints",
          "outputs": [
            {
              "internalType": "struct IStaking.Checkpoint",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "fromBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "uint96",
                  "name": "stake",
                  "type": "uint96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "vestingLogicCodeHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "vestingCodeHashes",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vestingRegistryLogic",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "isWhitelisted",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "vestingWhitelist",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "weightScaling",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "weightedStakeByDate",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "power",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "weightedVestingStakeByDate",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "power",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "amount",
              "type": "uint96"
            },
            {
              "internalType": "uint256",
              "name": "until",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        }
      ],
      "devdoc": {
        "methods": {
          "MAX_DURATION()": {
            "return": "uint96 MAX_DURATION for staking*"
          },
          "addAdmin(address)": {
            "params": {
              "_admin": "The addresses of the account to grant permissions."
            }
          },
          "addContractCodeHash(address)": {
            "details": "We need it to use isVestingContract() function instead of isContract()",
            "params": {
              "vesting": "The address of Vesting contract."
            }
          },
          "addPauser(address)": {
            "params": {
              "_pauser": "The address to grant pauser permissions."
            }
          },
          "admins(address)": {
            "details": "user => flag whether user has admin role.multisig should be an admin, admin can invoke only governanceWithdrawVesting function, \tthis function works only with Team Vesting contracts"
          },
          "balanceOf(address)": {
            "details": "Iterate checkpoints adding up stakes.",
            "params": {
              "account": "The address of the account to get the balance of."
            },
            "return": "The number of tokens held."
          },
          "cancelTeamVesting(address,address,uint256)": {
            "params": {
              "receiver": "The receiving address.",
              "startFrom": "The start value for the iterations.",
              "vesting": "The vesting address."
            }
          },
          "computeWeightByDate(uint256,uint256)": {
            "params": {
              "date": "The unlocking date.",
              "startDate": "We compute the weight for the tokens staked until 'date' on 'startDate'."
            },
            "return": "The weighted stake the account had as of the given block."
          },
          "delegate(address,uint256)": {
            "params": {
              "delegatee": "The address to delegate votes to.",
              "lockDate": "the date if the position to delegate."
            }
          },
          "delegateBySig(address,uint256,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "The signature needs to be broken up into 3 parameters, known as v, r and s: const r = '0x' + sig.substring(2).substring(0, 64); const s = '0x' + sig.substring(2).substring(64, 128); const v = '0x' + sig.substring(2).substring(128, 130);",
            "params": {
              "delegatee": "The address to delegate votes to.",
              "expiry": "The time at which to expire the signature.",
              "lockDate": "The date until which the position is locked.",
              "nonce": "The contract state required to match the signature.",
              "r": "Half of the ECDSA signature pair.",
              "s": "Half of the ECDSA signature pair.",
              "v": "The recovery byte of the signature."
            }
          },
          "delegateStakingCheckpoints(address,uint256,uint32)": {
            "details": "delegateStakingCheckpoints[delegatee][date][index] is a checkpoint."
          },
          "delegates(address,uint256)": {
            "params": {
              "staker": "- the delegating address",
              "until": "- delegated voting"
            },
            "return": "_delegate - voting power delegated to address"
          },
          "extendStakingDuration(uint256,uint256)": {
            "params": {
              "previousLock": "The old unlocking timestamp.",
              "until": "The new unlocking timestamp in seconds."
            }
          },
          "freezeUnfreeze(bool)": {
            "details": "When freezing, pause is always applied too. When unfreezing, the contract is left in paused stated.",
            "params": {
              "_freeze": "true when freezing, false when unfreezing"
            }
          },
          "frozen()": {
            "details": "Staking contract is frozen"
          },
          "getCurrentStakedUntil(uint256)": {
            "params": {
              "lockedTS": "The timestamp to get the staked tokens for."
            }
          },
          "getCurrentVotes(address)": {
            "details": "This is a wrapper to simplify arguments. The actual computation is performed on WeightedStaking parent contract.",
            "params": {
              "account": "The address to get votes balance."
            },
            "return": "The number of current votes for a user account."
          },
          "getMaxVestingWithdrawIterations()": {
            "return": "max iteration value."
          },
          "getPriorStakeByDateForDelegatee(address,uint256,uint256)": {
            "details": "Block number must be a finalized block or else this function will revert to prevent misinformation.",
            "params": {
              "account": "The address of the account to check.",
              "blockNumber": "The block number to get the vote balance at.",
              "date": "The staking date to compute the power for."
            },
            "return": "The number of votes the account had as of the given block."
          },
          "getPriorTotalStakesForDate(uint256,uint256)": {
            "details": "Block number must be a finalized block or else this function will revert to prevent misinformation. TODO: WeightedStaking::getPriorTotalStakesForDate should probably better be internal instead of a public function.",
            "params": {
              "blockNumber": "The block number to get the vote balance at.",
              "date": "The date to check the stakes for."
            },
            "return": "The number of votes the account had as of the given block."
          },
          "getPriorTotalVotingPower(uint32,uint256)": {
            "params": {
              "blockNumber": "The block number, needed for checkpointing.",
              "time": "The timestamp for which to calculate the total voting power."
            },
            "return": "The total voting power at the given time."
          },
          "getPriorUserStakeByDate(address,uint256,uint256)": {
            "details": "Block number must be a finalized block or else this function will revert to prevent misinformation.",
            "params": {
              "account": "The address of the account to check.",
              "blockNumber": "The block number to get the vote balance at.",
              "date": "The lock date."
            },
            "return": "The number of votes the account had as of the given block."
          },
          "getPriorVestingStakeByDate(uint256,uint256)": {
            "details": "Block number must be a finalized block or else this function will revert to prevent misinformation.",
            "params": {
              "blockNumber": "The block number to get the vote balance at.",
              "date": "The lock date."
            },
            "return": "The number of votes the account had as of the given block."
          },
          "getPriorVestingWeightedStake(uint256,uint256)": {
            "details": "Block number must be a finalized block or else this function will revert to prevent misinformation.     Used for fee sharing, not voting. TODO: WeightedStaking::getPriorVestingWeightedStake is using the variable name \"votes\" to add up token stake, and that could be misleading.",
            "params": {
              "blockNumber": "The block number to get the vote balance at.",
              "date": "The staking date to compute the power for."
            },
            "return": "The weighted stake the account had as of the given block."
          },
          "getPriorVotes(address,uint256,uint256)": {
            "details": "Block number must be a finalized block or else this function will revert to prevent misinformation.     Used for Voting, not for fee sharing.",
            "params": {
              "account": "The address of the account to check.",
              "blockNumber": "The block number to get the vote balance at.",
              "date": "The staking date to compute the power for."
            },
            "return": "The number of votes the delegatee had as of the given block."
          },
          "getPriorWeightedStake(address,uint256,uint256)": {
            "details": "Block number must be a finalized block or else this function will revert to prevent misinformation.     Used for fee sharing, not voting.",
            "params": {
              "account": "The address of the account to check.",
              "blockNumber": "The block number to get the vote balance at.",
              "date": "The date/timestamp of the unstaking time."
            },
            "return": "The weighted stake the account had as of the given block."
          },
          "getStakes(address)": {
            "params": {
              "account": "The address to get stakes."
            },
            "return": "The arrays of dates and stakes."
          },
          "getStorageDefaultWeightScaling()": {
            "return": "uint256(DEFAULT_WEIGHT_SCALING);"
          },
          "getStorageDelegationTypehash()": {
            "return": "uint256(DELEGATION_TYPEHASH);"
          },
          "getStorageDomainTypehash()": {
            "return": "uint256(DOMAIN_TYPEHASH);"
          },
          "getStorageMaxDurationToStakeTokens()": {
            "return": "MAX_DURATION to stake tokens"
          },
          "getStorageMaxVotingWeight()": {
            "return": "uint256(MAX_VOTING_WEIGHT);"
          },
          "getStorageName()": {
            "return": "name;"
          },
          "getStorageWeightFactor()": {
            "details": "MAX_VOTING_WEIGHT * WEIGHT_FACTOR needs to be < 792, because there are 100,000,000 SOV with 18 decimals",
            "return": "uint256(WEIGHT_FACTOR);"
          },
          "getWithdrawAmounts(uint96,uint256)": {
            "params": {
              "amount": "The number of tokens to withdraw.",
              "until": "The date until which the tokens were staked."
            }
          },
          "governanceWithdraw(uint96,uint256,address)": {
            "details": "Can be invoked only by whitelisted contract passed to governanceWithdrawVesting**WARNING** This function should not be no longer used by Sovryn Protocol. Sovryn protocol will use the cancelTeamVesting function for the withdrawal moving forward.",
            "params": {
              "amount": "The number of tokens to withdraw.",
              "receiver": "The receiver of the tokens. If not specified, send to the msg.sender",
              "until": "The date until which the tokens were staked."
            }
          },
          "governanceWithdrawVesting(address,address)": {
            "details": "Can be invoked only by whitelisted contract passed to governanceWithdrawVesting.",
            "params": {
              "receiver": "The receiver of the tokens. If not specified, send to the msg.sender",
              "vesting": "The address of Vesting contract."
            }
          },
          "isOwner()": {
            "details": "Returns true if the caller is the current owner."
          },
          "isVestingContract(address)": {
            "params": {
              "stakerAddress": "the address to check"
            }
          },
          "migrateToNewStakingContract()": {
            "details": "Staking contract needs to be set before by the owner. Currently not implemented, just needed for the interface.     In case it's needed at some point in the future,     the implementation needs to be changed first."
          },
          "nonces(address)": {
            "details": "nonces[user] is a number."
          },
          "numDelegateStakingCheckpoints(address,uint256)": {
            "details": "numDelegateStakingCheckpoints[delegatee][date] is a number."
          },
          "numTotalStakingCheckpoints(uint256)": {
            "details": "numTotalStakingCheckpoints[date] is a number."
          },
          "numUserStakingCheckpoints(address,uint256)": {
            "details": "numUserStakingCheckpoints[user][date] is a number"
          },
          "numVestingCheckpoints(uint256)": {
            "details": "numVestingCheckpoints[date] is a number."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pauseUnpause(bool)": {
            "params": {
              "_pause": "true when pausing, false when unpausing"
            }
          },
          "paused()": {
            "details": "Staking contract is paused"
          },
          "pausers(address)": {
            "details": "user => flag whether user has pauser role."
          },
          "receiveApproval(address,uint256,address,bytes)": {
            "params": {
              "_data": "The data will be used for low level call."
            }
          },
          "removeAdmin(address)": {
            "params": {
              "_admin": "The addresses of the account to revoke permissions."
            }
          },
          "removeContractCodeHash(address)": {
            "details": "We need it to use isVestingContract() function instead of isContract()",
            "params": {
              "vesting": "The address of Vesting contract."
            }
          },
          "removePauser(address)": {
            "params": {
              "_pauser": "The address to grant pauser permissions."
            }
          },
          "setFeeSharing(address)": {
            "params": {
              "_feeSharing": "The address of FeeSharingCollectorProxy contract."
            }
          },
          "setMaxVestingWithdrawIterations(uint256)": {
            "details": "set max withdraw iterations.",
            "params": {
              "maxIterations": "new max iterations value."
            }
          },
          "setNewStakingContract(address)": {
            "details": "Doesn't have any influence as long as migrateToNewStakingContract is not implemented.",
            "params": {
              "_newStakingContract": "The address of the new staking contract."
            }
          },
          "setVestingRegistry(address)": {
            "details": "_vestingRegistryProxy can be set to 0 as this function can be reused by various other functionalities without the necessity of linking it with Vesting Registry",
            "params": {
              "_vestingRegistryProxy": "the address of vesting registry proxy contract"
            }
          },
          "setVestingStakes(uint256[],uint96[])": {
            "params": {
              "lockedDates": "The arrays of lock dates.",
              "values": "The array of values to add to the staked balance."
            }
          },
          "setWeightScaling(uint96)": {
            "params": {
              "_weightScaling": "The weight scaling."
            }
          },
          "stake(uint96,uint256,address,address)": {
            "params": {
              "amount": "The number of tokens to stake.",
              "delegatee": "The address of the delegatee or 0x0 if there is none.",
              "stakeFor": "The address to stake the tokens for or 0x0 if staking for oneself.",
              "until": "Timestamp indicating the date until which to stake."
            }
          },
          "stakeBySchedule(uint256,uint256,uint256,uint256,address,address)": {
            "params": {
              "amount": "The amount of tokens to stake.",
              "cliff": "The time interval to the first withdraw.",
              "delegatee": "The address of the delegatee or 0x0 if there is none.",
              "duration": "The staking duration.",
              "intervalLength": "The length of each staking interval when cliff passed.",
              "stakeFor": "The address to stake the tokens for or 0x0 if staking for oneself."
            }
          },
          "stakeWithApproval(address,uint96,uint256,address,address)": {
            "details": "This function will be invoked from receiveApprovalSOV.approveAndCall -> this.receiveApproval -> this.stakeWithApproval",
            "params": {
              "amount": "The number of tokens to stake.",
              "delegatee": "The address of the delegatee or 0x0 if there is none.",
              "sender": "The sender of SOV.approveAndCall",
              "stakeFor": "The address to stake the tokens for or 0x0 if staking for oneself.",
              "until": "Timestamp indicating the date until which to stake."
            }
          },
          "stakesBySchedule(uint256,uint256,uint256,uint256,address,address)": {
            "details": "DO NOT USE this misspelled function. Use stakeBySchedule function instead. This function cannot be deprecated while we have non-upgradeable vesting contracts."
          },
          "timestampToLockDate(uint256)": {
            "params": {
              "timestamp": "The unlocking timestamp."
            },
            "return": "The actual unlocking date (might be up to 2 weeks shorter than intended)."
          },
          "totalStakingCheckpoints(uint256,uint32)": {
            "details": "totalStakingCheckpoints[date][index] is a checkpoint"
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "unlockAllTokens()": {
            "details": "Last resort."
          },
          "userStakingCheckpoints(address,uint256,uint32)": {
            "details": "userStakingCheckpoints[user][date][index] is a checkpoint."
          },
          "vestingCheckpoints(uint256,uint32)": {
            "details": "vestingCheckpoints[date][index] is a checkpoint."
          },
          "vestingCodeHashes(bytes32)": {
            "details": "vesting contract code hash => flag whether it's registered code hash"
          },
          "vestingWhitelist(address)": {
            "details": "vestingWhitelist[contract] is true/false."
          },
          "weightScaling()": {
            "return": "uint96 DEFAULT_WEIGHT_SCALING"
          },
          "weightedStakeByDate(address,uint256,uint256,uint256)": {
            "params": {
              "account": "The user address.",
              "blockNumber": "The block number, needed for checkpointing.",
              "date": "The staking date to compute the power for.",
              "startDate": "The date for which we need to know the power of the stake."
            },
            "return": "The stacking power."
          },
          "weightedVestingStakeByDate(uint256,uint256,uint256)": {
            "params": {
              "blockNumber": "The block number, needed for checkpointing.",
              "date": "The staking date to compute the power for. Adjusted to the next valid lock date, if necessary.",
              "startDate": "The date for which we need to know the power of the stake."
            },
            "return": "The stacking power."
          },
          "withdraw(uint96,uint256,address)": {
            "params": {
              "amount": "The number of tokens to withdraw.",
              "receiver": "The receiver of the tokens. If not specified, send to the msg.sender",
              "until": "The date until which the tokens were staked."
            }
          }
        }
      },
      "userdoc": {
        "methods": {
          "MAX_DURATION()": {
            "notice": "Returns public constant MAX_DURATION preserved for backwards compatibility Use getStorageMaxDurationToStakeTokens()"
          },
          "SOVToken()": {
            "notice": "The token to be staked"
          },
          "addAdmin(address)": {
            "notice": "Add account to Admins ACL."
          },
          "addContractCodeHash(address)": {
            "notice": "Add vesting contract's code hash to a map of code hashes."
          },
          "addPauser(address)": {
            "notice": "Add account to pausers ACL."
          },
          "allUnlocked()": {
            "notice": "If this flag is set to true, all tokens are unlocked immediately see function unlockAllTokens() for details"
          },
          "balanceOf(address)": {
            "notice": "Get the number of staked tokens held by the user account."
          },
          "cancelTeamVesting(address,address,uint256)": {
            "notice": "Governance withdraw vesting directly through staking contract. This direct withdraw vesting solves the out of gas issue when there are too many iterations when withdrawing. This function only allows cancelling vesting contract of the TeamVesting type."
          },
          "computeWeightByDate(uint256,uint256)": {
            "notice": "Compute the weight for a specific date."
          },
          "delegate(address,uint256)": {
            "notice": "Delegate votes from `msg.sender` which are locked until lockDate to `delegatee`."
          },
          "delegateBySig(address,uint256,uint256,uint256,uint8,bytes32,bytes32)": {
            "notice": "Delegates votes from signatory to a delegatee account. Voting with EIP-712 Signatures.     * Voting power can be delegated to any address, and then can be used to vote on proposals. A key benefit to users of by-signature functionality is that they can create a signed vote transaction for free, and have a trusted third-party spend rBTC(or ETH) on gas fees and write it to the blockchain for them.     * The third party in this scenario, submitting the SOV-holder’s signed transaction holds a voting power that is for only a single proposal. The signatory still holds the power to vote on their own behalf in the proposal if the third party has not yet published the signed transaction that was given to them."
          },
          "delegateStakingCheckpoints(address,uint256,uint32)": {
            "notice": "A record of tokens to be unstaked at a given time which were delegated to a certain address. For delegatee voting power computation. Voting weights get adjusted bi-weekly."
          },
          "delegates(address,uint256)": {
            "notice": "Stakers delegated voting power"
          },
          "extendStakingDuration(uint256,uint256)": {
            "notice": "Extend the staking duration until the specified date."
          },
          "feeSharing()": {
            "notice": "SLASHING ///the address of FeeSharingCollectorProxy contract, we need it for unstaking with slashing."
          },
          "freezeUnfreeze(bool)": {
            "notice": "Freeze contract - disable all functions"
          },
          "getCurrentStakedUntil(uint256)": {
            "notice": "Get the current number of tokens staked for a day."
          },
          "getCurrentVotes(address)": {
            "notice": "Get the current votes balance for a user account."
          },
          "getMaxVestingWithdrawIterations()": {
            "notice": "Max iteration for direct withdrawal from staking to prevent out of gas issue."
          },
          "getPriorStakeByDateForDelegatee(address,uint256,uint256)": {
            "notice": "Determine the prior number of stake for an account as of a block number."
          },
          "getPriorTotalStakesForDate(uint256,uint256)": {
            "notice": "Determine the prior number of stake for an unlocking date as of a block number."
          },
          "getPriorTotalVotingPower(uint32,uint256)": {
            "notice": "Compute the total voting power at a given time."
          },
          "getPriorUserStakeByDate(address,uint256,uint256)": {
            "notice": "Determine the prior number of stake for an account until a certain lock date as of a block number."
          },
          "getPriorVestingStakeByDate(uint256,uint256)": {
            "notice": "Determine the prior number of vested stake for an account until a certain lock date as of a block number."
          },
          "getPriorVestingWeightedStake(uint256,uint256)": {
            "notice": "Determine the prior weighted vested amount for an account as of a block number. Iterate through checkpoints adding up voting power."
          },
          "getPriorVotes(address,uint256,uint256)": {
            "notice": "Determine the prior number of votes for a delegatee as of a block number. Iterate through checkpoints adding up voting power."
          },
          "getPriorWeightedStake(address,uint256,uint256)": {
            "notice": "Determine the prior weighted stake for an account as of a block number. Iterate through checkpoints adding up voting power."
          },
          "getStakes(address)": {
            "notice": "Get list of stakes for a user account."
          },
          "getStorageDelegationTypehash()": {
            "notice": "The EIP-712 typehash for the delegation struct used by the contract."
          },
          "getStorageDomainTypehash()": {
            "notice": "The EIP-712 typehash for the contract's domain."
          },
          "getStorageMaxDurationToStakeTokens()": {
            "notice": "The maximum duration to stake tokens"
          },
          "getStorageMaxVotingWeight()": {
            "notice": "The maximum possible voting weight before adding +1 (actually 10, but need 9 for computation)."
          },
          "getStorageRangeForWeightScaling()": {
            "notice": "return (uint256(MIN_WEIGHT_SCALING), uint256(MAX_WEIGHT_SCALING))"
          },
          "getStorageWeightFactor()": {
            "notice": "weight is multiplied with this factor (for allowing decimals, like 1.2x)."
          },
          "getWithdrawAmounts(uint96,uint256)": {
            "notice": "Get available and punished amount for withdrawing."
          },
          "governanceWithdraw(uint96,uint256,address)": {
            "notice": "Withdraw the given amount of tokens."
          },
          "governanceWithdrawVesting(address,address)": {
            "notice": "Withdraw tokens for vesting contract."
          },
          "isVestingContract(address)": {
            "notice": "Return flag whether the given address is a registered vesting contract."
          },
          "kickoffTS()": {
            "notice": "AUTOGENERATED FUNCTIONS FROM THE STAKING STORAGE PUBLIC VARIABLES ///The timestamp of contract creation. Base for the staking period calculation."
          },
          "migrateToNewStakingContract()": {
            "notice": "Allow a staker to migrate his positions to the new staking contract."
          },
          "newStakingContract()": {
            "notice": "Used for stake migrations to a new staking contract with a different storage structure"
          },
          "nonces(address)": {
            "notice": "A record of states for signing / validating signatures"
          },
          "numDelegateStakingCheckpoints(address,uint256)": {
            "notice": "The number of total staking checkpoints for each date per delegate."
          },
          "numTotalStakingCheckpoints(uint256)": {
            "notice": "The number of total staking checkpoints for each date."
          },
          "numUserStakingCheckpoints(address,uint256)": {
            "notice": "The number of total staking checkpoints for each date per user."
          },
          "numVestingCheckpoints(uint256)": {
            "notice": "The number of total vesting checkpoints for each date."
          },
          "pauseUnpause(bool)": {
            "notice": "Pause/unpause contract"
          },
          "receiveApproval(address,uint256,address,bytes)": {
            "notice": "Receives approval from SOV token."
          },
          "removeAdmin(address)": {
            "notice": "Remove account from Admins ACL."
          },
          "removeContractCodeHash(address)": {
            "notice": "Remove vesting contract's code hash to a map of code hashes."
          },
          "removePauser(address)": {
            "notice": "Remove account from pausers ACL."
          },
          "setFeeSharing(address)": {
            "notice": "Allows the owner to set a fee sharing proxy contract. We need it for unstaking with slashing."
          },
          "setNewStakingContract(address)": {
            "notice": "Allow the owner to set a new staking contract. As a consequence it allows the stakers to migrate their positions to the new contract."
          },
          "setVestingRegistry(address)": {
            "notice": "sets vesting registry"
          },
          "setVestingStakes(uint256[],uint96[])": {
            "notice": "Sets the users' vesting stakes for a giving lock dates and writes checkpoints."
          },
          "setWeightScaling(uint96)": {
            "notice": "Allow the owner to set weight scaling. We need it for unstaking with slashing."
          },
          "stake(uint96,uint256,address,address)": {
            "notice": "Stake the given amount for the given duration of time."
          },
          "stakeBySchedule(uint256,uint256,uint256,uint256,address,address)": {
            "notice": "Stake tokens according to the vesting schedule."
          },
          "stakeWithApproval(address,uint96,uint256,address,address)": {
            "notice": "Stake the given amount for the given duration of time."
          },
          "timestampToLockDate(uint256)": {
            "notice": "Unstaking is possible every 2 weeks only. This means, to calculate the key value for the staking checkpoints, we need to map the intended timestamp to the closest available date."
          },
          "totalStakingCheckpoints(uint256,uint32)": {
            "notice": "A record of tokens to be unstaked at a given time in total. For total voting power computation. Voting weights get adjusted bi-weekly."
          },
          "unlockAllTokens()": {
            "notice": "Allow the owner to unlock all tokens in case the staking contract is going to be replaced Note: Not reversible on purpose. once unlocked, everything is unlocked. The owner should not be able to just quickly unlock to withdraw his own tokens and lock again."
          },
          "userStakingCheckpoints(address,uint256,uint32)": {
            "notice": "A record of tokens to be unstaked at a given time which per user address (address -> lockDate -> stake checkpoint)"
          },
          "vestingCheckpoints(uint256,uint32)": {
            "notice": "A record of tokens to be unstaked from vesting contract at a given time (lockDate -> vest checkpoint)"
          },
          "vestingRegistryLogic()": {
            "notice": "vesting registry contract PROXY address"
          },
          "vestingWhitelist(address)": {
            "notice": "List of vesting contracts, tokens for these contracts won't be slashed if unstaked by governance."
          },
          "weightScaling()": {
            "notice": "used for weight scaling when unstaking with slashing."
          },
          "weightedStakeByDate(address,uint256,uint256,uint256)": {
            "notice": "Compute the voting power for a specific date. Power = stake * weight TODO: WeightedStaking::weightedStakeByDate should probably better be internal instead of a public function."
          },
          "weightedVestingStakeByDate(uint256,uint256,uint256)": {
            "notice": "Compute the voting power for a specific date. Power = stake * weight"
          },
          "withdraw(uint96,uint256,address)": {
            "notice": "Withdraw the given amount of tokens if they are unlocked."
          }
        }
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@ethereum-waffle/=node_modules/@ethereum-waffle/",
        ":ds-test/=foundry/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=foundry/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":truffle/=node_modules/truffle/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "compilationTarget": {
        "contracts/governance/Staking/interfaces/IStaking.sol": "IStaking"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/governance/Staking/interfaces/IStaking.sol": {
        "keccak256": "0x6777e38b4bd5a63e10f3bf7aba355401713bb649811c6dfa1bda40ebd8fee30b",
        "urls": [
          "bzz-raw://676e42641fb1d335dde7bb928779014ff2adf1eb1121f48a4a48e36f571287d4",
          "dweb:/ipfs/QmamokattcaQ6gRGaqUDVZejcv4rridScd9nayGcxxW1BL"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/governance/Staking/interfaces/IStaking.sol",
    "id": 16883,
    "exportedSymbols": {
      "IStaking": [
        16882
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:29473:62",
    "nodes": [
      {
        "id": 16261,
        "nodeType": "PragmaDirective",
        "src": "0:24:62",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".17"
        ]
      },
      {
        "id": 16262,
        "nodeType": "PragmaDirective",
        "src": "26:33:62",
        "nodes": [],
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ]
      },
      {
        "id": 16882,
        "nodeType": "ContractDefinition",
        "src": "137:29335:62",
        "nodes": [
          {
            "id": 16267,
            "nodeType": "FunctionDefinition",
            "src": "376:43:62",
            "nodes": [],
            "documentation": "@notice Add account to Admins ACL.\n@param _admin The addresses of the account to grant permissions.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addAdmin",
            "parameters": {
              "id": 16265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16264,
                  "name": "_admin",
                  "nodeType": "VariableDeclaration",
                  "scope": 16267,
                  "src": "394:14:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16263,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "394:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "393:16:62"
            },
            "returnParameters": {
              "id": 16266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "418:0:62"
            },
            "scope": 16882,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16272,
            "nodeType": "FunctionDefinition",
            "src": "563:46:62",
            "nodes": [],
            "documentation": "@notice Remove account from Admins ACL.\n@param _admin The addresses of the account to revoke permissions.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeAdmin",
            "parameters": {
              "id": 16270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16269,
                  "name": "_admin",
                  "nodeType": "VariableDeclaration",
                  "scope": 16272,
                  "src": "584:14:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16268,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "584:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "583:16:62"
            },
            "returnParameters": {
              "id": 16271,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "608:0:62"
            },
            "scope": 16882,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16277,
            "nodeType": "FunctionDefinition",
            "src": "739:45:62",
            "nodes": [],
            "documentation": "@notice Add account to pausers ACL.\n@param _pauser The address to grant pauser permissions.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addPauser",
            "parameters": {
              "id": 16275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16274,
                  "name": "_pauser",
                  "nodeType": "VariableDeclaration",
                  "scope": 16277,
                  "src": "758:15:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16273,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "758:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "757:17:62"
            },
            "returnParameters": {
              "id": 16276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "783:0:62"
            },
            "scope": 16882,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16282,
            "nodeType": "FunctionDefinition",
            "src": "919:48:62",
            "nodes": [],
            "documentation": "@notice Remove account from pausers ACL.\n@param _pauser The address to grant pauser permissions.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removePauser",
            "parameters": {
              "id": 16280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16279,
                  "name": "_pauser",
                  "nodeType": "VariableDeclaration",
                  "scope": 16282,
                  "src": "941:15:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16278,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "941:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "940:17:62"
            },
            "returnParameters": {
              "id": 16281,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "966:0:62"
            },
            "scope": 16882,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16287,
            "nodeType": "FunctionDefinition",
            "src": "1090:44:62",
            "nodes": [],
            "documentation": "@notice Pause/unpause contract\n@param _pause true when pausing, false when unpausing\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pauseUnpause",
            "parameters": {
              "id": 16285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16284,
                  "name": "_pause",
                  "nodeType": "VariableDeclaration",
                  "scope": 16287,
                  "src": "1112:11:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16283,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1112:4:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1111:13:62"
            },
            "returnParameters": {
              "id": 16286,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1133:0:62"
            },
            "scope": 16882,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16292,
            "nodeType": "FunctionDefinition",
            "src": "1389:47:62",
            "nodes": [],
            "documentation": "@notice Freeze contract - disable all functions\n@param _freeze true when freezing, false when unfreezing\n@dev When freezing, pause is always applied too. When unfreezing, the contract is left in paused stated.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "freezeUnfreeze",
            "parameters": {
              "id": 16290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16289,
                  "name": "_freeze",
                  "nodeType": "VariableDeclaration",
                  "scope": 16292,
                  "src": "1413:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16288,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1413:4:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1412:14:62"
            },
            "returnParameters": {
              "id": 16291,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1435:0:62"
            },
            "scope": 16882,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16297,
            "nodeType": "FunctionDefinition",
            "src": "1652:53:62",
            "nodes": [],
            "documentation": "@notice Allows the owner to set a fee sharing proxy contract.\nWe need it for unstaking with slashing.\n@param _feeSharing The address of FeeSharingCollectorProxy contract.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeSharing",
            "parameters": {
              "id": 16295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16294,
                  "name": "_feeSharing",
                  "nodeType": "VariableDeclaration",
                  "scope": 16297,
                  "src": "1675:19:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16293,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1675:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1674:21:62"
            },
            "returnParameters": {
              "id": 16296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1704:0:62"
            },
            "scope": 16882,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16302,
            "nodeType": "FunctionDefinition",
            "src": "1879:58:62",
            "nodes": [],
            "documentation": "@notice Allow the owner to set weight scaling.\nWe need it for unstaking with slashing.\n@param _weightScaling The weight scaling.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setWeightScaling",
            "parameters": {
              "id": 16300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16299,
                  "name": "_weightScaling",
                  "nodeType": "VariableDeclaration",
                  "scope": 16302,
                  "src": "1905:21:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 16298,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "1905:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1904:23:62"
            },
            "returnParameters": {
              "id": 16301,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1936:0:62"
            },
            "scope": 16882,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16307,
            "nodeType": "FunctionDefinition",
            "src": "2304:69:62",
            "nodes": [],
            "documentation": "@notice Allow the owner to set a new staking contract.\nAs a consequence it allows the stakers to migrate their positions\nto the new contract.\n@dev Doesn't have any influence as long as migrateToNewStakingContract\nis not implemented.\n@param _newStakingContract The address of the new staking contract.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setNewStakingContract",
            "parameters": {
              "id": 16305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16304,
                  "name": "_newStakingContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 16307,
                  "src": "2335:27:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16303,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2335:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2334:29:62"
            },
            "returnParameters": {
              "id": 16306,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2372:0:62"
            },
            "scope": 16882,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16310,
            "nodeType": "FunctionDefinition",
            "src": "2731:48:62",
            "nodes": [],
            "documentation": "@notice Allow a staker to migrate his positions to the new staking contract.\n@dev Staking contract needs to be set before by the owner.\nCurrently not implemented, just needed for the interface.\n     In case it's needed at some point in the future,\n     the implementation needs to be changed first.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "migrateToNewStakingContract",
            "parameters": {
              "id": 16308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2767:2:62"
            },
            "returnParameters": {
              "id": 16309,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2778:0:62"
            },
            "scope": 16882,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16319,
            "nodeType": "FunctionDefinition",
            "src": "3197:123:62",
            "nodes": [],
            "documentation": "@notice Compute the total voting power at a given time.\n@param blockNumber The block number, needed for checkpointing.\n@param time The timestamp for which to calculate the total voting power.\n@return The total voting power at the given time.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPriorTotalVotingPower",
            "parameters": {
              "id": 16315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16312,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 16319,
                  "src": "3231:18:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 16311,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3231:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16314,
                  "name": "time",
                  "nodeType": "VariableDeclaration",
                  "scope": 16319,
                  "src": "3251:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16313,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3251:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3230:34:62"
            },
            "returnParameters": {
              "id": 16318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16317,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16319,
                  "src": "3312:6:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 16316,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "3312:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3311:8:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16326,
            "nodeType": "FunctionDefinition",
            "src": "3660:73:62",
            "nodes": [],
            "documentation": "@notice Get the current votes balance for a user account.\n@param account The address to get votes balance.\n@dev This is a wrapper to simplify arguments. The actual computation is\nperformed on WeightedStaking parent contract.\n@return The number of current votes for a user account.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentVotes",
            "parameters": {
              "id": 16322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16321,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 16326,
                  "src": "3685:15:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3685:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3684:17:62"
            },
            "returnParameters": {
              "id": 16325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16324,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16326,
                  "src": "3725:6:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 16323,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "3725:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3724:8:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16337,
            "nodeType": "FunctionDefinition",
            "src": "4342:136:62",
            "nodes": [],
            "documentation": "@notice Determine the prior number of votes for a delegatee as of a block number.\nIterate through checkpoints adding up voting power.\n@dev Block number must be a finalized block or else this function will revert\nto prevent misinformation.\n     Used for Voting, not for fee sharing.\n@param account The address of the account to check.\n@param blockNumber The block number to get the vote balance at.\n@param date The staking date to compute the power for.\n@return The number of votes the delegatee had as of the given block.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPriorVotes",
            "parameters": {
              "id": 16333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16328,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 16337,
                  "src": "4374:15:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16327,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4374:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16330,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 16337,
                  "src": "4399:19:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16329,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4399:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16332,
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "scope": 16337,
                  "src": "4428:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16331,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4428:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4364:82:62"
            },
            "returnParameters": {
              "id": 16336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16335,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16337,
                  "src": "4470:6:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 16334,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "4470:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4469:8:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16348,
            "nodeType": "FunctionDefinition",
            "src": "4975:154:62",
            "nodes": [],
            "documentation": "@notice Determine the prior number of stake for an account as of a block number.\n@dev Block number must be a finalized block or else this function will\nrevert to prevent misinformation.\n@param account The address of the account to check.\n@param date The staking date to compute the power for.\n@param blockNumber The block number to get the vote balance at.\n@return The number of votes the account had as of the given block.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPriorStakeByDateForDelegatee",
            "parameters": {
              "id": 16344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16339,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 16348,
                  "src": "5025:15:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16338,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5025:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16341,
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "scope": 16348,
                  "src": "5050:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16340,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5050:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16343,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 16348,
                  "src": "5072:19:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16342,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5072:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5015:82:62"
            },
            "returnParameters": {
              "id": 16347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16346,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16348,
                  "src": "5121:6:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 16345,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "5121:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5120:8:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16357,
            "nodeType": "FunctionDefinition",
            "src": "5694:126:62",
            "nodes": [],
            "documentation": "@notice Determine the prior number of stake for an unlocking date as of a block number.\n@dev Block number must be a finalized block or else this function will\nrevert to prevent misinformation.\nTODO: WeightedStaking::getPriorTotalStakesForDate should probably better\nbe internal instead of a public function.\n@param date The date to check the stakes for.\n@param blockNumber The block number to get the vote balance at.\n@return The number of votes the account had as of the given block.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPriorTotalStakesForDate",
            "parameters": {
              "id": 16353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16350,
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "scope": 16357,
                  "src": "5730:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16349,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5730:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16352,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 16357,
                  "src": "5744:19:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16351,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5744:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5729:35:62"
            },
            "returnParameters": {
              "id": 16356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16355,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16357,
                  "src": "5812:6:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 16354,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "5812:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5811:8:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16364,
            "nodeType": "FunctionDefinition",
            "src": "6059:64:62",
            "nodes": [],
            "documentation": "@notice Delegate votes from `msg.sender` which are locked until lockDate to `delegatee`.\n@param delegatee The address to delegate votes to.\n@param lockDate the date if the position to delegate.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "delegate",
            "parameters": {
              "id": 16362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16359,
                  "name": "delegatee",
                  "nodeType": "VariableDeclaration",
                  "scope": 16364,
                  "src": "6077:17:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16358,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6077:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16361,
                  "name": "lockDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 16364,
                  "src": "6096:16:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16360,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6096:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6076:37:62"
            },
            "returnParameters": {
              "id": 16363,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6122:0:62"
            },
            "scope": 16882,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16381,
            "nodeType": "FunctionDefinition",
            "src": "7658:193:62",
            "nodes": [],
            "documentation": "@notice Delegates votes from signatory to a delegatee account.\nVoting with EIP-712 Signatures.\n     * Voting power can be delegated to any address, and then can be used to\nvote on proposals. A key benefit to users of by-signature functionality\nis that they can create a signed vote transaction for free, and have a\ntrusted third-party spend rBTC(or ETH) on gas fees and write it to the\nblockchain for them.\n     * The third party in this scenario, submitting the SOV-holder’s signed\ntransaction holds a voting power that is for only a single proposal.\nThe signatory still holds the power to vote on their own behalf in\nthe proposal if the third party has not yet published the signed\ntransaction that was given to them.\n     * @dev The signature needs to be broken up into 3 parameters, known as\nv, r and s:\nconst r = '0x' + sig.substring(2).substring(0, 64);\nconst s = '0x' + sig.substring(2).substring(64, 128);\nconst v = '0x' + sig.substring(2).substring(128, 130);\n     * @param delegatee The address to delegate votes to.\n@param lockDate The date until which the position is locked.\n@param nonce The contract state required to match the signature.\n@param expiry The time at which to expire the signature.\n@param v The recovery byte of the signature.\n@param r Half of the ECDSA signature pair.\n@param s Half of the ECDSA signature pair.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "delegateBySig",
            "parameters": {
              "id": 16379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16366,
                  "name": "delegatee",
                  "nodeType": "VariableDeclaration",
                  "scope": 16381,
                  "src": "7690:17:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16365,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7690:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16368,
                  "name": "lockDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 16381,
                  "src": "7717:16:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16367,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7717:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16370,
                  "name": "nonce",
                  "nodeType": "VariableDeclaration",
                  "scope": 16381,
                  "src": "7743:13:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16369,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7743:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16372,
                  "name": "expiry",
                  "nodeType": "VariableDeclaration",
                  "scope": 16381,
                  "src": "7766:14:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16371,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7766:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16374,
                  "name": "v",
                  "nodeType": "VariableDeclaration",
                  "scope": 16381,
                  "src": "7790:7:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 16373,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "7790:5:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16376,
                  "name": "r",
                  "nodeType": "VariableDeclaration",
                  "scope": 16381,
                  "src": "7807:9:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 16375,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7807:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16378,
                  "name": "s",
                  "nodeType": "VariableDeclaration",
                  "scope": 16381,
                  "src": "7826:9:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 16377,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7826:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7680:161:62"
            },
            "returnParameters": {
              "id": 16380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7850:0:62"
            },
            "scope": 16882,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16392,
            "nodeType": "FunctionDefinition",
            "src": "8319:129:62",
            "nodes": [],
            "documentation": "@notice Stake the given amount for the given duration of time.\n@param amount The number of tokens to stake.\n@param until Timestamp indicating the date until which to stake.\n@param stakeFor The address to stake the tokens for or 0x0 if staking for oneself.\n@param delegatee The address of the delegatee or 0x0 if there is none.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "parameters": {
              "id": 16390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16383,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 16392,
                  "src": "8343:13:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 16382,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "8343:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16385,
                  "name": "until",
                  "nodeType": "VariableDeclaration",
                  "scope": 16392,
                  "src": "8366:13:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16384,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8366:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16387,
                  "name": "stakeFor",
                  "nodeType": "VariableDeclaration",
                  "scope": 16392,
                  "src": "8389:16:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16386,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8389:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16389,
                  "name": "delegatee",
                  "nodeType": "VariableDeclaration",
                  "scope": 16392,
                  "src": "8415:17:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8415:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8333:105:62"
            },
            "returnParameters": {
              "id": 16391,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8447:0:62"
            },
            "scope": 16882,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16405,
            "nodeType": "FunctionDefinition",
            "src": "9032:165:62",
            "nodes": [],
            "documentation": "@notice Stake the given amount for the given duration of time.\n@dev This function will be invoked from receiveApproval\n@dev SOV.approveAndCall -> this.receiveApproval -> this.stakeWithApproval\n@param sender The sender of SOV.approveAndCall\n@param amount The number of tokens to stake.\n@param until Timestamp indicating the date until which to stake.\n@param stakeFor The address to stake the tokens for or 0x0 if staking for oneself.\n@param delegatee The address of the delegatee or 0x0 if there is none.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stakeWithApproval",
            "parameters": {
              "id": 16403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16394,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 16405,
                  "src": "9068:14:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16393,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9068:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16396,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 16405,
                  "src": "9092:13:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 16395,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "9092:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16398,
                  "name": "until",
                  "nodeType": "VariableDeclaration",
                  "scope": 16405,
                  "src": "9115:13:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16397,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9115:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16400,
                  "name": "stakeFor",
                  "nodeType": "VariableDeclaration",
                  "scope": 16405,
                  "src": "9138:16:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16399,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9138:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16402,
                  "name": "delegatee",
                  "nodeType": "VariableDeclaration",
                  "scope": 16405,
                  "src": "9164:17:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16401,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9164:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9058:129:62"
            },
            "returnParameters": {
              "id": 16404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9196:0:62"
            },
            "scope": 16882,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16416,
            "nodeType": "FunctionDefinition",
            "src": "9330:144:62",
            "nodes": [],
            "documentation": "@notice Receives approval from SOV token.\n@param _data The data will be used for low level call.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "receiveApproval",
            "parameters": {
              "id": 16414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16407,
                  "name": "_sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 16416,
                  "src": "9364:15:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16406,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9364:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16409,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 16416,
                  "src": "9389:15:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16408,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9389:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16411,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 16416,
                  "src": "9414:14:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16410,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9414:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16413,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 16416,
                  "src": "9438:20:62",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 16412,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9438:5:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9354:110:62"
            },
            "returnParameters": {
              "id": 16415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9473:0:62"
            },
            "scope": 16882,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16423,
            "nodeType": "FunctionDefinition",
            "src": "9683:77:62",
            "nodes": [],
            "documentation": "@notice Extend the staking duration until the specified date.\n@param previousLock The old unlocking timestamp.\n@param until The new unlocking timestamp in seconds.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "extendStakingDuration",
            "parameters": {
              "id": 16421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16418,
                  "name": "previousLock",
                  "nodeType": "VariableDeclaration",
                  "scope": 16423,
                  "src": "9714:20:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16417,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9714:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16420,
                  "name": "until",
                  "nodeType": "VariableDeclaration",
                  "scope": 16423,
                  "src": "9736:13:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16419,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9736:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9713:37:62"
            },
            "returnParameters": {
              "id": 16422,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9759:0:62"
            },
            "scope": 16882,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16438,
            "nodeType": "FunctionDefinition",
            "src": "9962:199:62",
            "nodes": [],
            "documentation": "@dev DO NOT USE this misspelled function. Use stakeBySchedule function instead.\nThis function cannot be deprecated while we have non-upgradeable vesting contracts.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stakesBySchedule",
            "parameters": {
              "id": 16436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16425,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 16438,
                  "src": "9997:14:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16424,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9997:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16427,
                  "name": "cliff",
                  "nodeType": "VariableDeclaration",
                  "scope": 16438,
                  "src": "10021:13:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16426,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10021:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16429,
                  "name": "duration",
                  "nodeType": "VariableDeclaration",
                  "scope": 16438,
                  "src": "10044:16:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16428,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10044:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16431,
                  "name": "intervalLength",
                  "nodeType": "VariableDeclaration",
                  "scope": 16438,
                  "src": "10070:22:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16430,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10070:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16433,
                  "name": "stakeFor",
                  "nodeType": "VariableDeclaration",
                  "scope": 16438,
                  "src": "10102:16:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16432,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10102:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16435,
                  "name": "delegatee",
                  "nodeType": "VariableDeclaration",
                  "scope": 16438,
                  "src": "10128:17:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16434,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10128:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9987:164:62"
            },
            "returnParameters": {
              "id": 16437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10160:0:62"
            },
            "scope": 16882,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16453,
            "nodeType": "FunctionDefinition",
            "src": "10658:198:62",
            "nodes": [],
            "documentation": "@notice Stake tokens according to the vesting schedule.\n@param amount The amount of tokens to stake.\n@param cliff The time interval to the first withdraw.\n@param duration The staking duration.\n@param intervalLength The length of each staking interval when cliff passed.\n@param stakeFor The address to stake the tokens for or 0x0 if staking for oneself.\n@param delegatee The address of the delegatee or 0x0 if there is none.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stakeBySchedule",
            "parameters": {
              "id": 16451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16440,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 16453,
                  "src": "10692:14:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16439,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10692:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16442,
                  "name": "cliff",
                  "nodeType": "VariableDeclaration",
                  "scope": 16453,
                  "src": "10716:13:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16441,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10716:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16444,
                  "name": "duration",
                  "nodeType": "VariableDeclaration",
                  "scope": 16453,
                  "src": "10739:16:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16443,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10739:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16446,
                  "name": "intervalLength",
                  "nodeType": "VariableDeclaration",
                  "scope": 16453,
                  "src": "10765:22:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16445,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10765:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16448,
                  "name": "stakeFor",
                  "nodeType": "VariableDeclaration",
                  "scope": 16453,
                  "src": "10797:16:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16447,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10797:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16450,
                  "name": "delegatee",
                  "nodeType": "VariableDeclaration",
                  "scope": 16453,
                  "src": "10823:17:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16449,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10823:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10682:164:62"
            },
            "returnParameters": {
              "id": 16452,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10855:0:62"
            },
            "scope": 16882,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16460,
            "nodeType": "FunctionDefinition",
            "src": "11117:75:62",
            "nodes": [],
            "documentation": "@notice Get the number of staked tokens held by the user account.\n@dev Iterate checkpoints adding up stakes.\n@param account The address of the account to get the balance of.\n@return The number of tokens held.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "parameters": {
              "id": 16456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16455,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 16460,
                  "src": "11136:15:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16454,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11136:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11135:17:62"
            },
            "returnParameters": {
              "id": 16459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16458,
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 16460,
                  "src": "11176:14:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 16457,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "11176:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11175:16:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16467,
            "nodeType": "FunctionDefinition",
            "src": "11349:80:62",
            "nodes": [],
            "documentation": "@notice Get the current number of tokens staked for a day.\n@param lockedTS The timestamp to get the staked tokens for.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentStakedUntil",
            "parameters": {
              "id": 16463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16462,
                  "name": "lockedTS",
                  "nodeType": "VariableDeclaration",
                  "scope": 16467,
                  "src": "11380:16:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16461,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11380:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11379:18:62"
            },
            "returnParameters": {
              "id": 16466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16465,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16467,
                  "src": "11421:6:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 16464,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "11421:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11420:8:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16478,
            "nodeType": "FunctionDefinition",
            "src": "11603:131:62",
            "nodes": [],
            "documentation": "@notice Get list of stakes for a user account.\n@param account The address to get stakes.\n@return The arrays of dates and stakes.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStakes",
            "parameters": {
              "id": 16470,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16469,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 16478,
                  "src": "11622:15:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16468,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11622:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11621:17:62"
            },
            "returnParameters": {
              "id": 16477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16473,
                  "name": "dates",
                  "nodeType": "VariableDeclaration",
                  "scope": 16478,
                  "src": "11686:22:62",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16471,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11686:7:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 16472,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "11686:9:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16476,
                  "name": "stakes",
                  "nodeType": "VariableDeclaration",
                  "scope": 16478,
                  "src": "11710:22:62",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint96_$dyn_memory_ptr",
                    "typeString": "uint96[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16474,
                      "name": "uint96",
                      "nodeType": "ElementaryTypeName",
                      "src": "11710:6:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "id": 16475,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "11710:8:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint96_$dyn_storage_ptr",
                      "typeString": "uint96[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11685:48:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16485,
            "nodeType": "FunctionDefinition",
            "src": "12104:80:62",
            "nodes": [],
            "documentation": "@notice Unstaking is possible every 2 weeks only. This means, to\ncalculate the key value for the staking checkpoints, we need to\nmap the intended timestamp to the closest available date.\n@param timestamp The unlocking timestamp.\n@return The actual unlocking date (might be up to 2 weeks shorter than intended).\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "timestampToLockDate",
            "parameters": {
              "id": 16481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16480,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 16485,
                  "src": "12133:17:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16479,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12133:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12132:19:62"
            },
            "returnParameters": {
              "id": 16484,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16483,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16485,
                  "src": "12175:7:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16482,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12175:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12174:9:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16490,
            "nodeType": "FunctionDefinition",
            "src": "12372:78:62",
            "nodes": [],
            "documentation": "@notice The maximum duration to stake tokens\n @return MAX_DURATION to stake tokens",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStorageMaxDurationToStakeTokens",
            "parameters": {
              "id": 16486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12415:2:62"
            },
            "returnParameters": {
              "id": 16489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16488,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16490,
                  "src": "12441:7:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16487,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12441:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12440:9:62"
            },
            "scope": 16882,
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16495,
            "nodeType": "FunctionDefinition",
            "src": "12611:69:62",
            "nodes": [],
            "documentation": "@notice The maximum possible voting weight before adding +1 (actually 10, but need 9 for computation).\n @return uint256(MAX_VOTING_WEIGHT);",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStorageMaxVotingWeight",
            "parameters": {
              "id": 16491,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12645:2:62"
            },
            "returnParameters": {
              "id": 16494,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16493,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16495,
                  "src": "12671:7:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16492,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12671:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12670:9:62"
            },
            "scope": 16882,
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16500,
            "nodeType": "FunctionDefinition",
            "src": "12933:66:62",
            "nodes": [],
            "documentation": "@notice weight is multiplied with this factor (for allowing decimals, like 1.2x).\n @dev MAX_VOTING_WEIGHT * WEIGHT_FACTOR needs to be < 792, because there are 100,000,000 SOV with 18 decimals\n @return uint256(WEIGHT_FACTOR);",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStorageWeightFactor",
            "parameters": {
              "id": 16496,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12964:2:62"
            },
            "returnParameters": {
              "id": 16499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16498,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16500,
                  "src": "12990:7:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16497,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12990:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12989:9:62"
            },
            "scope": 16882,
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16505,
            "nodeType": "FunctionDefinition",
            "src": "13054:74:62",
            "nodes": [],
            "documentation": "@return uint256(DEFAULT_WEIGHT_SCALING);",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStorageDefaultWeightScaling",
            "parameters": {
              "id": 16501,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13093:2:62"
            },
            "returnParameters": {
              "id": 16504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16503,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16505,
                  "src": "13119:7:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16502,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13119:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13118:9:62"
            },
            "scope": 16882,
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16512,
            "nodeType": "FunctionDefinition",
            "src": "13216:142:62",
            "nodes": [],
            "documentation": "@notice return (uint256(MIN_WEIGHT_SCALING), uint256(MAX_WEIGHT_SCALING))",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStorageRangeForWeightScaling",
            "parameters": {
              "id": 16506,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13256:2:62"
            },
            "returnParameters": {
              "id": 16511,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16508,
                  "name": "minWeightScaling",
                  "nodeType": "VariableDeclaration",
                  "scope": 16512,
                  "src": "13306:24:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16507,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13306:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16510,
                  "name": "maxWeightScaling",
                  "nodeType": "VariableDeclaration",
                  "scope": 16512,
                  "src": "13332:24:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16509,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13332:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13305:52:62"
            },
            "scope": 16882,
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16517,
            "nodeType": "FunctionDefinition",
            "src": "13470:68:62",
            "nodes": [],
            "documentation": "@notice The EIP-712 typehash for the contract's domain.\n @return uint256(DOMAIN_TYPEHASH);",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStorageDomainTypehash",
            "parameters": {
              "id": 16513,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13503:2:62"
            },
            "returnParameters": {
              "id": 16516,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16515,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16517,
                  "src": "13529:7:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16514,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13529:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13528:9:62"
            },
            "scope": 16882,
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16522,
            "nodeType": "FunctionDefinition",
            "src": "13675:72:62",
            "nodes": [],
            "documentation": "@notice The EIP-712 typehash for the delegation struct used by the contract.\n @return uint256(DELEGATION_TYPEHASH);",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStorageDelegationTypehash",
            "parameters": {
              "id": 16518,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13712:2:62"
            },
            "returnParameters": {
              "id": 16521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16520,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16522,
                  "src": "13738:7:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16519,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13738:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13737:9:62"
            },
            "scope": 16882,
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16527,
            "nodeType": "FunctionDefinition",
            "src": "13775:64:62",
            "nodes": [],
            "documentation": "@return name;",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStorageName",
            "parameters": {
              "id": 16523,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13798:2:62"
            },
            "returnParameters": {
              "id": 16526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16525,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16527,
                  "src": "13824:13:62",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 16524,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13824:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13823:15:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16532,
            "nodeType": "FunctionDefinition",
            "src": "14017:53:62",
            "nodes": [],
            "documentation": "AUTOGENERATED FUNCTIONS FROM THE STAKING STORAGE PUBLIC VARIABLES ///\n @notice The timestamp of contract creation. Base for the staking period calculation.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "kickoffTS",
            "parameters": {
              "id": 16528,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14035:2:62"
            },
            "returnParameters": {
              "id": 16531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16530,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16532,
                  "src": "14061:7:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16529,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14061:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14060:9:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16537,
            "nodeType": "FunctionDefinition",
            "src": "14115:52:62",
            "nodes": [],
            "documentation": "@notice The token to be staked",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "SOVToken",
            "parameters": {
              "id": 16533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14132:2:62"
            },
            "returnParameters": {
              "id": 16536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16535,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16537,
                  "src": "14158:7:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16534,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14158:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14157:9:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16546,
            "nodeType": "FunctionDefinition",
            "src": "14369:92:62",
            "nodes": [],
            "documentation": "@notice Stakers delegated voting power\n @param staker - the delegating address\n @param until - delegated voting\n @return _delegate - voting power delegated to address",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "delegates",
            "parameters": {
              "id": 16542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16539,
                  "name": "staker",
                  "nodeType": "VariableDeclaration",
                  "scope": 16546,
                  "src": "14388:14:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16538,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14388:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16541,
                  "name": "until",
                  "nodeType": "VariableDeclaration",
                  "scope": 16546,
                  "src": "14404:13:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16540,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14404:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14387:31:62"
            },
            "returnParameters": {
              "id": 16545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16544,
                  "name": "_delegate",
                  "nodeType": "VariableDeclaration",
                  "scope": 16546,
                  "src": "14442:17:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16543,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14442:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14441:19:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16551,
            "nodeType": "FunctionDefinition",
            "src": "14599:52:62",
            "nodes": [],
            "documentation": "@notice If this flag is set to true, all tokens are unlocked immediately\n see function unlockAllTokens() for details",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "allUnlocked",
            "parameters": {
              "id": 16547,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14619:2:62"
            },
            "returnParameters": {
              "id": 16550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16549,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16551,
                  "src": "14645:4:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16548,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14645:4:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14644:6:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16556,
            "nodeType": "FunctionDefinition",
            "src": "14760:62:62",
            "nodes": [],
            "documentation": "@notice Used for stake migrations to a new staking contract with a different storage structure",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "newStakingContract",
            "parameters": {
              "id": 16552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14787:2:62"
            },
            "returnParameters": {
              "id": 16555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16554,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16556,
                  "src": "14813:7:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16553,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14813:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14812:9:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16561,
            "nodeType": "StructDefinition",
            "src": "14848:73:62",
            "nodes": [],
            "canonicalName": "IStaking.Checkpoint",
            "members": [
              {
                "constant": false,
                "id": 16558,
                "name": "fromBlock",
                "nodeType": "VariableDeclaration",
                "scope": 16561,
                "src": "14876:16:62",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 16557,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "14876:6:62",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16560,
                "name": "stake",
                "nodeType": "VariableDeclaration",
                "scope": 16561,
                "src": "14902:12:62",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint96",
                  "typeString": "uint96"
                },
                "typeName": {
                  "id": 16559,
                  "name": "uint96",
                  "nodeType": "ElementaryTypeName",
                  "src": "14902:6:62",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Checkpoint",
            "scope": 16882,
            "visibility": "public"
          },
          {
            "id": 16570,
            "nodeType": "FunctionDefinition",
            "src": "15152:127:62",
            "nodes": [],
            "documentation": "@notice A record of tokens to be unstaked at a given time in total.\n For total voting power computation. Voting weights get adjusted bi-weekly.\n @dev totalStakingCheckpoints[date][index] is a checkpoint",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalStakingCheckpoints",
            "parameters": {
              "id": 16566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16563,
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "scope": 16570,
                  "src": "15185:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16562,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15185:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16565,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 16570,
                  "src": "15199:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 16564,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15199:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15184:28:62"
            },
            "returnParameters": {
              "id": 16569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16568,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16570,
                  "src": "15260:17:62",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Checkpoint_$16561_memory_ptr",
                    "typeString": "struct IStaking.Checkpoint"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 16567,
                    "name": "Checkpoint",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 16561,
                    "src": "15260:10:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Checkpoint_$16561_storage_ptr",
                      "typeString": "struct IStaking.Checkpoint"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15259:19:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16577,
            "nodeType": "FunctionDefinition",
            "src": "15415:121:62",
            "nodes": [],
            "documentation": "@notice The number of total staking checkpoints for each date.\n @dev numTotalStakingCheckpoints[date] is a number.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "numTotalStakingCheckpoints",
            "parameters": {
              "id": 16573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16572,
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "scope": 16577,
                  "src": "15451:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16571,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15451:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15450:14:62"
            },
            "returnParameters": {
              "id": 16576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16575,
                  "name": "checkpointsQty",
                  "nodeType": "VariableDeclaration",
                  "scope": 16577,
                  "src": "15512:22:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 16574,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15512:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15511:24:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16588,
            "nodeType": "FunctionDefinition",
            "src": "15819:155:62",
            "nodes": [],
            "documentation": "@notice A record of tokens to be unstaked at a given time which were delegated to a certain address.\n For delegatee voting power computation. Voting weights get adjusted bi-weekly.\n @dev delegateStakingCheckpoints[delegatee][date][index] is a checkpoint.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "delegateStakingCheckpoints",
            "parameters": {
              "id": 16584,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16579,
                  "name": "delagatee",
                  "nodeType": "VariableDeclaration",
                  "scope": 16588,
                  "src": "15864:17:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16578,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15864:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16581,
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "scope": 16588,
                  "src": "15891:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16580,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15891:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16583,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 16588,
                  "src": "15913:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 16582,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15913:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15854:77:62"
            },
            "returnParameters": {
              "id": 16587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16586,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16588,
                  "src": "15955:17:62",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Checkpoint_$16561_memory_ptr",
                    "typeString": "struct IStaking.Checkpoint"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 16585,
                    "name": "Checkpoint",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 16561,
                    "src": "15955:10:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Checkpoint_$16561_storage_ptr",
                      "typeString": "struct IStaking.Checkpoint"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15954:19:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16597,
            "nodeType": "FunctionDefinition",
            "src": "16137:143:62",
            "nodes": [],
            "documentation": "@notice The number of total staking checkpoints for each date per delegate.\n @dev numDelegateStakingCheckpoints[delegatee][date] is a number.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "numDelegateStakingCheckpoints",
            "parameters": {
              "id": 16593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16590,
                  "name": "delegatee",
                  "nodeType": "VariableDeclaration",
                  "scope": 16597,
                  "src": "16176:17:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16589,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16176:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16592,
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "scope": 16597,
                  "src": "16195:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16591,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16195:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16175:33:62"
            },
            "returnParameters": {
              "id": 16596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16595,
                  "name": "checkpointsQty",
                  "nodeType": "VariableDeclaration",
                  "scope": 16597,
                  "src": "16256:22:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 16594,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16256:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16255:24:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16608,
            "nodeType": "FunctionDefinition",
            "src": "16489:146:62",
            "nodes": [],
            "documentation": "@notice A record of tokens to be unstaked at a given time which per user address (address -> lockDate -> stake checkpoint)\n @dev userStakingCheckpoints[user][date][index] is a checkpoint.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "userStakingCheckpoints",
            "parameters": {
              "id": 16604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16599,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 16608,
                  "src": "16530:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16598,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16530:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16601,
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "scope": 16608,
                  "src": "16552:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16600,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16552:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16603,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 16608,
                  "src": "16574:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 16602,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16574:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16520:72:62"
            },
            "returnParameters": {
              "id": 16607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16606,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16608,
                  "src": "16616:17:62",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Checkpoint_$16561_memory_ptr",
                    "typeString": "struct IStaking.Checkpoint"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 16605,
                    "name": "Checkpoint",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 16561,
                    "src": "16616:10:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Checkpoint_$16561_storage_ptr",
                      "typeString": "struct IStaking.Checkpoint"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16615:19:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16617,
            "nodeType": "FunctionDefinition",
            "src": "16784:133:62",
            "nodes": [],
            "documentation": "@notice The number of total staking checkpoints for each date per user.\n @dev numUserStakingCheckpoints[user][date] is a number",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "numUserStakingCheckpoints",
            "parameters": {
              "id": 16613,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16610,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 16617,
                  "src": "16819:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16609,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16819:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16612,
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "scope": 16617,
                  "src": "16833:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16611,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16833:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16818:28:62"
            },
            "returnParameters": {
              "id": 16616,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16615,
                  "name": "checkpointsQty",
                  "nodeType": "VariableDeclaration",
                  "scope": 16617,
                  "src": "16894:21:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 16614,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16894:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16893:23:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16624,
            "nodeType": "FunctionDefinition",
            "src": "17033:68:62",
            "nodes": [],
            "documentation": "@notice A record of states for signing / validating signatures\n @dev nonces[user] is a number.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "nonces",
            "parameters": {
              "id": 16620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16619,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 16624,
                  "src": "17049:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16618,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17049:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17048:14:62"
            },
            "returnParameters": {
              "id": 16623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16622,
                  "name": "nonce",
                  "nodeType": "VariableDeclaration",
                  "scope": 16624,
                  "src": "17086:13:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16621,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17086:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17085:15:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16629,
            "nodeType": "FunctionDefinition",
            "src": "17235:54:62",
            "nodes": [],
            "documentation": "SLASHING ///\n @notice the address of FeeSharingCollectorProxy contract, we need it for unstaking with slashing.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "feeSharing",
            "parameters": {
              "id": 16625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17254:2:62"
            },
            "returnParameters": {
              "id": 16628,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16627,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16629,
                  "src": "17280:7:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16626,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17280:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17279:9:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16634,
            "nodeType": "FunctionDefinition",
            "src": "17411:56:62",
            "nodes": [],
            "documentation": "@notice used for weight scaling when unstaking with slashing.\n @return uint96 DEFAULT_WEIGHT_SCALING",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "weightScaling",
            "parameters": {
              "id": 16630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17433:2:62"
            },
            "returnParameters": {
              "id": 16633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16632,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16634,
                  "src": "17459:6:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 16631,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "17459:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17458:8:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16641,
            "nodeType": "FunctionDefinition",
            "src": "17642:78:62",
            "nodes": [],
            "documentation": "@notice List of vesting contracts, tokens for these contracts won't be slashed if unstaked by governance.\n @dev vestingWhitelist[contract] is true/false.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "vestingWhitelist",
            "parameters": {
              "id": 16637,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16636,
                  "name": "isWhitelisted",
                  "nodeType": "VariableDeclaration",
                  "scope": 16641,
                  "src": "17668:21:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16635,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17668:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17667:23:62"
            },
            "returnParameters": {
              "id": 16640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16639,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16641,
                  "src": "17714:4:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16638,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17714:4:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17713:6:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16648,
            "nodeType": "FunctionDefinition",
            "src": "17943:62:62",
            "nodes": [],
            "documentation": "@dev user => flag whether user has admin role.\n @dev multisig should be an admin, admin can invoke only governanceWithdrawVesting function,\n \tthis function works only with Team Vesting contracts",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "admins",
            "parameters": {
              "id": 16644,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16643,
                  "name": "isAdmin",
                  "nodeType": "VariableDeclaration",
                  "scope": 16648,
                  "src": "17959:15:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16642,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17959:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17958:17:62"
            },
            "returnParameters": {
              "id": 16647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16646,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16648,
                  "src": "17999:4:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16645,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17999:4:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17998:6:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16655,
            "nodeType": "FunctionDefinition",
            "src": "18093:86:62",
            "nodes": [],
            "documentation": "@dev vesting contract code hash => flag whether it's registered code hash",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "vestingCodeHashes",
            "parameters": {
              "id": 16651,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16650,
                  "name": "vestingLogicCodeHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 16655,
                  "src": "18120:28:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 16649,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "18120:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18119:30:62"
            },
            "returnParameters": {
              "id": 16654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16653,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16655,
                  "src": "18173:4:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16652,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "18173:4:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18172:6:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16664,
            "nodeType": "FunctionDefinition",
            "src": "18365:122:62",
            "nodes": [],
            "documentation": "@notice A record of tokens to be unstaked from vesting contract at a given time (lockDate -> vest checkpoint)\n @dev vestingCheckpoints[date][index] is a checkpoint.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "vestingCheckpoints",
            "parameters": {
              "id": 16660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16657,
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "scope": 16664,
                  "src": "18393:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16656,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18393:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16659,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 16664,
                  "src": "18407:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 16658,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "18407:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18392:28:62"
            },
            "returnParameters": {
              "id": 16663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16662,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16664,
                  "src": "18468:17:62",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Checkpoint_$16561_memory_ptr",
                    "typeString": "struct IStaking.Checkpoint"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 16661,
                    "name": "Checkpoint",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 16561,
                    "src": "18468:10:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Checkpoint_$16561_storage_ptr",
                      "typeString": "struct IStaking.Checkpoint"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18467:19:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16671,
            "nodeType": "FunctionDefinition",
            "src": "18618:91:62",
            "nodes": [],
            "documentation": "@notice The number of total vesting checkpoints for each date.\n @dev numVestingCheckpoints[date] is a number.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "numVestingCheckpoints",
            "parameters": {
              "id": 16667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16666,
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "scope": 16671,
                  "src": "18649:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16665,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18649:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18648:14:62"
            },
            "returnParameters": {
              "id": 16670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16669,
                  "name": "checkpointsQty",
                  "nodeType": "VariableDeclaration",
                  "scope": 16671,
                  "src": "18686:21:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 16668,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "18686:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18685:23:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16676,
            "nodeType": "FunctionDefinition",
            "src": "18770:64:62",
            "nodes": [],
            "documentation": "@notice vesting registry contract PROXY address",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "vestingRegistryLogic",
            "parameters": {
              "id": 16672,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18799:2:62"
            },
            "returnParameters": {
              "id": 16675,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16674,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16676,
                  "src": "18825:7:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16673,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18825:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18824:9:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16683,
            "nodeType": "FunctionDefinition",
            "src": "18896:64:62",
            "nodes": [],
            "documentation": "@dev user => flag whether user has pauser role.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pausers",
            "parameters": {
              "id": 16679,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16678,
                  "name": "isPauser",
                  "nodeType": "VariableDeclaration",
                  "scope": 16683,
                  "src": "18913:16:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16677,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18913:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18912:18:62"
            },
            "returnParameters": {
              "id": 16682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16681,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16683,
                  "src": "18954:4:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16680,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "18954:4:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18953:6:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16688,
            "nodeType": "FunctionDefinition",
            "src": "19006:47:62",
            "nodes": [],
            "documentation": "@dev Staking contract is paused",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "paused",
            "parameters": {
              "id": 16684,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19021:2:62"
            },
            "returnParameters": {
              "id": 16687,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16686,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16688,
                  "src": "19047:4:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16685,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "19047:4:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19046:6:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16693,
            "nodeType": "FunctionDefinition",
            "src": "19099:47:62",
            "nodes": [],
            "documentation": "@dev Staking contract is frozen",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "frozen",
            "parameters": {
              "id": 16689,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19114:2:62"
            },
            "returnParameters": {
              "id": 16692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16691,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16693,
                  "src": "19140:4:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16690,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "19140:4:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19139:6:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16699,
            "nodeType": "EventDefinition",
            "src": "19236:54:62",
            "nodes": [],
            "anonymous": false,
            "documentation": "************************* StakingVestingModule **************************",
            "name": "VestingStakeSet",
            "parameters": {
              "id": 16698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16695,
                  "indexed": false,
                  "name": "lockedTS",
                  "nodeType": "VariableDeclaration",
                  "scope": 16699,
                  "src": "19258:16:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16694,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19258:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16697,
                  "indexed": false,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 16699,
                  "src": "19276:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 16696,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "19276:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19257:32:62"
            }
          },
          {
            "id": 16706,
            "nodeType": "FunctionDefinition",
            "src": "19448:79:62",
            "nodes": [],
            "documentation": "@notice Return flag whether the given address is a registered vesting contract.\n@param stakerAddress the address to check",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isVestingContract",
            "parameters": {
              "id": 16702,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16701,
                  "name": "stakerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 16706,
                  "src": "19475:21:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16700,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19475:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19474:23:62"
            },
            "returnParameters": {
              "id": 16705,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16704,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16706,
                  "src": "19521:4:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16703,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "19521:4:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19520:6:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16711,
            "nodeType": "FunctionDefinition",
            "src": "19763:58:62",
            "nodes": [],
            "documentation": "@notice Remove vesting contract's code hash to a map of code hashes.\n@param vesting The address of Vesting contract.\n@dev We need it to use isVestingContract() function instead of isContract()",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeContractCodeHash",
            "parameters": {
              "id": 16709,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16708,
                  "name": "vesting",
                  "nodeType": "VariableDeclaration",
                  "scope": 16711,
                  "src": "19795:15:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16707,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19795:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19794:17:62"
            },
            "returnParameters": {
              "id": 16710,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19820:0:62"
            },
            "scope": 16882,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16716,
            "nodeType": "FunctionDefinition",
            "src": "20054:55:62",
            "nodes": [],
            "documentation": "@notice Add vesting contract's code hash to a map of code hashes.\n@param vesting The address of Vesting contract.\n@dev We need it to use isVestingContract() function instead of isContract()",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addContractCodeHash",
            "parameters": {
              "id": 16714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16713,
                  "name": "vesting",
                  "nodeType": "VariableDeclaration",
                  "scope": 16716,
                  "src": "20083:15:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16712,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20083:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "20082:17:62"
            },
            "returnParameters": {
              "id": 16715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20108:0:62"
            },
            "scope": 16882,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16725,
            "nodeType": "FunctionDefinition",
            "src": "20559:126:62",
            "nodes": [],
            "documentation": "@notice Determine the prior number of vested stake for an account until a\ncertain lock date as of a block number.\n@dev Block number must be a finalized block or else this function\nwill revert to prevent misinformation.\n@param date The lock date.\n@param blockNumber The block number to get the vote balance at.\n@return The number of votes the account had as of the given block.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPriorVestingStakeByDate",
            "parameters": {
              "id": 16721,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16718,
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "scope": 16725,
                  "src": "20595:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16717,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20595:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16720,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 16725,
                  "src": "20609:19:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16719,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20609:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "20594:35:62"
            },
            "returnParameters": {
              "id": 16724,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16723,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16725,
                  "src": "20677:6:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 16722,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "20677:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "20676:8:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16736,
            "nodeType": "FunctionDefinition",
            "src": "21102:157:62",
            "nodes": [],
            "documentation": "@notice Compute the voting power for a specific date.\nPower = stake * weight\n@param date The staking date to compute the power for. Adjusted to the next valid lock date, if necessary.\n@param startDate The date for which we need to know the power of the stake.\n@param blockNumber The block number, needed for checkpointing.\n@return The stacking power.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "weightedVestingStakeByDate",
            "parameters": {
              "id": 16732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16727,
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "scope": 16736,
                  "src": "21147:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16726,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21147:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16729,
                  "name": "startDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 16736,
                  "src": "21169:17:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16728,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21169:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16731,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 16736,
                  "src": "21196:19:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16730,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21196:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "21137:84:62"
            },
            "returnParameters": {
              "id": 16735,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16734,
                  "name": "power",
                  "nodeType": "VariableDeclaration",
                  "scope": 16736,
                  "src": "21245:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 16733,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "21245:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "21244:14:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16745,
            "nodeType": "FunctionDefinition",
            "src": "21969:134:62",
            "nodes": [],
            "documentation": "@notice Determine the prior weighted vested amount for an account as of a block number.\nIterate through checkpoints adding up voting power.\n@dev Block number must be a finalized block or else this function will\nrevert to prevent misinformation.\n     Used for fee sharing, not voting.\nTODO: WeightedStaking::getPriorVestingWeightedStake is using the variable name \"votes\"\nto add up token stake, and that could be misleading.\n     * @param blockNumber The block number to get the vote balance at.\n@param date The staking date to compute the power for.\n@return The weighted stake the account had as of the given block.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPriorVestingWeightedStake",
            "parameters": {
              "id": 16741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16738,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 16745,
                  "src": "22007:19:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16737,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22007:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16740,
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "scope": 16745,
                  "src": "22028:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16739,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22028:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22006:35:62"
            },
            "returnParameters": {
              "id": 16744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16743,
                  "name": "votes",
                  "nodeType": "VariableDeclaration",
                  "scope": 16745,
                  "src": "22089:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 16742,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "22089:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22088:14:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16756,
            "nodeType": "FunctionDefinition",
            "src": "22605:146:62",
            "nodes": [],
            "documentation": "@notice Determine the prior number of stake for an account until a\ncertain lock date as of a block number.\n@dev Block number must be a finalized block or else this function\nwill revert to prevent misinformation.\n@param account The address of the account to check.\n@param date The lock date.\n@param blockNumber The block number to get the vote balance at.\n@return The number of votes the account had as of the given block.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPriorUserStakeByDate",
            "parameters": {
              "id": 16752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16747,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 16756,
                  "src": "22647:15:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16746,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22647:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16749,
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "scope": 16756,
                  "src": "22672:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16748,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22672:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16751,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 16756,
                  "src": "22694:19:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16750,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22694:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22637:82:62"
            },
            "returnParameters": {
              "id": 16755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16754,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16756,
                  "src": "22743:6:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 16753,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "22743:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22742:8:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16765,
            "nodeType": "FunctionDefinition",
            "src": "22990:93:62",
            "nodes": [],
            "documentation": "@notice Sets the users' vesting stakes for a giving lock dates and writes checkpoints.\n@param lockedDates The arrays of lock dates.\n@param values The array of values to add to the staked balance.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setVestingStakes",
            "parameters": {
              "id": 16763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16759,
                  "name": "lockedDates",
                  "nodeType": "VariableDeclaration",
                  "scope": 16765,
                  "src": "23016:30:62",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16757,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "23016:7:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 16758,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "23016:9:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16762,
                  "name": "values",
                  "nodeType": "VariableDeclaration",
                  "scope": 16765,
                  "src": "23048:24:62",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint96_$dyn_calldata_ptr",
                    "typeString": "uint96[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16760,
                      "name": "uint96",
                      "nodeType": "ElementaryTypeName",
                      "src": "23048:6:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "id": 16761,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "23048:8:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint96_$dyn_storage_ptr",
                      "typeString": "uint96[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "23015:58:62"
            },
            "returnParameters": {
              "id": 16764,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23082:0:62"
            },
            "scope": 16882,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16770,
            "nodeType": "FunctionDefinition",
            "src": "23404:68:62",
            "nodes": [],
            "documentation": "@notice sets vesting registry\n@param _vestingRegistryProxy the address of vesting registry proxy contract\n@dev _vestingRegistryProxy can be set to 0 as this function can be reused by\nvarious other functionalities without the necessity of linking it with Vesting Registry",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setVestingRegistry",
            "parameters": {
              "id": 16768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16767,
                  "name": "_vestingRegistryProxy",
                  "nodeType": "VariableDeclaration",
                  "scope": 16770,
                  "src": "23432:29:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16766,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23432:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "23431:31:62"
            },
            "returnParameters": {
              "id": 16769,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23471:0:62"
            },
            "scope": 16882,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16779,
            "nodeType": "FunctionDefinition",
            "src": "23866:105:62",
            "nodes": [],
            "documentation": "@notice Withdraw the given amount of tokens if they are unlocked.\n@param amount The number of tokens to withdraw.\n@param until The date until which the tokens were staked.\n@param receiver The receiver of the tokens. If not specified, send to the msg.sender\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "parameters": {
              "id": 16777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16772,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 16779,
                  "src": "23893:13:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 16771,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "23893:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16774,
                  "name": "until",
                  "nodeType": "VariableDeclaration",
                  "scope": 16779,
                  "src": "23916:13:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16773,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23916:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16776,
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 16779,
                  "src": "23939:16:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23939:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "23883:78:62"
            },
            "returnParameters": {
              "id": 16778,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23970:0:62"
            },
            "scope": 16882,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16788,
            "nodeType": "FunctionDefinition",
            "src": "24536:115:62",
            "nodes": [],
            "documentation": "@notice Withdraw the given amount of tokens.\n@param amount The number of tokens to withdraw.\n@param until The date until which the tokens were staked.\n@param receiver The receiver of the tokens. If not specified, send to the msg.sender\n@dev Can be invoked only by whitelisted contract passed to governanceWithdrawVesting\n@dev **WARNING** This function should not be no longer used by Sovryn Protocol.\nSovryn protocol will use the cancelTeamVesting function for the withdrawal moving forward.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "governanceWithdraw",
            "parameters": {
              "id": 16786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16781,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 16788,
                  "src": "24573:13:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 16780,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "24573:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16783,
                  "name": "until",
                  "nodeType": "VariableDeclaration",
                  "scope": 16788,
                  "src": "24596:13:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16782,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24596:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16785,
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 16788,
                  "src": "24619:16:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16784,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24619:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "24563:78:62"
            },
            "returnParameters": {
              "id": 16787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24650:0:62"
            },
            "scope": 16882,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16795,
            "nodeType": "FunctionDefinition",
            "src": "24968:79:62",
            "nodes": [],
            "documentation": "@notice Withdraw tokens for vesting contract.\n@param vesting The address of Vesting contract.\n@param receiver The receiver of the tokens. If not specified, send to the msg.sender\n@dev Can be invoked only by whitelisted contract passed to governanceWithdrawVesting.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "governanceWithdrawVesting",
            "parameters": {
              "id": 16793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16790,
                  "name": "vesting",
                  "nodeType": "VariableDeclaration",
                  "scope": 16795,
                  "src": "25003:15:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16789,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25003:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16792,
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 16795,
                  "src": "25020:16:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16791,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25020:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25002:35:62"
            },
            "returnParameters": {
              "id": 16794,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25046:0:62"
            },
            "scope": 16882,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16806,
            "nodeType": "FunctionDefinition",
            "src": "25257:121:62",
            "nodes": [],
            "documentation": "@notice Get available and punished amount for withdrawing.\n@param amount The number of tokens to withdraw.\n@param until The date until which the tokens were staked.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getWithdrawAmounts",
            "parameters": {
              "id": 16800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16797,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 16806,
                  "src": "25285:13:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 16796,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "25285:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16799,
                  "name": "until",
                  "nodeType": "VariableDeclaration",
                  "scope": 16806,
                  "src": "25300:13:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16798,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25300:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25284:30:62"
            },
            "returnParameters": {
              "id": 16805,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16802,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16806,
                  "src": "25362:6:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 16801,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "25362:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16804,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16806,
                  "src": "25370:6:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 16803,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "25370:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25361:16:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16809,
            "nodeType": "FunctionDefinition",
            "src": "25727:36:62",
            "nodes": [],
            "documentation": "@notice Allow the owner to unlock all tokens in case the staking contract\nis going to be replaced\nNote: Not reversible on purpose. once unlocked, everything is unlocked.\nThe owner should not be able to just quickly unlock to withdraw his own\ntokens and lock again.\n@dev Last resort.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "unlockAllTokens",
            "parameters": {
              "id": 16807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25751:2:62"
            },
            "returnParameters": {
              "id": 16808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25762:0:62"
            },
            "scope": 16882,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16820,
            "nodeType": "FunctionDefinition",
            "src": "26454:163:62",
            "nodes": [],
            "documentation": "@notice Determine the prior weighted stake for an account as of a block number.\nIterate through checkpoints adding up voting power.\n@dev Block number must be a finalized block or else this function will\nrevert to prevent misinformation.\n     Used for fee sharing, not voting.\n     * @param account The address of the account to check.\n@param blockNumber The block number to get the vote balance at.\n@param date The date/timestamp of the unstaking time.\n@return The weighted stake the account had as of the given block.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPriorWeightedStake",
            "parameters": {
              "id": 16816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16811,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 16820,
                  "src": "26494:15:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16810,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "26494:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16813,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 16820,
                  "src": "26519:19:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16812,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26519:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16815,
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "scope": 16820,
                  "src": "26548:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16814,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26548:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26484:82:62"
            },
            "returnParameters": {
              "id": 16819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16818,
                  "name": "priorWeightedStake",
                  "nodeType": "VariableDeclaration",
                  "scope": 16820,
                  "src": "26590:25:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 16817,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "26590:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26589:27:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16833,
            "nodeType": "FunctionDefinition",
            "src": "27144:175:62",
            "nodes": [],
            "documentation": "@notice Compute the voting power for a specific date.\nPower = stake * weight\nTODO: WeightedStaking::weightedStakeByDate should probably better\nbe internal instead of a public function.\n@param account The user address.\n@param date The staking date to compute the power for.\n@param startDate The date for which we need to know the power of the stake.\n@param blockNumber The block number, needed for checkpointing.\n@return The stacking power.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "weightedStakeByDate",
            "parameters": {
              "id": 16829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16822,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 16833,
                  "src": "27182:15:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16821,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "27182:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16824,
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "scope": 16833,
                  "src": "27207:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16823,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27207:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16826,
                  "name": "startDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 16833,
                  "src": "27229:17:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16825,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27229:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16828,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 16833,
                  "src": "27256:19:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16827,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27256:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "27172:109:62"
            },
            "returnParameters": {
              "id": 16832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16831,
                  "name": "power",
                  "nodeType": "VariableDeclaration",
                  "scope": 16833,
                  "src": "27305:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 16830,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "27305:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "27304:14:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16842,
            "nodeType": "FunctionDefinition",
            "src": "27607:124:62",
            "nodes": [],
            "documentation": "@notice Compute the weight for a specific date.\n@param date The unlocking date.\n@param startDate We compute the weight for the tokens staked until 'date' on 'startDate'.\n@return The weighted stake the account had as of the given block.\n",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "computeWeightByDate",
            "parameters": {
              "id": 16838,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16835,
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "scope": 16842,
                  "src": "27636:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16834,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27636:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16837,
                  "name": "startDate",
                  "nodeType": "VariableDeclaration",
                  "scope": 16842,
                  "src": "27650:17:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16836,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27650:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "27635:33:62"
            },
            "returnParameters": {
              "id": 16841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16840,
                  "name": "weight",
                  "nodeType": "VariableDeclaration",
                  "scope": 16842,
                  "src": "27716:13:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 16839,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "27716:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "27715:15:62"
            },
            "scope": 16882,
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16847,
            "nodeType": "FunctionDefinition",
            "src": "27946:56:62",
            "nodes": [],
            "documentation": "@notice Returns public constant MAX_DURATION\npreserved for backwards compatibility\nUse getStorageMaxDurationToStakeTokens()\n@return uint96 MAX_DURATION for staking*",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "MAX_DURATION",
            "parameters": {
              "id": 16843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27967:2:62"
            },
            "returnParameters": {
              "id": 16846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16845,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16847,
                  "src": "27993:7:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16844,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27993:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "27992:9:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16852,
            "nodeType": "FunctionDefinition",
            "src": "28078:49:62",
            "nodes": [],
            "documentation": "@dev Returns the address of the current owner.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "owner",
            "parameters": {
              "id": 16848,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28092:2:62"
            },
            "returnParameters": {
              "id": 16851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16850,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16852,
                  "src": "28118:7:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16849,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28118:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "28117:9:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16857,
            "nodeType": "FunctionDefinition",
            "src": "28210:48:62",
            "nodes": [],
            "documentation": "@dev Returns true if the caller is the current owner.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isOwner",
            "parameters": {
              "id": 16853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28226:2:62"
            },
            "returnParameters": {
              "id": 16856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16855,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16857,
                  "src": "28252:4:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16854,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "28252:4:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "28251:6:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16862,
            "nodeType": "FunctionDefinition",
            "src": "28407:54:62",
            "nodes": [],
            "documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnership",
            "parameters": {
              "id": 16860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16859,
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 16862,
                  "src": "28434:16:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16858,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28434:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "28433:18:62"
            },
            "returnParameters": {
              "id": 16861,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28460:0:62"
            },
            "scope": 16882,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16871,
            "nodeType": "FunctionDefinition",
            "src": "28920:120:62",
            "nodes": [],
            "documentation": "@notice Governance withdraw vesting directly through staking contract.\nThis direct withdraw vesting solves the out of gas issue when there are too many iterations when withdrawing.\nThis function only allows cancelling vesting contract of the TeamVesting type.\n     * @param vesting The vesting address.\n@param receiver The receiving address.\n@param startFrom The start value for the iterations.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "cancelTeamVesting",
            "parameters": {
              "id": 16869,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16864,
                  "name": "vesting",
                  "nodeType": "VariableDeclaration",
                  "scope": 16871,
                  "src": "28956:15:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16863,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28956:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16866,
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 16871,
                  "src": "28981:16:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16865,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28981:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16868,
                  "name": "startFrom",
                  "nodeType": "VariableDeclaration",
                  "scope": 16871,
                  "src": "29007:17:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16867,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29007:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "28946:84:62"
            },
            "returnParameters": {
              "id": 16870,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29039:0:62"
            },
            "scope": 16882,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16876,
            "nodeType": "FunctionDefinition",
            "src": "29198:75:62",
            "nodes": [],
            "documentation": "@notice Max iteration for direct withdrawal from staking to prevent out of gas issue.\n     * @return max iteration value.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getMaxVestingWithdrawIterations",
            "parameters": {
              "id": 16872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29238:2:62"
            },
            "returnParameters": {
              "id": 16875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16874,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16876,
                  "src": "29264:7:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16873,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29264:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "29263:9:62"
            },
            "scope": 16882,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "id": 16881,
            "nodeType": "FunctionDefinition",
            "src": "29397:73:62",
            "nodes": [],
            "documentation": "@dev set max withdraw iterations.\n     * @param maxIterations new max iterations value.",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setMaxVestingWithdrawIterations",
            "parameters": {
              "id": 16879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16878,
                  "name": "maxIterations",
                  "nodeType": "VariableDeclaration",
                  "scope": 16881,
                  "src": "29438:21:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16877,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29438:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "29437:23:62"
            },
            "returnParameters": {
              "id": 16880,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29469:0:62"
            },
            "scope": 16882,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@title Interface for Staking modules governance/Staking/modules",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          16882
        ],
        "name": "IStaking",
        "scope": 16883
      }
    ]
  },
  "id": 62
}