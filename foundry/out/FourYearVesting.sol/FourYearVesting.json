{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_logic",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_SOV",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_stakingAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_feeSharingCollector",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_extendDurationFor",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_oldImplementation",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_newImplementation",
          "type": "address"
        }
      ],
      "name": "ImplementationChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_oldOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "FOUR_WEEKS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "SOV",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cliff",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cliffAdded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "duration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "durationLeft",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "endDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "extendDurationFor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "feeSharingCollector",
      "outputs": [
        {
          "internalType": "contract IFeeSharingCollector",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "_implementation",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getProxyOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lastStakingSchedule",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxInterval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "newImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "newTokenOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "remainingStakeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_implementation",
          "type": "address"
        }
      ],
      "name": "setImplementation",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "setProxyOwner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "staking",
      "outputs": [
        {
          "internalType": "contract IStaking",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "startDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040516200150838038062001508833981016040819052620000349162000459565b6000620000496001600160e01b03620002b116565b600080546001600160a01b0319166001600160a01b038316908117825560405192935091600080516020620014e8833981519152908290a35062000096336001600160e01b03620002b516565b620000ac866200033f60201b6200068e1760201c565b620000d45760405162461bcd60e51b8152600401620000cb9062000818565b60405180910390fd5b6001600160a01b038516620000fd5760405162461bcd60e51b8152600401620000cb90620008cc565b62000113856200033f60201b6200068e1760201c565b620001325760405162461bcd60e51b8152600401620000cb9062000884565b6001600160a01b0384166200015b5760405162461bcd60e51b8152600401620000cb90620008a8565b62000171846200033f60201b6200068e1760201c565b620001905760405162461bcd60e51b8152600401620000cb906200084e565b6001600160a01b038316620001b95760405162461bcd60e51b8152600401620000cb906200082a565b6001600160a01b038216620001e25760405162461bcd60e51b8152600401620000cb9062000872565b620001f8826200033f60201b6200068e1760201c565b620002175760405162461bcd60e51b8152600401620000cb90620008ba565b6224ea008106156200023d5760405162461bcd60e51b8152600401620000cb9062000860565b62000251866001600160e01b036200037c16565b600180546001600160a01b03199081166001600160a01b039788161790915560028054821695871695909517909455600380548516938616939093179092556004805490931693169290921790556302987400600755600e555062000926565b3390565b6001600160a01b038116620002de5760405162461bcd60e51b8152600401620000cb9062000896565b6001600160a01b038116620002fb6001600160e01b036200040716565b6001600160a01b0316600080516020620014e883398151915260405160405180910390a360006040516200032f906200080b565b6040519081900390209190915550565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906200037457508115155b949350505050565b6001600160a01b038116620003a55760405162461bcd60e51b8152600401620000cb906200083c565b6001600160a01b038116620003c26001600160e01b036200042816565b6001600160a01b03167fcfbf4028add9318bbf716f08c348595afb063b0e9feed1f86d33681a4b3ed4d360405160405180910390a360006040516200032f90620007fe565b60008060405162000418906200080b565b6040519081900390205492915050565b6000806040516200041890620007fe565b8051620004468162000901565b92915050565b805162000446816200091b565b60008060008060008060c087890312156200047357600080fd5b600062000481898962000439565b96505060206200049489828a0162000439565b9550506040620004a789828a0162000439565b9450506060620004ba89828a0162000439565b9350506080620004cd89828a0162000439565b92505060a0620004e089828a016200044c565b9150509295509295509295565b6000620004fc601583620008de565b7f5f6c6f676963206e6f74206120636f6e74726163740000000000000000000000815260200192915050565b600062000537601b83620008de565b7f746f6b656e206f776e6572206164647265737320696e76616c69640000000000815260200192915050565b600062000572602983620008de565b7f50726f78793a3a736574496d706c656d656e746174696f6e3a20696e76616c6981526864206164647265737360b81b602082015260400192915050565b6000620005bf601e83620008de565b7f5f7374616b696e6741646472657373206e6f74206120636f6e74726163740000815260200192915050565b6000620005fa601283620008e7565b7135b2bc9734b6b83632b6b2b73a30ba34b7b760711b815260120192915050565b60006200062a601083620008de565b6f34b73b30b634b210323ab930ba34b7b760811b815260200192915050565b600062000658602383620008de565b7f66656553686172696e67436f6c6c6563746f72206164647265737320696e76618152621b1a5960ea1b602082015260400192915050565b60006200069f601383620008de565b7f5f534f56206e6f74206120636f6e747261637400000000000000000000000000815260200192915050565b6000620006da600f83620008e7565b6e35b2bc97383937bc3c9737bbb732b960891b8152600f0192915050565b600062000707602583620008de565b7f50726f78793a3a73657450726f78794f776e65723a20696e76616c6964206164815264647265737360d81b602082015260400192915050565b600062000750601783620008de565b7f7374616b696e67206164647265737320696e76616c6964000000000000000000815260200192915050565b60006200078b602383620008de565b7f5f66656553686172696e67436f6c6c6563746f72206e6f74206120636f6e74728152621858dd60ea1b602082015260400192915050565b6000620007d2601383620008de565b7f534f56206164647265737320696e76616c696400000000000000000000000000815260200192915050565b60006200044682620005eb565b60006200044682620006cb565b602080825281016200044681620004ed565b60208082528101620004468162000528565b60208082528101620004468162000563565b602080825281016200044681620005b0565b6020808252810162000446816200061b565b60208082528101620004468162000649565b60208082528101620004468162000690565b602080825281016200044681620006f8565b60208082528101620004468162000741565b6020808252810162000446816200077c565b602080825281016200044681620007c3565b90815260200190565b919050565b60006001600160a01b03821662000446565b90565b6200090c81620008ec565b81146200091857600080fd5b50565b6200090c81620008fe565b610bb280620009366000396000f3fe60806040526004361061014b5760003560e01c80638f32d59b116100b6578063cae774b31161006f578063cae774b31461036f578063d0e60a6a14610384578063d38bd9f014610399578063d784d426146103ae578063f2fde38b146103ce578063f6d6189e1461020d5761014b565b80638f32d59b146102d7578063a3e67610146102f9578063aaf10f421461030e578063b06a470c14610323578063c24a0f8b14610338578063caaee91c1461034d5761014b565b806341c632a61161010857806341c632a6146102595780634cf088d91461026e578063533a386c146102835780636b7dbb2d146102985780638b677b03146102ad5780638da5cb5b146102c25761014b565b806308dcb360146101ab5780630b97bc86146101d65780630fb5a6b4146101f857806313d033c01461020d5780631ab7710d146102225780633c4efe0114610244575b60006101556103ee565b90506001600160a01b0381166101865760405162461bcd60e51b815260040161017d90610ae5565b60405180910390fd5b60405136600082376000803683855af43d806000843e8180156101a7578184f35b8184fd5b3480156101b757600080fd5b506101c061040d565b6040516101cd9190610a87565b60405180910390f35b3480156101e257600080fd5b506101eb61041c565b6040516101cd9190610b15565b34801561020457600080fd5b506101eb610422565b34801561021957600080fd5b506101eb61042a565b34801561022e57600080fd5b50610237610431565b6040516101cd9190610a6b565b34801561025057600080fd5b506101eb610440565b34801561026557600080fd5b506101eb610446565b34801561027a57600080fd5b506101c061044c565b34801561028f57600080fd5b506101eb61045b565b3480156102a457600080fd5b506101c0610461565b3480156102b957600080fd5b50610237610470565b3480156102ce57600080fd5b5061023761047f565b3480156102e357600080fd5b506102ec61048e565b6040516101cd9190610a79565b34801561030557600080fd5b506102376104b2565b34801561031a57600080fd5b506102376103ee565b34801561032f57600080fd5b506101eb6104c1565b34801561034457600080fd5b506101eb6104c7565b34801561035957600080fd5b5061036d6103683660046107d7565b6104cd565b005b34801561037b57600080fd5b506101eb610511565b34801561039057600080fd5b506101eb610517565b3480156103a557600080fd5b5061023761051d565b3480156103ba57600080fd5b5061036d6103c93660046107d7565b61052c565b3480156103da57600080fd5b5061036d6103e93660046107d7565b6105d2565b6000806040516103fd90610a55565b6040519081900390205492915050565b6001546001600160a01b031681565b60055481565b63059fa60081565b6224ea0081565b6000806040516103fd90610a60565b60095481565b60085481565b6002546001600160a01b031681565b600a5481565b6004546001600160a01b031681565b600d546001600160a01b031681565b6000546001600160a01b031690565b600080546001600160a01b03166104a36105ff565b6001600160a01b031614905090565b6003546001600160a01b031681565b600b5481565b60065481565b6104d5610431565b6001600160a01b0316336001600160a01b0316146105055760405162461bcd60e51b815260040161017d90610ad5565b61050e81610603565b50565b60075481565b600e5481565b600c546001600160a01b031681565b610534610431565b6001600160a01b0316336001600160a01b0316146105645760405162461bcd60e51b815260040161017d90610ad5565b61056d8161068e565b6105895760405162461bcd60e51b815260040161017d90610aa5565b600d546001600160a01b038281169116146105b65760405162461bcd60e51b815260040161017d90610b05565b6105bf816106ca565b50600d80546001600160a01b0319169055565b6105da61048e565b6105f65760405162461bcd60e51b815260040161017d90610ac5565b61050e81610745565b3390565b6001600160a01b0381166106295760405162461bcd60e51b815260040161017d90610af5565b806001600160a01b031661063b610431565b6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600060405161067e90610a60565b6040519081900390209190915550565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906106c257508115155b949350505050565b6001600160a01b0381166106f05760405162461bcd60e51b815260040161017d90610ab5565b806001600160a01b03166107026103ee565b6001600160a01b03167fcfbf4028add9318bbf716f08c348595afb063b0e9feed1f86d33681a4b3ed4d360405160405180910390a3600060405161067e90610a55565b6001600160a01b03811661076b5760405162461bcd60e51b815260040161017d90610a95565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b80356107d181610b5b565b92915050565b6000602082840312156107e957600080fd5b60006106c284846107c6565b6107fe81610b31565b82525050565b6107fe81610b3c565b6107fe81610b50565b6000610823602683610b23565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015260400192915050565b600061086b601e83610b23565b7f5f696d706c656d656e746174696f6e206e6f74206120636f6e74726163740000815260200192915050565b60006108a4602983610b23565b7f50726f78793a3a736574496d706c656d656e746174696f6e3a20696e76616c6981526864206164647265737360b81b602082015260400192915050565b60006108ef600c83610b23565b6b1d5b985d5d1a1bdc9a5e995960a21b815260200192915050565b6000610917601283610b2c565b7135b2bc9734b6b83632b6b2b73a30ba34b7b760711b815260120192915050565b6000610945601583610b23565b74141c9bde1e4e8e881858d8d95cdcc819195b9a5959605a1b815260200192915050565b6000610976600f83610b2c565b6e35b2bc97383937bc3c9737bbb732b960891b8152600f0192915050565b60006109a1602383610b23565b7f50726f78793a3a28293a20696d706c656d656e746174696f6e206e6f7420666f8152621d5b9960ea1b602082015260400192915050565b60006109e6602583610b23565b7f50726f78793a3a73657450726f78794f776e65723a20696e76616c6964206164815264647265737360d81b602082015260400192915050565b6000610a2d601083610b23565b6f0c2c8c8e4cae6e640dad2e6dac2e8c6d60831b815260200192915050565b6107fe81610b4d565b60006107d18261090a565b60006107d182610969565b602081016107d182846107f5565b602081016107d18284610804565b602081016107d1828461080d565b602080825281016107d181610816565b602080825281016107d18161085e565b602080825281016107d181610897565b602080825281016107d1816108e2565b602080825281016107d181610938565b602080825281016107d181610994565b602080825281016107d1816109d9565b602080825281016107d181610a20565b602081016107d18284610a4c565b90815260200190565b919050565b60006107d182610b41565b151590565b6001600160a01b031690565b90565b60006107d182610b31565b610b6481610b31565b811461050e57600080fdfea365627a7a7231582085e9b8a7309aaf5cc8a7489539cee95e69acc2e602eefb578961fae6b9dfb29b6c6578706572696d656e74616cf564736f6c634300051100408be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
    "sourceMap": "568:2479:98:-;;;991:1220;8:9:-1;5:2;;;30:1;27;20:12;5:2;991:1220:98;;;;;;;;;;;;;;;;;;;;;701:17:184;721:12;:10;:12::i;:::-;743:6;:18;;-1:-1:-1;;;;;;743:18:184;-1:-1:-1;;;;;743:18:184;;;;;;;776:43;;-1:-1:-1;;743:18:184;;-1:-1:-1;743:18:184;;:6;;-1:-1:-1;;743:6:184;-1:-1:-1;;;;;776:43:184;743:6;;776:43;-1:-1:-1;1705:26:190;1720:10;1705:14;:26::i;:::-;1216::98;1235:6;1216:18;;;;;:26;;:::i;:::-;1208:60;;;;-1:-1:-1;;;1208:60:98;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1286:18:98;;1278:50;;;;-1:-1:-1;;;1278:50:98;;;;;;;;;1346:24;1365:4;1346:18;;;;;:24;;:::i;:::-;1338:56;;;;-1:-1:-1;;;1338:56:98;;;;;;;;;-1:-1:-1;;;;;1412:29:98;;1404:65;;;;-1:-1:-1;;;1404:65:98;;;;;;;;;1487:35;1506:15;1487:18;;;;;:35;;:::i;:::-;1479:78;;;;-1:-1:-1;;;1479:78:98;;;;;;;;;-1:-1:-1;;;;;1575:25:98;;1567:65;;;;-1:-1:-1;;;1567:65:98;;;;;;;;;-1:-1:-1;;;;;1650:34:98;;1642:82;;;;-1:-1:-1;;;1642:82:98;;;;;;;;;1742:40;1761:20;1742:18;;;;;:40;;:::i;:::-;1734:88;;;;-1:-1:-1;;;1734:88:98;;;;;;;;;1450:7:101;1841:18:98;:31;1840:38;1832:67;;;;-1:-1:-1;;;1832:67:98;;;;;;;;;1910:26;1929:6;1910:18;:26::i;:::-;1946:3;:18;;-1:-1:-1;;;;;;1946:18:98;;;-1:-1:-1;;;;;1946:18:98;;;;;;;1974:7;:35;;;;;;;;;;;;;;2019:10;:24;;;;;;;;;;;;;;2053:19;:64;;;;;;;;;;;;;2141:15;2127:11;:29;2166:17;:38;-1:-1:-1;568:2479:98;;795:96:179;874:10;795:96;:::o;2843:291:190:-;-1:-1:-1;;;;;2910:20:190;;2902:70;;;;-1:-1:-1;;;2902:70:190;;;;;;;;;-1:-1:-1;;;;;2987:45:190;;3008:15;:13;:15::i;:::-;-1:-1:-1;;;;;2987:45:190;-1:-1:-1;;;;;;;;;;;2987:45:190;;-1:-1:-1;;2987:45:190;3043:11;1368:28;;;;;;;;;;;;;;;3099:19;;;;-1:-1:-1;3085:43:190:o;693:630:178:-;753:4;1226:20;;1059:66;1273:23;;;;;;:42;;-1:-1:-1;1300:15:178;;;1273:42;1265:51;693:630;-1:-1:-1;;;;693:630:178:o;2068:349:190:-;-1:-1:-1;;;;;2148:29:190;;2140:83;;;;-1:-1:-1;;;2140:83:190;;;;;;;;;-1:-1:-1;;;;;2238:59:190;;2260:19;:17;:19::i;:::-;2238:59;;-1:-1:-1;;;;;2238:59:190;;;;;;;;;;2308:11;1294:31;;;;;;3239:164;3285:14;3311:11;1368:28;;;;;;;;;;;;;;;3377:10;;3353:44;-1:-1:-1;;3353:44:190:o;2540:195::-;2590:23;2625:11;1294:31;;;;;;5:134:-1;83:13;;101:33;83:13;101:33;;;68:71;;;;;146:134;224:13;;242:33;224:13;242:33;;287:946;;;;;;;487:3;475:9;466:7;462:23;458:33;455:2;;;504:1;501;494:12;455:2;539:1;556:64;612:7;592:9;556:64;;;546:74;;518:108;657:2;675:64;731:7;722:6;711:9;707:22;675:64;;;665:74;;636:109;776:2;794:64;850:7;841:6;830:9;826:22;794:64;;;784:74;;755:109;895:2;913:64;969:7;960:6;949:9;945:22;913:64;;;903:74;;874:109;1014:3;1033:64;1089:7;1080:6;1069:9;1065:22;1033:64;;;1023:74;;993:110;1134:3;1153:64;1209:7;1200:6;1189:9;1185:22;1153:64;;;1143:74;;1113:110;449:784;;;;;;;;;1241:321;;1401:67;1465:2;1460:3;1401:67;;;-1:-1;;;1481:44;;1553:2;1544:12;;1387:175;-1:-1;;1387:175;1571:327;;1731:67;1795:2;1790:3;1731:67;;;1831:29;1811:50;;1889:2;1880:12;;1717:181;-1:-1;;1717:181;1907:378;;2067:67;2131:2;2126:3;2067:67;;;2167:34;2147:55;;-1:-1;;;2231:2;2222:12;;2215:33;2276:2;2267:12;;;-1:-1;;2053:232;2294:330;;2454:67;2518:2;2513:3;2454:67;;;2554:32;2534:53;;2615:2;2606:12;;2440:184;-1:-1;;2440:184;2633:354;;2811:85;2893:2;2888:3;2811:85;;;-1:-1;;;2909:41;;2978:2;2969:12;;;-1:-1;;2797:190;2996:316;;3156:67;3220:2;3215:3;3156:67;;;-1:-1;;;3236:39;;3303:2;3294:12;;;-1:-1;;3142:170;3321:372;;3481:67;3545:2;3540:3;3481:67;;;3581:34;3561:55;;-1:-1;;;3645:2;3636:12;;3629:27;3684:2;3675:12;;;-1:-1;;3467:226;3702:319;;3862:67;3926:2;3921:3;3862:67;;;-1:-1;;;3942:42;;4012:2;4003:12;;3848:173;-1:-1;;3848:173;4030:351;;4208:85;4290:2;4285:3;4208:85;;;-1:-1;;;4306:38;;4372:2;4363:12;;;-1:-1;;4194:187;4390:374;;4550:67;4614:2;4609:3;4550:67;;;4650:34;4630:55;;-1:-1;;;4714:2;4705:12;;4698:29;4755:2;4746:12;;;-1:-1;;4536:228;4773:323;;4933:67;4997:2;4992:3;4933:67;;;5033:25;5013:46;;5087:2;5078:12;;4919:177;-1:-1;;4919:177;5105:372;;5265:67;5329:2;5324:3;5265:67;;;5365:34;5345:55;;-1:-1;;;5429:2;5420:12;;5413:27;5468:2;5459:12;;;-1:-1;;5251:226;5486:319;;5646:67;5710:2;5705:3;5646:67;;;-1:-1;;;5726:42;;5796:2;5787:12;;5632:173;-1:-1;;5632:173;5813:372;;6012:148;6156:3;6012:148;;6192:372;;6391:148;6535:3;6391:148;;6571:407;6762:2;6776:47;;;6747:18;;6837:131;6747:18;6837:131;;6985:407;7176:2;7190:47;;;7161:18;;7251:131;7161:18;7251:131;;7399:407;7590:2;7604:47;;;7575:18;;7665:131;7575:18;7665:131;;7813:407;8004:2;8018:47;;;7989:18;;8079:131;7989:18;8079:131;;8227:407;8418:2;8432:47;;;8403:18;;8493:131;8403:18;8493:131;;8641:407;8832:2;8846:47;;;8817:18;;8907:131;8817:18;8907:131;;9055:407;9246:2;9260:47;;;9231:18;;9321:131;9231:18;9321:131;;9469:407;9660:2;9674:47;;;9645:18;;9735:131;9645:18;9735:131;;9883:407;10074:2;10088:47;;;10059:18;;10149:131;10059:18;10149:131;;10297:407;10488:2;10502:47;;;10473:18;;10563:131;10473:18;10563:131;;10711:407;10902:2;10916:47;;;10887:18;;10977:131;10887:18;10977:131;;11126:163;11229:19;;;11278:4;11269:14;;11222:67;11298:145;11434:3;11412:31;-1:-1;11412:31;11451:91;;-1:-1;;;;;11611:54;;11513:24;11594:76;11677:72;11739:5;11722:27;11756:117;11825:24;11843:5;11825:24;;;11818:5;11815:35;11805:2;;11864:1;11861;11854:12;11805:2;11799:74;;11880:117;11949:24;11967:5;11949:24;;11923:74;568:2479:98;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061014b5760003560e01c80638f32d59b116100b6578063cae774b31161006f578063cae774b31461036f578063d0e60a6a14610384578063d38bd9f014610399578063d784d426146103ae578063f2fde38b146103ce578063f6d6189e1461020d5761014b565b80638f32d59b146102d7578063a3e67610146102f9578063aaf10f421461030e578063b06a470c14610323578063c24a0f8b14610338578063caaee91c1461034d5761014b565b806341c632a61161010857806341c632a6146102595780634cf088d91461026e578063533a386c146102835780636b7dbb2d146102985780638b677b03146102ad5780638da5cb5b146102c25761014b565b806308dcb360146101ab5780630b97bc86146101d65780630fb5a6b4146101f857806313d033c01461020d5780631ab7710d146102225780633c4efe0114610244575b60006101556103ee565b90506001600160a01b0381166101865760405162461bcd60e51b815260040161017d90610ae5565b60405180910390fd5b60405136600082376000803683855af43d806000843e8180156101a7578184f35b8184fd5b3480156101b757600080fd5b506101c061040d565b6040516101cd9190610a87565b60405180910390f35b3480156101e257600080fd5b506101eb61041c565b6040516101cd9190610b15565b34801561020457600080fd5b506101eb610422565b34801561021957600080fd5b506101eb61042a565b34801561022e57600080fd5b50610237610431565b6040516101cd9190610a6b565b34801561025057600080fd5b506101eb610440565b34801561026557600080fd5b506101eb610446565b34801561027a57600080fd5b506101c061044c565b34801561028f57600080fd5b506101eb61045b565b3480156102a457600080fd5b506101c0610461565b3480156102b957600080fd5b50610237610470565b3480156102ce57600080fd5b5061023761047f565b3480156102e357600080fd5b506102ec61048e565b6040516101cd9190610a79565b34801561030557600080fd5b506102376104b2565b34801561031a57600080fd5b506102376103ee565b34801561032f57600080fd5b506101eb6104c1565b34801561034457600080fd5b506101eb6104c7565b34801561035957600080fd5b5061036d6103683660046107d7565b6104cd565b005b34801561037b57600080fd5b506101eb610511565b34801561039057600080fd5b506101eb610517565b3480156103a557600080fd5b5061023761051d565b3480156103ba57600080fd5b5061036d6103c93660046107d7565b61052c565b3480156103da57600080fd5b5061036d6103e93660046107d7565b6105d2565b6000806040516103fd90610a55565b6040519081900390205492915050565b6001546001600160a01b031681565b60055481565b63059fa60081565b6224ea0081565b6000806040516103fd90610a60565b60095481565b60085481565b6002546001600160a01b031681565b600a5481565b6004546001600160a01b031681565b600d546001600160a01b031681565b6000546001600160a01b031690565b600080546001600160a01b03166104a36105ff565b6001600160a01b031614905090565b6003546001600160a01b031681565b600b5481565b60065481565b6104d5610431565b6001600160a01b0316336001600160a01b0316146105055760405162461bcd60e51b815260040161017d90610ad5565b61050e81610603565b50565b60075481565b600e5481565b600c546001600160a01b031681565b610534610431565b6001600160a01b0316336001600160a01b0316146105645760405162461bcd60e51b815260040161017d90610ad5565b61056d8161068e565b6105895760405162461bcd60e51b815260040161017d90610aa5565b600d546001600160a01b038281169116146105b65760405162461bcd60e51b815260040161017d90610b05565b6105bf816106ca565b50600d80546001600160a01b0319169055565b6105da61048e565b6105f65760405162461bcd60e51b815260040161017d90610ac5565b61050e81610745565b3390565b6001600160a01b0381166106295760405162461bcd60e51b815260040161017d90610af5565b806001600160a01b031661063b610431565b6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600060405161067e90610a60565b6040519081900390209190915550565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906106c257508115155b949350505050565b6001600160a01b0381166106f05760405162461bcd60e51b815260040161017d90610ab5565b806001600160a01b03166107026103ee565b6001600160a01b03167fcfbf4028add9318bbf716f08c348595afb063b0e9feed1f86d33681a4b3ed4d360405160405180910390a3600060405161067e90610a55565b6001600160a01b03811661076b5760405162461bcd60e51b815260040161017d90610a95565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b80356107d181610b5b565b92915050565b6000602082840312156107e957600080fd5b60006106c284846107c6565b6107fe81610b31565b82525050565b6107fe81610b3c565b6107fe81610b50565b6000610823602683610b23565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015260400192915050565b600061086b601e83610b23565b7f5f696d706c656d656e746174696f6e206e6f74206120636f6e74726163740000815260200192915050565b60006108a4602983610b23565b7f50726f78793a3a736574496d706c656d656e746174696f6e3a20696e76616c6981526864206164647265737360b81b602082015260400192915050565b60006108ef600c83610b23565b6b1d5b985d5d1a1bdc9a5e995960a21b815260200192915050565b6000610917601283610b2c565b7135b2bc9734b6b83632b6b2b73a30ba34b7b760711b815260120192915050565b6000610945601583610b23565b74141c9bde1e4e8e881858d8d95cdcc819195b9a5959605a1b815260200192915050565b6000610976600f83610b2c565b6e35b2bc97383937bc3c9737bbb732b960891b8152600f0192915050565b60006109a1602383610b23565b7f50726f78793a3a28293a20696d706c656d656e746174696f6e206e6f7420666f8152621d5b9960ea1b602082015260400192915050565b60006109e6602583610b23565b7f50726f78793a3a73657450726f78794f776e65723a20696e76616c6964206164815264647265737360d81b602082015260400192915050565b6000610a2d601083610b23565b6f0c2c8c8e4cae6e640dad2e6dac2e8c6d60831b815260200192915050565b6107fe81610b4d565b60006107d18261090a565b60006107d182610969565b602081016107d182846107f5565b602081016107d18284610804565b602081016107d1828461080d565b602080825281016107d181610816565b602080825281016107d18161085e565b602080825281016107d181610897565b602080825281016107d1816108e2565b602080825281016107d181610938565b602080825281016107d181610994565b602080825281016107d1816109d9565b602080825281016107d181610a20565b602081016107d18284610a4c565b90815260200190565b919050565b60006107d182610b41565b151590565b6001600160a01b031690565b90565b60006107d182610b31565b610b6481610b31565b811461050e57600080fdfea365627a7a7231582085e9b8a7309aaf5cc8a7489539cee95e69acc2e602eefb578961fae6b9dfb29b6c6578706572696d656e74616cf564736f6c63430005110040",
    "sourceMap": "568:2479:98:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3648:22:190;3673:19;:17;:19::i;:::-;3648:44;-1:-1:-1;;;;;;3710:28:190;;3702:76;;;;-1:-1:-1;;;3702:76:190;;;;;;;;;;;;;;;;;3833:4;3827:11;3876:12;3873:1;3864:7;3851:38;3976:1;3973;3959:12;3950:7;3934:14;3929:3;3916:62;4003:14;4057:4;4054:1;4045:7;4030:32;4083:6;4106:68;;;;4237:4;4228:7;4221:21;4106:68;4151:4;4142:7;4135:21;580:17:101;;8:9:-1;5:2;;;30:1;27;20:12;5:2;580:17:101;;;:::i;:::-;;;;;;;;;;;;;;;;1245:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1245:24:101;;;:::i;:::-;;;;;;;;1147:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1147:44:101;;;:::i;1017:39::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1017:39:101;;;:::i;3239:164:190:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3239:164:190;;;:::i;:::-;;;;;;;;1699:35:101;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1699:35:101;;;:::i;1606:34::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1606:34:101;;;:::i;650:23::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;650:23:101;;;:::i;1773:27::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1773:27:101;;;:::i;795:47::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;795:47:101;;;:::i;1995:32::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1995:32:101;;;:::i;902:77:184:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;902:77:184;;;:::i;1233:92::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1233:92:184;;;:::i;:::-;;;;;;;;728:25:101;;8:9:-1;5:2;;;30:1;27;20:12;5:2;728:25:101;;;:::i;2540:195:190:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2540:195:190;;;:::i;1837:25:101:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1837:25:101;;;:::i;1321:22::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1321:22:101;;;:::i;1452:100:191:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1452:100:191;;;;;;;;:::i;:::-;;1523:26:101;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1523:26:101;;;:::i;2127:32::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2127:32:101;;;:::i;1913:28::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1913:28:101;;;:::i;2716:329:98:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2716:329:98;;;;;;;;:::i;1474:107:184:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1474:107:184;;;;;;;;:::i;2540:195:190:-;2590:23;2625:11;1294:31;;;;;;;;;;;;;;;2709:10;;2676:53;-1:-1:-1;;2676:53:190:o;580:17:101:-;;;-1:-1:-1;;;;;580:17:101;;:::o;1245:24::-;;;;:::o;1147:44::-;1182:9;1147:44;:::o;1017:39::-;1049:7;1017:39;:::o;3239:164:190:-;3285:14;3311:11;1368:28;;;;;;1699:35:101;;;;:::o;1606:34::-;;;;:::o;650:23::-;;;-1:-1:-1;;;;;650:23:101;;:::o;1773:27::-;;;;:::o;795:47::-;;;-1:-1:-1;;;;;795:47:101;;:::o;1995:32::-;;;-1:-1:-1;;;;;1995:32:101;;:::o;902:77:184:-;940:7;966:6;-1:-1:-1;;;;;966:6:184;;902:77::o;1233:92::-;1273:4;1312:6;;-1:-1:-1;;;;;1312:6:184;1296:12;:10;:12::i;:::-;-1:-1:-1;;;;;1296:22:184;;;1233:92;-1:-1:-1;1233:92:184:o;728:25:101:-;;;-1:-1:-1;;;;;728:25:101;;:::o;1837:::-;;;;:::o;1321:22::-;;;;:::o;1452:100:191:-;1874:15:190;:13;:15::i;:::-;-1:-1:-1;;;;;1860:29:190;:10;:29;1852:63;;;;-1:-1:-1;;;1852:63:190;;;;;;;;;1523:22:191;1538:6;1523:14;:22::i;:::-;1452:100;:::o;1523:26:101:-;;;;:::o;2127:32::-;;;;:::o;1913:28::-;;;-1:-1:-1;;;;;1913:28:101;;:::o;2716:329:98:-;1874:15:190;:13;:15::i;:::-;-1:-1:-1;;;;;1860:29:190;:10;:29;1852:63;;;;-1:-1:-1;;;1852:63:190;;;;;;;;;2808:35:98;2827:15;2808:18;:35::i;:::-;2800:78;;;;-1:-1:-1;;;2800:78:98;;;;;;;;;2896:17;;-1:-1:-1;;;;;2896:36:98;;;:17;;:36;2888:65;;;;-1:-1:-1;;;2888:65:98;;;;;;;;;2963:35;2982:15;2963:18;:35::i;:::-;-1:-1:-1;3008:17:98;:30;;-1:-1:-1;;;;;;3008:30:98;;;2716:329::o;1474:107:184:-;1106:9;:7;:9::i;:::-;1098:34;;;;-1:-1:-1;;;1098:34:184;;;;;;;;;1546:28;1565:8;1546:18;:28::i;795:96:179:-;874:10;795:96;:::o;2843:291:190:-;-1:-1:-1;;;;;2910:20:190;;2902:70;;;;-1:-1:-1;;;2902:70:190;;;;;;;;;-1:-1:-1;;;;;2987:45:190;;3008:15;:13;:15::i;:::-;2987:45;;-1:-1:-1;;;;;2987:45:190;;;;;;;;;;3043:11;1368:28;;;;;;;;;;;;;;;3099:19;;;;-1:-1:-1;3085:43:190:o;693:630:178:-;753:4;1226:20;;1059:66;1273:23;;;;;;:42;;-1:-1:-1;1300:15:178;;;1273:42;1265:51;693:630;-1:-1:-1;;;;693:630:178:o;2068:349:190:-;-1:-1:-1;;;;;2148:29:190;;2140:83;;;;-1:-1:-1;;;2140:83:190;;;;;;;;;-1:-1:-1;;;;;2238:59:190;;2260:19;:17;:19::i;:::-;2238:59;;-1:-1:-1;;;;;2238:59:190;;;;;;;;;;2308:11;1294:31;;;;;;1682:225:184;-1:-1:-1;;;;;1755:22:184;;1747:73;;;;-1:-1:-1;;;1747:73:184;;;;;;;;;1856:6;;;1835:38;;-1:-1:-1;;;;;1835:38:184;;;;1856:6;;;1835:38;;;1883:6;:17;;-1:-1:-1;;;;;;1883:17:184;-1:-1:-1;;;;;1883:17:184;;;;;;;;;;1682:225::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;;57:78;;;;;142:241;;246:2;234:9;225:7;221:23;217:32;214:2;;;262:1;259;252:12;214:2;297:1;314:53;359:7;339:9;314:53;;390:113;473:24;491:5;473:24;;;468:3;461:37;455:48;;;510:104;587:21;602:5;587:21;;621:158;720:53;767:5;720:53;;1149:375;;1309:67;1373:2;1368:3;1309:67;;;1409:34;1389:55;;-1:-1;;;1473:2;1464:12;;1457:30;1515:2;1506:12;;;-1:-1;;1295:229;1533:330;;1693:67;1757:2;1752:3;1693:67;;;1793:32;1773:53;;1854:2;1845:12;;1679:184;-1:-1;;1679:184;1872:378;;2032:67;2096:2;2091:3;2032:67;;;2132:34;2112:55;;-1:-1;;;2196:2;2187:12;;2180:33;2241:2;2232:12;;;-1:-1;;2018:232;2259:312;;2419:67;2483:2;2478:3;2419:67;;;-1:-1;;;2499:35;;2562:2;2553:12;;;-1:-1;;2405:166;2580:354;;2758:85;2840:2;2835:3;2758:85;;;-1:-1;;;2856:41;;2925:2;2916:12;;;-1:-1;;2744:190;2943:321;;3103:67;3167:2;3162:3;3103:67;;;-1:-1;;;3183:44;;3255:2;3246:12;;;-1:-1;;3089:175;3273:351;;3451:85;3533:2;3528:3;3451:85;;;-1:-1;;;3549:38;;3615:2;3606:12;;;-1:-1;;3437:187;3633:372;;3793:67;3857:2;3852:3;3793:67;;;3893:34;3873:55;;-1:-1;;;3957:2;3948:12;;3941:27;3996:2;3987:12;;;-1:-1;;3779:226;4014:374;;4174:67;4238:2;4233:3;4174:67;;;4274:34;4254:55;;-1:-1;;;4338:2;4329:12;;4322:29;4379:2;4370:12;;;-1:-1;;4160:228;4397:316;;4557:67;4621:2;4616:3;4557:67;;;-1:-1;;;4637:39;;4704:2;4695:12;;;-1:-1;;4543:170;4721:113;4804:24;4822:5;4804:24;;4841:372;;5040:148;5184:3;5040:148;;5220:372;;5419:148;5563:3;5419:148;;5599:213;5717:2;5702:18;;5731:71;5706:9;5775:6;5731:71;;5819:201;5931:2;5916:18;;5945:65;5920:9;5983:6;5945:65;;6027:245;6161:2;6146:18;;6175:87;6150:9;6235:6;6175:87;;6815:407;7006:2;7020:47;;;6991:18;;7081:131;6991:18;7081:131;;7229:407;7420:2;7434:47;;;7405:18;;7495:131;7405:18;7495:131;;7643:407;7834:2;7848:47;;;7819:18;;7909:131;7819:18;7909:131;;8057:407;8248:2;8262:47;;;8233:18;;8323:131;8233:18;8323:131;;8471:407;8662:2;8676:47;;;8647:18;;8737:131;8647:18;8737:131;;8885:407;9076:2;9090:47;;;9061:18;;9151:131;9061:18;9151:131;;9299:407;9490:2;9504:47;;;9475:18;;9565:131;9475:18;9565:131;;9713:407;9904:2;9918:47;;;9889:18;;9979:131;9889:18;9979:131;;10127:213;10245:2;10230:18;;10259:71;10234:9;10303:6;10259:71;;10348:163;10451:19;;;10500:4;10491:14;;10444:67;10520:145;10656:3;10634:31;-1:-1;10634:31;10673:91;;10735:24;10753:5;10735:24;;10771:85;10837:13;10830:21;;10813:43;10863:121;-1:-1;;;;;10925:54;;10908:76;10991:72;11053:5;11036:27;11070:153;;11165:53;11212:5;11165:53;;11991:117;12060:24;12078:5;12060:24;;;12053:5;12050:35;12040:2;;12099:1;12096;12089:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "FOUR_WEEKS()": "f6d6189e",
    "SOV()": "08dcb360",
    "cliff()": "13d033c0",
    "cliffAdded()": "b06a470c",
    "duration()": "0fb5a6b4",
    "durationLeft()": "533a386c",
    "endDate()": "c24a0f8b",
    "extendDurationFor()": "d0e60a6a",
    "feeSharingCollector()": "6b7dbb2d",
    "getImplementation()": "aaf10f42",
    "getProxyOwner()": "1ab7710d",
    "isOwner()": "8f32d59b",
    "lastStakingSchedule()": "41c632a6",
    "maxInterval()": "cae774b3",
    "newImplementation()": "8b677b03",
    "newTokenOwner()": "d38bd9f0",
    "owner()": "8da5cb5b",
    "remainingStakeAmount()": "3c4efe01",
    "setImplementation(address)": "d784d426",
    "setProxyOwner(address)": "caaee91c",
    "staking()": "4cf088d9",
    "startDate()": "0b97bc86",
    "tokenOwner()": "a3e67610",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_SOV\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_feeSharingCollector\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_extendDurationFor\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_oldImplementation\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newImplementation\",\"type\":\"address\"}],\"name\":\"ImplementationChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"FOUR_WEEKS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SOV\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cliff\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cliffAdded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"durationLeft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"extendDurationFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeSharingCollector\",\"outputs\":[{\"internalType\":\"contract IFeeSharingCollector\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getProxyOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastStakingSchedule\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newTokenOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"remainingStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"setImplementation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setProxyOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"staking\",\"outputs\":[{\"internalType\":\"contract IStaking\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Vesting contract is upgradable, Make sure the vesting owner is multisig otherwise it will be catastrophic.\",\"methods\":{\"constructor\":{\"params\":{\"_SOV\":\"The SOV token address.\",\"_extendDurationFor\":\"Duration till the unlocked tokens are extended.\",\"_feeSharingCollector\":\"Fee sharing proxy address.\",\"_logic\":\"The address of logic contract.\",\"_tokenOwner\":\"The owner of the tokens.\"}},\"getImplementation()\":{\"return\":\"Address of the implementation.\"},\"getProxyOwner()\":{\"return\":\"Address of the owner.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"setImplementation(address)\":{\"details\":\"Overriding setImplementation function of UpgradableProxy. The logic can only be modified when both token owner and veting owner approve. Since setImplementation can only be called by vesting owner, we also need to check if the new logic is already approved by the token owner.\",\"params\":{\"_implementation\":\"Address of the implementation. Must match with what is set by token owner.\"}},\"setProxyOwner(address)\":{\"params\":{\"_owner\":\"Address of the owner.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Four Year Vesting Contract.\"},\"userdoc\":{\"methods\":{\"constructor\":\"Setup the vesting schedule.\",\"getImplementation()\":{\"notice\":\"Return address of the implementation.\"},\"getProxyOwner()\":{\"notice\":\"Return address of the owner.\"},\"setImplementation(address)\":{\"notice\":\"Set address of the implementation - vesting owner.\"},\"setProxyOwner(address)\":{\"notice\":\"Set address of the owner.\"}},\"notice\":\"A four year vesting contract.\"}},\"settings\":{\"compilationTarget\":{\"contracts/governance/Vesting/fouryear/FourYearVesting.sol\":\"FourYearVesting\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@ethereum-waffle/=node_modules/@ethereum-waffle/\",\":ds-test/=foundry/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=foundry/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":truffle/=node_modules/truffle/\"]},\"sources\":{\"contracts/governance/ApprovalReceiver.sol\":{\"keccak256\":\"0xfec344456774fa83b0885dd71825ccb6780be8db63c394f3ca09107977c65429\",\"urls\":[\"bzz-raw://d2b34a6db2f36feda3a4a89e051a960a1b67c4241ca1ab4ae2c18f18fb8e56ce\",\"dweb:/ipfs/QmUMjUiDQ1M1P6iBerRcDzMw4zzs968LsMqkhF3SKftjkX\"]},\"contracts/governance/ErrorDecoder.sol\":{\"keccak256\":\"0xa0fa7986924aab574ca9e7c265f8c7bf00671ba1d86dbad143df7c14455f1c6a\",\"urls\":[\"bzz-raw://69dda1ed604f442ea96682ed8c6cd5fcbad4677f5a6acf362444c6cfdbd1bab8\",\"dweb:/ipfs/QmdtCaJjVeCeTc2QigPRs52b9iScS73RFAvj6mJVMmkhit\"]},\"contracts/governance/IFeeSharingCollector.sol\":{\"keccak256\":\"0x7794cb434d9395ea983dcf8ded48db5b68897a338429320f60172c4caa47fb40\",\"urls\":[\"bzz-raw://b9ed75fd4b75f120ed265e7b69d86ce6e62388a50f38058e2fa34f5ea3ffcc2e\",\"dweb:/ipfs/QmZbMA6F4FxhcAT4zTc521LLRbZxFVVuD3zzj981awpDmp\"]},\"contracts/governance/Staking/interfaces/IStaking.sol\":{\"keccak256\":\"0x6777e38b4bd5a63e10f3bf7aba355401713bb649811c6dfa1bda40ebd8fee30b\",\"urls\":[\"bzz-raw://676e42641fb1d335dde7bb928779014ff2adf1eb1121f48a4a48e36f571287d4\",\"dweb:/ipfs/QmamokattcaQ6gRGaqUDVZejcv4rridScd9nayGcxxW1BL\"]},\"contracts/governance/Vesting/fouryear/FourYearVesting.sol\":{\"keccak256\":\"0x83ef3d0ad2e9da621cf555ba0795cf91345025d4ef32b21a36e6e1d6509cbb91\",\"urls\":[\"bzz-raw://2960b73b2d239683417c53394447050121f1f573d8e941a971c220858ba70dac\",\"dweb:/ipfs/QmRSrsiV2NBS63UnaSn9rsei1aepGjDvCMFo7tkdPzot3T\"]},\"contracts/governance/Vesting/fouryear/FourYearVestingStorage.sol\":{\"keccak256\":\"0xaa0878f6e0b832a33b5cf8b56a516eb39272d3e1e5434ce798b30a346ab66cc0\",\"urls\":[\"bzz-raw://a45ea8d65613edeb5c1c8ac66e8f401c203da73437dbe02eb566d2c074ccb0f3\",\"dweb:/ipfs/QmYkBxWZ9W78bRsEtSKHTpANAJyGgEisBwEPmc73M6XSkk\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xea0bb1bf7d022130bb42a4efdfd875ef76ac5ac730a94ddd7b8c9949d4253855\",\"urls\":[\"bzz-raw://2050b03a2a1d4203698261daf2f46749bf5b72e3d23c272553e047e6bea4af40\",\"dweb:/ipfs/QmPY8bbNv3KxnyQ4Z6DtHkYu2U1Kfd7ooRDRUWNuw6v4Jt\"]},\"contracts/openzeppelin/Address.sol\":{\"keccak256\":\"0x23df48a01dbac9b25e86c9131174fb7752bbc7e741e63f1aa982de22e055ad54\",\"urls\":[\"bzz-raw://0928673cfdca6f6917432e1cff628b726b4396ed0f4b08d3281a7ebbdb2380e3\",\"dweb:/ipfs/QmY12enUUEaE7sC5PZAdqJo63JxaH2FqVJtHZxxB9HzVYE\"]},\"contracts/openzeppelin/Context.sol\":{\"keccak256\":\"0x7860cb1591dbd66bb497c60c46866d9fcdb56c73306ed86b25801000af1c7b2b\",\"urls\":[\"bzz-raw://79e480eab5cb03c034f7fb2c177f23874fddebbb3514d773729bb094a0fda826\",\"dweb:/ipfs/QmTfDHE4fnQE3gfycu7NePREWfWFgJgmaEmHDn4uyTnMBP\"]},\"contracts/openzeppelin/Ownable.sol\":{\"keccak256\":\"0x94496c375b3e82d87d7f01ce1577f008fab374312cf93012a0eca716e6aadb3a\",\"urls\":[\"bzz-raw://ea268f87bc9d256b99aae4d98f23931f485295b5720f505e0554223c9b54431a\",\"dweb:/ipfs/QmWCLqTijearegiDuWyhrkRQXXACT1sVUG6cF3L9pszb6Y\"]},\"contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x8574814d1ea5b04efc8ef1e629e04e5783d4c106ff73a47c72e279c027a6a403\",\"urls\":[\"bzz-raw://63d5b54995b6c17679664647700e5ec427eb48c49c2ff845722a77b6aae1adc2\",\"dweb:/ipfs/QmVvYVtFuHr84Z43XJe5SMM2fmeFUXPrQ9VdkAtRoLnjcK\"]},\"contracts/proxy/UpgradableProxy.sol\":{\"keccak256\":\"0xc876883361bd3b675041b1c01c2be94a994f8ba6af516f01b171235a360b96ed\",\"urls\":[\"bzz-raw://bbfe495a953d615eb4b2bf606b3b7c2a365ee74a3805f5e7f508f4b92963b04d\",\"dweb:/ipfs/QmQmoog5tFt7TeBWFGLpjEdeSP5uXsHpVcNzXcTAkTi7ud\"]},\"contracts/token/IApproveAndCall.sol\":{\"keccak256\":\"0x0ca93f8436a4d81d80de5ea9214139b490d96f708f09c975a0869ce9abc61635\",\"urls\":[\"bzz-raw://75cbb5a7f183ddae4f4cbe8afac44e56be521f491e740761fca9d55698a14e68\",\"dweb:/ipfs/QmS8Z6LNQZAgAdRL1tF1emQgsD2DWk9h3EvXXkrayE8jFJ\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.5.17+commit.d19bba13"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_logic",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_SOV",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_stakingAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_tokenOwner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_feeSharingCollector",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_extendDurationFor",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_oldImplementation",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_newImplementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ImplementationChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_oldOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "FOUR_WEEKS",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SOV",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cliff",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cliffAdded",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "duration",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "durationLeft",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "endDate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "extendDurationFor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeSharingCollector",
          "outputs": [
            {
              "internalType": "contract IFeeSharingCollector",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getImplementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "_implementation",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getProxyOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isOwner",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lastStakingSchedule",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxInterval",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "newImplementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "newTokenOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "remainingStakeAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_implementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setImplementation"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setProxyOwner"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "staking",
          "outputs": [
            {
              "internalType": "contract IStaking",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "startDate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "methods": {
          "constructor": {
            "params": {
              "_SOV": "The SOV token address.",
              "_extendDurationFor": "Duration till the unlocked tokens are extended.",
              "_feeSharingCollector": "Fee sharing proxy address.",
              "_logic": "The address of logic contract.",
              "_tokenOwner": "The owner of the tokens."
            }
          },
          "getImplementation()": {
            "return": "Address of the implementation."
          },
          "getProxyOwner()": {
            "return": "Address of the owner."
          },
          "isOwner()": {
            "details": "Returns true if the caller is the current owner."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "setImplementation(address)": {
            "details": "Overriding setImplementation function of UpgradableProxy. The logic can only be modified when both token owner and veting owner approve. Since setImplementation can only be called by vesting owner, we also need to check if the new logic is already approved by the token owner.",
            "params": {
              "_implementation": "Address of the implementation. Must match with what is set by token owner."
            }
          },
          "setProxyOwner(address)": {
            "params": {
              "_owner": "Address of the owner."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        }
      },
      "userdoc": {
        "methods": {
          "constructor": "Setup the vesting schedule.",
          "getImplementation()": {
            "notice": "Return address of the implementation."
          },
          "getProxyOwner()": {
            "notice": "Return address of the owner."
          },
          "setImplementation(address)": {
            "notice": "Set address of the implementation - vesting owner."
          },
          "setProxyOwner(address)": {
            "notice": "Set address of the owner."
          }
        }
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@ethereum-waffle/=node_modules/@ethereum-waffle/",
        ":ds-test/=foundry/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=foundry/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":truffle/=node_modules/truffle/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "compilationTarget": {
        "contracts/governance/Vesting/fouryear/FourYearVesting.sol": "FourYearVesting"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/governance/ApprovalReceiver.sol": {
        "keccak256": "0xfec344456774fa83b0885dd71825ccb6780be8db63c394f3ca09107977c65429",
        "urls": [
          "bzz-raw://d2b34a6db2f36feda3a4a89e051a960a1b67c4241ca1ab4ae2c18f18fb8e56ce",
          "dweb:/ipfs/QmUMjUiDQ1M1P6iBerRcDzMw4zzs968LsMqkhF3SKftjkX"
        ],
        "license": null
      },
      "contracts/governance/ErrorDecoder.sol": {
        "keccak256": "0xa0fa7986924aab574ca9e7c265f8c7bf00671ba1d86dbad143df7c14455f1c6a",
        "urls": [
          "bzz-raw://69dda1ed604f442ea96682ed8c6cd5fcbad4677f5a6acf362444c6cfdbd1bab8",
          "dweb:/ipfs/QmdtCaJjVeCeTc2QigPRs52b9iScS73RFAvj6mJVMmkhit"
        ],
        "license": null
      },
      "contracts/governance/IFeeSharingCollector.sol": {
        "keccak256": "0x7794cb434d9395ea983dcf8ded48db5b68897a338429320f60172c4caa47fb40",
        "urls": [
          "bzz-raw://b9ed75fd4b75f120ed265e7b69d86ce6e62388a50f38058e2fa34f5ea3ffcc2e",
          "dweb:/ipfs/QmZbMA6F4FxhcAT4zTc521LLRbZxFVVuD3zzj981awpDmp"
        ],
        "license": null
      },
      "contracts/governance/Staking/interfaces/IStaking.sol": {
        "keccak256": "0x6777e38b4bd5a63e10f3bf7aba355401713bb649811c6dfa1bda40ebd8fee30b",
        "urls": [
          "bzz-raw://676e42641fb1d335dde7bb928779014ff2adf1eb1121f48a4a48e36f571287d4",
          "dweb:/ipfs/QmamokattcaQ6gRGaqUDVZejcv4rridScd9nayGcxxW1BL"
        ],
        "license": null
      },
      "contracts/governance/Vesting/fouryear/FourYearVesting.sol": {
        "keccak256": "0x83ef3d0ad2e9da621cf555ba0795cf91345025d4ef32b21a36e6e1d6509cbb91",
        "urls": [
          "bzz-raw://2960b73b2d239683417c53394447050121f1f573d8e941a971c220858ba70dac",
          "dweb:/ipfs/QmRSrsiV2NBS63UnaSn9rsei1aepGjDvCMFo7tkdPzot3T"
        ],
        "license": null
      },
      "contracts/governance/Vesting/fouryear/FourYearVestingStorage.sol": {
        "keccak256": "0xaa0878f6e0b832a33b5cf8b56a516eb39272d3e1e5434ce798b30a346ab66cc0",
        "urls": [
          "bzz-raw://a45ea8d65613edeb5c1c8ac66e8f401c203da73437dbe02eb566d2c074ccb0f3",
          "dweb:/ipfs/QmYkBxWZ9W78bRsEtSKHTpANAJyGgEisBwEPmc73M6XSkk"
        ],
        "license": null
      },
      "contracts/interfaces/IERC20.sol": {
        "keccak256": "0xea0bb1bf7d022130bb42a4efdfd875ef76ac5ac730a94ddd7b8c9949d4253855",
        "urls": [
          "bzz-raw://2050b03a2a1d4203698261daf2f46749bf5b72e3d23c272553e047e6bea4af40",
          "dweb:/ipfs/QmPY8bbNv3KxnyQ4Z6DtHkYu2U1Kfd7ooRDRUWNuw6v4Jt"
        ],
        "license": null
      },
      "contracts/openzeppelin/Address.sol": {
        "keccak256": "0x23df48a01dbac9b25e86c9131174fb7752bbc7e741e63f1aa982de22e055ad54",
        "urls": [
          "bzz-raw://0928673cfdca6f6917432e1cff628b726b4396ed0f4b08d3281a7ebbdb2380e3",
          "dweb:/ipfs/QmY12enUUEaE7sC5PZAdqJo63JxaH2FqVJtHZxxB9HzVYE"
        ],
        "license": null
      },
      "contracts/openzeppelin/Context.sol": {
        "keccak256": "0x7860cb1591dbd66bb497c60c46866d9fcdb56c73306ed86b25801000af1c7b2b",
        "urls": [
          "bzz-raw://79e480eab5cb03c034f7fb2c177f23874fddebbb3514d773729bb094a0fda826",
          "dweb:/ipfs/QmTfDHE4fnQE3gfycu7NePREWfWFgJgmaEmHDn4uyTnMBP"
        ],
        "license": null
      },
      "contracts/openzeppelin/Ownable.sol": {
        "keccak256": "0x94496c375b3e82d87d7f01ce1577f008fab374312cf93012a0eca716e6aadb3a",
        "urls": [
          "bzz-raw://ea268f87bc9d256b99aae4d98f23931f485295b5720f505e0554223c9b54431a",
          "dweb:/ipfs/QmWCLqTijearegiDuWyhrkRQXXACT1sVUG6cF3L9pszb6Y"
        ],
        "license": null
      },
      "contracts/proxy/Proxy.sol": {
        "keccak256": "0x8574814d1ea5b04efc8ef1e629e04e5783d4c106ff73a47c72e279c027a6a403",
        "urls": [
          "bzz-raw://63d5b54995b6c17679664647700e5ec427eb48c49c2ff845722a77b6aae1adc2",
          "dweb:/ipfs/QmVvYVtFuHr84Z43XJe5SMM2fmeFUXPrQ9VdkAtRoLnjcK"
        ],
        "license": null
      },
      "contracts/proxy/UpgradableProxy.sol": {
        "keccak256": "0xc876883361bd3b675041b1c01c2be94a994f8ba6af516f01b171235a360b96ed",
        "urls": [
          "bzz-raw://bbfe495a953d615eb4b2bf606b3b7c2a365ee74a3805f5e7f508f4b92963b04d",
          "dweb:/ipfs/QmQmoog5tFt7TeBWFGLpjEdeSP5uXsHpVcNzXcTAkTi7ud"
        ],
        "license": null
      },
      "contracts/token/IApproveAndCall.sol": {
        "keccak256": "0x0ca93f8436a4d81d80de5ea9214139b490d96f708f09c975a0869ce9abc61635",
        "urls": [
          "bzz-raw://75cbb5a7f183ddae4f4cbe8afac44e56be521f491e740761fca9d55698a14e68",
          "dweb:/ipfs/QmS8Z6LNQZAgAdRL1tF1emQgsD2DWk9h3EvXXkrayE8jFJ"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/governance/Vesting/fouryear/FourYearVesting.sol",
    "id": 31206,
    "exportedSymbols": {
      "FourYearVesting": [
        31205
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:3048:98",
    "nodes": [
      {
        "id": 31029,
        "nodeType": "PragmaDirective",
        "src": "0:24:98",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".17"
        ]
      },
      {
        "id": 31030,
        "nodeType": "PragmaDirective",
        "src": "25:33:98",
        "nodes": [],
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ]
      },
      {
        "id": 31031,
        "nodeType": "ImportDirective",
        "src": "60:43:98",
        "nodes": [],
        "absolutePath": "contracts/openzeppelin/Ownable.sol",
        "file": "../../../openzeppelin/Ownable.sol",
        "scope": 31206,
        "sourceUnit": 55145,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31032,
        "nodeType": "ImportDirective",
        "src": "104:40:98",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IERC20.sol",
        "file": "../../../interfaces/IERC20.sol",
        "scope": 31206,
        "sourceUnit": 32312,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31033,
        "nodeType": "ImportDirective",
        "src": "145:40:98",
        "nodes": [],
        "absolutePath": "contracts/governance/IFeeSharingCollector.sol",
        "file": "../../IFeeSharingCollector.sol",
        "scope": 31206,
        "sourceUnit": 16048,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31034,
        "nodeType": "ImportDirective",
        "src": "186:36:98",
        "nodes": [],
        "absolutePath": "contracts/governance/ApprovalReceiver.sol",
        "file": "../../ApprovalReceiver.sol",
        "scope": 31206,
        "sourceUnit": 12398,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31035,
        "nodeType": "ImportDirective",
        "src": "223:38:98",
        "nodes": [],
        "absolutePath": "contracts/governance/Vesting/fouryear/FourYearVestingStorage.sol",
        "file": "./FourYearVestingStorage.sol",
        "scope": 31206,
        "sourceUnit": 32132,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31036,
        "nodeType": "ImportDirective",
        "src": "262:44:98",
        "nodes": [],
        "absolutePath": "contracts/proxy/UpgradableProxy.sol",
        "file": "../../../proxy/UpgradableProxy.sol",
        "scope": 31206,
        "sourceUnit": 56081,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31037,
        "nodeType": "ImportDirective",
        "src": "307:43:98",
        "nodes": [],
        "absolutePath": "contracts/openzeppelin/Address.sol",
        "file": "../../../openzeppelin/Address.sol",
        "scope": 31206,
        "sourceUnit": 54445,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31205,
        "nodeType": "ContractDefinition",
        "src": "568:2479:98",
        "nodes": [
          {
            "id": 31171,
            "nodeType": "FunctionDefinition",
            "src": "991:1220:98",
            "nodes": [],
            "body": {
              "id": 31170,
              "nodeType": "Block",
              "src": "1198:1013:98",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 31059,
                            "name": "_logic",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31043,
                            "src": "1235:6:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 31057,
                            "name": "Address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54444,
                            "src": "1216:7:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Address_$54444_$",
                              "typeString": "type(library Address)"
                            }
                          },
                          "id": 31058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54396,
                          "src": "1216:18:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 31060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1216:26:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5f6c6f676963206e6f74206120636f6e7472616374",
                        "id": 31061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1244:23:98",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4f712a575551d546d8dd239ffee319afd92fc3f0ad143f59a8f96b8c16d571c1",
                          "typeString": "literal_string \"_logic not a contract\""
                        },
                        "value": "_logic not a contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4f712a575551d546d8dd239ffee319afd92fc3f0ad143f59a8f96b8c16d571c1",
                          "typeString": "literal_string \"_logic not a contract\""
                        }
                      ],
                      "id": 31056,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        62895,
                        62896
                      ],
                      "referencedDeclaration": 62896,
                      "src": "1208:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 31062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1208:60:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31063,
                  "nodeType": "ExpressionStatement",
                  "src": "1208:60:98"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 31069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 31065,
                          "name": "_SOV",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31045,
                          "src": "1286:4:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 31067,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1302:1:98",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 31066,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1294:7:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 31068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1294:10:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1286:18:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "534f56206164647265737320696e76616c6964",
                        "id": 31070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1306:21:98",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_faa1f3c953107be4d53264056b6785d521ae698e5d224bc0075fc86373ba5856",
                          "typeString": "literal_string \"SOV address invalid\""
                        },
                        "value": "SOV address invalid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_faa1f3c953107be4d53264056b6785d521ae698e5d224bc0075fc86373ba5856",
                          "typeString": "literal_string \"SOV address invalid\""
                        }
                      ],
                      "id": 31064,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        62895,
                        62896
                      ],
                      "referencedDeclaration": 62896,
                      "src": "1278:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 31071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1278:50:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31072,
                  "nodeType": "ExpressionStatement",
                  "src": "1278:50:98"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 31076,
                            "name": "_SOV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31045,
                            "src": "1365:4:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 31074,
                            "name": "Address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54444,
                            "src": "1346:7:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Address_$54444_$",
                              "typeString": "type(library Address)"
                            }
                          },
                          "id": 31075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54396,
                          "src": "1346:18:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 31077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1346:24:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5f534f56206e6f74206120636f6e7472616374",
                        "id": 31078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1372:21:98",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a6e297f1894b7b67a2810b8880591645472f5dabace0fa51fda5469df6561455",
                          "typeString": "literal_string \"_SOV not a contract\""
                        },
                        "value": "_SOV not a contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a6e297f1894b7b67a2810b8880591645472f5dabace0fa51fda5469df6561455",
                          "typeString": "literal_string \"_SOV not a contract\""
                        }
                      ],
                      "id": 31073,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        62895,
                        62896
                      ],
                      "referencedDeclaration": 62896,
                      "src": "1338:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 31079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1338:56:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31080,
                  "nodeType": "ExpressionStatement",
                  "src": "1338:56:98"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 31086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 31082,
                          "name": "_stakingAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31047,
                          "src": "1412:15:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 31084,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1439:1:98",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 31083,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1431:7:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 31085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1431:10:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1412:29:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7374616b696e67206164647265737320696e76616c6964",
                        "id": 31087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1443:25:98",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dad5f662c3fef12349ee5cce4e61e29872181081c3701c492f86e4a0edbc8478",
                          "typeString": "literal_string \"staking address invalid\""
                        },
                        "value": "staking address invalid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dad5f662c3fef12349ee5cce4e61e29872181081c3701c492f86e4a0edbc8478",
                          "typeString": "literal_string \"staking address invalid\""
                        }
                      ],
                      "id": 31081,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        62895,
                        62896
                      ],
                      "referencedDeclaration": 62896,
                      "src": "1404:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 31088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1404:65:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31089,
                  "nodeType": "ExpressionStatement",
                  "src": "1404:65:98"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 31093,
                            "name": "_stakingAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31047,
                            "src": "1506:15:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 31091,
                            "name": "Address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54444,
                            "src": "1487:7:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Address_$54444_$",
                              "typeString": "type(library Address)"
                            }
                          },
                          "id": 31092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54396,
                          "src": "1487:18:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 31094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1487:35:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5f7374616b696e6741646472657373206e6f74206120636f6e7472616374",
                        "id": 31095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1524:32:98",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c83b448bddb28656ac6062de95976467b9e19f2f2b67006e31047746b56216d",
                          "typeString": "literal_string \"_stakingAddress not a contract\""
                        },
                        "value": "_stakingAddress not a contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8c83b448bddb28656ac6062de95976467b9e19f2f2b67006e31047746b56216d",
                          "typeString": "literal_string \"_stakingAddress not a contract\""
                        }
                      ],
                      "id": 31090,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        62895,
                        62896
                      ],
                      "referencedDeclaration": 62896,
                      "src": "1479:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 31096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1479:78:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31097,
                  "nodeType": "ExpressionStatement",
                  "src": "1479:78:98"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 31103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 31099,
                          "name": "_tokenOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31049,
                          "src": "1575:11:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 31101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1598:1:98",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 31100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1590:7:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 31102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1590:10:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1575:25:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "746f6b656e206f776e6572206164647265737320696e76616c6964",
                        "id": 31104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1602:29:98",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71badb12b462f4357d8abeb7958ef3c52ee29468d7ede1ce8722670c62cbc0a2",
                          "typeString": "literal_string \"token owner address invalid\""
                        },
                        "value": "token owner address invalid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71badb12b462f4357d8abeb7958ef3c52ee29468d7ede1ce8722670c62cbc0a2",
                          "typeString": "literal_string \"token owner address invalid\""
                        }
                      ],
                      "id": 31098,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        62895,
                        62896
                      ],
                      "referencedDeclaration": 62896,
                      "src": "1567:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 31105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1567:65:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31106,
                  "nodeType": "ExpressionStatement",
                  "src": "1567:65:98"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 31112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 31108,
                          "name": "_feeSharingCollector",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31051,
                          "src": "1650:20:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 31110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1682:1:98",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 31109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1674:7:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 31111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1674:10:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1650:34:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "66656553686172696e67436f6c6c6563746f72206164647265737320696e76616c6964",
                        "id": 31113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1686:37:98",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a353919a0de4003006015e0640cc8f615363f7858e0b2f5ff25a5064a04db46f",
                          "typeString": "literal_string \"feeSharingCollector address invalid\""
                        },
                        "value": "feeSharingCollector address invalid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a353919a0de4003006015e0640cc8f615363f7858e0b2f5ff25a5064a04db46f",
                          "typeString": "literal_string \"feeSharingCollector address invalid\""
                        }
                      ],
                      "id": 31107,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        62895,
                        62896
                      ],
                      "referencedDeclaration": 62896,
                      "src": "1642:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 31114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1642:82:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31115,
                  "nodeType": "ExpressionStatement",
                  "src": "1642:82:98"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 31119,
                            "name": "_feeSharingCollector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31051,
                            "src": "1761:20:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 31117,
                            "name": "Address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54444,
                            "src": "1742:7:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Address_$54444_$",
                              "typeString": "type(library Address)"
                            }
                          },
                          "id": 31118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54396,
                          "src": "1742:18:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 31120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1742:40:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5f66656553686172696e67436f6c6c6563746f72206e6f74206120636f6e7472616374",
                        "id": 31121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1784:37:98",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dd8505045e8269a8f4efbe31f8bd126aeed39323016d921daa796240a360aeec",
                          "typeString": "literal_string \"_feeSharingCollector not a contract\""
                        },
                        "value": "_feeSharingCollector not a contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dd8505045e8269a8f4efbe31f8bd126aeed39323016d921daa796240a360aeec",
                          "typeString": "literal_string \"_feeSharingCollector not a contract\""
                        }
                      ],
                      "id": 31116,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        62895,
                        62896
                      ],
                      "referencedDeclaration": 62896,
                      "src": "1734:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 31122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1734:88:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31123,
                  "nodeType": "ExpressionStatement",
                  "src": "1734:88:98"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 31130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 31127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 31125,
                                "name": "_extendDurationFor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31053,
                                "src": "1841:18:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "%",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 31126,
                                "name": "FOUR_WEEKS",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32114,
                                "src": "1862:10:98",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1841:31:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 31128,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1840:33:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 31129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1877:1:98",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1840:38:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696e76616c6964206475726174696f6e",
                        "id": 31131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1880:18:98",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a27bcc4645f99d7350d87c430e841039dd871cc93aceca30fe9cd0808128f918",
                          "typeString": "literal_string \"invalid duration\""
                        },
                        "value": "invalid duration"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a27bcc4645f99d7350d87c430e841039dd871cc93aceca30fe9cd0808128f918",
                          "typeString": "literal_string \"invalid duration\""
                        }
                      ],
                      "id": 31124,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        62895,
                        62896
                      ],
                      "referencedDeclaration": 62896,
                      "src": "1832:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 31132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1832:67:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31133,
                  "nodeType": "ExpressionStatement",
                  "src": "1832:67:98"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 31135,
                        "name": "_logic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31043,
                        "src": "1929:6:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 31134,
                      "name": "_setImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55982,
                      "src": "1910:18:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 31136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1910:26:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31137,
                  "nodeType": "ExpressionStatement",
                  "src": "1910:26:98"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 31142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 31138,
                      "name": "SOV",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32095,
                      "src": "1946:3:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$32311",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 31140,
                          "name": "_SOV",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31045,
                          "src": "1959:4:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 31139,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32311,
                        "src": "1952:6:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$32311_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 31141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1952:12:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$32311",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1946:18:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$32311",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 31143,
                  "nodeType": "ExpressionStatement",
                  "src": "1946:18:98"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 31148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 31144,
                      "name": "staking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32097,
                      "src": "1974:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStaking_$16882",
                        "typeString": "contract IStaking"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 31146,
                          "name": "_stakingAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31047,
                          "src": "1993:15:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 31145,
                        "name": "IStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16882,
                        "src": "1984:8:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IStaking_$16882_$",
                          "typeString": "type(contract IStaking)"
                        }
                      },
                      "id": 31147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1984:25:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStaking_$16882",
                        "typeString": "contract IStaking"
                      }
                    },
                    "src": "1974:35:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStaking_$16882",
                      "typeString": "contract IStaking"
                    }
                  },
                  "id": 31149,
                  "nodeType": "ExpressionStatement",
                  "src": "1974:35:98"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 31152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 31150,
                      "name": "tokenOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32099,
                      "src": "2019:10:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 31151,
                      "name": "_tokenOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31049,
                      "src": "2032:11:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2019:24:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 31153,
                  "nodeType": "ExpressionStatement",
                  "src": "2019:24:98"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 31158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 31154,
                      "name": "feeSharingCollector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32101,
                      "src": "2053:19:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFeeSharingCollector_$16047",
                        "typeString": "contract IFeeSharingCollector"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 31156,
                          "name": "_feeSharingCollector",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31051,
                          "src": "2096:20:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 31155,
                        "name": "IFeeSharingCollector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16047,
                        "src": "2075:20:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IFeeSharingCollector_$16047_$",
                          "typeString": "type(contract IFeeSharingCollector)"
                        }
                      },
                      "id": 31157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2075:42:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFeeSharingCollector_$16047",
                        "typeString": "contract IFeeSharingCollector"
                      }
                    },
                    "src": "2053:64:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFeeSharingCollector_$16047",
                      "typeString": "contract IFeeSharingCollector"
                    }
                  },
                  "id": 31159,
                  "nodeType": "ExpressionStatement",
                  "src": "2053:64:98"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 31164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 31160,
                      "name": "maxInterval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32116,
                      "src": "2127:11:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 31163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "3138",
                        "id": 31161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2141:2:98",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 31162,
                        "name": "FOUR_WEEKS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32114,
                        "src": "2146:10:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2141:15:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2127:29:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 31165,
                  "nodeType": "ExpressionStatement",
                  "src": "2127:29:98"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 31168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 31166,
                      "name": "extendDurationFor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32130,
                      "src": "2166:17:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 31167,
                      "name": "_extendDurationFor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31053,
                      "src": "2186:18:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2166:38:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 31169,
                  "nodeType": "ExpressionStatement",
                  "src": "2166:38:98"
                }
              ]
            },
            "documentation": "@notice Setup the vesting schedule.\n@param _logic The address of logic contract.\n@param _SOV The SOV token address.\n@param _tokenOwner The owner of the tokens.\n@param _feeSharingCollector Fee sharing proxy address.\n@param _extendDurationFor Duration till the unlocked tokens are extended.\n",
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "parameters": {
              "id": 31054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31043,
                  "name": "_logic",
                  "nodeType": "VariableDeclaration",
                  "scope": 31171,
                  "src": "1012:14:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31042,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1012:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31045,
                  "name": "_SOV",
                  "nodeType": "VariableDeclaration",
                  "scope": 31171,
                  "src": "1036:12:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31044,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1036:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31047,
                  "name": "_stakingAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 31171,
                  "src": "1058:23:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31046,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1058:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31049,
                  "name": "_tokenOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 31171,
                  "src": "1091:19:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31048,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1091:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31051,
                  "name": "_feeSharingCollector",
                  "nodeType": "VariableDeclaration",
                  "scope": 31171,
                  "src": "1120:28:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31050,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1120:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31053,
                  "name": "_extendDurationFor",
                  "nodeType": "VariableDeclaration",
                  "scope": 31171,
                  "src": "1158:26:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31052,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1158:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1002:188:98"
            },
            "returnParameters": {
              "id": 31055,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1198:0:98"
            },
            "scope": 31205,
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "id": 31204,
            "nodeType": "FunctionDefinition",
            "src": "2716:329:98",
            "nodes": [],
            "body": {
              "id": 31203,
              "nodeType": "Block",
              "src": "2790:255:98",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 31181,
                            "name": "_implementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31173,
                            "src": "2827:15:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 31179,
                            "name": "Address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54444,
                            "src": "2808:7:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Address_$54444_$",
                              "typeString": "type(library Address)"
                            }
                          },
                          "id": 31180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54396,
                          "src": "2808:18:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 31182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2808:35:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5f696d706c656d656e746174696f6e206e6f74206120636f6e7472616374",
                        "id": 31183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2845:32:98",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30b0d0bfa3951298a715394e590967849bf09bed2ac8c25d030d41122a0e66ee",
                          "typeString": "literal_string \"_implementation not a contract\""
                        },
                        "value": "_implementation not a contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30b0d0bfa3951298a715394e590967849bf09bed2ac8c25d030d41122a0e66ee",
                          "typeString": "literal_string \"_implementation not a contract\""
                        }
                      ],
                      "id": 31178,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        62895,
                        62896
                      ],
                      "referencedDeclaration": 62896,
                      "src": "2800:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 31184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2800:78:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31185,
                  "nodeType": "ExpressionStatement",
                  "src": "2800:78:98"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 31189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 31187,
                          "name": "newImplementation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32128,
                          "src": "2896:17:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 31188,
                          "name": "_implementation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31173,
                          "src": "2917:15:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2896:36:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "61646472657373206d69736d61746368",
                        "id": 31190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2934:18:98",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ecd55b77c5bee50cf63070cac5fd60438da01045d7c63221a66e53431ca9bbbf",
                          "typeString": "literal_string \"address mismatch\""
                        },
                        "value": "address mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ecd55b77c5bee50cf63070cac5fd60438da01045d7c63221a66e53431ca9bbbf",
                          "typeString": "literal_string \"address mismatch\""
                        }
                      ],
                      "id": 31186,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        62895,
                        62896
                      ],
                      "referencedDeclaration": 62896,
                      "src": "2888:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 31191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2888:65:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31192,
                  "nodeType": "ExpressionStatement",
                  "src": "2888:65:98"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 31194,
                        "name": "_implementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31173,
                        "src": "2982:15:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 31193,
                      "name": "_setImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55982,
                      "src": "2963:18:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 31195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2963:35:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31196,
                  "nodeType": "ExpressionStatement",
                  "src": "2963:35:98"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 31201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 31197,
                      "name": "newImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32128,
                      "src": "3008:17:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 31199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3036:1:98",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 31198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3028:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 31200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3028:10:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3008:30:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 31202,
                  "nodeType": "ExpressionStatement",
                  "src": "3008:30:98"
                }
              ]
            },
            "documentation": "@notice Set address of the implementation - vesting owner.\n@dev Overriding setImplementation function of UpgradableProxy. The logic can only be\nmodified when both token owner and veting owner approve. Since\nsetImplementation can only be called by vesting owner, we also need to check\nif the new logic is already approved by the token owner.\n@param _implementation Address of the implementation. Must match with what is set by token owner.\n",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 31176,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 31175,
                  "name": "onlyProxyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 55956,
                  "src": "2775:14:98",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2775:14:98"
              }
            ],
            "name": "setImplementation",
            "parameters": {
              "id": 31174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31173,
                  "name": "_implementation",
                  "nodeType": "VariableDeclaration",
                  "scope": 31204,
                  "src": "2743:23:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31172,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2743:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2742:25:98"
            },
            "returnParameters": {
              "id": 31177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2790:0:98"
            },
            "scope": 31205,
            "stateMutability": "nonpayable",
            "superFunction": 56067,
            "visibility": "public"
          }
        ],
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 31038,
              "name": "FourYearVestingStorage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 32131,
              "src": "596:22:98",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FourYearVestingStorage_$32131",
                "typeString": "contract FourYearVestingStorage"
              }
            },
            "id": 31039,
            "nodeType": "InheritanceSpecifier",
            "src": "596:22:98"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 31040,
              "name": "UpgradableProxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 56080,
              "src": "620:15:98",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UpgradableProxy_$56080",
                "typeString": "contract UpgradableProxy"
              }
            },
            "id": 31041,
            "nodeType": "InheritanceSpecifier",
            "src": "620:15:98"
          }
        ],
        "contractDependencies": [
          32131,
          54471,
          55144,
          56050,
          56080
        ],
        "contractKind": "contract",
        "documentation": "@title Four Year Vesting Contract.\n * @notice A four year vesting contract.\n * @dev Vesting contract is upgradable,\nMake sure the vesting owner is multisig otherwise it will be\ncatastrophic.\n",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          31205,
          56080,
          56050,
          32131,
          55144,
          54471
        ],
        "name": "FourYearVesting",
        "scope": 31206
      }
    ]
  },
  "id": 98
}