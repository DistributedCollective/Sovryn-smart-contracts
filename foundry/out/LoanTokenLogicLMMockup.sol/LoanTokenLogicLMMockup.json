{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "valueBefore",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "valueAfter",
          "type": "uint256"
        }
      ],
      "name": "AllowanceUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "burner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "assetAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "loanToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "loanAmount",
          "type": "uint256"
        }
      ],
      "name": "FlashBorrow",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "assetAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "TINY_AMOUNT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "VERSION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "assetBalanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "avgBorrowInterestRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "baseRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "loanId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "withdrawAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initialLoanDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralTokenSent",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "collateralTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "borrow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "borrowInterestRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "burnAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "useLM",
          "type": "bool"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "redeemed",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "burnAmount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "loanAmountPaid",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assetBorrow",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "assetSupply",
          "type": "uint256"
        }
      ],
      "name": "calculateSupplyInterestRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanTokenSent",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "collateralTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minEntryPrice",
          "type": "uint256"
        }
      ],
      "name": "checkPriceDivergence",
      "outputs": [],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "checkpointPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "checkpointSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "earlyAccessToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "depositAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initialLoanDuration",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "collateralTokenAddress",
          "type": "address"
        }
      ],
      "name": "getBorrowAmountForDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "borrowAmount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "borrowAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initialLoanDuration",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "collateralTokenAddress",
          "type": "address"
        }
      ],
      "name": "getDepositAmountForBorrow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "depositAmount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "leverageAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loanTokenSent",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralTokenSent",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "collateralTokenAddress",
          "type": "address"
        }
      ],
      "name": "getEstimatedMarginDetails",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "principal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "interestRate",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getListFunctionSignatures",
      "outputs": [
        {
          "internalType": "bytes4[]",
          "name": "functionSignatures",
          "type": "bytes4[]"
        },
        {
          "internalType": "bytes32",
          "name": "moduleName",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "leverageAmount",
          "type": "uint256"
        }
      ],
      "name": "getMaxEscrowAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "maxEscrowAmount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "kinkLevel",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "liquidityMiningAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "loanParamsIds",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "loanTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lowUtilBaseRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lowUtilRateMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "loanId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "leverageAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loanTokenSent",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralTokenSent",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "collateralTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minEntryPrice",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "loanDataBytes",
          "type": "bytes"
        }
      ],
      "name": "marginTrade",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "loanId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "leverageAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loanTokenSent",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralTokenSent",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "collateralTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minEntryPrice",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "affiliateReferrer",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "loanDataBytes",
          "type": "bytes"
        }
      ],
      "name": "marginTradeAffiliate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "marketLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxScaleRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "depositAmount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mintAmount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "depositAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "useLM",
          "type": "bool"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "minted",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "borrowAmount",
          "type": "uint256"
        }
      ],
      "name": "nextBorrowInterestRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "supplyAmount",
          "type": "uint256"
        }
      ],
      "name": "nextSupplyInterestRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pauser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "profitOf",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rateMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "sovrynContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "string",
          "name": "source",
          "type": "string"
        }
      ],
      "name": "stringToBytes32",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "result",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "supplyInterestRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "targetLevel",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "target_",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalAssetBorrow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalAssetSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assetSupply",
          "type": "uint256"
        }
      ],
      "name": "totalSupplyInterestRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "transactionLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wrbtcTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6080604052600160009081556200001e6001600160e01b036200007216565b600180546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35062000076565b3390565b615ed480620000866000396000f3fe6080604052600436106103a25760003560e01c80637b7933b4116101e7578063b9fe1a8f1161010d578063e41b07e3116100a0578063f6b69f991161006f578063f6b69f99146109da578063f851a440146109ed578063f8dd4f0e14610a02578063ffa1ad7414610a17576103a2565b8063e41b07e314610965578063eebc508114610985578063ef2b0b39146109a5578063f2fde38b146109ba576103a2565b8063d1a1beb4116100dc578063d1a1beb4146108f0578063d65a502114610910578063d759dbeb14610930578063dd62ed3e14610945576103a2565b8063b9fe1a8f14610886578063ba0e43bf146108a6578063ca37e666146108bb578063cfb51928146108d0576103a2565b80638f32d59b116101855780639bda3a98116101545780639bda3a981461081c5780639dc29fac146108315780639fd0506d14610851578063a9059cbb14610866576103a2565b80638f32d59b146107ba5780638fb807c5146107cf57806390967de5146107e457806395d89b4114610807576103a2565b8063829b38f4116101c1578063829b38f41461075b5780638325a1c01461077b5780638da5cb5b146107905780638ee6c4e6146107a5576103a2565b80637b7933b41461071c5780637e37c08c146107315780637ff9b59614610746576103a2565b80632f6b600d116102cc57806356e07d701161026a5780636d23d1ac116102395780636d23d1ac146106a757806370a08231146106c757806376fd4fdf146106e7578063797bf38514610707576103a2565b806356e07d701461062e578063612ef80b14610643578063631a3ef8146106585780636b40cd4014610678576103a2565b8063330691ac116102a6578063330691ac146105c457806340c10f19146105d957806344a4a003146105f957806354198ce91461060e576103a2565b80632f6b600d1461056d578063313ce567146105825780633291c11a146105a4576103a2565b8063124168981161034457806320f6d07c1161031357806320f6d07c1461050457806323b872dd1461051957806328a02f19146105395780632ea295fa1461055a576103a2565b806312416898146104a557806318160ddd146104c55780631d0806ae146104da5780631f68f20a146104ef576103a2565b806306fdde031161038057806306fdde031461041f578063095ea7b31461044157806309ec6b6b1461046e57806310e5764414610483576103a2565b806304797930146103a757806306947a3a146103dd57806306b3efd6146103ff575b600080fd5b3480156103b357600080fd5b506103c76103c2366004614ee6565b610a2c565b6040516103d49190615aa8565b60405180910390f35b3480156103e957600080fd5b506103f2610bd5565b6040516103d49190615921565b34801561040b57600080fd5b506103c761041a366004614a79565b610be4565b34801561042b57600080fd5b50610434610cd0565b6040516103d49190615b27565b34801561044d57600080fd5b5061046161045c366004614b3c565b610d5b565b6040516103d49190615a9a565b34801561047a57600080fd5b506103c7610dc6565b34801561048f57600080fd5b506104a361049e366004614e76565b610ddb565b005b3480156104b157600080fd5b506103c76104c0366004614e3a565b610ebe565b3480156104d157600080fd5b506103c7610ee9565b3480156104e657600080fd5b506103c7610eef565b3480156104fb57600080fd5b506103c7610ef5565b34801561051057600080fd5b506103c7610efb565b34801561052557600080fd5b50610461610534366004614aef565b610f8a565b61054c610547366004614d76565b611053565b6040516103d4929190615d18565b61054c610568366004614bcd565b6113e5565b34801561057957600080fd5b506103f261176c565b34801561058e57600080fd5b5061059761177b565b6040516103d49190615d41565b3480156105b057600080fd5b506103c76105bf366004614e3a565b611784565b3480156105d057600080fd5b506103c7611796565b3480156105e557600080fd5b506103c76105f4366004614b3c565b61179c565b34801561060557600080fd5b506103c761190e565b34801561061a57600080fd5b506103c7610629366004614a79565b611920565b34801561063a57600080fd5b506103c76119c1565b34801561064f57600080fd5b506103c76119c7565b34801561066457600080fd5b506103c7610673366004614ee6565b6119f8565b34801561068457600080fd5b50610698610693366004614f29565b611b98565b6040516103d493929190615d26565b3480156106b357600080fd5b506103c76106c2366004614e97565b611ca9565b3480156106d357600080fd5b506103c76106e2366004614a79565b611d8c565b3480156106f357600080fd5b506103c7610702366004614b6c565b611da7565b34801561071357600080fd5b506103f2611f84565b34801561072857600080fd5b506103c7611f98565b34801561073d57600080fd5b506103c7611f9e565b34801561075257600080fd5b506103c7611fa4565b34801561076757600080fd5b506103c7610776366004614e3a565b611fe2565b34801561078757600080fd5b506103c7612062565b34801561079c57600080fd5b506103f261206e565b3480156107b157600080fd5b506103f261207d565b3480156107c657600080fd5b5061046161208c565b3480156107db57600080fd5b506103c76120b2565b3480156107f057600080fd5b506107f96120e2565b6040516103d4929190615a7a565b34801561081357600080fd5b5061043461278f565b34801561082857600080fd5b506103f26127ea565b34801561083d57600080fd5b506103c761084c366004614b3c565b6127f9565b34801561085d57600080fd5b506103f26128b9565b34801561087257600080fd5b50610461610881366004614b3c565b6128c8565b34801561089257600080fd5b506103c76108a1366004614e3a565b6128d8565b3480156108b257600080fd5b506103c76128e3565b3480156108c757600080fd5b506103f26128e9565b3480156108dc57600080fd5b506103c76108eb366004614e05565b6128f8565b3480156108fc57600080fd5b506103c761090b366004614b6c565b612916565b34801561091c57600080fd5b506103c761092b366004614e3a565b6129ee565b34801561093c57600080fd5b506103c7612a01565b34801561095157600080fd5b506103c7610960366004614ab5565b612a07565b34801561097157600080fd5b506103c7610980366004614a79565b612a32565b34801561099157600080fd5b506103c76109a0366004614a79565b612a44565b3480156109b157600080fd5b506103c7612a5f565b3480156109c657600080fd5b506104a36109d5366004614a79565b612a65565b61054c6109e8366004614c95565b612a95565b3480156109f957600080fd5b506103f2612b65565b348015610a0e57600080fd5b506103c7612b74565b348015610a2357600080fd5b506103c7612b7e565b60008315610bce576001600160a01b038216610a51576017546001600160a01b031691505b600060106000846001604051602001610a6b929190615881565b60408051601f19818403018152918152815160209283012083529082019290925281016000205460165460048054935163ca74a5d960e01b81529294506001600160a01b039182169363e762319f936101009091049092169187918a91869163ca74a5d991610adc918a9101615aa8565b60206040518083038186803b158015610af457600080fd5b505afa158015610b08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b2c9190810190614e58565b60016040518663ffffffff1660e01b8152600401610b4e95949392919061599b565b60206040518083038186803b158015610b6657600080fd5b505afa158015610b7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b9e9190810190614e58565b9150610bb282610bac6120b2565b86612b83565b9350610bc09150612bfc9050565b821115610bcc57600091505b505b9392505050565b6016546001600160a01b031681565b601c5460009081906001600160a01b031615610c7f57601c54604051636822955360e11b81526001600160a01b039091169063d0452aa690610c2c903090879060040161593d565b60206040518083038186803b158015610c4457600080fd5b505afa158015610c58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c7c9190810190614e58565b90505b610cc7670de0b6b3a7640000610cbb610c96611fa4565b610caf85610ca389611d8c565b9063ffffffff612c3216565b9063ffffffff612c5716565b9063ffffffff612c9116565b9150505b919050565b6002805460408051602060018416156101000260001901909316849004601f81018490048402820184019092528181529291830182828015610d535780601f10610d2857610100808354040283529160200191610d53565b820191906000526020600020905b815481529060010190602001808311610d3657829003601f168201915b505050505081565b3360008181526014602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610db4908690615aa8565b60405180910390a35060015b92915050565b6000610dd56104c06000612cd3565b90505b90565b60165460048054604051631a51577760e21b81526000936001600160a01b03908116936369455ddc93610e1c936101009091049092169188918a9101615973565b60206040518083038186803b158015610e3457600080fd5b505afa158015610e48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610e6c9190810190614e58565b90506000610e8c85610cbb84670de0b6b3a764000063ffffffff612c5716565b905082811015610eb75760405162461bcd60e51b8152600401610eae90615b88565b60405180910390fd5b5050505050565b600080610ec9610efb565b90508015610ee357610edb8184611ca9565b915050610ccb565b50919050565b60155490565b600e5481565b60055481565b6016546004805460405163250f447f60e11b81526000936001600160a01b0390811693634a1e88fe93610f3a933093610100909204909116910161593d565b60206040518083038186803b158015610f5257600080fd5b505afa158015610f66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610dd59190810190614e58565b60165460405163115dd4b160e01b815260009161104b918691869186916001600160a01b03169063115dd4b190610fc590339060040161592f565b60206040518083038186803b158015610fdd57600080fd5b505afa158015610ff1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506110159190810190614baf565b611042576001600160a01b0388166000908152601460209081526040808320338452909152902054611046565b6000195b612d0d565b949350505050565b6000806001600054146110785760405162461bcd60e51b8152600401610eae90615cc8565b6002600081905550600073ba10edd6abc7696eae685839217bdcc42139612b6001600160a01b031663ed04e1c36040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156110d157600080fd5b505af11580156110e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111099190810190614e58565b9050611113612f1d565b6001600160a01b038716611130576017546001600160a01b031696505b6004546001600160a01b038881166101009092041614156111635760405162461bcd60e51b8152600401610eae90615bf8565b8a15806111785750336001600160a01b038716145b6111945760405162461bcd60e51b8152600401610eae90615ce8565b6001600160a01b038716600090815260126020526040902054156111d7576001600160a01b0387166000908152601260205260409020548811156111d757600080fd5b60045461010090046001600160a01b0316600090815260126020526040902054156112285760045461010090046001600160a01b031660009081526012602052604090205489111561122857600080fd5b6000611235888a8c612f9d565b9050806112545760405162461bcd60e51b8152600401610eae90615c18565b61125c614927565b61126461494e565b3082526001600160a01b038916602080840182905260408401919091528101839052606081018c9052608081018b905261129c6131ca565b6112aa8d8260200151613270565b82526020820181905260045465e35fa931a000916112d69161010090046001600160a01b0316906132bf565b116112f35760405162461bcd60e51b8152600401610eae90615ca8565b61130d6f4b3b4ca85a86c47a098a2240000000008e612c91565b60a082018990529c506113268e60008f8d86868d6133e6565b9550955050505073ba10edd6abc7696eae685839217bdcc42139612b6001600160a01b0316633fa4f2456040518163ffffffff1660e01b815260040160206040518083038186803b15801561137a57600080fd5b505afa15801561138e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506113b29190810190614e58565b81146113d05760405162461bcd60e51b8152600401610eae90615b38565b50600160005590999098509650505050505050565b60008060016000541461140a5760405162461bcd60e51b8152600401610eae90615cc8565b6002600081905550600073ba10edd6abc7696eae685839217bdcc42139612b6001600160a01b031663ed04e1c36040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561146357600080fd5b505af1158015611477573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061149b9190810190614e58565b9050896114ba5760405162461bcd60e51b8152600401610eae90615cf8565b6114c2612f1d565b6001600160a01b03871660009081526012602052604090205415611505576001600160a01b03871660009081526012602052604090205488111561150557600080fd5b34158061151157508734145b801561152557508715158061152557508a15155b801561154c57506001600160a01b03871615158061154257503415155b8061154c57508a15155b801561156857508a15806115685750336001600160a01b038716145b6115845760405162461bcd60e51b8152600401610eae90615bb8565b6004546001600160a01b038881166101009092041614156115b75760405162461bcd60e51b8152600401610eae90615b48565b6115bf6131ca565b6115c7614927565b6115cf61494e565b3082526001600160a01b03888116602080850191909152908816604084015281018c90526116078c6116016000612cd3565b8d612b83565b836000018460400185602001838152508381525083815250505050898160800181815250506117198d8d601660009054906101000a90046001600160a01b03166001600160a01b031663ca74a5d9601060008f600160405160200161166d929190615881565b6040516020818303038152906040528051906020012060001c8152602001908152602001600020546040518263ffffffff1660e01b81526004016116b19190615aa8565b60206040518083038186803b1580156116c957600080fd5b505afa1580156116dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117019190810190614e58565b8c8686604051806020016040528060008152506133e6565b94509450505073ba10edd6abc7696eae685839217bdcc42139612b6001600160a01b0316633fa4f2456040518163ffffffff1660e01b815260040160206040518083038186803b15801561137a57600080fd5b6017546001600160a01b031681565b60045460ff1681565b60106020526000908152604090205481565b60065481565b60006001600054146117c05760405162461bcd60e51b8152600401610eae90615cc8565b6002600081905550600073ba10edd6abc7696eae685839217bdcc42139612b6001600160a01b031663ed04e1c36040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561181957600080fd5b505af115801561182d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118519190810190614e58565b905061185d8484613643565b915073ba10edd6abc7696eae685839217bdcc42139612b6001600160a01b0316633fa4f2456040518163ffffffff1660e01b815260040160206040518083038186803b1580156118ac57600080fd5b505afa1580156118c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118e49190810190614e58565b81146119025760405162461bcd60e51b8152600401610eae90615b38565b50600160005592915050565b6000610dd561191b610efb565b61374f565b600080827f37aa2b7d583612f016e4a4de4292cb015139b3d7762663d06a53964912ea2fb660001b6040516020016119599291906158a7565b604051602081830303815290604052805190602001209050610cc78160136000866001600160a01b03166001600160a01b03168152602001908152602001600020546119a3611fa4565b6001600160a01b038716600090815260116020526040902054613787565b600a5481565b6000806119d46000612cd3565b905060006119e0610efb565b9050808211156119f35790039050610dd8565b505090565b60008315610bce576000611a0e85610bac6120b2565b92505050611a1a612bfc565b8111610bcc576001600160a01b038316611a3d576017546001600160a01b031692505b600060106000856001604051602001611a57929190615881565b60408051601f19818403018152918152815160209283012083529082019290925281016000205460165460048054935163ca74a5d960e01b8152929450611b8f93600a936001600160a01b03938416936325decac09361010090930416918a918991869163ca74a5d991611acd918c9101615aa8565b60206040518083038186803b158015611ae557600080fd5b505afa158015611af9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611b1d9190810190614e58565b60016040518663ffffffff1660e01b8152600401611b3f95949392919061599b565b60206040518083038186803b158015611b5757600080fd5b505afa158015611b6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610ca39190810190614e58565b92505050610bce565b600080806001600160a01b038416611bb9576017546001600160a01b031693505b6000611bc6858789612f9d565b9050611bd28882613270565b9094509150611bdf612bfc565b841115611bf6575060009250829150819050611c9f565b611c06878563ffffffff612c3216565b6016546004805460405163d67f707760e01b8152939a506001600160a01b039283169363d67f707793611c4b9361010090930416918a918d918d918a918d91016159dd565b60206040518083038186803b158015611c6357600080fd5b505afa158015611c77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611c9b9190810190614e58565b9250505b9450945094915050565b60008215801590611cba5750828210155b15610dc057611d85701d6329f1c35ca4bfabb9f5610000000000610cbb611d6f68056bc75e2d63100000601660009054906101000a90046001600160a01b03166001600160a01b0316634699f8466040518163ffffffff1660e01b815260040160206040518083038186803b158015611d3257600080fd5b505afa158015611d46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611d6a9190810190614e58565b6137e1565b610caf611d7c8888613823565b610caf8961374f565b9050610dc0565b6001600160a01b031660009081526013602052604090205490565b6000600160005414611dcb5760405162461bcd60e51b8152600401610eae90615cc8565b6002600081905550600073ba10edd6abc7696eae685839217bdcc42139612b6001600160a01b031663ed04e1c36040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611e2457600080fd5b505af1158015611e38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611e5c9190810190614e58565b90508215611e7457611e6d84613855565b9150611e80565b611e7d846139fb565b91505b8115611ed457611ed4600460019054906101000a90046001600160a01b0316868460405180604001604052806015815260200174185cdcd95d081d1c985b9cd9995c8819985a5b1959605a1b815250613bb2565b73ba10edd6abc7696eae685839217bdcc42139612b6001600160a01b0316633fa4f2456040518163ffffffff1660e01b815260040160206040518083038186803b158015611f2157600080fd5b505afa158015611f35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611f599190810190614e58565b8114611f775760405162461bcd60e51b8152600401610eae90615b38565b5060016000559392505050565b60045461010090046001600160a01b031681565b600d5481565b60085481565b600f546000908190426001600160581b03908116911614611fcb57611fc7613c12565b9150505b611fdc611fd782612cd3565b613cde565b91505090565b60008061200161016d610cbb601c600b54612c5790919063ffffffff16565b9050600061201e68056bc75e2d631000008363ffffffff6137e116565b9050600061203b68056bc75e2d63100000610cbb84610caf6119c7565b905061205985610cbb83670de0b6b3a764000063ffffffff612c5716565b95945050505050565b6000610dd56000613d0d565b6001546001600160a01b031690565b601c546001600160a01b031681565b6001546000906001600160a01b03166120a3613d63565b6001600160a01b031614905090565b600f546000908190426001600160581b039081169116146120d9576120d5613c12565b9150505b611fdc81612cd3565b6040805160208082526104208201909252606091600091839180820161040080388339019050509050632ea295fa60e01b8160008151811061212057fe5b6001600160e01b03199092166020928302919091019091015280516328a02f1960e01b908290600190811061215157fe5b6001600160e01b031990921660209283029190910190910152805163f6b69f9960e01b908290600290811061218257fe5b6001600160e01b031990921660209283029190910190910152805163a9059cbb60e01b90829060039081106121b357fe5b6001600160e01b03199092166020928302919091019091015280516323b872dd60e01b90829060049081106121e457fe5b6001600160e01b03199092166020928302919091019091015280516354198ce960e01b908290600590811061221557fe5b6001600160e01b0319909216602092830291909101909101528051633ffcdacb60e11b908290600690811061224657fe5b6001600160e01b031990921660209283029190910190910152805163eebc508160e01b908290600790811061227757fe5b6001600160e01b031990921660209283029190910190910152805163612ef80b60e01b90829060089081106122a857fe5b6001600160e01b03199092166020928302919091019091015280516344a4a00360e01b90829060099081106122d957fe5b6001600160e01b031990921660209283029190910190910152805163020c968760e61b908290600a90811061230a57fe5b6001600160e01b031990921660209283029190910190910152805163b9fe1a8f60e01b908290600b90811061233b57fe5b6001600160e01b03199092166020928302919091019091015280516309ec6b6b60e01b908290600c90811061236c57fe5b6001600160e01b031990921660209283029190910190910152805163d65a502160e01b908290600d90811061239d57fe5b6001600160e01b03199092166020928302919091019091015280516302482d1360e31b908290600e9081106123ce57fe5b6001600160e01b031990921660209283029190910190910152805163083db41f60e21b908290600f9081106123ff57fe5b6001600160e01b0319909216602092830291909101909101528051638fb807c560e01b908290601090811061243057fe5b6001600160e01b03199092166020928302919091019091015280516320a6ce3d60e21b908290601190811061246157fe5b6001600160e01b0319909216602092830291909101909101528051630359f7eb60e11b908290601290811061249257fe5b6001600160e01b03199092166020928302919091019091015280516301ad033560e61b90829060139081106124c357fe5b6001600160e01b0319909216602092830291909101909101528051630c6347df60e31b90829060149081106124f457fe5b6001600160e01b03199092166020928302919091019091015280516247979360e41b908290601590811061252457fe5b6001600160e01b03199092166020928302919091019091015280516304395d9160e21b908290601690811061255557fe5b6001600160e01b0319909216602092830291909101909101528051631b48f46b60e21b908290601790811061258657fe5b6001600160e01b0319909216602092830291909101909101526040516125ab906158f5565b6040518091039020816018815181106125c057fe5b6001600160e01b0319909216602092830291909101909101526040516125e590615916565b6040518091039020816019815181106125fa57fe5b6001600160e01b03199092166020928302919091019091015260405161261f9061590b565b604051809103902081601a8151811061263457fe5b6001600160e01b03199092166020928302919091019091015260405161265990615900565b604051809103902081601b8151811061266e57fe5b6001600160e01b031990921660209283029190910190910152805163095ea7b360e01b908290601c90811061269f57fe5b6001600160e01b03199092166020928302919091019091015280516318160ddd60e01b908290601d9081106126d057fe5b6001600160e01b03199092166020928302919091019091015280516370a0823160e01b908290601e90811061270157fe5b6001600160e01b0319909216602092830291909101909101528051636eb1769f60e11b908290601f90811061273257fe5b60200260200101906001600160e01b03191690816001600160e01b03191681525050806127866040518060400160405280601081526020016f4c6f616e546f6b656e4c6f6769634c4d60801b8152506128f8565b92509250509091565b6003805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610d535780601f10610d2857610100808354040283529160200191610d53565b6018546001600160a01b031681565b600060016000541461281d5760405162461bcd60e51b8152600401610eae90615cc8565b60026000556040516128ae90732c34d66a5ca8686330e100372eb3fdfb5aeecd0b9063a9059cbb60e01b906128589087908790602401615a37565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050506040518060400160405280600581526020016432b93937b960d91b815250613d67565b600160005592915050565b601b546001600160a01b031681565b6000610bce338484600019612d0d565b6000610dc082613d0d565b60095481565b601a546001600160a01b031681565b8051600090829061290d575060009050610ccb565b50506020015190565b600060016000541461293a5760405162461bcd60e51b8152600401610eae90615cc8565b6002600081905550600073ba10edd6abc7696eae685839217bdcc42139612b6001600160a01b031663ed04e1c36040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561299357600080fd5b505af11580156129a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506129cb9190810190614e58565b905082156129e4576129dd8585613e52565b9150611ed4565b6129dd8585613643565b6000610dc06104c083610ca36000612cd3565b60075481565b6001600160a01b03918216600090815260146020908152604080832093909416825291909152205490565b60126020526000908152604090205481565b6001600160a01b031660009081526011602052604090205490565b600b5481565b612a6d61208c565b612a895760405162461bcd60e51b8152600401610eae90615c68565b612a9281613edb565b50565b6000806001600160a01b03851615612b0c5760165460405163193bbe8960e31b81526001600160a01b039091169063c9ddf44890612ad9908a90899060040161593d565b600060405180830381600087803b158015612af357600080fd5b505af1158015612b07573d6000803e3d6000fd5b505050505b612b528c8c8c8c8c8c8c8b8b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061105392505050565b915091509a509a98505050505050505050565b6019546001600160a01b031681565b65e35fa931a00081565b600681565b6000806000612b928686613f5d565b9250612bdf612bc7670de0b6b3a7640000611d6a6b0a3098c68eb9427db8000000610cbb83610caf8a8c63ffffffff612c5716565b610cbb88670de0b6b3a764000063ffffffff612c5716565b9050612bf1818763ffffffff6137e116565b915093509350939050565b600480546040516370a0823160e01b81526000926101009092046001600160a01b0316916370a0823191610f3a91309101615921565b600082820183811015610bce5760405162461bcd60e51b8152600401610eae90615b98565b600082612c6657506000610dc0565b82820282848281612c7357fe5b0414610bce5760405162461bcd60e51b8152600401610eae90615c58565b6000610bce83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250614073565b6000601554600014610ccb57600c5480612cfd57612cfa612cf2610efb565b610ca3612bfc565b90505b610edb818463ffffffff612c3216565b60006000198214612da6576040805180820190915260028152610c4d60f21b6020820152612d44908390859063ffffffff6140aa16565b6001600160a01b038616600081815260146020908152604080832033808552925291829020849055905190927f628e75c63c1873bcd3885f7aee9f58ee36f60dc789b2a6b3a978c4189bc548ba91612d9d918791615d18565b60405180910390a35b6001600160a01b038416612dcc5760405162461bcd60e51b8152600401610eae90615b58565b6001600160a01b03851660009081526013602090815260408083205481518083019092526002825261189b60f11b92820192909252909190612e17908390879063ffffffff6140aa16565b6001600160a01b03808916600090815260136020526040808220849055918916815290812054919250612e50828863ffffffff612c3216565b6001600160a01b0389166000908152601360205260408120829055909150612e76611fa4565b601c549091506001600160a01b038b8116911614801590612ea55750601c546001600160a01b038a8116911614155b15612ec257612eb68a8686846140d6565b612ec2898484846140d6565b886001600160a01b03168a6001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8a604051612f059190615aa8565b60405180910390a35060019998505050505050505050565b600080356001600160e01b0319167fd46a704bc285dbd6ff5ad3863506260b1df02812f4f857c8cc852317a6ac64f2604051602001612f5d9291906158cd565b6040516020818303038152906040528051906020012090506000815490508015612f995760405162461bcd60e51b8152600401610eae90615c68565b5050565b808215610bce57600080601660009054906101000a90046001600160a01b03166001600160a01b03166378d849ed6040518163ffffffff1660e01b815260040160206040518083038186803b158015612ff557600080fd5b505afa158015613009573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061302d9190810190614a97565b60048054604051630a7549df60e21b81526001600160a01b03938416936329d5277c93613066938c93610100909104909216910161593d565b604080518083038186803b15801561307d57600080fd5b505afa158015613091573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506130b59190810190614eb6565b91509150816000141580156130c957508015155b6130e55760405162461bcd60e51b8152600401610eae90615cb8565b60006130fb82610cbb888663ffffffff612c5716565b60165460048054604051631a51577760e21b81529394506000936001600160a01b03938416936369455ddc9361313e936101009004909116918d91889101615973565b60206040518083038186803b15801561315657600080fd5b505afa15801561316a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061318e9190810190614e58565b90508681146131ae576131ab87610cbb848463ffffffff612c5716565b91505b6131be828663ffffffff612c3216565b98975050505050505050565b600f5442906001600160581b03808316911614612a925760165460048054604051630740ff7d60e51b81526001600160a01b039384169363e81fefa09361321a9361010090049091169101615921565b600060405180830381600087803b15801561323457600080fd5b505af1158015613248573d6000803e3d6000fd5b5050600f80546001600160581b0385166affffffffffffffffffffff19909116179055505050565b60008080613290670de0b6b3a7640000610cbb868863ffffffff612c5716565b90506132a5816132a06000612cd3565b613f5d565b91506132b5826224ea008361418c565b9250509250929050565b6000806000601660009054906101000a90046001600160a01b03166001600160a01b03166378d849ed6040518163ffffffff1660e01b815260040160206040518083038186803b15801561331257600080fd5b505afa158015613326573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061334a9190810190614a97565b601754604051630a7549df60e21b81526001600160a01b03928316926329d5277c9261337e928a929091169060040161593d565b604080518083038186803b15801561339557600080fd5b505afa1580156133a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506133cd9190810190614eb6565b909250905061205981610cbb868563ffffffff612c5716565b6000806133f1612f1d565b6133f9612bfc565b846020015111158015613418575060208501516001600160a01b031615155b6134345760405162461bcd60e51b8152600401610eae90615be8565b60408501516001600160a01b031661345a5760208501516001600160a01b031660408601525b60006134688787878c6141ed565b905061348585602001518660600151612c3290919063ffffffff16565b606086015288156134ab5760608501516134a5908a63ffffffff6137e116565b60608601525b600089156134b7575060015b6000601060008a846040516020016134d0929190615881565b6040516020818303038152906040528051906020012060001c8152602001908152602001600020549050601660009054906101000a90046001600160a01b03166001600160a01b031663d84ca25484838f868f8e8e8e6040518963ffffffff1660e01b81526004016135489796959493929190615ab6565b60408051808303818588803b15801561356057600080fd5b505af1158015613574573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052506135999190810190614eb6565b6080890152602088018190526135c15760405162461bcd60e51b8152600401610eae90615c28565b601654602089015160405163f06a9c6b60e01b81526001600160a01b039092169163f06a9c6b916135f491600401615921565b600060405180830381600087803b15801561360e57600080fd5b505af1158015613622573d6000803e3d6000fd5b50505050866020015187608001519450945050505097509795505050505050565b60008061364f8361441f565b601c5491935091506000906001600160a01b0316156136ed57601c54604051636822955360e11b81526001600160a01b039091169063d0452aa69061369a903090899060040161593d565b60206040518083038186803b1580156136b257600080fd5b505afa1580156136c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506136ea9190810190614e58565b90505b6001600160a01b038516600090815260136020526040812054613716908363ffffffff612c3216565b9050600061372a828663ffffffff612c3216565b905061373887868887614529565b50613745878383876140d6565b5050505092915050565b60008115610ccb576000613761613c12565b509050610edb83610cbb61016d610caf8568056bc75e2d6310000063ffffffff612c5716565b6000816137965750600061104b565b508354612059816137d5670de0b6b3a76400006137c9886137bd898963ffffffff61464a16565b9063ffffffff61469016565b9063ffffffff6146fb16565b9063ffffffff61475f16565b6000610bce83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506140aa565b6000821580159061383357508115155b15610dc057611d8582610cbb8568056bc75e2d6310000063ffffffff612c5716565b601c54604051636822955360e11b815260009182916001600160a01b039091169063d0452aa69061388c9030903390600401615958565b60206040518083038186803b1580156138a457600080fd5b505afa1580156138b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506138dc9190810190614e58565b9050826138f86138eb33611d8c565b839063ffffffff612c3216565b10156139165760405162461bcd60e51b8152600401610eae90615bc8565b80156139f6578281101561398f57601c54604051631a4ca37b60e21b81526001600160a01b03909116906369328dec9061395890309085903390600401615a52565b600060405180830381600087803b15801561397257600080fd5b505af1158015613986573d6000803e3d6000fd5b505050506139f6565b601c54604051631a4ca37b60e21b81526001600160a01b03909116906369328dec906139c390309087903390600401615a52565b600060405180830381600087803b1580156139dd57600080fd5b505af11580156139f1573d6000803e3d6000fd5b505050505b610cc7835b600081613a1a5760405162461bcd60e51b8152600401610eae90615c78565b613a2333611d8c565b821115613a57576000198214613a4b5760405162461bcd60e51b8152600401610eae90615c38565b613a5433611d8c565b91505b613a5f6131ca565b6000613a6e611fd76000612cd3565b90506000613a8e670de0b6b3a7640000610cbb868563ffffffff612c5716565b90506000613a9a612bfc565b905081935080841115613abf5760405162461bcd60e51b8152600401610eae90615bd8565b601c546000906001600160a01b031615613b5857601c54604051636822955360e11b81526001600160a01b039091169063d0452aa690613b059030903390600401615958565b60206040518083038186803b158015613b1d57600080fd5b505afa158015613b31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613b559190810190614e58565b90505b33600090815260136020526040812054613b78908363ffffffff612c3216565b90506000613b8c828963ffffffff6137e116565b9050613b9a338989896147a5565b50613ba7338383896140d6565b505050505050919050565b604051613c0c90859063a9059cbb60e01b90613bd49087908790602401615a37565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915283613d67565b50505050565b60165460048054604051630d1979fb60e41b8152600093849384936001600160a01b039283169363d1979fb093613c549330936101009004909116910161593d565b60c06040518083038186803b158015613c6c57600080fd5b505afa158015613c80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613ca49190810190614f8a565b5091965094509250613cd7915068056bc75e2d631000009050610cbb613cca82856137e1565b859063ffffffff612c5716565b9150509091565b60155460009080613cf157600e54610cc7565b610cc781610cbb85670de0b6b3a764000063ffffffff612c5716565b6000808215613d5657600f54426001600160581b03908116911614613d3857613d34613c12565b9150505b6000613d4682610ca3612bfc565b905080841115613d54578093505b505b610cc7836132a083612cd3565b3390565b613d70836148ca565b613d8c5760405162461bcd60e51b8152600401610eae90615b68565b60006060846001600160a01b031684604051613da891906158e9565b6000604051808303816000865af19150503d8060008114613de5576040519150601f19603f3d011682016040523d82523d6000602084013e613dea565b606091505b5091509150818390613e0f5760405162461bcd60e51b8152600401610eae9190615b27565b50805115610eb75780806020019051613e2b9190810190614baf565b8390613e4a5760405162461bcd60e51b8152600401610eae9190615b27565b505050505050565b6000613e5e8383613643565b601c54909150613e7a9084906001600160a01b03168380612d0d565b50601c546040516336305cf160e21b81526001600160a01b039091169063d8c173c490613ead9086908590600401615a37565b600060405180830381600087803b158015613ec757600080fd5b505af1158015613745573d6000803e3d6000fd5b6001600160a01b038116613f015760405162461bcd60e51b8152600401610eae90615b78565b6001546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b600080613f75613f6f85610ca3610efb565b84613823565b600554600654600954600a54600b5494955060009485949392919082881015613f9c578297505b8188111561400f57968190039668056bc75e2d6310000082900380891115613fc2578098505b613fe386610ca368056bc75e2d63100000610cbb878a63ffffffff612c5716565b965061400787610ca383610cbb613ffa878d6137e1565b8e9063ffffffff612c5716565b995050614065565b61403085610ca368056bc75e2d63100000610cbb8c8963ffffffff612c5716565b98509395508593614047848663ffffffff612c3216565b95508689101561405957869850614065565b85891115614065578598505b505050505050505092915050565b600081836140945760405162461bcd60e51b8152600401610eae9190615b27565b5060008385816140a057fe5b0495945050505050565b600081848411156140ce5760405162461bcd60e51b8152600401610eae9190615b27565b505050900390565b60405160009061410c9086907f37aa2b7d583612f016e4a4de4292cb015139b3d7762663d06a53964912ea2fb6906020016158a7565b604051602081830303815290604052805190602001209050600083600014156141385760009250614169565b8415614169576001600160a01b03861660009081526011602052604090205461416690839087908690613787565b90505b90556001600160a01b039093166000908152601160205260409020929092555050565b6000806141a76301e13380610cbb878763ffffffff612c5716565b905060006141c468056bc75e2d631000008363ffffffff6137e116565b90506141e381610cbb8668056bc75e2d6310000063ffffffff612c5716565b9695505050505050565b6017546004546020840151606085015160808601516000946001600160a01b039081169461010090048116939291908a1684141561423d5760405162461bcd60e51b8152600401610eae90615c88565b349550861561429f57614265848a604001518960405180602001604052806000815250613bb2565b8683111561429a5760165460408051602081019091526000815261429a9186916001600160a01b03909116908a870390613bb2565b6142d4565b601654604080518082019091526002815261323760f01b60208201526142d49186916001600160a01b03909116908690613bb2565b80156143d757846001600160a01b03168a6001600160a01b03161480156142fa57508515155b80156143065750808610155b156143a057846001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561434657600080fd5b505af115801561435a573d6000803e3d6000fd5b505060165460408051808201909152600481526332382d6160e01b602082015261439694508e93506001600160a01b0390911691508490613bb2565b80860395506143d7565b601654604080518082019091526004815263191c16b160e11b60208201526143d7918c9133916001600160a01b0316908590614903565b811561441257601654604080518082019091526002815261323960f01b602082015261441291869133916001600160a01b0316908690614903565b5050505050949350505050565b6000808261443f5760405162461bcd60e51b8152600401610eae90615c48565b6144476131ca565b614454611fd76000612cd3565b905061447281610cbb85670de0b6b3a764000063ffffffff612c5716565b9150346144ba576144b5600460019054906101000a90046001600160a01b031633308660405180604001604052806002815260200161062760f31b815250614903565b614524565b601760009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b15801561450a57600080fd5b505af115801561451e573d6000803e3d6000fd5b50505050505b915091565b60006001600160a01b0385166145515760405162461bcd60e51b8152600401610eae90615b58565b6001600160a01b03851660009081526013602052604081205461457a908663ffffffff612c3216565b6001600160a01b03871660009081526013602052604090208190556015549091506145ab908663ffffffff612c3216565b6015556040516001600160a01b038716907fb4c03061fb5b7fed76389d5af8f2e0ddb09f8c70d1333abbb62582835e10accb906145ed90889088908890615d26565b60405180910390a2856001600160a01b031660006001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef876040516146399190615aa8565b60405180910390a395945050505050565b600081830381831280159061465f5750838113155b80614674575060008312801561467457508381135b610bce5760405162461bcd60e51b8152600401610eae90615cd8565b60008261469f57506000610dc0565b826000191480156146b35750600160ff1b82145b156146d05760405162461bcd60e51b8152600401610eae90615c98565b828202828482816146dd57fe5b0514610bce5760405162461bcd60e51b8152600401610eae90615c98565b60008161471a5760405162461bcd60e51b8152600401610eae90615d08565b8160001914801561472e5750600160ff1b83145b1561474b5760405162461bcd60e51b8152600401610eae90615c08565b600082848161475657fe5b05949350505050565b60008282018183128015906147745750838112155b80614789575060008312801561478957508381125b610bce5760405162461bcd60e51b8152600401610eae90615ba8565b6040805180820182526002815261189b60f11b6020808301919091526001600160a01b038716600090815260139091529182205482916147ed9190879063ffffffff6140aa16565b9050600a811161480e57614807858263ffffffff612c3216565b9450600090505b6001600160a01b038616600090815260136020526040902081905560155461483c908663ffffffff6137e116565b6015556040516001600160a01b038716907f743033787f4738ff4d6a7225ce2bd0977ee5f86b91a902a58f5e4d0b297b46449061487e90889088908890615d26565b60405180910390a260006001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef876040516146399190615aa8565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061104b575050151592915050565b604051610eb79086906323b872dd60e01b90613bd490889088908890602401615973565b60408051608081018252600080825260208201819052918101829052606081019190915290565b6040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8035610dc081615e6b565b8051610dc081615e6b565b8035610dc081615e7f565b8051610dc081615e7f565b8035610dc081615e88565b60008083601f8401126149e357600080fd5b50813567ffffffffffffffff8111156149fb57600080fd5b602083019150836001820283011115614a1357600080fd5b9250929050565b600082601f830112614a2b57600080fd5b8135614a3e614a3982615d76565b615d4f565b91508082526020830160208301858383011115614a5a57600080fd5b614a65838284615df1565b50505092915050565b8051610dc081615e88565b600060208284031215614a8b57600080fd5b600061104b848461499a565b600060208284031215614aa957600080fd5b600061104b84846149a5565b60008060408385031215614ac857600080fd5b6000614ad4858561499a565b9250506020614ae58582860161499a565b9150509250929050565b600080600060608486031215614b0457600080fd5b6000614b10868661499a565b9350506020614b218682870161499a565b9250506040614b32868287016149c6565b9150509250925092565b60008060408385031215614b4f57600080fd5b6000614b5b858561499a565b9250506020614ae5858286016149c6565b600080600060608486031215614b8157600080fd5b6000614b8d868661499a565b9350506020614b9e868287016149c6565b9250506040614b32868287016149b0565b600060208284031215614bc157600080fd5b600061104b84846149bb565b600080600080600080600080610100898b031215614bea57600080fd5b6000614bf68b8b6149c6565b9850506020614c078b828c016149c6565b9750506040614c188b828c016149c6565b9650506060614c298b828c016149c6565b9550506080614c3a8b828c0161499a565b94505060a0614c4b8b828c0161499a565b93505060c0614c5c8b828c0161499a565b92505060e089013567ffffffffffffffff811115614c7957600080fd5b614c858b828c01614a1a565b9150509295985092959890939650565b6000806000806000806000806000806101208b8d031215614cb557600080fd5b6000614cc18d8d6149c6565b9a50506020614cd28d828e016149c6565b9950506040614ce38d828e016149c6565b9850506060614cf48d828e016149c6565b9750506080614d058d828e0161499a565b96505060a0614d168d828e0161499a565b95505060c0614d278d828e016149c6565b94505060e0614d388d828e0161499a565b9350506101008b013567ffffffffffffffff811115614d5657600080fd5b614d628d828e016149d1565b92509250509295989b9194979a5092959850565b600080600080600080600080610100898b031215614d9357600080fd5b6000614d9f8b8b6149c6565b9850506020614db08b828c016149c6565b9750506040614dc18b828c016149c6565b9650506060614dd28b828c016149c6565b9550506080614de38b828c0161499a565b94505060a0614df48b828c0161499a565b93505060c0614c5c8b828c016149c6565b600060208284031215614e1757600080fd5b813567ffffffffffffffff811115614e2e57600080fd5b61104b84828501614a1a565b600060208284031215614e4c57600080fd5b600061104b84846149c6565b600060208284031215614e6a57600080fd5b600061104b8484614a6e565b600080600060608486031215614e8b57600080fd5b6000614b1086866149c6565b60008060408385031215614eaa57600080fd5b6000614b5b85856149c6565b60008060408385031215614ec957600080fd5b6000614ed58585614a6e565b9250506020614ae585828601614a6e565b600080600060608486031215614efb57600080fd5b6000614f0786866149c6565b9350506020614f18868287016149c6565b9250506040614b328682870161499a565b60008060008060808587031215614f3f57600080fd5b6000614f4b87876149c6565b9450506020614f5c878288016149c6565b9350506040614f6d878288016149c6565b9250506060614f7e8782880161499a565b91505092959194509250565b60008060008060008060c08789031215614fa357600080fd5b6000614faf8989614a6e565b9650506020614fc089828a01614a6e565b9550506040614fd189828a01614a6e565b9450506060614fe289828a01614a6e565b9350506080614ff389828a01614a6e565b92505060a061500489828a01614a6e565b9150509295509295509295565b600061501d83836150db565b505060200190565b61502e81615de0565b82525050565b61502e81615db1565b61502e61504982615db1565b615e29565b600061505982615da4565b6150638185615da8565b935061506e83615d9e565b8060005b8381101561509c5781516150868882615011565b975061509183615d9e565b925050600101615072565b509495945050505050565b61502e81615dbc565b61502e6150bc82615dbc565b615e34565b61502e81610dd8565b61502e6150d682610dd8565b610dd8565b61502e81615dc1565b61502e6150d682615dc1565b60006150fb82615da4565b6151058185615da8565b9350615115818560208601615dfd565b61511e81615e55565b9093019392505050565b600061513382615da4565b61513d8185610ccb565b935061514d818560208601615dfd565b9290920192915050565b6000615164601483615da8565b733932b2b73a3930b731bc903b34b7b630ba34b7b760611b815260200192915050565b6000615194600283615da8565b61031360f41b815260200192915050565b60006151b2600283615da8565b61313560f01b815260200192915050565b60006151d0601e83615da8565b7f63616c6c20746f2061206e6f6e2d636f6e747261637420616464726573730000815260200192915050565b6000615209602683615da8565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015260400192915050565b6000615251601d83615da8565b7f656e7472792070726963652061626f766520746865206d696e696d756d000000815260200192915050565b600061528a601b83615da8565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000815260200192915050565b60006152c3601583610ccb565b746d696e7428616464726573732c75696e743235362960581b815260150192915050565b60006152f4602183615da8565b7f5369676e6564536166654d6174683a206164646974696f6e206f766572666c6f8152607760f81b602082015260400192915050565b6000615337600183615da8565b603760f81b815260200192915050565b6000615354601283615da8565b716e6f7420656e6f7567682062616c616e636560701b815260200192915050565b6000615382600283615da8565b61333760f01b815260200192915050565b60006153a0600283615da8565b610c8d60f21b815260200192915050565b60006153be601a83610ccb565b7f6275726e28616464726573732c75696e743235362c626f6f6c290000000000008152601a0192915050565b60006153f7600283615da8565b61313160f01b815260200192915050565b6000615415602183615da8565b7f5369676e6564536166654d6174683a206469766973696f6e206f766572666c6f8152607760f81b602082015260400192915050565b6000615458600283615da8565b61189960f11b815260200192915050565b6000615476600283615da8565b61323560f01b815260200192915050565b6000615494600283615da8565b61199960f11b815260200192915050565b60006154b2600283615da8565b61313760f01b815260200192915050565b60006154d0602183615da8565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f8152607760f81b602082015260400192915050565b6000615513600c83615da8565b6b1d5b985d5d1a1bdc9a5e995960a21b815260200192915050565b600061553b600283615da8565b61313960f01b815260200192915050565b6000615559600283615da8565b61191b60f11b815260200192915050565b6000615577601583610ccb565b746275726e28616464726573732c75696e743235362960581b815260150192915050565b60006155a8602783615da8565b7f5369676e6564536166654d6174683a206d756c7469706c69636174696f6e206f815266766572666c6f7760c81b602082015260400192915050565b60006155f1601383615da8565b721c1c9a5b98da5c185b081d1bdbc81cdb585b1b606a1b815260200192915050565b6000615620601d83615da8565b7f696e76616c6964207261746520636f6c6c61746572616c20746f6b656e000000815260200192915050565b6000615659601a83610ccb565b7f6d696e7428616464726573732c75696e743235362c626f6f6c290000000000008152601a0192915050565b6000615692600c83615da8565b6b1b9bdb9499595b9d1c985b9d60a21b815260200192915050565b60006156ba602483615da8565b7f5369676e6564536166654d6174683a207375627472616374696f6e206f766572815263666c6f7760e01b602082015260400192915050565b6000615700601883615da8565b7f34303120757365206f66206578697374696e67206c6f616e0000000000000000815260200192915050565b6000615739600183615da8565b601b60f91b815260200192915050565b6000615756602083615da8565b7f5369676e6564536166654d6174683a206469766973696f6e206279207a65726f815260200192915050565b805160808301906157938482615034565b5060208201516157a66020850182615034565b5060408201516157b96040850182615034565b506060820151613c0c6060850182615034565b80516101208301906157de84826150c1565b5060208201516157f160208501826150c1565b50604082015161580460408501826150c1565b50606082015161581760608501826150c1565b50608082015161582a60808501826150c1565b5060a082015161583d60a08501826150c1565b5060c082015161585060c08501826150c1565b5060e082015161586360e08501826150c1565b50610100820151613c0c6101008501826150c1565b61502e81615dda565b600061588d828561503d565b60148201915061589d82846150b0565b5060010192915050565b60006158b3828561503d565b6014820191506158c382846150ca565b5060200192915050565b60006158d982856150e4565b6004820191506158c382846150ca565b6000610bce8284615128565b6000610dc0826152b6565b6000610dc0826153b1565b6000610dc08261556a565b6000610dc08261564c565b60208101610dc08284615034565b60208101610dc08284615025565b6040810161594b8285615034565b610bce6020830184615034565b604081016159668285615034565b610bce6020830184615025565b606081016159818286615034565b61598e6020830185615034565b61104b60408301846150c1565b60a081016159a98288615034565b6159b66020830187615034565b6159c360408301866150c1565b6159d060608301856150c1565b6141e360808301846150a7565b60c081016159eb8289615034565b6159f86020830188615034565b615a0560408301876150c1565b615a1260608301866150c1565b615a1f60808301856150c1565b615a2c60a08301846150c1565b979650505050505050565b60408101615a458285615034565b610bce60208301846150c1565b60608101615a608286615034565b615a6d60208301856150c1565b61104b6040830184615025565b60408082528101615a8b818561504e565b9050610bce60208301846150c1565b60208101610dc082846150a7565b60208101610dc082846150c1565b6102408101615ac5828a6150c1565b615ad260208301896150c1565b615adf60408301886150a7565b615aec60608301876150c1565b615af96080830186615782565b615b076101008301856157cc565b818103610220830152615b1a81846150f0565b9998505050505050505050565b60208082528101610bce81846150f0565b60208082528101610dc081615157565b60208082528101610dc081615187565b60208082528101610dc0816151a5565b60208082528101610dc0816151c3565b60208082528101610dc0816151fc565b60208082528101610dc081615244565b60208082528101610dc08161527d565b60208082528101610dc0816152e7565b60208082528101610dc08161532a565b60208082528101610dc081615347565b60208082528101610dc081615375565b60208082528101610dc081615393565b60208082528101610dc0816153ea565b60208082528101610dc081615408565b60208082528101610dc08161544b565b60208082528101610dc081615469565b60208082528101610dc081615487565b60208082528101610dc0816154a5565b60208082528101610dc0816154c3565b60208082528101610dc081615506565b60208082528101610dc08161552e565b60208082528101610dc08161554c565b60208082528101610dc08161559b565b60208082528101610dc0816155e4565b60208082528101610dc081615613565b60208082528101610dc081615685565b60208082528101610dc0816156ad565b60208082528101610dc0816156f3565b60208082528101610dc08161572c565b60208082528101610dc081615749565b60408101615a4582856150c1565b60608101615d3482866150c1565b61598e60208301856150c1565b60208101610dc08284615878565b60405181810167ffffffffffffffff81118282101715615d6e57600080fd5b604052919050565b600067ffffffffffffffff821115615d8d57600080fd5b506020601f91909101601f19160190565b60200190565b5190565b90815260200190565b6000610dc082615dce565b151590565b6001600160e01b03191690565b6001600160a01b031690565b60ff1690565b6000610dc0826000610dc082615db1565b82818337506000910152565b60005b83811015615e18578181015183820152602001615e00565b83811115613c0c5750506000910152565b6000610dc082615e3f565b6000610dc082615e4a565b6000610dc082615e65565b6000610dc082615e5f565b601f01601f191690565b60f81b90565b60601b90565b615e7481615db1565b8114612a9257600080fd5b615e7481615dbc565b615e7481610dd856fea365627a7a7231582058d8e74dcd56b2268dc54d0c51ac274c4b1095a6a5df7f9ba2e0f398557929266c6578706572696d656e74616cf564736f6c63430005110040",
    "sourceMap": "137:437:137:-;;;502:1:186;688:55;;;;721:12:184;-1:-1:-1;;;;;721:10:184;:12;:::i;:::-;743:6;:18;;-1:-1:-1;;;;;;743:18:184;-1:-1:-1;;;;;743:18:184;;;;;;;;776:43;;743:18;;-1:-1:-1;743:18:184;-1:-1:-1;;776:43:184;;-1:-1:-1;;776:43:184;668:158;137:437:137;;795:96:179;874:10;795:96;:::o;137:437:137:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106103a25760003560e01c80637b7933b4116101e7578063b9fe1a8f1161010d578063e41b07e3116100a0578063f6b69f991161006f578063f6b69f99146109da578063f851a440146109ed578063f8dd4f0e14610a02578063ffa1ad7414610a17576103a2565b8063e41b07e314610965578063eebc508114610985578063ef2b0b39146109a5578063f2fde38b146109ba576103a2565b8063d1a1beb4116100dc578063d1a1beb4146108f0578063d65a502114610910578063d759dbeb14610930578063dd62ed3e14610945576103a2565b8063b9fe1a8f14610886578063ba0e43bf146108a6578063ca37e666146108bb578063cfb51928146108d0576103a2565b80638f32d59b116101855780639bda3a98116101545780639bda3a981461081c5780639dc29fac146108315780639fd0506d14610851578063a9059cbb14610866576103a2565b80638f32d59b146107ba5780638fb807c5146107cf57806390967de5146107e457806395d89b4114610807576103a2565b8063829b38f4116101c1578063829b38f41461075b5780638325a1c01461077b5780638da5cb5b146107905780638ee6c4e6146107a5576103a2565b80637b7933b41461071c5780637e37c08c146107315780637ff9b59614610746576103a2565b80632f6b600d116102cc57806356e07d701161026a5780636d23d1ac116102395780636d23d1ac146106a757806370a08231146106c757806376fd4fdf146106e7578063797bf38514610707576103a2565b806356e07d701461062e578063612ef80b14610643578063631a3ef8146106585780636b40cd4014610678576103a2565b8063330691ac116102a6578063330691ac146105c457806340c10f19146105d957806344a4a003146105f957806354198ce91461060e576103a2565b80632f6b600d1461056d578063313ce567146105825780633291c11a146105a4576103a2565b8063124168981161034457806320f6d07c1161031357806320f6d07c1461050457806323b872dd1461051957806328a02f19146105395780632ea295fa1461055a576103a2565b806312416898146104a557806318160ddd146104c55780631d0806ae146104da5780631f68f20a146104ef576103a2565b806306fdde031161038057806306fdde031461041f578063095ea7b31461044157806309ec6b6b1461046e57806310e5764414610483576103a2565b806304797930146103a757806306947a3a146103dd57806306b3efd6146103ff575b600080fd5b3480156103b357600080fd5b506103c76103c2366004614ee6565b610a2c565b6040516103d49190615aa8565b60405180910390f35b3480156103e957600080fd5b506103f2610bd5565b6040516103d49190615921565b34801561040b57600080fd5b506103c761041a366004614a79565b610be4565b34801561042b57600080fd5b50610434610cd0565b6040516103d49190615b27565b34801561044d57600080fd5b5061046161045c366004614b3c565b610d5b565b6040516103d49190615a9a565b34801561047a57600080fd5b506103c7610dc6565b34801561048f57600080fd5b506104a361049e366004614e76565b610ddb565b005b3480156104b157600080fd5b506103c76104c0366004614e3a565b610ebe565b3480156104d157600080fd5b506103c7610ee9565b3480156104e657600080fd5b506103c7610eef565b3480156104fb57600080fd5b506103c7610ef5565b34801561051057600080fd5b506103c7610efb565b34801561052557600080fd5b50610461610534366004614aef565b610f8a565b61054c610547366004614d76565b611053565b6040516103d4929190615d18565b61054c610568366004614bcd565b6113e5565b34801561057957600080fd5b506103f261176c565b34801561058e57600080fd5b5061059761177b565b6040516103d49190615d41565b3480156105b057600080fd5b506103c76105bf366004614e3a565b611784565b3480156105d057600080fd5b506103c7611796565b3480156105e557600080fd5b506103c76105f4366004614b3c565b61179c565b34801561060557600080fd5b506103c761190e565b34801561061a57600080fd5b506103c7610629366004614a79565b611920565b34801561063a57600080fd5b506103c76119c1565b34801561064f57600080fd5b506103c76119c7565b34801561066457600080fd5b506103c7610673366004614ee6565b6119f8565b34801561068457600080fd5b50610698610693366004614f29565b611b98565b6040516103d493929190615d26565b3480156106b357600080fd5b506103c76106c2366004614e97565b611ca9565b3480156106d357600080fd5b506103c76106e2366004614a79565b611d8c565b3480156106f357600080fd5b506103c7610702366004614b6c565b611da7565b34801561071357600080fd5b506103f2611f84565b34801561072857600080fd5b506103c7611f98565b34801561073d57600080fd5b506103c7611f9e565b34801561075257600080fd5b506103c7611fa4565b34801561076757600080fd5b506103c7610776366004614e3a565b611fe2565b34801561078757600080fd5b506103c7612062565b34801561079c57600080fd5b506103f261206e565b3480156107b157600080fd5b506103f261207d565b3480156107c657600080fd5b5061046161208c565b3480156107db57600080fd5b506103c76120b2565b3480156107f057600080fd5b506107f96120e2565b6040516103d4929190615a7a565b34801561081357600080fd5b5061043461278f565b34801561082857600080fd5b506103f26127ea565b34801561083d57600080fd5b506103c761084c366004614b3c565b6127f9565b34801561085d57600080fd5b506103f26128b9565b34801561087257600080fd5b50610461610881366004614b3c565b6128c8565b34801561089257600080fd5b506103c76108a1366004614e3a565b6128d8565b3480156108b257600080fd5b506103c76128e3565b3480156108c757600080fd5b506103f26128e9565b3480156108dc57600080fd5b506103c76108eb366004614e05565b6128f8565b3480156108fc57600080fd5b506103c761090b366004614b6c565b612916565b34801561091c57600080fd5b506103c761092b366004614e3a565b6129ee565b34801561093c57600080fd5b506103c7612a01565b34801561095157600080fd5b506103c7610960366004614ab5565b612a07565b34801561097157600080fd5b506103c7610980366004614a79565b612a32565b34801561099157600080fd5b506103c76109a0366004614a79565b612a44565b3480156109b157600080fd5b506103c7612a5f565b3480156109c657600080fd5b506104a36109d5366004614a79565b612a65565b61054c6109e8366004614c95565b612a95565b3480156109f957600080fd5b506103f2612b65565b348015610a0e57600080fd5b506103c7612b74565b348015610a2357600080fd5b506103c7612b7e565b60008315610bce576001600160a01b038216610a51576017546001600160a01b031691505b600060106000846001604051602001610a6b929190615881565b60408051601f19818403018152918152815160209283012083529082019290925281016000205460165460048054935163ca74a5d960e01b81529294506001600160a01b039182169363e762319f936101009091049092169187918a91869163ca74a5d991610adc918a9101615aa8565b60206040518083038186803b158015610af457600080fd5b505afa158015610b08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b2c9190810190614e58565b60016040518663ffffffff1660e01b8152600401610b4e95949392919061599b565b60206040518083038186803b158015610b6657600080fd5b505afa158015610b7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b9e9190810190614e58565b9150610bb282610bac6120b2565b86612b83565b9350610bc09150612bfc9050565b821115610bcc57600091505b505b9392505050565b6016546001600160a01b031681565b601c5460009081906001600160a01b031615610c7f57601c54604051636822955360e11b81526001600160a01b039091169063d0452aa690610c2c903090879060040161593d565b60206040518083038186803b158015610c4457600080fd5b505afa158015610c58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c7c9190810190614e58565b90505b610cc7670de0b6b3a7640000610cbb610c96611fa4565b610caf85610ca389611d8c565b9063ffffffff612c3216565b9063ffffffff612c5716565b9063ffffffff612c9116565b9150505b919050565b6002805460408051602060018416156101000260001901909316849004601f81018490048402820184019092528181529291830182828015610d535780601f10610d2857610100808354040283529160200191610d53565b820191906000526020600020905b815481529060010190602001808311610d3657829003601f168201915b505050505081565b3360008181526014602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610db4908690615aa8565b60405180910390a35060015b92915050565b6000610dd56104c06000612cd3565b90505b90565b60165460048054604051631a51577760e21b81526000936001600160a01b03908116936369455ddc93610e1c936101009091049092169188918a9101615973565b60206040518083038186803b158015610e3457600080fd5b505afa158015610e48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610e6c9190810190614e58565b90506000610e8c85610cbb84670de0b6b3a764000063ffffffff612c5716565b905082811015610eb75760405162461bcd60e51b8152600401610eae90615b88565b60405180910390fd5b5050505050565b600080610ec9610efb565b90508015610ee357610edb8184611ca9565b915050610ccb565b50919050565b60155490565b600e5481565b60055481565b6016546004805460405163250f447f60e11b81526000936001600160a01b0390811693634a1e88fe93610f3a933093610100909204909116910161593d565b60206040518083038186803b158015610f5257600080fd5b505afa158015610f66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610dd59190810190614e58565b60165460405163115dd4b160e01b815260009161104b918691869186916001600160a01b03169063115dd4b190610fc590339060040161592f565b60206040518083038186803b158015610fdd57600080fd5b505afa158015610ff1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506110159190810190614baf565b611042576001600160a01b0388166000908152601460209081526040808320338452909152902054611046565b6000195b612d0d565b949350505050565b6000806001600054146110785760405162461bcd60e51b8152600401610eae90615cc8565b6002600081905550600073ba10edd6abc7696eae685839217bdcc42139612b6001600160a01b031663ed04e1c36040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156110d157600080fd5b505af11580156110e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111099190810190614e58565b9050611113612f1d565b6001600160a01b038716611130576017546001600160a01b031696505b6004546001600160a01b038881166101009092041614156111635760405162461bcd60e51b8152600401610eae90615bf8565b8a15806111785750336001600160a01b038716145b6111945760405162461bcd60e51b8152600401610eae90615ce8565b6001600160a01b038716600090815260126020526040902054156111d7576001600160a01b0387166000908152601260205260409020548811156111d757600080fd5b60045461010090046001600160a01b0316600090815260126020526040902054156112285760045461010090046001600160a01b031660009081526012602052604090205489111561122857600080fd5b6000611235888a8c612f9d565b9050806112545760405162461bcd60e51b8152600401610eae90615c18565b61125c614927565b61126461494e565b3082526001600160a01b038916602080840182905260408401919091528101839052606081018c9052608081018b905261129c6131ca565b6112aa8d8260200151613270565b82526020820181905260045465e35fa931a000916112d69161010090046001600160a01b0316906132bf565b116112f35760405162461bcd60e51b8152600401610eae90615ca8565b61130d6f4b3b4ca85a86c47a098a2240000000008e612c91565b60a082018990529c506113268e60008f8d86868d6133e6565b9550955050505073ba10edd6abc7696eae685839217bdcc42139612b6001600160a01b0316633fa4f2456040518163ffffffff1660e01b815260040160206040518083038186803b15801561137a57600080fd5b505afa15801561138e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506113b29190810190614e58565b81146113d05760405162461bcd60e51b8152600401610eae90615b38565b50600160005590999098509650505050505050565b60008060016000541461140a5760405162461bcd60e51b8152600401610eae90615cc8565b6002600081905550600073ba10edd6abc7696eae685839217bdcc42139612b6001600160a01b031663ed04e1c36040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561146357600080fd5b505af1158015611477573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061149b9190810190614e58565b9050896114ba5760405162461bcd60e51b8152600401610eae90615cf8565b6114c2612f1d565b6001600160a01b03871660009081526012602052604090205415611505576001600160a01b03871660009081526012602052604090205488111561150557600080fd5b34158061151157508734145b801561152557508715158061152557508a15155b801561154c57506001600160a01b03871615158061154257503415155b8061154c57508a15155b801561156857508a15806115685750336001600160a01b038716145b6115845760405162461bcd60e51b8152600401610eae90615bb8565b6004546001600160a01b038881166101009092041614156115b75760405162461bcd60e51b8152600401610eae90615b48565b6115bf6131ca565b6115c7614927565b6115cf61494e565b3082526001600160a01b03888116602080850191909152908816604084015281018c90526116078c6116016000612cd3565b8d612b83565b836000018460400185602001838152508381525083815250505050898160800181815250506117198d8d601660009054906101000a90046001600160a01b03166001600160a01b031663ca74a5d9601060008f600160405160200161166d929190615881565b6040516020818303038152906040528051906020012060001c8152602001908152602001600020546040518263ffffffff1660e01b81526004016116b19190615aa8565b60206040518083038186803b1580156116c957600080fd5b505afa1580156116dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117019190810190614e58565b8c8686604051806020016040528060008152506133e6565b94509450505073ba10edd6abc7696eae685839217bdcc42139612b6001600160a01b0316633fa4f2456040518163ffffffff1660e01b815260040160206040518083038186803b15801561137a57600080fd5b6017546001600160a01b031681565b60045460ff1681565b60106020526000908152604090205481565b60065481565b60006001600054146117c05760405162461bcd60e51b8152600401610eae90615cc8565b6002600081905550600073ba10edd6abc7696eae685839217bdcc42139612b6001600160a01b031663ed04e1c36040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561181957600080fd5b505af115801561182d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118519190810190614e58565b905061185d8484613643565b915073ba10edd6abc7696eae685839217bdcc42139612b6001600160a01b0316633fa4f2456040518163ffffffff1660e01b815260040160206040518083038186803b1580156118ac57600080fd5b505afa1580156118c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118e49190810190614e58565b81146119025760405162461bcd60e51b8152600401610eae90615b38565b50600160005592915050565b6000610dd561191b610efb565b61374f565b600080827f37aa2b7d583612f016e4a4de4292cb015139b3d7762663d06a53964912ea2fb660001b6040516020016119599291906158a7565b604051602081830303815290604052805190602001209050610cc78160136000866001600160a01b03166001600160a01b03168152602001908152602001600020546119a3611fa4565b6001600160a01b038716600090815260116020526040902054613787565b600a5481565b6000806119d46000612cd3565b905060006119e0610efb565b9050808211156119f35790039050610dd8565b505090565b60008315610bce576000611a0e85610bac6120b2565b92505050611a1a612bfc565b8111610bcc576001600160a01b038316611a3d576017546001600160a01b031692505b600060106000856001604051602001611a57929190615881565b60408051601f19818403018152918152815160209283012083529082019290925281016000205460165460048054935163ca74a5d960e01b8152929450611b8f93600a936001600160a01b03938416936325decac09361010090930416918a918991869163ca74a5d991611acd918c9101615aa8565b60206040518083038186803b158015611ae557600080fd5b505afa158015611af9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611b1d9190810190614e58565b60016040518663ffffffff1660e01b8152600401611b3f95949392919061599b565b60206040518083038186803b158015611b5757600080fd5b505afa158015611b6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610ca39190810190614e58565b92505050610bce565b600080806001600160a01b038416611bb9576017546001600160a01b031693505b6000611bc6858789612f9d565b9050611bd28882613270565b9094509150611bdf612bfc565b841115611bf6575060009250829150819050611c9f565b611c06878563ffffffff612c3216565b6016546004805460405163d67f707760e01b8152939a506001600160a01b039283169363d67f707793611c4b9361010090930416918a918d918d918a918d91016159dd565b60206040518083038186803b158015611c6357600080fd5b505afa158015611c77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611c9b9190810190614e58565b9250505b9450945094915050565b60008215801590611cba5750828210155b15610dc057611d85701d6329f1c35ca4bfabb9f5610000000000610cbb611d6f68056bc75e2d63100000601660009054906101000a90046001600160a01b03166001600160a01b0316634699f8466040518163ffffffff1660e01b815260040160206040518083038186803b158015611d3257600080fd5b505afa158015611d46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611d6a9190810190614e58565b6137e1565b610caf611d7c8888613823565b610caf8961374f565b9050610dc0565b6001600160a01b031660009081526013602052604090205490565b6000600160005414611dcb5760405162461bcd60e51b8152600401610eae90615cc8565b6002600081905550600073ba10edd6abc7696eae685839217bdcc42139612b6001600160a01b031663ed04e1c36040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611e2457600080fd5b505af1158015611e38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611e5c9190810190614e58565b90508215611e7457611e6d84613855565b9150611e80565b611e7d846139fb565b91505b8115611ed457611ed4600460019054906101000a90046001600160a01b0316868460405180604001604052806015815260200174185cdcd95d081d1c985b9cd9995c8819985a5b1959605a1b815250613bb2565b73ba10edd6abc7696eae685839217bdcc42139612b6001600160a01b0316633fa4f2456040518163ffffffff1660e01b815260040160206040518083038186803b158015611f2157600080fd5b505afa158015611f35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611f599190810190614e58565b8114611f775760405162461bcd60e51b8152600401610eae90615b38565b5060016000559392505050565b60045461010090046001600160a01b031681565b600d5481565b60085481565b600f546000908190426001600160581b03908116911614611fcb57611fc7613c12565b9150505b611fdc611fd782612cd3565b613cde565b91505090565b60008061200161016d610cbb601c600b54612c5790919063ffffffff16565b9050600061201e68056bc75e2d631000008363ffffffff6137e116565b9050600061203b68056bc75e2d63100000610cbb84610caf6119c7565b905061205985610cbb83670de0b6b3a764000063ffffffff612c5716565b95945050505050565b6000610dd56000613d0d565b6001546001600160a01b031690565b601c546001600160a01b031681565b6001546000906001600160a01b03166120a3613d63565b6001600160a01b031614905090565b600f546000908190426001600160581b039081169116146120d9576120d5613c12565b9150505b611fdc81612cd3565b6040805160208082526104208201909252606091600091839180820161040080388339019050509050632ea295fa60e01b8160008151811061212057fe5b6001600160e01b03199092166020928302919091019091015280516328a02f1960e01b908290600190811061215157fe5b6001600160e01b031990921660209283029190910190910152805163f6b69f9960e01b908290600290811061218257fe5b6001600160e01b031990921660209283029190910190910152805163a9059cbb60e01b90829060039081106121b357fe5b6001600160e01b03199092166020928302919091019091015280516323b872dd60e01b90829060049081106121e457fe5b6001600160e01b03199092166020928302919091019091015280516354198ce960e01b908290600590811061221557fe5b6001600160e01b0319909216602092830291909101909101528051633ffcdacb60e11b908290600690811061224657fe5b6001600160e01b031990921660209283029190910190910152805163eebc508160e01b908290600790811061227757fe5b6001600160e01b031990921660209283029190910190910152805163612ef80b60e01b90829060089081106122a857fe5b6001600160e01b03199092166020928302919091019091015280516344a4a00360e01b90829060099081106122d957fe5b6001600160e01b031990921660209283029190910190910152805163020c968760e61b908290600a90811061230a57fe5b6001600160e01b031990921660209283029190910190910152805163b9fe1a8f60e01b908290600b90811061233b57fe5b6001600160e01b03199092166020928302919091019091015280516309ec6b6b60e01b908290600c90811061236c57fe5b6001600160e01b031990921660209283029190910190910152805163d65a502160e01b908290600d90811061239d57fe5b6001600160e01b03199092166020928302919091019091015280516302482d1360e31b908290600e9081106123ce57fe5b6001600160e01b031990921660209283029190910190910152805163083db41f60e21b908290600f9081106123ff57fe5b6001600160e01b0319909216602092830291909101909101528051638fb807c560e01b908290601090811061243057fe5b6001600160e01b03199092166020928302919091019091015280516320a6ce3d60e21b908290601190811061246157fe5b6001600160e01b0319909216602092830291909101909101528051630359f7eb60e11b908290601290811061249257fe5b6001600160e01b03199092166020928302919091019091015280516301ad033560e61b90829060139081106124c357fe5b6001600160e01b0319909216602092830291909101909101528051630c6347df60e31b90829060149081106124f457fe5b6001600160e01b03199092166020928302919091019091015280516247979360e41b908290601590811061252457fe5b6001600160e01b03199092166020928302919091019091015280516304395d9160e21b908290601690811061255557fe5b6001600160e01b0319909216602092830291909101909101528051631b48f46b60e21b908290601790811061258657fe5b6001600160e01b0319909216602092830291909101909101526040516125ab906158f5565b6040518091039020816018815181106125c057fe5b6001600160e01b0319909216602092830291909101909101526040516125e590615916565b6040518091039020816019815181106125fa57fe5b6001600160e01b03199092166020928302919091019091015260405161261f9061590b565b604051809103902081601a8151811061263457fe5b6001600160e01b03199092166020928302919091019091015260405161265990615900565b604051809103902081601b8151811061266e57fe5b6001600160e01b031990921660209283029190910190910152805163095ea7b360e01b908290601c90811061269f57fe5b6001600160e01b03199092166020928302919091019091015280516318160ddd60e01b908290601d9081106126d057fe5b6001600160e01b03199092166020928302919091019091015280516370a0823160e01b908290601e90811061270157fe5b6001600160e01b0319909216602092830291909101909101528051636eb1769f60e11b908290601f90811061273257fe5b60200260200101906001600160e01b03191690816001600160e01b03191681525050806127866040518060400160405280601081526020016f4c6f616e546f6b656e4c6f6769634c4d60801b8152506128f8565b92509250509091565b6003805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610d535780601f10610d2857610100808354040283529160200191610d53565b6018546001600160a01b031681565b600060016000541461281d5760405162461bcd60e51b8152600401610eae90615cc8565b60026000556040516128ae90732c34d66a5ca8686330e100372eb3fdfb5aeecd0b9063a9059cbb60e01b906128589087908790602401615a37565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050506040518060400160405280600581526020016432b93937b960d91b815250613d67565b600160005592915050565b601b546001600160a01b031681565b6000610bce338484600019612d0d565b6000610dc082613d0d565b60095481565b601a546001600160a01b031681565b8051600090829061290d575060009050610ccb565b50506020015190565b600060016000541461293a5760405162461bcd60e51b8152600401610eae90615cc8565b6002600081905550600073ba10edd6abc7696eae685839217bdcc42139612b6001600160a01b031663ed04e1c36040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561299357600080fd5b505af11580156129a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506129cb9190810190614e58565b905082156129e4576129dd8585613e52565b9150611ed4565b6129dd8585613643565b6000610dc06104c083610ca36000612cd3565b60075481565b6001600160a01b03918216600090815260146020908152604080832093909416825291909152205490565b60126020526000908152604090205481565b6001600160a01b031660009081526011602052604090205490565b600b5481565b612a6d61208c565b612a895760405162461bcd60e51b8152600401610eae90615c68565b612a9281613edb565b50565b6000806001600160a01b03851615612b0c5760165460405163193bbe8960e31b81526001600160a01b039091169063c9ddf44890612ad9908a90899060040161593d565b600060405180830381600087803b158015612af357600080fd5b505af1158015612b07573d6000803e3d6000fd5b505050505b612b528c8c8c8c8c8c8c8b8b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061105392505050565b915091509a509a98505050505050505050565b6019546001600160a01b031681565b65e35fa931a00081565b600681565b6000806000612b928686613f5d565b9250612bdf612bc7670de0b6b3a7640000611d6a6b0a3098c68eb9427db8000000610cbb83610caf8a8c63ffffffff612c5716565b610cbb88670de0b6b3a764000063ffffffff612c5716565b9050612bf1818763ffffffff6137e116565b915093509350939050565b600480546040516370a0823160e01b81526000926101009092046001600160a01b0316916370a0823191610f3a91309101615921565b600082820183811015610bce5760405162461bcd60e51b8152600401610eae90615b98565b600082612c6657506000610dc0565b82820282848281612c7357fe5b0414610bce5760405162461bcd60e51b8152600401610eae90615c58565b6000610bce83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250614073565b6000601554600014610ccb57600c5480612cfd57612cfa612cf2610efb565b610ca3612bfc565b90505b610edb818463ffffffff612c3216565b60006000198214612da6576040805180820190915260028152610c4d60f21b6020820152612d44908390859063ffffffff6140aa16565b6001600160a01b038616600081815260146020908152604080832033808552925291829020849055905190927f628e75c63c1873bcd3885f7aee9f58ee36f60dc789b2a6b3a978c4189bc548ba91612d9d918791615d18565b60405180910390a35b6001600160a01b038416612dcc5760405162461bcd60e51b8152600401610eae90615b58565b6001600160a01b03851660009081526013602090815260408083205481518083019092526002825261189b60f11b92820192909252909190612e17908390879063ffffffff6140aa16565b6001600160a01b03808916600090815260136020526040808220849055918916815290812054919250612e50828863ffffffff612c3216565b6001600160a01b0389166000908152601360205260408120829055909150612e76611fa4565b601c549091506001600160a01b038b8116911614801590612ea55750601c546001600160a01b038a8116911614155b15612ec257612eb68a8686846140d6565b612ec2898484846140d6565b886001600160a01b03168a6001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8a604051612f059190615aa8565b60405180910390a35060019998505050505050505050565b600080356001600160e01b0319167fd46a704bc285dbd6ff5ad3863506260b1df02812f4f857c8cc852317a6ac64f2604051602001612f5d9291906158cd565b6040516020818303038152906040528051906020012090506000815490508015612f995760405162461bcd60e51b8152600401610eae90615c68565b5050565b808215610bce57600080601660009054906101000a90046001600160a01b03166001600160a01b03166378d849ed6040518163ffffffff1660e01b815260040160206040518083038186803b158015612ff557600080fd5b505afa158015613009573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061302d9190810190614a97565b60048054604051630a7549df60e21b81526001600160a01b03938416936329d5277c93613066938c93610100909104909216910161593d565b604080518083038186803b15801561307d57600080fd5b505afa158015613091573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506130b59190810190614eb6565b91509150816000141580156130c957508015155b6130e55760405162461bcd60e51b8152600401610eae90615cb8565b60006130fb82610cbb888663ffffffff612c5716565b60165460048054604051631a51577760e21b81529394506000936001600160a01b03938416936369455ddc9361313e936101009004909116918d91889101615973565b60206040518083038186803b15801561315657600080fd5b505afa15801561316a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061318e9190810190614e58565b90508681146131ae576131ab87610cbb848463ffffffff612c5716565b91505b6131be828663ffffffff612c3216565b98975050505050505050565b600f5442906001600160581b03808316911614612a925760165460048054604051630740ff7d60e51b81526001600160a01b039384169363e81fefa09361321a9361010090049091169101615921565b600060405180830381600087803b15801561323457600080fd5b505af1158015613248573d6000803e3d6000fd5b5050600f80546001600160581b0385166affffffffffffffffffffff19909116179055505050565b60008080613290670de0b6b3a7640000610cbb868863ffffffff612c5716565b90506132a5816132a06000612cd3565b613f5d565b91506132b5826224ea008361418c565b9250509250929050565b6000806000601660009054906101000a90046001600160a01b03166001600160a01b03166378d849ed6040518163ffffffff1660e01b815260040160206040518083038186803b15801561331257600080fd5b505afa158015613326573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061334a9190810190614a97565b601754604051630a7549df60e21b81526001600160a01b03928316926329d5277c9261337e928a929091169060040161593d565b604080518083038186803b15801561339557600080fd5b505afa1580156133a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506133cd9190810190614eb6565b909250905061205981610cbb868563ffffffff612c5716565b6000806133f1612f1d565b6133f9612bfc565b846020015111158015613418575060208501516001600160a01b031615155b6134345760405162461bcd60e51b8152600401610eae90615be8565b60408501516001600160a01b031661345a5760208501516001600160a01b031660408601525b60006134688787878c6141ed565b905061348585602001518660600151612c3290919063ffffffff16565b606086015288156134ab5760608501516134a5908a63ffffffff6137e116565b60608601525b600089156134b7575060015b6000601060008a846040516020016134d0929190615881565b6040516020818303038152906040528051906020012060001c8152602001908152602001600020549050601660009054906101000a90046001600160a01b03166001600160a01b031663d84ca25484838f868f8e8e8e6040518963ffffffff1660e01b81526004016135489796959493929190615ab6565b60408051808303818588803b15801561356057600080fd5b505af1158015613574573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052506135999190810190614eb6565b6080890152602088018190526135c15760405162461bcd60e51b8152600401610eae90615c28565b601654602089015160405163f06a9c6b60e01b81526001600160a01b039092169163f06a9c6b916135f491600401615921565b600060405180830381600087803b15801561360e57600080fd5b505af1158015613622573d6000803e3d6000fd5b50505050866020015187608001519450945050505097509795505050505050565b60008061364f8361441f565b601c5491935091506000906001600160a01b0316156136ed57601c54604051636822955360e11b81526001600160a01b039091169063d0452aa69061369a903090899060040161593d565b60206040518083038186803b1580156136b257600080fd5b505afa1580156136c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506136ea9190810190614e58565b90505b6001600160a01b038516600090815260136020526040812054613716908363ffffffff612c3216565b9050600061372a828663ffffffff612c3216565b905061373887868887614529565b50613745878383876140d6565b5050505092915050565b60008115610ccb576000613761613c12565b509050610edb83610cbb61016d610caf8568056bc75e2d6310000063ffffffff612c5716565b6000816137965750600061104b565b508354612059816137d5670de0b6b3a76400006137c9886137bd898963ffffffff61464a16565b9063ffffffff61469016565b9063ffffffff6146fb16565b9063ffffffff61475f16565b6000610bce83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506140aa565b6000821580159061383357508115155b15610dc057611d8582610cbb8568056bc75e2d6310000063ffffffff612c5716565b601c54604051636822955360e11b815260009182916001600160a01b039091169063d0452aa69061388c9030903390600401615958565b60206040518083038186803b1580156138a457600080fd5b505afa1580156138b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506138dc9190810190614e58565b9050826138f86138eb33611d8c565b839063ffffffff612c3216565b10156139165760405162461bcd60e51b8152600401610eae90615bc8565b80156139f6578281101561398f57601c54604051631a4ca37b60e21b81526001600160a01b03909116906369328dec9061395890309085903390600401615a52565b600060405180830381600087803b15801561397257600080fd5b505af1158015613986573d6000803e3d6000fd5b505050506139f6565b601c54604051631a4ca37b60e21b81526001600160a01b03909116906369328dec906139c390309087903390600401615a52565b600060405180830381600087803b1580156139dd57600080fd5b505af11580156139f1573d6000803e3d6000fd5b505050505b610cc7835b600081613a1a5760405162461bcd60e51b8152600401610eae90615c78565b613a2333611d8c565b821115613a57576000198214613a4b5760405162461bcd60e51b8152600401610eae90615c38565b613a5433611d8c565b91505b613a5f6131ca565b6000613a6e611fd76000612cd3565b90506000613a8e670de0b6b3a7640000610cbb868563ffffffff612c5716565b90506000613a9a612bfc565b905081935080841115613abf5760405162461bcd60e51b8152600401610eae90615bd8565b601c546000906001600160a01b031615613b5857601c54604051636822955360e11b81526001600160a01b039091169063d0452aa690613b059030903390600401615958565b60206040518083038186803b158015613b1d57600080fd5b505afa158015613b31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613b559190810190614e58565b90505b33600090815260136020526040812054613b78908363ffffffff612c3216565b90506000613b8c828963ffffffff6137e116565b9050613b9a338989896147a5565b50613ba7338383896140d6565b505050505050919050565b604051613c0c90859063a9059cbb60e01b90613bd49087908790602401615a37565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915283613d67565b50505050565b60165460048054604051630d1979fb60e41b8152600093849384936001600160a01b039283169363d1979fb093613c549330936101009004909116910161593d565b60c06040518083038186803b158015613c6c57600080fd5b505afa158015613c80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613ca49190810190614f8a565b5091965094509250613cd7915068056bc75e2d631000009050610cbb613cca82856137e1565b859063ffffffff612c5716565b9150509091565b60155460009080613cf157600e54610cc7565b610cc781610cbb85670de0b6b3a764000063ffffffff612c5716565b6000808215613d5657600f54426001600160581b03908116911614613d3857613d34613c12565b9150505b6000613d4682610ca3612bfc565b905080841115613d54578093505b505b610cc7836132a083612cd3565b3390565b613d70836148ca565b613d8c5760405162461bcd60e51b8152600401610eae90615b68565b60006060846001600160a01b031684604051613da891906158e9565b6000604051808303816000865af19150503d8060008114613de5576040519150601f19603f3d011682016040523d82523d6000602084013e613dea565b606091505b5091509150818390613e0f5760405162461bcd60e51b8152600401610eae9190615b27565b50805115610eb75780806020019051613e2b9190810190614baf565b8390613e4a5760405162461bcd60e51b8152600401610eae9190615b27565b505050505050565b6000613e5e8383613643565b601c54909150613e7a9084906001600160a01b03168380612d0d565b50601c546040516336305cf160e21b81526001600160a01b039091169063d8c173c490613ead9086908590600401615a37565b600060405180830381600087803b158015613ec757600080fd5b505af1158015613745573d6000803e3d6000fd5b6001600160a01b038116613f015760405162461bcd60e51b8152600401610eae90615b78565b6001546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b600080613f75613f6f85610ca3610efb565b84613823565b600554600654600954600a54600b5494955060009485949392919082881015613f9c578297505b8188111561400f57968190039668056bc75e2d6310000082900380891115613fc2578098505b613fe386610ca368056bc75e2d63100000610cbb878a63ffffffff612c5716565b965061400787610ca383610cbb613ffa878d6137e1565b8e9063ffffffff612c5716565b995050614065565b61403085610ca368056bc75e2d63100000610cbb8c8963ffffffff612c5716565b98509395508593614047848663ffffffff612c3216565b95508689101561405957869850614065565b85891115614065578598505b505050505050505092915050565b600081836140945760405162461bcd60e51b8152600401610eae9190615b27565b5060008385816140a057fe5b0495945050505050565b600081848411156140ce5760405162461bcd60e51b8152600401610eae9190615b27565b505050900390565b60405160009061410c9086907f37aa2b7d583612f016e4a4de4292cb015139b3d7762663d06a53964912ea2fb6906020016158a7565b604051602081830303815290604052805190602001209050600083600014156141385760009250614169565b8415614169576001600160a01b03861660009081526011602052604090205461416690839087908690613787565b90505b90556001600160a01b039093166000908152601160205260409020929092555050565b6000806141a76301e13380610cbb878763ffffffff612c5716565b905060006141c468056bc75e2d631000008363ffffffff6137e116565b90506141e381610cbb8668056bc75e2d6310000063ffffffff612c5716565b9695505050505050565b6017546004546020840151606085015160808601516000946001600160a01b039081169461010090048116939291908a1684141561423d5760405162461bcd60e51b8152600401610eae90615c88565b349550861561429f57614265848a604001518960405180602001604052806000815250613bb2565b8683111561429a5760165460408051602081019091526000815261429a9186916001600160a01b03909116908a870390613bb2565b6142d4565b601654604080518082019091526002815261323760f01b60208201526142d49186916001600160a01b03909116908690613bb2565b80156143d757846001600160a01b03168a6001600160a01b03161480156142fa57508515155b80156143065750808610155b156143a057846001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561434657600080fd5b505af115801561435a573d6000803e3d6000fd5b505060165460408051808201909152600481526332382d6160e01b602082015261439694508e93506001600160a01b0390911691508490613bb2565b80860395506143d7565b601654604080518082019091526004815263191c16b160e11b60208201526143d7918c9133916001600160a01b0316908590614903565b811561441257601654604080518082019091526002815261323960f01b602082015261441291869133916001600160a01b0316908690614903565b5050505050949350505050565b6000808261443f5760405162461bcd60e51b8152600401610eae90615c48565b6144476131ca565b614454611fd76000612cd3565b905061447281610cbb85670de0b6b3a764000063ffffffff612c5716565b9150346144ba576144b5600460019054906101000a90046001600160a01b031633308660405180604001604052806002815260200161062760f31b815250614903565b614524565b601760009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b15801561450a57600080fd5b505af115801561451e573d6000803e3d6000fd5b50505050505b915091565b60006001600160a01b0385166145515760405162461bcd60e51b8152600401610eae90615b58565b6001600160a01b03851660009081526013602052604081205461457a908663ffffffff612c3216565b6001600160a01b03871660009081526013602052604090208190556015549091506145ab908663ffffffff612c3216565b6015556040516001600160a01b038716907fb4c03061fb5b7fed76389d5af8f2e0ddb09f8c70d1333abbb62582835e10accb906145ed90889088908890615d26565b60405180910390a2856001600160a01b031660006001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef876040516146399190615aa8565b60405180910390a395945050505050565b600081830381831280159061465f5750838113155b80614674575060008312801561467457508381135b610bce5760405162461bcd60e51b8152600401610eae90615cd8565b60008261469f57506000610dc0565b826000191480156146b35750600160ff1b82145b156146d05760405162461bcd60e51b8152600401610eae90615c98565b828202828482816146dd57fe5b0514610bce5760405162461bcd60e51b8152600401610eae90615c98565b60008161471a5760405162461bcd60e51b8152600401610eae90615d08565b8160001914801561472e5750600160ff1b83145b1561474b5760405162461bcd60e51b8152600401610eae90615c08565b600082848161475657fe5b05949350505050565b60008282018183128015906147745750838112155b80614789575060008312801561478957508381125b610bce5760405162461bcd60e51b8152600401610eae90615ba8565b6040805180820182526002815261189b60f11b6020808301919091526001600160a01b038716600090815260139091529182205482916147ed9190879063ffffffff6140aa16565b9050600a811161480e57614807858263ffffffff612c3216565b9450600090505b6001600160a01b038616600090815260136020526040902081905560155461483c908663ffffffff6137e116565b6015556040516001600160a01b038716907f743033787f4738ff4d6a7225ce2bd0977ee5f86b91a902a58f5e4d0b297b46449061487e90889088908890615d26565b60405180910390a260006001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef876040516146399190615aa8565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061104b575050151592915050565b604051610eb79086906323b872dd60e01b90613bd490889088908890602401615973565b60408051608081018252600080825260208201819052918101829052606081019190915290565b6040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8035610dc081615e6b565b8051610dc081615e6b565b8035610dc081615e7f565b8051610dc081615e7f565b8035610dc081615e88565b60008083601f8401126149e357600080fd5b50813567ffffffffffffffff8111156149fb57600080fd5b602083019150836001820283011115614a1357600080fd5b9250929050565b600082601f830112614a2b57600080fd5b8135614a3e614a3982615d76565b615d4f565b91508082526020830160208301858383011115614a5a57600080fd5b614a65838284615df1565b50505092915050565b8051610dc081615e88565b600060208284031215614a8b57600080fd5b600061104b848461499a565b600060208284031215614aa957600080fd5b600061104b84846149a5565b60008060408385031215614ac857600080fd5b6000614ad4858561499a565b9250506020614ae58582860161499a565b9150509250929050565b600080600060608486031215614b0457600080fd5b6000614b10868661499a565b9350506020614b218682870161499a565b9250506040614b32868287016149c6565b9150509250925092565b60008060408385031215614b4f57600080fd5b6000614b5b858561499a565b9250506020614ae5858286016149c6565b600080600060608486031215614b8157600080fd5b6000614b8d868661499a565b9350506020614b9e868287016149c6565b9250506040614b32868287016149b0565b600060208284031215614bc157600080fd5b600061104b84846149bb565b600080600080600080600080610100898b031215614bea57600080fd5b6000614bf68b8b6149c6565b9850506020614c078b828c016149c6565b9750506040614c188b828c016149c6565b9650506060614c298b828c016149c6565b9550506080614c3a8b828c0161499a565b94505060a0614c4b8b828c0161499a565b93505060c0614c5c8b828c0161499a565b92505060e089013567ffffffffffffffff811115614c7957600080fd5b614c858b828c01614a1a565b9150509295985092959890939650565b6000806000806000806000806000806101208b8d031215614cb557600080fd5b6000614cc18d8d6149c6565b9a50506020614cd28d828e016149c6565b9950506040614ce38d828e016149c6565b9850506060614cf48d828e016149c6565b9750506080614d058d828e0161499a565b96505060a0614d168d828e0161499a565b95505060c0614d278d828e016149c6565b94505060e0614d388d828e0161499a565b9350506101008b013567ffffffffffffffff811115614d5657600080fd5b614d628d828e016149d1565b92509250509295989b9194979a5092959850565b600080600080600080600080610100898b031215614d9357600080fd5b6000614d9f8b8b6149c6565b9850506020614db08b828c016149c6565b9750506040614dc18b828c016149c6565b9650506060614dd28b828c016149c6565b9550506080614de38b828c0161499a565b94505060a0614df48b828c0161499a565b93505060c0614c5c8b828c016149c6565b600060208284031215614e1757600080fd5b813567ffffffffffffffff811115614e2e57600080fd5b61104b84828501614a1a565b600060208284031215614e4c57600080fd5b600061104b84846149c6565b600060208284031215614e6a57600080fd5b600061104b8484614a6e565b600080600060608486031215614e8b57600080fd5b6000614b1086866149c6565b60008060408385031215614eaa57600080fd5b6000614b5b85856149c6565b60008060408385031215614ec957600080fd5b6000614ed58585614a6e565b9250506020614ae585828601614a6e565b600080600060608486031215614efb57600080fd5b6000614f0786866149c6565b9350506020614f18868287016149c6565b9250506040614b328682870161499a565b60008060008060808587031215614f3f57600080fd5b6000614f4b87876149c6565b9450506020614f5c878288016149c6565b9350506040614f6d878288016149c6565b9250506060614f7e8782880161499a565b91505092959194509250565b60008060008060008060c08789031215614fa357600080fd5b6000614faf8989614a6e565b9650506020614fc089828a01614a6e565b9550506040614fd189828a01614a6e565b9450506060614fe289828a01614a6e565b9350506080614ff389828a01614a6e565b92505060a061500489828a01614a6e565b9150509295509295509295565b600061501d83836150db565b505060200190565b61502e81615de0565b82525050565b61502e81615db1565b61502e61504982615db1565b615e29565b600061505982615da4565b6150638185615da8565b935061506e83615d9e565b8060005b8381101561509c5781516150868882615011565b975061509183615d9e565b925050600101615072565b509495945050505050565b61502e81615dbc565b61502e6150bc82615dbc565b615e34565b61502e81610dd8565b61502e6150d682610dd8565b610dd8565b61502e81615dc1565b61502e6150d682615dc1565b60006150fb82615da4565b6151058185615da8565b9350615115818560208601615dfd565b61511e81615e55565b9093019392505050565b600061513382615da4565b61513d8185610ccb565b935061514d818560208601615dfd565b9290920192915050565b6000615164601483615da8565b733932b2b73a3930b731bc903b34b7b630ba34b7b760611b815260200192915050565b6000615194600283615da8565b61031360f41b815260200192915050565b60006151b2600283615da8565b61313560f01b815260200192915050565b60006151d0601e83615da8565b7f63616c6c20746f2061206e6f6e2d636f6e747261637420616464726573730000815260200192915050565b6000615209602683615da8565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015260400192915050565b6000615251601d83615da8565b7f656e7472792070726963652061626f766520746865206d696e696d756d000000815260200192915050565b600061528a601b83615da8565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000815260200192915050565b60006152c3601583610ccb565b746d696e7428616464726573732c75696e743235362960581b815260150192915050565b60006152f4602183615da8565b7f5369676e6564536166654d6174683a206164646974696f6e206f766572666c6f8152607760f81b602082015260400192915050565b6000615337600183615da8565b603760f81b815260200192915050565b6000615354601283615da8565b716e6f7420656e6f7567682062616c616e636560701b815260200192915050565b6000615382600283615da8565b61333760f01b815260200192915050565b60006153a0600283615da8565b610c8d60f21b815260200192915050565b60006153be601a83610ccb565b7f6275726e28616464726573732c75696e743235362c626f6f6c290000000000008152601a0192915050565b60006153f7600283615da8565b61313160f01b815260200192915050565b6000615415602183615da8565b7f5369676e6564536166654d6174683a206469766973696f6e206f766572666c6f8152607760f81b602082015260400192915050565b6000615458600283615da8565b61189960f11b815260200192915050565b6000615476600283615da8565b61323560f01b815260200192915050565b6000615494600283615da8565b61199960f11b815260200192915050565b60006154b2600283615da8565b61313760f01b815260200192915050565b60006154d0602183615da8565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f8152607760f81b602082015260400192915050565b6000615513600c83615da8565b6b1d5b985d5d1a1bdc9a5e995960a21b815260200192915050565b600061553b600283615da8565b61313960f01b815260200192915050565b6000615559600283615da8565b61191b60f11b815260200192915050565b6000615577601583610ccb565b746275726e28616464726573732c75696e743235362960581b815260150192915050565b60006155a8602783615da8565b7f5369676e6564536166654d6174683a206d756c7469706c69636174696f6e206f815266766572666c6f7760c81b602082015260400192915050565b60006155f1601383615da8565b721c1c9a5b98da5c185b081d1bdbc81cdb585b1b606a1b815260200192915050565b6000615620601d83615da8565b7f696e76616c6964207261746520636f6c6c61746572616c20746f6b656e000000815260200192915050565b6000615659601a83610ccb565b7f6d696e7428616464726573732c75696e743235362c626f6f6c290000000000008152601a0192915050565b6000615692600c83615da8565b6b1b9bdb9499595b9d1c985b9d60a21b815260200192915050565b60006156ba602483615da8565b7f5369676e6564536166654d6174683a207375627472616374696f6e206f766572815263666c6f7760e01b602082015260400192915050565b6000615700601883615da8565b7f34303120757365206f66206578697374696e67206c6f616e0000000000000000815260200192915050565b6000615739600183615da8565b601b60f91b815260200192915050565b6000615756602083615da8565b7f5369676e6564536166654d6174683a206469766973696f6e206279207a65726f815260200192915050565b805160808301906157938482615034565b5060208201516157a66020850182615034565b5060408201516157b96040850182615034565b506060820151613c0c6060850182615034565b80516101208301906157de84826150c1565b5060208201516157f160208501826150c1565b50604082015161580460408501826150c1565b50606082015161581760608501826150c1565b50608082015161582a60808501826150c1565b5060a082015161583d60a08501826150c1565b5060c082015161585060c08501826150c1565b5060e082015161586360e08501826150c1565b50610100820151613c0c6101008501826150c1565b61502e81615dda565b600061588d828561503d565b60148201915061589d82846150b0565b5060010192915050565b60006158b3828561503d565b6014820191506158c382846150ca565b5060200192915050565b60006158d982856150e4565b6004820191506158c382846150ca565b6000610bce8284615128565b6000610dc0826152b6565b6000610dc0826153b1565b6000610dc08261556a565b6000610dc08261564c565b60208101610dc08284615034565b60208101610dc08284615025565b6040810161594b8285615034565b610bce6020830184615034565b604081016159668285615034565b610bce6020830184615025565b606081016159818286615034565b61598e6020830185615034565b61104b60408301846150c1565b60a081016159a98288615034565b6159b66020830187615034565b6159c360408301866150c1565b6159d060608301856150c1565b6141e360808301846150a7565b60c081016159eb8289615034565b6159f86020830188615034565b615a0560408301876150c1565b615a1260608301866150c1565b615a1f60808301856150c1565b615a2c60a08301846150c1565b979650505050505050565b60408101615a458285615034565b610bce60208301846150c1565b60608101615a608286615034565b615a6d60208301856150c1565b61104b6040830184615025565b60408082528101615a8b818561504e565b9050610bce60208301846150c1565b60208101610dc082846150a7565b60208101610dc082846150c1565b6102408101615ac5828a6150c1565b615ad260208301896150c1565b615adf60408301886150a7565b615aec60608301876150c1565b615af96080830186615782565b615b076101008301856157cc565b818103610220830152615b1a81846150f0565b9998505050505050505050565b60208082528101610bce81846150f0565b60208082528101610dc081615157565b60208082528101610dc081615187565b60208082528101610dc0816151a5565b60208082528101610dc0816151c3565b60208082528101610dc0816151fc565b60208082528101610dc081615244565b60208082528101610dc08161527d565b60208082528101610dc0816152e7565b60208082528101610dc08161532a565b60208082528101610dc081615347565b60208082528101610dc081615375565b60208082528101610dc081615393565b60208082528101610dc0816153ea565b60208082528101610dc081615408565b60208082528101610dc08161544b565b60208082528101610dc081615469565b60208082528101610dc081615487565b60208082528101610dc0816154a5565b60208082528101610dc0816154c3565b60208082528101610dc081615506565b60208082528101610dc08161552e565b60208082528101610dc08161554c565b60208082528101610dc08161559b565b60208082528101610dc0816155e4565b60208082528101610dc081615613565b60208082528101610dc081615685565b60208082528101610dc0816156ad565b60208082528101610dc0816156f3565b60208082528101610dc08161572c565b60208082528101610dc081615749565b60408101615a4582856150c1565b60608101615d3482866150c1565b61598e60208301856150c1565b60208101610dc08284615878565b60405181810167ffffffffffffffff81118282101715615d6e57600080fd5b604052919050565b600067ffffffffffffffff821115615d8d57600080fd5b506020601f91909101601f19160190565b60200190565b5190565b90815260200190565b6000610dc082615dce565b151590565b6001600160e01b03191690565b6001600160a01b031690565b60ff1690565b6000610dc0826000610dc082615db1565b82818337506000910152565b60005b83811015615e18578181015183820152602001615e00565b83811115613c0c5750506000910152565b6000610dc082615e3f565b6000610dc082615e4a565b6000610dc082615e65565b6000610dc082615e5f565b601f01601f191690565b60f81b90565b60601b90565b615e7481615db1565b8114612a9257600080fd5b615e7481615dbc565b615e7481610dd856fea365627a7a7231582058d8e74dcd56b2268dc54d0c51ac274c4b1095a6a5df7f9ba2e0f398557929266c6578706572696d656e74616cf564736f6c63430005110040",
    "sourceMapi;:::-;;;;;;;;;;;;;;;;366:36:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;366:36:7;;;:::i;:::-;;;;;;;;29419:414:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;29419:414:6;;;;;;;;:::i;2068:18:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2068:18:3;;;:::i;:::-;;;;;;;;1546:202:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1546:202:0;;;;;;;;:::i;:::-;;;;;;;;26226:129:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26226:129:6;;;:::i;35808:719::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;35808:719:6;;;;;;;;:::i;:::-;;27048:257;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;27048:257:6;;;;;;;;:::i;2160:89:1:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2160:89:1;;;:::i;2574:27:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2574:27:3;;;:::i;2256:23::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2256:23:3;;;:::i;27808:180:6:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;27808:180:6;;;:::i;19133:463::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;19133:463:6;;;;;;;;:::i;13006:3276::-;;;;;;;;;:::i;:::-;;;;;;;;;7186:3796;;;;;;;;;:::i;408:32:7:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;408:32:7;;;:::i;2118:21:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2118:21:3;;;:::i;:::-;;;;;;;;2778:48;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2778:48:3;;;;;;;;:::i;2285:29::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2285:29:3;;;:::i;3124:222:6:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3124:222:6;;;;;;;;:::i;25296:129::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25296:129:6;;;:::i;22832:312::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;22832:312:6;;;;;;;;:::i;2431:24:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2431:24:3;;;:::i;24913:263:6:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24913:263:6;;;:::i;32190:1430::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;32190:1430:6;;;;;;;;:::i;30319:1117::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;30319:1117:6;;;;;;;;:::i;:::-;;;;;;;;;;56141:532;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;56141:532:6;;;;;;;;:::i;2444:105:1:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2444:105:1;;;;;;;;:::i;4612:494:13:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4612:494:13;;;;;;;;:::i;2218:31:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2218:31:3;;;:::i;2537:::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2537:31:3;;;:::i;2356:36::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2356:36:3;;;:::i;24132:281:6:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24132:281:6;;;:::i;28713:588::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;28713:588:6;;;;;;;;:::i;25632:110::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25632:110:6;;;:::i;902:77:184:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;902:77:184;;;:::i;810:37:7:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;810:37:7;;;:::i;1233:92:184:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1233:92:184;;;:::i;28193:268:6:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;28193:268:6;;;:::i;1080:2404:13:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1080:2404:13;;;:::i;:::-;;;;;;;;;2092:20:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2092:20:3;;;:::i;446:22:7:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;446:22:7;;;:::i;195:377:137:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;195:377:137;;;;;;;;:::i;727:21:7:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;727:21:7;;;:::i;18726:154:6:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;18726:154:6;;;;;;;;:::i;25920:145::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;25920:145:6;;;;;;;;:::i;2399:26:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2399:26:3;;;:::i;640:31:7:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;640:31:7;;;:::i;1285:305::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1285:305:7;;;;;;;;:::i;3885:293:13:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3885:293:13;;;;;;;;:::i;26608:171:6:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;26608:171:6;;;;;;;;:::i;2320:30:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2320:30:3;;;:::i;2909:132:1:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2909:132:1;;;;;;;;:::i;3011:51:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3011:51:3;;;;;;;;:::i;24610:124:6:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;24610:124:6;;;;;;;;:::i;2461:27:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2461:27:3;;;:::i;1474:107:184:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1474:107:184;;;;;;;;:::i;17184:1218:6:-;;;;;;;;;:::i;474:20:7:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;474:20:7;;;:::i;1235:43::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1235:43:7;;;:::i;897:35::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;897:35:7;;;:::i;34374:1163:6:-;34595:20;34631:18;;34627:904;;-1:-1:-1;;;;;34669:36:6;;34665:84;;34732:17;;-1:-1:-1;;;;;34732:17:6;;-1:-1:-1;34665:84:6;34763:20;34802:13;:81;34851:22;34875:4;34834:46;;;;;;;;;;;;;;-1:-1:-1;;26:21;;;22:32;6:49;;34834:46:6;;;34824:57;;49:4:-1;34824:57:6;;;;34802:81;;;;;;;;;;;34816:66;34802:81;;34925:21;;34981:16;;;35086:74;;-1:-1:-1;;;35086:74:6;;34802:81;;-1:-1:-1;;;;;;34925:21:6;;;;34912:51;;34925:21;34981:16;;;;;;;35015:22;;35055:13;;34925:21;;35086:60;;:74;;34802:81;;35086:74;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;35086:74:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;35086:74:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;35086:74:6;;;;;;;;;35197:4;34912:320;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;34912:320:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;34912:320:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;34912:320:6;;;;;;;;;34897:335;;35268:148;35317:12;35347:18;:16;:18::i;:::-;35383:19;35268:31;:148::i;:::-;35247:169;-1:-1:-1;35450:20:6;;-1:-1:-1;35450:18:6;;-1:-1:-1;35450:20:6:i;:::-;35435:12;:35;35431:90;;;35505:1;35490:16;;35431:90;34627:904;;34374:1163;;;;;:::o;366:36:7:-;;;-1:-1:-1;;;;;366:36:7;;:::o;29419:414:6:-;29536:22;;29480:7;;;;-1:-1:-1;;;;;29536:22:6;:36;29532:214;;29619:22;;29602:133;;-1:-1:-1;;;29602:133:6;;-1:-1:-1;;;;;29619:22:6;;;;29602:64;;:133;;29692:4;;29715:6;;29602:133;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;29602:133:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;29602:133:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;29602:133:6;;;;;;;;;29588:147;;29532:214;29762:64;29819:6;29762:52;29801:12;:10;:12::i;:::-;29762:34;29784:11;29762:17;29772:6;29762:9;:17::i;:::-;:21;:34;:21;:34;:::i;:::-;:38;:52;:38;:52;:::i;:::-;:56;:64;:56;:64;:::i;:::-;29755:71;;;29419:414;;;;:::o;2068:18:3:-;;;;;;;;;;;;;;-1:-1:-1;;2068:18:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1546:202:0:-;1637:10;1613:4;1629:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;1629:29:0;;;;;;;;;;:38;;;1682;1613:4;;1629:29;;1682:38;;;;1661:6;;1682:38;;;;;;;;;;-1:-1:-1;1737:4:0;1546:202;;;;;:::o;26226:129:6:-;26277:7;26303:45;26327:20;26345:1;26327:17;:20::i;26303:45::-;26296:52;;26226:129;;:::o;35808:719::-;36151:21;;36213:16;;;36138:176;;-1:-1:-1;;;36138:176:6;;36091:32;;-1:-1:-1;;;;;36151:21:6;;;;36138:57;;:176;;36151:21;36213:16;;;;;;;36247:22;;36287:13;;36138:176;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;36138:176:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;36138:176:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;36138:176:6;;;;;;;;;36091:223;-1:-1:-1;36324:28:6;36367:64;36417:13;36368:43;36091:223;1895:6:3;36368:43:6;:28;:43;:::i;36367:64::-;36324:107;;36473:13;36449:20;:37;;36441:79;;;;-1:-1:-1;;;36441:79:6;;;;;;;;;;;;;;;;;35808:719;;;;;:::o;27048:257::-;27123:7;27142:19;27164:18;:16;:18::i;:::-;27142:40;-1:-1:-1;27196:16:6;;27192:107;;27235:53;27263:11;27276;27235:27;:53::i;:::-;27228:60;;;;;27192:107;27048:257;;;;:::o;2160:89:1:-;2230:12;;2160:89;:::o;2574:27:3:-;;;;:::o;2256:23::-;;;;:::o;27808:180:6:-;27908:21;;27964:16;;;27895:86;;-1:-1:-1;;;27895:86:6;;27857:7;;-1:-1:-1;;;;;27908:21:6;;;;27895:53;;:86;;27957:4;;27908:21;27964:16;;;;;;;27895:86;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;27895:86:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;27895:86:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;27895:86:6;;;;;;;;19133:463;19447:21;;19434:58;;-1:-1:-1;;;19434:58:6;;19247:4;;19282:307;;19321:5;;19344:3;;19365:6;;-1:-1:-1;;;;;19447:21:6;;19434:46;;:58;;19481:10;;19434:58;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19434:58:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19434:58:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;19434:58:6;;;;;;;;;:141;;-1:-1:-1;;;;;19549:14:6;;;;;;:7;:14;;;;;;;;19564:10;19549:26;;;;;;;;19434:141;;;-1:-1:-1;;19434:141:6;19282:21;:307::i;:::-;19263:326;19133:463;-1:-1:-1;;;;19133:463:6:o;13006:3276::-;13615:7;13636;502:1:186;1185:14;;:39;1177:64;;;;-1:-1:-1;;;1177:64:186;;;;;;;;;607:1;1251:14;:40;;;;1387:16:197;1043:42;-1:-1:-1;;;;;1406:26:197;;:28;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1406:28:197;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1406:28:197;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1406:28:197;;;;;;;;;1387:47;;13729:13:6;:11;:13::i;:::-;-1:-1:-1;;;;;13757:36:6;;13753:109;;13834:17;;-1:-1:-1;;;;;13834:17:6;;-1:-1:-1;13753:109:6;13906:16;;-1:-1:-1;;;;;13880:42:6;;;13906:16;;;;;13880:42;;13872:57;;;;-1:-1:-1;;;13872:57:6;;;;;;;;;14005:11;;;:35;;-1:-1:-1;14020:10:6;-1:-1:-1;;;;;14020:20:6;;;14005:35;13997:72;;;;-1:-1:-1;;;13997:72:6;;;;;;;;;-1:-1:-1;;;;;14131:40:6;;14174:1;14131:40;;;:16;:40;;;;;;:44;14127:134;;-1:-1:-1;;;;;14220:40:6;;;;;;:16;:40;;;;;;14197:63;;;14189:72;;;;;;14292:16;;;;;-1:-1:-1;;;;;14292:16:6;14312:1;14275:34;;;:16;:34;;;;;;:38;14271:116;;14369:16;;;;;-1:-1:-1;;;;;14369:16:6;14352:34;;;;:16;:34;;;;;;14335:51;;;14327:60;;;;;;14572:20;14607:73;14621:22;14645:19;14666:13;14607;:73::i;:::-;14572:108;-1:-1:-1;14698:17:6;14690:32;;;;-1:-1:-1;;;14690:32:6;;;;;;;;;14733:59;;:::i;:::-;14802:55;;:::i;:::-;14899:4;14868:36;;-1:-1:-1;;;;;14914:31:6;;:22;;;;:31;;;14955:22;;;:31;;;;15136:24;;:39;;;15313:25;;;:41;;;15364:31;;;:53;;;15428:17;:15;:17::i;:::-;15511:154;15585:14;15613:11;:24;;;15511:29;:154::i;:::-;15456:209;;15457:24;;;15456:209;;;15714:16;;1273:5:7;;15697:60:6;;15714:16;;;-1:-1:-1;;;;;15714:16:6;;15697;:60::i;:::-;:74;15676:140;;;;-1:-1:-1;;;15676:140:6;;;;;;;;;15889:36;15902:6;15910:14;15889:12;:36::i;:::-;15935:25;;;:41;;;15872:53;-1:-1:-1;16005:270:6;16037:6;16061:1;15872:53;16148:22;16188:13;15935:11;16248:13;16005:14;:270::i;:::-;15986:289;;;;;;;1043:42:197;-1:-1:-1;;;;;1660:11:197;;:13;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1660:13:197;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1660:13:197;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1660:13:197;;;;;;;;;1648:8;:25;1640:58;;;;-1:-1:-1;;;1640:58:197;;;;;;;;;-1:-1:-1;502:1:186;1312:14;:38;13006:3276:6;;;;-1:-1:-1;13006:3276:6;-1:-1:-1;;;;;;;13006:3276:6:o;7186:3796::-;7896:7;7917;502:1:186;1185:14;;:39;1177:64;;;;-1:-1:-1;;;1177:64:186;;;;;;;;;607:1;1251:14;:40;;;;1387:16:197;1043:42;-1:-1:-1;;;;;1406:26:197;;:28;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1406:28:197;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1406:28:197;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1406:28:197;;;;;;;;;1387:47;-1:-1:-1;8017:19:6;8009:33;;;;-1:-1:-1;;;8009:33:6;;;;;;;;;8053:13;:11;:13::i;:::-;-1:-1:-1;;;;;8128:40:6;;8171:1;8128:40;;;:16;:40;;;;;;:44;8124:134;;-1:-1:-1;;;;;8217:40:6;;;;;;:16;:40;;;;;;8194:63;;;8186:72;;;;;;8291:9;:14;;:50;;;8322:19;8309:9;:32;8291:50;8290:113;;;;-1:-1:-1;8363:24:6;;;;:39;;-1:-1:-1;8391:11:6;;;8363:39;8290:204;;;;-1:-1:-1;;;;;;8424:36:6;;;;;:54;;-1:-1:-1;8464:9:6;:14;;8424:54;:69;;;-1:-1:-1;8482:11:6;;;8424:69;8290:263;;;;-1:-1:-1;8515:11:6;;;:37;;-1:-1:-1;8530:10:6;-1:-1:-1;;;;;8530:22:6;;;8515:37;8269:311;;;;-1:-1:-1;;;8269:311:6;;;;;;;;;9496:16;;-1:-1:-1;;;;;9470:42:6;;;9496:16;;;;;9470:42;;9462:57;;;;-1:-1:-1;;;9462:57:6;;;;;;;;;9530:17;:15;:17::i;:::-;9558:59;;:::i;:::-;9627:55;;:::i;:::-;9724:4;9693:36;;-1:-1:-1;;;;;9755:33:6;;;:22;;;;:33;;;;9798;;;:22;;;:33;9907:24;;:41;;;10176:177;9934:14;10259:20;9693;10259:17;:20::i;:::-;10324:19;10176:31;:177::i;:::-;10054:11;:24;;10092:11;:33;;10139:11;:24;;10040:313;;;;;;;;;;;;;;;10459:19;10425:11;:31;;:53;;;;;10508:467;10540:6;10564:14;10617:21;;;;;;;;;-1:-1:-1;;;;;10617:21:6;-1:-1:-1;;;;;10596:60:6;;10678:13;:127;10752:22;10776:4;10735:46;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;10735:46:6;;;10725:57;;;;;;10717:66;;10678:127;;;;;;;;;;;;10596:227;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10596:227:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10596:227:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;10596:227:6;;;;;;;;;10841:22;10881:13;10912:11;10508:467;;;;;;;;;;;;:14;:467::i;:::-;10489:486;;;;;;1043:42:197;-1:-1:-1;;;;;1660:11:197;;:13;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;408:32:7;;;-1:-1:-1;;;;;408:32:7;;:::o;2118:21:3:-;;;;;;:::o;2778:48::-;;;;;;;;;;;;;:::o;2285:29::-;;;;:::o;3124:222:6:-;3263:18;502:1:186;1185:14;;:39;1177:64;;;;-1:-1:-1;;;1177:64:186;;;;;;;;;607:1;1251:14;:40;;;;1387:16:197;1043:42;-1:-1:-1;;;;;1406:26:197;;:28;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1406:28:197;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1406:28:197;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1406:28:197;;;;;;;;;1387:47;;3304:35:6;3315:8;3325:13;3304:10;:35::i;:::-;3297:42;;1043::197;-1:-1:-1;;;;;1660:11:197;;:13;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1660:13:197;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1660:13:197;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1660:13:197;;;;;;;;;1648:8;:25;1640:58;;;;-1:-1:-1;;;1640:58:197;;;;;;;;;-1:-1:-1;502:1:186;1312:14;:38;3124:222:6;;-1:-1:-1;;3124:222:6:o;25296:129::-;25350:7;25376:42;25399:18;:16;:18::i;:::-;25376:22;:42::i;22832:312::-;22887:6;22954:12;22996:4;1128:66:7;23002:18:6;;22979:42;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;22979:42:6;;;22969:53;;;;;;22954:68;;23067:70;23077:4;23083:8;:14;23092:4;-1:-1:-1;;;;;23083:14:6;-1:-1:-1;;;;;23083:14:6;;;;;;;;;;;;;23099:12;:10;:12::i;:::-;-1:-1:-1;;;;;23113:23:6;;;;;;:17;:23;;;;;;23067:9;:70::i;2431:24:3:-;;;;:::o;24913:263:6:-;24961:7;24980:19;25002:20;25020:1;25002:17;:20::i;:::-;24980:42;;25032:19;25054:18;:16;:18::i;:::-;25032:40;;25100:11;25086;:25;25082:88;;;25134:25;;;-1:-1:-1;25127:32:6;;25082:88;24913:263;;;:::o;32190:1430::-;32410:21;32447:17;;32443:1171;;32485:23;32528:164;32581:12;32615:18;:16;:18::i;32528:164::-;32480:212;;;;32730:20;:18;:20::i;:::-;32711:15;:39;32707:897;;-1:-1:-1;;;;;32774:36:6;;32770:104;;32857:17;;-1:-1:-1;;;;;32857:17:6;;-1:-1:-1;32770:104:6;32892:20;32935:13;:127;33009:22;33033:4;32992:46;;;;;;;;;;;;;;-1:-1:-1;;26:21;;;22:32;6:49;;32992:46:6;;;32982:57;;49:4:-1;32982:57:6;;;;32935:127;;;;;;;;;;;32974:66;32935:127;;33120:21;;33215:16;;;33346:74;;-1:-1:-1;;;33346:74:6;;32935:127;;-1:-1:-1;33107:433:6;;33537:2;;-1:-1:-1;;;;;33120:21:6;;;;33107:82;;33120:21;33215:16;;;;;33257:22;;33305:15;;33120:21;;33346:60;;:74;;32935:127;;33346:74;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;33346:74:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;33346:74:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;33346:74:6;;;;;;;;;33464:4;33107:400;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;33107:400:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;33107:400:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;33107:400:6;;;;;;;;:433;33080:460;;;;;;30319:1117;30582:17;;;-1:-1:-1;;;;;30694:36:6;;30690:109;;30771:17;;-1:-1:-1;;;;;30771:17:6;;-1:-1:-1;30690:109:6;30809:20;30844:73;30858:22;30882:19;30903:13;30844;:73::i;:::-;30809:108;;30956:59;30986:14;31002:12;30956:29;:59::i;:::-;30928:87;;-1:-1:-1;30928:87:6;-1:-1:-1;31041:20:6;:18;:20::i;:::-;31029:9;:32;31025:79;;;-1:-1:-1;31085:1:6;;-1:-1:-1;31085:1:6;;-1:-1:-1;31085:1:6;;-1:-1:-1;31077:16:6;;31025:79;31130:28;:13;31148:9;31130:28;:17;:28;:::i;:::-;31195:21;;31258:16;;;31182:247;;-1:-1:-1;;;31182:247:6;;31114:44;;-1:-1:-1;;;;;;31195:21:6;;;;31182:62;;:247;;31195:21;31258:16;;;;;31288:22;;31114:44;;31351:19;;31384:12;;31410:9;;31182:247;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;31182:247:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;31182:247:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;31182:247:6;;;;;;;;;31169:260;;30319:1117;;;;;;;;;;:::o;56141:532::-;56265:7;56292:16;;;;;:46;;;56327:11;56312;:26;;56292:46;56288:379;;;56377:279;56649:6;56377:246;56528:77;56541:6;56562:21;;;;;;;;;-1:-1:-1;;;;;56562:21:6;-1:-1:-1;;;;;56549:53:6;;:55;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;56549:55:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;56549:55:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;56549:55:6;;;;;;;;;56528:12;:77::i;:::-;56377:104;56438:42;56455:11;56468;56438:16;:42::i;:::-;56377:35;56400:11;56377:22;:35::i;:279::-;56354:302;;;;2444:105:1;-1:-1:-1;;;;;2526:16:1;2500:7;2526:16;;;:8;:16;;;;;;;2444:105::o;4612:494:13:-;4758:16;502:1:186;1185:14;;:39;1177:64;;;;-1:-1:-1;;;1177:64:186;;;;;;;;;607:1;1251:14;:40;;;;1387:16:197;1043:42;-1:-1:-1;;;;;1406:26:197;;:28;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1406:28:197;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1406:28:197;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1406:28:197;;;;;;;;;1387:47;;4790:5:13;4786:93;;;4808:23;4820:10;4808:11;:23::i;:::-;4797:34;;4786:93;;;4857:22;4868:10;4857;:22::i;:::-;4846:33;;4786:93;4984:13;;4980:120;;5013:76;5027:16;;;;;;;;;-1:-1:-1;;;;;5027:16:13;5045:8;5055;5013:76;;;;;;;;;;;;;-1:-1:-1;;;5013:76:13;;;:13;:76::i;:::-;1043:42:197;-1:-1:-1;;;;;1660:11:197;;:13;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1660:13:197;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1660:13:197;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1660:13:197;;;;;;;;;1648:8;:25;1640:58;;;;-1:-1:-1;;;1640:58:197;;;;;;;;;-1:-1:-1;502:1:186;1312:14;:38;4612:494:13;;-1:-1:-1;;;4612:494:13:o;2218:31:3:-;;;;;;-1:-1:-1;;;;;2218:31:3;;:::o;2537:::-;;;;:::o;2356:36::-;;;;:::o;24132:281:6:-;24236:15;;24175:13;;;;24262:15;-1:-1:-1;;;;;24236:42:6;;;:15;;:42;24232:111;;24315:17;:15;:17::i;:::-;24294:38;-1:-1:-1;;24232:111:6;24360:46;24372:33;24390:14;24372:17;:33::i;:::-;24360:11;:46::i;:::-;24353:53;;;24132:281;:::o;28713:588::-;28810:23;29024:27;29054:29;29079:3;29054:20;29071:2;29054:12;;:16;;:20;;;;:::i;:29::-;29024:59;-1:-1:-1;29093:14:6;29110:40;29118:6;29024:59;29110:40;:19;:40;:::i;:::-;29093:57;;29160:19;29182:41;29216:6;29182:29;29204:6;29182:17;:15;:17::i;:41::-;29160:63;-1:-1:-1;29251:43:6;29279:14;29251:23;29160:63;29267:6;29251:23;:15;:23;:::i;:43::-;29233:61;28713:588;-1:-1:-1;;;;;28713:588:6:o;25632:110::-;25683:7;25709:26;25733:1;25709:23;:26::i;902:77:184:-;966:6;;-1:-1:-1;;;;;966:6:184;902:77;:::o;810:37:7:-;;;-1:-1:-1;;;;;810:37:7;;:::o;1233:92:184:-;1312:6;;1273:4;;-1:-1:-1;;;;;1312:6:184;1296:12;:10;:12::i;:::-;-1:-1:-1;;;;;1296:22:184;;1289:29;;1233:92;:::o;28193:268:6:-;28297:15;;28242:7;;;;28323:15;-1:-1:-1;;;;;28297:42:6;;;:15;;:42;28293:111;;28376:17;:15;:17::i;:::-;28355:38;-1:-1:-1;;28293:111:6;28421:33;28439:14;28421:17;:33::i;1080:2404:13:-;1256:16;;;1269:2;1256:16;;;;;;;;;1164:34;;1200:18;;1164:34;;1256:16;;;17:15:-1;;105:10;1256:16:13;88:34:-1;136:17;;-1:-1;1256:16:13;1234:38;;1329:20;;;1320:3;1324:1;1320:6;;;;;;;;-1:-1:-1;;;;;;1320:29:13;;;:6;;;;;;;;;;;:29;1359:6;;-1:-1:-1;;;1368:25:13;1359:3;;1363:1;;1359:6;;;;;;-1:-1:-1;;;;;;1359:34:13;;;:6;;;;;;;;;;;:34;1403:6;;-1:-1:-1;;;1412:34:13;1403:3;;1407:1;;1403:6;;;;;;-1:-1:-1;;;;;;1403:43:13;;;:6;;;;;;;;;;;:43;1456:6;;-1:-1:-1;;;1465:22:13;1456:3;;1460:1;;1456:6;;;;;;-1:-1:-1;;;;;;1456:31:13;;;:6;;;;;;;;;;;:31;1497:6;;-1:-1:-1;;;1506:26:13;1497:3;;1501:1;;1497:6;;;;;;-1:-1:-1;;;;;;1497:35:13;;;:6;;;;;;;;;;;:35;1542:6;;-1:-1:-1;;;1551:22:13;1542:3;;1546:1;;1542:6;;;;;;-1:-1:-1;;;;;;1542:31:13;;;:6;;;;;;;;;;;:31;1583:6;;-1:-1:-1;;;1592:24:13;1583:3;;1587:1;;1583:6;;;;;;-1:-1:-1;;;;;;1583:33:13;;;:6;;;;;;;;;;;:33;1626:6;;-1:-1:-1;;;1635:29:13;1626:3;;1630:1;;1626:6;;;;;;-1:-1:-1;;;;;;1626:38:13;;;:6;;;;;;;;;;;:38;1674:6;;-1:-1:-1;;;1683:29:13;1674:3;;1678:1;;1674:6;;;;;;-1:-1:-1;;;;;;1674:38:13;;;:6;;;;;;;;;;;:38;1722:6;;-1:-1:-1;;;1731:35:13;1722:3;;1726:1;;1722:6;;;;;;-1:-1:-1;;;;;;1722:44:13;;;:6;;;;;;;;;;;:44;1776:7;;-1:-1:-1;;;1786:32:13;1776:3;;1780:2;;1776:7;;;;;;-1:-1:-1;;;;;;1776:42:13;;;:7;;;;;;;;;;;:42;1828:7;;-1:-1:-1;;;1838:36:13;1828:3;;1832:2;;1828:7;;;;;;-1:-1:-1;;;;;;1828:46:13;;;:7;;;;;;;;;;;:46;1884:7;;-1:-1:-1;;;1894:32:13;1884:3;;1888:2;;1884:7;;;;;;-1:-1:-1;;;;;;1884:42:13;;;:7;;;;;;;;;;;:42;1936:7;;-1:-1:-1;;;1946:36:13;1936:3;;1940:2;;1936:7;;;;;;-1:-1:-1;;;;;;1936:46:13;;;:7;;;;;;;;;;;:46;1992:7;;-1:-1:-1;;;2002:37:13;1992:3;;1996:2;;1992:7;;;;;;-1:-1:-1;;;;;;1992:47:13;;;:7;;;;;;;;;;;:47;2049:7;;-1:-1:-1;;;2059:30:13;2049:3;;2053:2;;2049:7;;;;;;-1:-1:-1;;;;;;2049:40:13;;;:7;;;;;;;;;;;:40;2099:7;;-1:-1:-1;;;2109:30:13;2099:3;;2103:2;;2099:7;;;;;;-1:-1:-1;;;;;;2099:40:13;;;:7;;;;;;;;;;;:40;2149:7;;-1:-1:-1;;;2159:32:13;2149:3;;2153:2;;2149:7;;;;;;-1:-1:-1;;;;;;2149:42:13;;;:7;;;;;;;;;;;:42;2201:7;;-1:-1:-1;;;2211:28:13;2201:3;;2205:2;;2201:7;;;;;;-1:-1:-1;;;;;;2201:38:13;;;:7;;;;;;;;;;;:38;2249:7;;-1:-1:-1;;;2259:39:13;2249:3;;2253:2;;2249:7;;;;;;-1:-1:-1;;;;;;2249:49:13;;;:7;;;;;;;;;;;:49;2308:7;;-1:-1:-1;;;2318:39:13;2308:3;;2312:2;;2308:7;;;;;;-1:-1:-1;;;;;;2308:49:13;;;:7;;;;;;;;;;;:49;2367:7;;-1:-1:-1;;;2377:39:13;2367:3;;2371:2;;2367:7;;;;;;-1:-1:-1;;;;;;2367:49:13;;;:7;;;;;;;;;;;:49;2426:7;;-1:-1:-1;;;2436:34:13;2426:3;;2430:2;;2426:7;;;;;;-1:-1:-1;;;;;;2426:44:13;;;:7;;;;;;;;;;;:44;2480:7;;-1:-1:-1;;;2490:41:13;2480:3;;2484:2;;2480:7;;;;;;-1:-1:-1;;;;;;2480:51:13;;;:7;;;;;;;;;;;:51;2856:34;;;;;;;;;;;;;;2839:3;2843:2;2839:7;;;;;;;;-1:-1:-1;;;;;;2839:52:13;;;:7;;;;;;;;;;;:52;2945:39;;;;;;;;;;;;;;2928:3;2932:2;2928:7;;;;;;;;-1:-1:-1;;;;;;2928:57:13;;;:7;;;;;;;;;;;:57;3033:34;;;;;;;;;;;;;;3016:3;3020:2;3016:7;;;;;;;;-1:-1:-1;;;;;;3016:52:13;;;:7;;;;;;;;;;;:52;3122:39;;;;;;;;;;;;;;3105:3;3109:2;3105:7;;;;;;;;-1:-1:-1;;;;;;3105:57:13;;;:7;;;;;;;;;;;:57;3220:7;;-1:-1:-1;;;3230:21:13;3220:3;;3224:2;;3220:7;;;;;;-1:-1:-1;;;;;;3220:31:13;;;:7;;;;;;;;;;;:31;3296:7;;-1:-1:-1;;;3306:25:13;3296:3;;3300:2;;3296:7;;;;;;-1:-1:-1;;;;;;3296:35:13;;;:7;;;;;;;;;;;:35;3341:7;;-1:-1:-1;;;3351:23:13;3341:3;;3345:2;;3341:7;;;;;;-1:-1:-1;;;;;;3341:33:13;;;:7;;;;;;;;;;;:33;3384:7;;-1:-1:-1;;;3394:23:13;3384:3;;3388:2;;3384:7;;;;;;;;;;;:33;-1:-1:-1;;;;;3384:33:13;;;;-1:-1:-1;;;;;3384:33:13;;;;;;3436:3;3441:35;;;;;;;;;;;;;;-1:-1:-1;;;3441:35:13;;;:15;:35::i;:::-;3428:49;;;;;1080:2404;;:::o;2092:20:3:-;;;;;;;;;;;;;;;-1:-1:-1;;2092:20:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;446:22:7;;;-1:-1:-1;;;;;446:22:7;;:::o;195:377:137:-;302:22;502:1:186;1185:14;;:39;1177:64;;;;-1:-1:-1;;;1177:64:186;;;;;;;;;607:1;1251:14;:40;454:80:137;;340:225;;373:42;;-1:-1:-1;;;477:34:137;454:80;;484:8;;523:10;;454:80;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;454:80:137;;;;-1:-1:-1;;;;;454:80:137;;38:4:-1;29:7;25:18;67:10;61:17;-1:-1;;;;;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;454:80:137;340:225;;;;;;;;;;;;;-1:-1:-1;;;340:225:137;;;:19;:225::i;:::-;502:1:186;1312:14;:38;195:377:137;;-1:-1:-1;;195:377:137:o;727:21:7:-;;;-1:-1:-1;;;;;727:21:7;;:::o;18726:154:6:-;18791:4;18814:59;18836:10;18848:3;18853:6;-1:-1:-1;;18814:21:6;:59::i;25920:145::-;25995:7;26021:37;26045:12;26021:23;:37::i;2399:26:3:-;;;;:::o;640:31:7:-;;;-1:-1:-1;;;;;640:31:7;;:::o;1285:305::-;1441:26;;1353:14;;1420:6;;1437:72;;-1:-1:-1;1495:3:7;;-1:-1:-1;1488:10:7;;1437:72;-1:-1:-1;;1570:2:7;1558:15;1552:22;;1528:56::o;3885:293:13:-;4034:14;502:1:186;1185:14;;:39;1177:64;;;;-1:-1:-1;;;1177:64:186;;;;;;;;;607:1;1251:14;:40;;;;1387:16:197;1043:42;-1:-1:-1;;;;;1406:26:197;;:28;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1406:28:197;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1406:28:197;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1406:28:197;;;;;;;;;1387:47;;4064:5:13;4060:111;;;4078:36;4090:8;4100:13;4078:11;:36::i;:::-;4071:43;;;;4060:111;4136:35;4147:8;4157:13;4136:10;:35::i;26608:171:6:-;26683:7;26709:63;26733:38;26758:12;26733:20;26751:1;26733:17;:20::i;2320:30:3:-;;;;:::o;2909:132:1:-;-1:-1:-1;;;;;3009:15:1;;;2983:7;3009:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;2909:132::o;3011:51:3:-;;;;;;;;;;;;;:::o;24610:124:6:-;-1:-1:-1;;;;;24703:24:6;24671:13;24703:24;;;:17;:24;;;;;;;24610:124::o;2461:27:3:-;;;;:::o;1474:107:184:-;1106:9;:7;:9::i;:::-;1098:34;;;;-1:-1:-1;;;1098:34:184;;;;;;;;;1546:28;1565:8;1546:18;:28::i;:::-;1474:107;:::o;17184:1218:6:-;17783:7;;-1:-1:-1;;;;;17901:31:6;;;17897:194;;17974:21;;17946:145;;-1:-1:-1;;;17946:145:6;;-1:-1:-1;;;;;17974:21:6;;;;17946:72;;:145;;18036:6;;18060:17;;17946:145;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17946:145:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17946:145:6;;;;17897:194;18120:275;18149:6;18173:14;18205:13;18236:19;18273:22;18313:6;18337:13;18368;;18120:275;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;18120:11:6;;-1:-1:-1;;;18120:275:6:i;:::-;18101:294;;;;17184:1218;;;;;;;;;;;;;:::o;474:20:7:-;;;-1:-1:-1;;;;;474:20:7;;:::o;1235:43::-;1273:5;1235:43;:::o;897:35::-;931:1;897:35;:::o;44278:853:6:-;44506:20;44540:29;44583:23;44646:51;44671:12;44685:11;44646:24;:51::i;:::-;44631:66;-1:-1:-1;44839:217:6;44881:165;44911:6;44935:72;44989:17;44935:49;44911:6;44935:37;44631:66;44952:19;44935:37;:16;:37;:::i;44881:165::-;44839:24;:12;44856:6;44839:24;:16;:24;:::i;:217::-;44821:235;-1:-1:-1;45091:33:6;44821:235;45111:12;45091:33;:19;:33;:::i;:::-;45067:57;;44278:853;;;;;;;:::o;54844:135::-;54930:16;;;54923:49;;-1:-1:-1;;;54923:49:6;;54897:7;;54930:16;;;;-1:-1:-1;;;;;54930:16:6;;54923:34;;:49;;54966:4;;54923:49;;;842:176:188;900:7;931:5;;;954:6;;;;946:46;;;;-1:-1:-1;;;946:46:188;;;;;;;;2197:459;2255:7;2496:6;2492:45;;-1:-1:-1;2525:1:188;2518:8;;2492:45;2559:5;;;2563:1;2559;:5;:1;2582:5;;;;;:10;2574:56;;;;-1:-1:-1;;;2574:56:188;;;;;;;;3111:130;3169:7;3195:39;3199:1;3202;3195:39;;;;;;;;;;;;;;;;;:3;:39::i;62402:486:6:-;62500:19;62539:12;;62555:1;62539:17;62535:347;;62596:19;;62704:18;62700:117;;62758:44;62783:18;:16;:18::i;:::-;62758:20;:18;:20::i;:44::-;62742:60;;62700:117;62838:33;:13;62856:14;62838:33;:17;:33;:::i;20018:1466::-;20175:4;-1:-1:-1;;20195:16:6;:31;20191:292;;20271:34;;;;;;;;;;;;-1:-1:-1;;;20271:34:6;;;;;;:16;;20292:6;;20271:34;:20;:34;:::i;:::-;-1:-1:-1;;;;;20242:14:6;;;;;;:7;:14;;;;;;;;20257:10;20242:26;;;;;;;;;:63;;;20392:80;;20257:10;;20392:80;;;;20427:16;;20392:80;;;;;;;;;;20191:292;-1:-1:-1;;;;;20501:17:6;;20493:32;;;;-1:-1:-1;;;20493:32:6;;;;;;;;;-1:-1:-1;;;;;20560:15:6;;20536:21;20560:15;;;:8;:15;;;;;;;;;20612:31;;;;;;;;;;;-1:-1:-1;;;20612:31:6;;;;;;;20560:15;;20536:21;20612:31;;20560:15;;20630:6;;20612:31;:17;:31;:::i;:::-;-1:-1:-1;;;;;20653:15:6;;;;;;;:8;:15;;;;;;:34;;;20720:13;;;;;;;;;20585:58;;-1:-1:-1;20768:23:6;20720:13;20784:6;20768:23;:15;:23;:::i;:::-;-1:-1:-1;;;;;20801:13:6;;;;;;:8;:13;;;;;:30;;;20743:48;;-1:-1:-1;20909:12:6;:10;:12::i;:::-;21177:22;;20885:36;;-1:-1:-1;;;;;;21168:31:6;;;21177:22;;21168:31;;;;:64;;-1:-1:-1;21210:22:6;;-1:-1:-1;;;;;21203:29:6;;;21210:22;;21203:29;;21168:64;21164:249;;;21248:73;21267:5;21274:13;21289:16;21307:13;21248:18;:73::i;:::-;21335:67;21354:3;21359:11;21372:14;21388:13;21335:18;:67::i;:::-;21444:3;-1:-1:-1;;;;;21428:28:6;21437:5;-1:-1:-1;;;;;21428:28:6;;21449:6;21428:28;;;;;;;;;;;;;;;-1:-1:-1;21473:4:6;;20018:1466;-1:-1:-1;;;;;;;;;20018:1466:6:o;63084:460::-;63177:12;63269:7;;-1:-1:-1;;;;;;63269:7:6;63306:66;63231:160;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;63231:160:6;;;63204:201;;;;;;63177:228;;63415:13;63479:4;63473:11;63461:23;;63512:8;63511:9;63503:34;;;;-1:-1:-1;;;63503:34:6;;;;;;;;;63084:460;;:::o;41391:1830::-;41598:13;41626:24;;41622:1593;;41732:28;41762:33;41838:21;;;;;;;;;-1:-1:-1;;;;;41838:21:6;-1:-1:-1;;;;;41825:46:6;;:48;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;41825:48:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;41825:48:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;41825:48:6;;;;;;;;;41950:16;;;41815:169;;-1:-1:-1;;;41815:169:6;;-1:-1:-1;;;;;41815:69:6;;;;;;:169;;41906:22;;41950:16;;;;;;;;41815:169;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;41815:169:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;41815:169:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;41815:169:6;;;;;;;;;41731:253;;;;42024:20;42048:1;42024:25;;42023:63;;;;-1:-1:-1;42055:30:6;;;42023:63;41998:151;;;;-1:-1:-1;;;41998:151:6;;;;;;;;;42237:23;42279:76;42329:25;42279:45;:19;42303:20;42279:45;:23;:45;:::i;:76::-;42558:21;;42624:16;;;42545:194;;-1:-1:-1;;;42545:194:6;;42237:118;;-1:-1:-1;42497:29:6;;-1:-1:-1;;;;;42558:21:6;;;;42545:57;;:194;;42558:21;42624:16;;;;;;42662:22;;42237:118;;42545:194;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;42545:194:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;42545:194:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;42545:194:6;;;;;;;;;42497:242;;42855:19;42830:21;:44;42826:316;;43022:105;43090:19;43022:42;:15;43042:21;43022:42;:19;:42;:::i;:105::-;43004:123;;42826:316;43171:33;:15;43191:12;43171:33;:19;:33;:::i;:::-;43156:48;41391:1830;-1:-1:-1;;;;;;;;41391:1830:6:o;40670:261::-;40765:15;;40735;;-1:-1:-1;;;;;40765:21:6;;;:15;;:21;40761:164;;40815:21;;40862:16;;;40802:77;;-1:-1:-1;;;40802:77:6;;-1:-1:-1;;;;;40815:21:6;;;;40802:59;;:77;;40815:21;40862:16;;;;;;40802:77;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;40802:77:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;40894:15:6;:20;;-1:-1:-1;;;;;40894:20:6;;-1:-1:-1;;40894:20:6;;;;;;-1:-1:-1;;40670:261:6;:::o;61452:734::-;61585:20;;;61676:45;61714:6;61676:33;:13;61694:14;61676:33;:17;:33;:::i;:45::-;61643:78;;61941:70;61966:22;61990:20;62008:1;61990:17;:20::i;:::-;61941:24;:70::i;:::-;61926:85;;62117:62;62133:12;62147:7;62156:22;62117:15;:62::i;:::-;62102:77;;61452:734;;;;;;:::o;43431:354::-;43506:7;43526:16;43544:21;43604;;;;;;;;;-1:-1:-1;;;;;43604:21:6;-1:-1:-1;;;;;43591:46:6;;:48;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;43591:48:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;43591:48:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;43591:48:6;;;;;;;;;43691:17;;43581:141;;-1:-1:-1;;;43581:141:6;;-1:-1:-1;;;;;43581:69:6;;;;;;:141;;43668:5;;43691:17;;;;43581:141;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;43581:141:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;43581:141:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;43581:141:6;;;;;;;;;43525:197;;-1:-1:-1;43525:197:6;-1:-1:-1;43739:39:6;43525:197;43739:20;:6;43525:197;43739:20;:10;:20;:::i;46015:2757::-;46360:7;46369;46388:13;:11;:13::i;:::-;46460:20;:18;:20::i;:::-;46432:11;:24;;;:48;;:146;;;;-1:-1:-1;46542:22:6;;;;-1:-1:-1;;;;;46542:36:6;;;46432:146;46411:213;;;;-1:-1:-1;;;46411:213:6;;;;;;;;;46639:22;;;;-1:-1:-1;;;;;46639:36:6;46635:147;;46716:22;;;;-1:-1:-1;;;;;46691:47:6;:22;;;:47;46635:147;46872:16;46903:84;46920:22;46944:13;46959:11;46972:14;46903:16;:84::i;:::-;46872:115;;47196:55;47226:11;:24;;;47196:11;:25;;;:29;;:55;;;;:::i;:::-;47168:25;;;:83;47283:19;;47279:230;;47453:25;;;;:45;;47483:14;47453:45;:29;:45;:::i;:::-;47425:25;;;:73;47279:230;47519:24;47620:19;;47616:76;;-1:-1:-1;47677:4:6;47616:76;47702:20;47737:13;:126;47803:22;47827:19;47786:61;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;47786:61:6;;;47776:72;;;;;;47768:81;;47737:126;;;;;;;;;;;;47702:161;;47962:21;;;;;;;;;-1:-1:-1;;;;;47962:21:6;-1:-1:-1;;;;;47936:92:6;;48048:8;48071:12;48097:6;48117:19;48150:13;48177;48204:11;48229:13;47936:316;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;47936:316:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;47936:316:6;;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;47936:316:6;;;;;;;;;47901:31;;;47874:378;47875:24;;;47874:378;;;48294:44;;;;-1:-1:-1;;;48294:44:6;;;;;;;;;48564:21;;48625:22;;;;48536:121;;-1:-1:-1;;;48536:121:6;;-1:-1:-1;;;;;48564:21:6;;;;48536:75;;:121;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;48536:121:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;48536:121:6;;;;48676:11;:24;;;48702:11;:31;;;48668:66;;;;;;;46015:2757;;;;;;;;;;:::o;36857:1057::-;36952:18;36986:20;37115:30;37131:13;37115:15;:30::i;:::-;37351:22;;37086:59;;-1:-1:-1;37086:59:6;-1:-1:-1;37314:19:6;;-1:-1:-1;;;;;37351:22:6;:36;37347:203;;37432:22;;37415:135;;-1:-1:-1;;;37415:135:6;;-1:-1:-1;;;;;37432:22:6;;;;37415:64;;:135;;37505:4;;37528:8;;37415:135;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37415:135:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;37415:135:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;37415:135:6;;;;;;;;;37401:149;;37347:203;-1:-1:-1;;;;;37581:18:6;;37560;37581;;;:8;:18;;;;;;:35;;37604:11;37581:35;:22;:35;:::i;:::-;37560:56;-1:-1:-1;37626:18:6;37647:26;37560:56;37662:10;37647:26;:14;:26;:::i;:::-;37626:47;;37726:56;37732:8;37742:10;37754:13;37769:12;37726:5;:56::i;:::-;;37841:66;37860:8;37870:10;37882;37894:12;37841:18;:66::i;:::-;36857:1057;;;;;;;;:::o;55607:275::-;55683:7;55706:16;;55702:174;;55739:26;55771:17;:15;:17::i;:::-;-1:-1:-1;55738:50:6;-1:-1:-1;55809:56:6;55853:11;55809:39;55844:3;55809:30;55738:50;55832:6;55809:30;:22;:30;:::i;23484:513::-;23645:18;23679:21;23675:60;;-1:-1:-1;23723:1:6;23716:8;;23675:60;-1:-1:-1;23783:11:6;;23828:162;23783:11;23828:132;2012:6:3;23828:99:6;23917:8;23828:64;23835:13;23874:16;23828:64;:38;:64;:::i;:::-;:81;:99;:81;:99;:::i;:::-;:116;:132;:116;:132;:::i;:::-;:149;:162;:149;:162;:::i;1282:134:188:-;1340:7;1366:43;1370:1;1373;1366:43;;;;;;;;;;;;;;;;;:3;:43::i;64708:306:6:-;64823:7;64850:16;;;;;:36;;-1:-1:-1;64870:16:6;;;64850:36;64846:162;;;64957:40;64985:11;64957:23;:11;64973:6;64957:23;:15;:23;:::i;65521:994::-;65650:22;;65633:137;;-1:-1:-1;;;65633:137:6;;65580:7;;;;-1:-1:-1;;;;;65650:22:6;;;;65633:64;;:137;;65723:4;;65746:10;;65633:137;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;65633:137:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;65633:137:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;65633:137:6;;;;;;;;;65599:171;;65830:10;65788:38;65804:21;65814:10;65804:9;:21::i;:::-;65788:11;;:38;:15;:38;:::i;:::-;:52;;65780:83;;;;-1:-1:-1;;;65780:83:6;;;;;;;;;65878:15;;65874:552;;65999:10;65985:11;:24;65981:435;;;66046:22;;66029:167;;-1:-1:-1;;;66029:167:6;;-1:-1:-1;;;;;66046:22:6;;;;66029:49;;:167;;66108:4;;66135:11;;66168:10;;66029:167;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;66029:167:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;66029:167:6;;;;65981:435;;;66252:22;;66235:166;;-1:-1:-1;;;66235:166:6;;-1:-1:-1;;;;;66252:22:6;;;;66235:49;;:166;;66314:4;;66341:10;;66373;;66235:166;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;66235:166:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;66235:166:6;;;;65981:435;66486:22;66497:10;38917:1465;38975:22;39017:15;39009:30;;;;-1:-1:-1;;;39009:30:6;;;;;;;;;39067:21;39077:10;39067:9;:21::i;:::-;39054:10;:34;39050:153;;;-1:-1:-1;;39112:10:6;:25;39104:40;;;;-1:-1:-1;;;39104:40:6;;;;;;;;;39171:21;39181:10;39171:9;:21::i;:::-;39158:34;;39050:153;39213:17;:15;:17::i;:::-;39241:20;39264:33;39276:20;39294:1;39276:17;:20::i;39264:33::-;39241:56;-1:-1:-1;39308:22:6;39333:40;39366:6;39333:28;:10;39241:56;39333:28;:14;:28;:::i;:40::-;39308:65;;39383:37;39423:20;:18;:20::i;:::-;39383:60;;39471:14;39454:31;;39521:29;39503:14;:47;;39495:62;;;;-1:-1:-1;;;39495:62:6;;;;;;;;;39763:22;;39726:19;;-1:-1:-1;;;;;39763:22:6;:36;39759:205;;39844:22;;39827:137;;-1:-1:-1;;;39827:137:6;;-1:-1:-1;;;;;39844:22:6;;;;39827:64;;:137;;39917:4;;39940:10;;39827:137;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;39827:137:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;39827:137:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;39827:137:6;;;;;;;;;39813:151;;39759:205;40004:10;39974:18;39995:20;;;:8;:20;;;;;;:37;;40020:11;39995:37;:24;:37;:::i;:::-;39974:58;-1:-1:-1;40042:18:6;40063:26;39974:58;40078:10;40063:26;:14;:26;:::i;:::-;40042:47;;40100:59;40106:10;40118;40130:14;40146:12;40100:5;:59::i;:::-;;40307:68;40326:10;40338;40350;40362:12;40307:18;:68::i;:::-;38917:1465;;;;;;;;;:::o;52454:305::-;52653:67;;52601:151;;52634:5;;-1:-1:-1;;;52676:31:6;52653:67;;52709:2;;52713:6;;52653:67;;;;;;;;-1:-1:-1;;26:21;;;22:32;6:49;;52653:67:6;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;-1:-1;;;;;;52653:67:6;;;179:29:-1;;;;160:49;;;52734:8:6;52601:19;:151::i;:::-;52454:305;;;;:::o;60509:588::-;60891:21;;60973:16;;;60865:125;;-1:-1:-1;;;60865:125:6;;60583:26;;;;;;-1:-1:-1;;;;;60891:21:6;;;;60865:92;;:125;;60966:4;;60891:21;60973:16;;;;;;60865:125;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;60865:125:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;60865:125:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;60865:125:6;;;;;;;;;-1:-1:-1;60800:190:6;;-1:-1:-1;60800:190:6;-1:-1:-1;60800:190:6;-1:-1:-1;61018:72:6;;-1:-1:-1;61083:6:6;;-1:-1:-1;61018:60:6;61037:40;61083:6;60800:190;61037:12;:40::i;:::-;61018:14;;:60;:18;:60;:::i;:72::-;61001:89;;60509:588;;;:::o;55172:244::-;55283:12;;55237:7;;55325:21;:84;;55397:12;;55325:84;;;55349:45;55377:16;55349:23;:11;55365:6;55349:23;:15;:23;:::i;56868:561::-;56946:7;;57001:17;;56997:335;;57038:15;;57064;-1:-1:-1;;;;;57038:42:6;;;:15;;:42;57034:119;;57121:17;:15;:17::i;:::-;57100:38;-1:-1:-1;;57034:119:6;57167:15;57185:40;57210:14;57185:20;:18;:20::i;:40::-;57167:58;;57258:7;57243:12;:22;57239:83;;;57300:7;57285:22;;57239:83;56997:335;;57349:73;57374:12;57388:33;57406:14;57388:17;:33::i;795:96:179:-;874:10;795:96;:::o;54283:427:6:-;54427:25;54446:5;54427:18;:25::i;:::-;54419:68;;;;-1:-1:-1;;;54419:68:6;;;;;;;;;54498:12;54512:23;54539:5;-1:-1:-1;;;;;54539:10:6;54550:4;54539:16;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;54497:58:6;;;;54573:7;54582:8;54565:26;;;;;-1:-1:-1;;;54565:26:6;;;;;;;;;;-1:-1:-1;54606:17:6;;:22;54602:102;;54663:10;54652:30;;;;;;;;;;;;;;54684:8;54644:49;;;;;-1:-1:-1;;;54644:49:6;;;;;;;;;;;54283:427;;;;;:::o;65020:495::-;65116:14;65198:35;65209:8;65219:13;65198:10;:35::i;:::-;65342:22;;65189:44;;-1:-1:-1;65310:71:6;;65332:8;;-1:-1:-1;;;;;65342:22:6;65189:44;;65310:21;:71::i;:::-;-1:-1:-1;65449:22:6;;65432:76;;-1:-1:-1;;;65432:76:6;;-1:-1:-1;;;;;65449:22:6;;;;65432:58;;:76;;65491:8;;65501:6;;65432:76;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;65432:76:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;1682:225:184;-1:-1:-1;;;;;1755:22:184;;1747:73;;;;-1:-1:-1;;;1747:73:184;;;;;;;;;1856:6;;1835:38;;-1:-1:-1;;;;;1835:38:184;;;;1856:6;;1835:38;;1856:6;;1835:38;1883:6;:17;;-1:-1:-1;;;;;;1883:17:184;-1:-1:-1;;;;;1883:17:184;;;;;;;;;;1682:225::o;58333:1964:6:-;58460:16;58492;58511:70;58528:39;58551:15;58528:18;:16;:18::i;:39::-;58569:11;58511:16;:70::i;:::-;58676:8;;58723:14;;58773:11;;58818:9;;58864:12;;58492:89;;-1:-1:-1;58592:19:6;;;;58676:8;58723:14;58773:11;58818:9;58891:26;;;58887:167;;;59028:15;59017:26;;58887:167;59079:13;59068:8;:24;59064:1227;;;59264:25;;;;;1957:6:3;59189:37:6;;;59307:23;;;59303:52;;;59343:12;59332:23;;59303:52;59596:112;59682:12;59596:64;1957:6:3;59596:37:6;:13;59614:18;59596:37;:17;:37;:::i;:112::-;59579:129;;59734:149;59868:14;59734:112;59833:12;59734:77;59764:46;59777:16;59795:14;59764:12;:46::i;:::-;59734:8;;:77;:29;:77;:::i;:149::-;59723:160;;59064:1227;;;;59925:107;60006:12;59925:59;1957:6:3;59925:32:6;:8;59938:18;59925:32;:12;:32;:::i;:107::-;59914:118;-1:-1:-1;60061:12:6;;-1:-1:-1;60061:12:6;;60104:36;:18;60061:12;60104:36;:22;:36;:::i;:::-;60087:53;;60170:11;60159:8;:22;60155:125;;;60194:11;60183:22;;60155:125;;;60239:14;60228:8;:25;60224:56;;;60266:14;60255:25;;60224:56;58333:1964;;;;;;;;;;;;:::o;3756:369:188:-;3872:7;3973:12;3965:6;3957:29;;;;-1:-1:-1;;;3957:29:188;;;;;;;;;;;3996:9;4012:1;4008;:5;;;;;;;3756:369;-1:-1:-1;;;;;3756:369:188:o;1740:217::-;1856:7;1891:12;1883:6;;;;1875:29;;;;-1:-1:-1;;;1875:29:188;;;;;;;;;;-1:-1:-1;;;1926:5:188;;;1740:217::o;21979:656:6:-;22218:43;;22193:12;;22218:43;;22235:5;;1128:66:7;;22218:43:6;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;22218:43:6;;;22208:54;;;;;;22193:69;;22273:21;22308:11;22323:1;22308:16;22304:203;;;22356:1;22340:17;;22304:203;;;22378:16;;22374:133;;-1:-1:-1;;;;;22471:24:6;;;;;;:17;:24;;;;;;22427:69;;22437:4;;22443:11;;22456:13;;22427:9;:69::i;:::-;22410:86;;22374:133;22540:28;;-1:-1:-1;;;;;22588:24:6;;;;;;;:17;:24;;;;;:40;;;;-1:-1:-1;;21979:656:6:o;63999:421::-;64152:28;;64222:43;64256:8;64222:29;:12;64239:11;64222:29;:16;:29;:::i;:43::-;64192:73;-1:-1:-1;64275:15:6;64293:40;64301:6;64192:73;64293:40;:19;:40;:::i;:::-;64275:58;-1:-1:-1;64366:47:6;64275:58;64366:34;:22;64393:6;64366:34;:26;:34;:::i;:47::-;64343:70;63999:421;-1:-1:-1;;;;;;63999:421:6:o;49273:2502::-;49581:17;;49636:16;;49685:24;;;;49743:25;;;;49808:31;;;;49531:16;;-1:-1:-1;;;;;49581:17:6;;;;;49636:16;;;;;49685:24;49743:25;49808:31;49858:43;;;;;49850:58;;;;-1:-1:-1;;;49850:58:6;;;;;;;;;49930:9;;-1:-1:-1;49954:21:6;;49950:548;;50030:78;50044:17;50063:13;:22;;;50087:16;50030:78;;;;;;;;;;;;:13;:78::i;:::-;50141:16;50126:12;:31;50122:260;;;50251:21;;50177:190;;;;;;;;;50251:21;50177:190;;;;50212:17;;-1:-1:-1;;;;;50251:21:6;;;;50294:31;;;;50177:13;:190::i;:::-;49950:548;;;50445:21;;50412:75;;;;;;;;;;;;-1:-1:-1;;;50412:75:6;;;;;;50426:17;;-1:-1:-1;;;;;50445:21:6;;;;50468:12;;50412:13;:75::i;:::-;50712:24;;50708:816;;50799:11;-1:-1:-1;;;;;50773:37:6;:22;-1:-1:-1;;;;;50773:37:6;;:70;;;;-1:-1:-1;50830:13:6;;;50773:70;:121;;;;;50875:19;50863:8;:31;;50773:121;50752:762;;;50934:11;-1:-1:-1;;;;;50927:27:6;;50961:19;50927:56;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;50927:56:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;51080:21:6;;51001:187;;;;;;;;;;;;-1:-1:-1;;;51001:187:6;;;;;;-1:-1:-1;51036:22:6;;-1:-1:-1;;;;;;51080:21:6;;;;-1:-1:-1;51123:19:6;;51001:13;:187::i;:::-;51218:19;51206:31;;;;50752:762;;;51391:21;;51276:223;;;;;;;;;;;;-1:-1:-1;;;51276:223:6;;;;;;51315:22;;51359:10;;-1:-1:-1;;;;;51391:21:6;;51434:19;;51276:17;:223::i;:::-;51538:18;;51534:235;;51670:21;;51572:186;;;;;;;;;;;;-1:-1:-1;;;51572:186:6;;;;;;51607:17;;51642:10;;-1:-1:-1;;;;;51670:21:6;;51709:13;;51572:17;:186::i;:::-;49273:2502;;;;;;;;;;;:::o;38147:556::-;38229:18;;38293;38285:33;;;;-1:-1:-1;;;38285:33:6;;;;;;;;;38329:17;:15;:17::i;:::-;38372:33;38384:20;38402:1;38384:17;:20::i;38372:33::-;38357:48;-1:-1:-1;38428:43:6;38357:48;38428:25;:13;38446:6;38428:25;:17;:25;:::i;:43::-;38415:56;-1:-1:-1;38486:9:6;38482:215;;38516:83;38534:16;;;;;;;;;-1:-1:-1;;;;;38534:16:6;38552:10;38572:4;38579:13;38516:83;;;;;;;;;;;;;-1:-1:-1;;;38516:83:6;;;:17;:83::i;:::-;38482:215;;;38637:17;;;;;;;;;-1:-1:-1;;;;;38637:17:6;-1:-1:-1;;;;;38630:33:6;;38670:13;38630:56;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;38630:56:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;38630:56:6;;;;;38482:215;38147:556;;;:::o;2278:494:0:-;2422:7;-1:-1:-1;;;;;2449:17:0;;2441:32;;;;-1:-1:-1;;;2441:32:0;;;;;;;;;-1:-1:-1;;;;;2503:13:0;;2484:16;2503:13;;;:8;:13;;;;;;:31;;2521:12;2503:31;:17;:31;:::i;:::-;-1:-1:-1;;;;;2544:13:0;;;;;;:8;:13;;;;;:24;;;2594:12;;2484:50;;-1:-1:-1;2594:30:0;;2611:12;2594:30;:16;:30;:::i;:::-;2579:12;:45;2640;;-1:-1:-1;;;;;2640:45:0;;;;;;;2650:12;;2664;;2678:6;;2640:45;;;;;;;;;;2721:3;-1:-1:-1;;;;;2700:39:0;2717:1;-1:-1:-1;;;;;2700:39:0;;2726:12;2700:39;;;;;;;;;;;;;;;2757:8;2278:494;-1:-1:-1;;;;;2278:494:0:o;1975:213:189:-;2031:6;2060:5;;;2084:6;;;;;;:16;;;2099:1;2094;:6;;2084:16;2083:38;;;;2110:1;2106;:5;:14;;;;;2119:1;2115;:5;2106:14;2075:87;;;;-1:-1:-1;;;2075:87:189;;;;;;;;458:554;514:6;754;750:45;;-1:-1:-1;783:1:189;776:8;;750:45;815:1;-1:-1:-1;;815:7:189;:27;;;;;-1:-1:-1;;;826:1:189;:16;815:27;813:30;805:82;;;;-1:-1:-1;;;805:82:189;;;;;;;;;909:5;;;913:1;909;:5;:1;932:5;;;;;:10;924:62;;;;-1:-1:-1;;;924:62:189;;;;;;;;1472:264;1528:6;1554;1546:51;;;;-1:-1:-1;;;1546:51:189;;;;;;;;;1617:1;-1:-1:-1;;1617:7:189;:27;;;;;-1:-1:-1;;;1628:1:189;:16;1617:27;1615:30;1607:76;;;;-1:-1:-1;;;1607:76:189;;;;;;;;;1694:8;1709:1;1705;:5;;;;;;;1472:264;-1:-1:-1;;;;1472:264:189:o;2421:210::-;2477:6;2506:5;;;2530:6;;;;;;:16;;;2545:1;2540;:6;;2530:16;2529:38;;;;2556:1;2552;:5;:14;;;;;2565:1;2561;:5;2552:14;2521:84;;;;-1:-1:-1;;;2521:84:189;;;;;;;;3286:764:0;3517:38;;;;;;;;;;;-1:-1:-1;;;3517:38:0;;;;;;;;-1:-1:-1;;;;;3517:14:0;;3431:7;3517:14;;;:8;:14;;;;;;;3431:7;;3517:38;;:14;3536:12;;3517:38;:18;:38;:::i;:::-;3498:57;;3654:2;3642:8;:14;3638:173;;3748:26;:12;3765:8;3748:26;:16;:26;:::i;:::-;3733:41;;3799:1;3788:12;;3638:173;-1:-1:-1;;;;;3820:14:0;;;;;;:8;:14;;;;;:25;;;3871:12;;:30;;3888:12;3871:30;:16;:30;:::i;:::-;3856:12;:45;3917:46;;-1:-1:-1;;;;;3917:46:0;;;;;;;3928:12;;3942;;3956:6;;3917:46;;;;;;;;;;4001:1;-1:-1:-1;;;;;3978:40:0;3987:4;-1:-1:-1;;;;;3978:40:0;;4005:12;3978:40;;;;;;;693:630:178;753:4;1226:20;;1059:66;1273:23;;;;;;:42;;-1:-1:-1;;1300:15:178;;;1265:51;-1:-1:-1;;693:630:178:o;53481:341:6:-;53706:77;;53654:161;;53687:5;;-1:-1:-1;;;53729:35:6;53706:77;;53766:4;;53772:2;;53776:6;;53706:77;;;;137:437:137;;;;;;;;;-1:-1:-1;137:437:137;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;142:134;220:13;;238:33;220:13;238:33;;283:124;347:20;;372:30;347:20;372:30;;414:128;489:13;;507:30;489:13;507:30;;549:130;616:20;;641:33;616:20;641:33;;700:336;;;814:3;807:4;799:6;795:17;791:27;781:2;;832:1;829;822:12;781:2;-1:-1;852:20;;892:18;881:30;;878:2;;;924:1;921;914:12;878:2;958:4;950:6;946:17;934:29;;1009:3;1001:4;993:6;989:17;979:8;975:32;972:41;969:2;;;1026:1;1023;1016:12;969:2;774:262;;;;;;1045:440;;1146:3;1139:4;1131:6;1127:17;1123:27;1113:2;;1164:1;1161;1154:12;1113:2;1201:6;1188:20;1223:64;1238:48;1279:6;1238:48;;;1223:64;;;1214:73;;1307:6;1300:5;1293:21;1343:4;1335:6;1331:17;1376:4;1369:5;1365:16;1411:3;1402:6;1397:3;1393:16;1390:25;1387:2;;;1428:1;1425;1418:12;1387:2;1438:41;1472:6;1467:3;1462;1438:41;;;1106:379;;;;;;;;2081:134;2159:13;;2177:33;2159:13;2177:33;;2222:241;;2326:2;2314:9;2305:7;2301:23;2297:32;2294:2;;;2342:1;2339;2332:12;2294:2;2377:1;2394:53;2439:7;2419:9;2394:53;;2470:263;;2585:2;2573:9;2564:7;2560:23;2556:32;2553:2;;;2601:1;2598;2591:12;2553:2;2636:1;2653:64;2709:7;2689:9;2653:64;;2740:366;;;2861:2;2849:9;2840:7;2836:23;2832:32;2829:2;;;2877:1;2874;2867:12;2829:2;2912:1;2929:53;2974:7;2954:9;2929:53;;;2919:63;;2891:97;3019:2;3037:53;3082:7;3073:6;3062:9;3058:22;3037:53;;;3027:63;;2998:98;2823:283;;;;;;3113:491;;;;3251:2;3239:9;3230:7;3226:23;3222:32;3219:2;;;3267:1;3264;3257:12;3219:2;3302:1;3319:53;3364:7;3344:9;3319:53;;;3309:63;;3281:97;3409:2;3427:53;3472:7;3463:6;3452:9;3448:22;3427:53;;;3417:63;;3388:98;3517:2;3535:53;3580:7;3571:6;3560:9;3556:22;3535:53;;;3525:63;;3496:98;3213:391;;;;;;3611:366;;;3732:2;3720:9;3711:7;3707:23;3703:32;3700:2;;;3748:1;3745;3738:12;3700:2;3783:1;3800:53;3845:7;3825:9;3800:53;;;3790:63;;3762:97;3890:2;3908:53;3953:7;3944:6;3933:9;3929:22;3908:53;;3984:485;;;;4119:2;4107:9;4098:7;4094:23;4090:32;4087:2;;;4135:1;4132;4125:12;4087:2;4170:1;4187:53;4232:7;4212:9;4187:53;;;4177:63;;4149:97;4277:2;4295:53;4340:7;4331:6;4320:9;4316:22;4295:53;;;4285:63;;4256:98;4385:2;4403:50;4445:7;4436:6;4425:9;4421:22;4403:50;;4476:257;;4588:2;4576:9;4567:7;4563:23;4559:32;4556:2;;;4604:1;4601;4594:12;4556:2;4639:1;4656:61;4709:7;4689:9;4656:61;;4740:1225;;;;;;;;;4972:3;4960:9;4951:7;4947:23;4943:33;4940:2;;;4989:1;4986;4979:12;4940:2;5024:1;5041:53;5086:7;5066:9;5041:53;;;5031:63;;5003:97;5131:2;5149:53;5194:7;5185:6;5174:9;5170:22;5149:53;;;5139:63;;5110:98;5239:2;5257:53;5302:7;5293:6;5282:9;5278:22;5257:53;;;5247:63;;5218:98;5347:2;5365:53;5410:7;5401:6;5390:9;5386:22;5365:53;;;5355:63;;5326:98;5455:3;5474:53;5519:7;5510:6;5499:9;5495:22;5474:53;;;5464:63;;5434:99;5564:3;5583:53;5628:7;5619:6;5608:9;5604:22;5583:53;;;5573:63;;5543:99;5673:3;5692:53;5737:7;5728:6;5717:9;5713:22;5692:53;;;5682:63;;5652:99;5810:3;5799:9;5795:19;5782:33;5835:18;5827:6;5824:30;5821:2;;;5867:1;5864;5857:12;5821:2;5887:62;5941:7;5932:6;5921:9;5917:22;5887:62;;;5877:72;;5761:194;4934:1031;;;;;;;;;;;;5972:1371;;;;;;;;;;;6231:3;6219:9;6210:7;6206:23;6202:33;6199:2;;;6248:1;6245;6238:12;6199:2;6283:1;6300:53;6345:7;6325:9;6300:53;;;6290:63;;6262:97;6390:2;6408:53;6453:7;6444:6;6433:9;6429:22;6408:53;;;6398:63;;6369:98;6498:2;6516:53;6561:7;6552:6;6541:9;6537:22;6516:53;;;6506:63;;6477:98;6606:2;6624:53;6669:7;6660:6;6649:9;6645:22;6624:53;;;6614:63;;6585:98;6714:3;6733:53;6778:7;6769:6;6758:9;6754:22;6733:53;;;6723:63;;6693:99;6823:3;6842:53;6887:7;6878:6;6867:9;6863:22;6842:53;;;6832:63;;6802:99;6932:3;6951:53;6996:7;6987:6;6976:9;6972:22;6951:53;;;6941:63;;6911:99;7041:3;7060:53;7105:7;7096:6;7085:9;7081:22;7060:53;;;7050:63;;7020:99;7178:3;7167:9;7163:19;7150:33;7203:18;7195:6;7192:30;7189:2;;;7235:1;7232;7225:12;7189:2;7263:64;7319:7;7310:6;7299:9;7295:22;7263:64;;;7253:74;;;;7129:204;6193:1150;;;;;;;;;;;;;;7350:1225;;;;;;;;;7582:3;7570:9;7561:7;7557:23;7553:33;7550:2;;;7599:1;7596;7589:12;7550:2;7634:1;7651:53;7696:7;7676:9;7651:53;;;7641:63;;7613:97;7741:2;7759:53;7804:7;7795:6;7784:9;7780:22;7759:53;;;7749:63;;7720:98;7849:2;7867:53;7912:7;7903:6;7892:9;7888:22;7867:53;;;7857:63;;7828:98;7957:2;7975:53;8020:7;8011:6;8000:9;7996:22;7975:53;;;7965:63;;7936:98;8065:3;8084:53;8129:7;8120:6;8109:9;8105:22;8084:53;;;8074:63;;8044:99;8174:3;8193:53;8238:7;8229:6;8218:9;8214:22;8193:53;;;8183:63;;8153:99;8283:3;8302:53;8347:7;8338:6;8327:9;8323:22;8302:53;;8582:347;;8696:2;8684:9;8675:7;8671:23;8667:32;8664:2;;;8712:1;8709;8702:12;8664:2;8747:31;;8798:18;8787:30;;8784:2;;;8830:1;8827;8820:12;8784:2;8850:63;8905:7;8896:6;8885:9;8881:22;8850:63;;8936:241;;9040:2;9028:9;9019:7;9015:23;9011:32;9008:2;;;9056:1;9053;9046:12;9008:2;9091:1;9108:53;9153:7;9133:9;9108:53;;9184:263;;9299:2;9287:9;9278:7;9274:23;9270:32;9267:2;;;9315:1;9312;9305:12;9267:2;9350:1;9367:64;9423:7;9403:9;9367:64;;9454:491;;;;9592:2;9580:9;9571:7;9567:23;9563:32;9560:2;;;9608:1;9605;9598:12;9560:2;9643:1;9660:53;9705:7;9685:9;9660:53;;9952:366;;;10073:2;10061:9;10052:7;10048:23;10044:32;10041:2;;;10089:1;10086;10079:12;10041:2;10124:1;10141:53;10186:7;10166:9;10141:53;;10325:399;;;10457:2;10445:9;10436:7;10432:23;10428:32;10425:2;;;10473:1;10470;10463:12;10425:2;10508:1;10525:64;10581:7;10561:9;10525:64;;;10515:74;;10487:108;10626:2;10644:64;10700:7;10691:6;10680:9;10676:22;10644:64;;10731:491;;;;10869:2;10857:9;10848:7;10844:23;10840:32;10837:2;;;10885:1;10882;10875:12;10837:2;10920:1;10937:53;10982:7;10962:9;10937:53;;;10927:63;;10899:97;11027:2;11045:53;11090:7;11081:6;11070:9;11066:22;11045:53;;;11035:63;;11006:98;11135:2;11153:53;11198:7;11189:6;11178:9;11174:22;11153:53;;11229:617;;;;;11384:3;11372:9;11363:7;11359:23;11355:33;11352:2;;;11401:1;11398;11391:12;11352:2;11436:1;11453:53;11498:7;11478:9;11453:53;;;11443:63;;11415:97;11543:2;11561:53;11606:7;11597:6;11586:9;11582:22;11561:53;;;11551:63;;11522:98;11651:2;11669:53;11714:7;11705:6;11694:9;11690:22;11669:53;;;11659:63;;11630:98;11759:2;11777:53;11822:7;11813:6;11802:9;11798:22;11777:53;;;11767:63;;11738:98;11346:500;;;;;;;;11853:946;;;;;;;12053:3;12041:9;12032:7;12028:23;12024:33;12021:2;;;12070:1;12067;12060:12;12021:2;12105:1;12122:64;12178:7;12158:9;12122:64;;;12112:74;;12084:108;12223:2;12241:64;12297:7;12288:6;12277:9;12273:22;12241:64;;;12231:74;;12202:109;12342:2;12360:64;12416:7;12407:6;12396:9;12392:22;12360:64;;;12350:74;;12321:109;12461:2;12479:64;12535:7;12526:6;12515:9;12511:22;12479:64;;;12469:74;;12440:109;12580:3;12599:64;12655:7;12646:6;12635:9;12631:22;12599:64;;;12589:74;;12559:110;12700:3;12719:64;12775:7;12766:6;12755:9;12751:22;12719:64;;;12709:74;;12679:110;12015:784;;;;;;;;;12807:169;;12892:44;12932:3;12924:6;12892:44;;;-1:-1;;12965:4;12956:14;;12885:91;12984:142;13075:45;13114:5;13075:45;;;13070:3;13063:58;13057:69;;;13133:103;13206:24;13224:5;13206:24;;13363:152;13464:45;13484:24;13502:5;13484:24;;;13464:45;;13551:682;;13694:53;13741:5;13694:53;;;13760:85;13838:6;13833:3;13760:85;;;13753:92;;13866:55;13915:5;13866:55;;;13941:7;13969:1;13954:257;13979:6;13976:1;13973:13;13954:257;;;14046:6;14040:13;14067:61;14124:3;14109:13;14067:61;;;14060:68;;14145:59;14197:6;14145:59;;;14135:69;-1:-1;;14001:1;13994:9;13954:257;;;-1:-1;14224:3;;13673:560;-1:-1;;;;;13673:560;14241:104;14318:21;14333:5;14318:21;;14352:140;14447:39;14464:21;14479:5;14464:21;;;14447:39;;14499:113;14582:24;14600:5;14582:24;;14619:152;14720:45;14740:24;14758:5;14740:24;;;14720:45;;14778:100;14849:23;14866:5;14849:23;;14885:148;14984:43;15003:23;15020:5;15003:23;;15040:343;;15150:38;15182:5;15150:38;;;15200:70;15263:6;15258:3;15200:70;;;15193:77;;15275:52;15320:6;15315:3;15308:4;15301:5;15297:16;15275:52;;;15348:29;15370:6;15348:29;;;15339:39;;;;15130:253;-1:-1;;;15130:253;15390:356;;15518:38;15550:5;15518:38;;;15568:88;15649:6;15644:3;15568:88;;;15561:95;;15661:52;15706:6;15701:3;15694:4;15687:5;15683:16;15661:52;;;15725:16;;;;;15498:248;-1:-1;;15498:248;16571:320;;16731:67;16795:2;16790:3;16731:67;;;-1:-1;;;16811:43;;16882:2;16873:12;;16717:174;-1:-1;;16717:174;16900:301;;17060:66;17124:1;17119:3;17060:66;;;-1:-1;;;17139:25;;17192:2;17183:12;;17046:155;-1:-1;;17046:155;17210:301;;17370:66;17434:1;17429:3;17370:66;;;-1:-1;;;17449:25;;17502:2;17493:12;;17356:155;-1:-1;;17356:155;17520:330;;17680:67;17744:2;17739:3;17680:67;;;17780:32;17760:53;;17841:2;17832:12;;17666:184;-1:-1;;17666:184;17859:375;;18019:67;18083:2;18078:3;18019:67;;;18119:34;18099:55;;-1:-1;;;18183:2;18174:12;;18167:30;18225:2;18216:12;;18005:229;-1:-1;;18005:229;18243:329;;18403:67;18467:2;18462:3;18403:67;;;18503:31;18483:52;;18563:2;18554:12;;18389:183;-1:-1;;18389:183;18581:327;;18741:67;18805:2;18800:3;18741:67;;;18841:29;18821:50;;18899:2;18890:12;;18727:181;-1:-1;;18727:181;18917:357;;19095:85;19177:2;19172:3;19095:85;;;-1:-1;;;19193:44;;19265:2;19256:12;;19081:193;-1:-1;;19081:193;19283:370;;19443:67;19507:2;19502:3;19443:67;;;19543:34;19523:55;;-1:-1;;;19607:2;19598:12;;19591:25;19644:2;19635:12;;19429:224;-1:-1;;19429:224;19662:300;;19822:66;19886:1;19881:3;19822:66;;;-1:-1;;;19901:24;;19953:2;19944:12;;19808:154;-1:-1;;19808:154;19971:318;;20131:67;20195:2;20190:3;20131:67;;;-1:-1;;;20211:41;;20280:2;20271:12;;20117:172;-1:-1;;20117:172;20298:301;;20458:66;20522:1;20517:3;20458:66;;;-1:-1;;;20537:25;;20590:2;20581:12;;20444:155;-1:-1;;20444:155;20608:301;;20768:66;20832:1;20827:3;20768:66;;;-1:-1;;;20847:25;;20900:2;20891:12;;20754:155;-1:-1;;20754:155;20918:362;;21096:85;21178:2;21173:3;21096:85;;;21214:28;21194:49;;21271:2;21262:12;;21082:198;-1:-1;;21082:198;21289:301;;21449:66;21513:1;21508:3;21449:66;;;-1:-1;;;21528:25;;21581:2;21572:12;;21435:155;-1:-1;;21435:155;21599:370;;21759:67;21823:2;21818:3;21759:67;;;21859:34;21839:55;;-1:-1;;;21923:2;21914:12;;21907:25;21960:2;21951:12;;21745:224;-1:-1;;21745:224;21978:301;;22138:66;22202:1;22197:3;22138:66;;;-1:-1;;;22217:25;;22270:2;22261:12;;22124:155;-1:-1;;22124:155;22288:301;;22448:66;22512:1;22507:3;22448:66;;;-1:-1;;;22527:25;;22580:2;22571:12;;22434:155;-1:-1;;22434:155;22598:301;;22758:66;22822:1;22817:3;22758:66;;;-1:-1;;;22837:25;;22890:2;22881:12;;22744:155;-1:-1;;22744:155;22908:301;;23068:66;23132:1;23127:3;23068:66;;;-1:-1;;;23147:25;;23200:2;23191:12;;23054:155;-1:-1;;23054:155;23218:370;;23378:67;23442:2;23437:3;23378:67;;;23478:34;23458:55;;-1:-1;;;23542:2;23533:12;;23526:25;23579:2;23570:12;;23364:224;-1:-1;;23364:224;23597:312;;23757:67;23821:2;23816:3;23757:67;;;-1:-1;;;23837:35;;23900:2;23891:12;;23743:166;-1:-1;;23743:166;23918:301;;24078:66;24142:1;24137:3;24078:66;;;-1:-1;;;24157:25;;24210:2;24201:12;;24064:155;-1:-1;;24064:155;24228:301;;24388:66;24452:1;24447:3;24388:66;;;-1:-1;;;24467:25;;24520:2;24511:12;;24374:155;-1:-1;;24374:155;24538:357;;24716:85;24798:2;24793:3;24716:85;;;-1:-1;;;24814:44;;24886:2;24877:12;;24702:193;-1:-1;;24702:193;24904:376;;25064:67;25128:2;25123:3;25064:67;;;25164:34;25144:55;;-1:-1;;;25228:2;25219:12;;25212:31;25271:2;25262:12;;25050:230;-1:-1;;25050:230;25289:319;;25449:67;25513:2;25508:3;25449:67;;;-1:-1;;;25529:42;;25599:2;25590:12;;25435:173;-1:-1;;25435:173;25617:329;;25777:67;25841:2;25836:3;25777:67;;;25877:31;25857:52;;25937:2;25928:12;;25763:183;-1:-1;;25763:183;25955:362;;26133:85;26215:2;26210:3;26133:85;;;26251:28;26231:49;;26308:2;26299:12;;26119:198;-1:-1;;26119:198;26326:312;;26486:67;26550:2;26545:3;26486:67;;;-1:-1;;;26566:35;;26629:2;26620:12;;26472:166;-1:-1;;26472:166;26647:373;;26807:67;26871:2;26866:3;26807:67;;;26907:34;26887:55;;-1:-1;;;26971:2;26962:12;;26955:28;27011:2;27002:12;;26793:227;-1:-1;;26793:227;27029:324;;27189:67;27253:2;27248:3;27189:67;;;27289:26;27269:47;;27344:2;27335:12;;27175:178;-1:-1;;27175:178;27362:300;;27522:66;27586:1;27581:3;27522:66;;;-1:-1;;;27601:24;;27653:2;27644:12;;27508:154;-1:-1;;27508:154;27671:332;;27831:67;27895:2;27890:3;27831:67;;;27931:34;27911:55;;27994:2;27985:12;;27817:186;-1:-1;;27817:186;28112:809;28335:23;;28267:4;28258:14;;;28364:63;28262:3;28335:23;28364:63;;;28287:146;28510:4;28503:5;28499:16;28493:23;28522:63;28579:4;28574:3;28570:14;28556:12;28522:63;;;28443:148;28668:4;28661:5;28657:16;28651:23;28680:63;28737:4;28732:3;28728:14;28714:12;28680:63;;;28601:148;28825:4;28818:5;28814:16;28808:23;28837:63;28894:4;28889:3;28885:14;28871:12;28837:63;;29025:1675;29252:23;;29176:6;29167:16;;;29281:63;29171:3;29252:23;29281:63;;;29198:152;29431:4;29424:5;29420:16;29414:23;29443:63;29500:4;29495:3;29491:14;29477:12;29443:63;;;29360:152;29602:4;29595:5;29591:16;29585:23;29614:63;29671:4;29666:3;29662:14;29648:12;29614:63;;;29522:161;29765:4;29758:5;29754:16;29748:23;29777:63;29834:4;29829:3;29825:14;29811:12;29777:63;;;29693:153;29934:4;29927:5;29923:16;29917:23;29946:63;30003:4;29998:3;29994:14;29980:12;29946:63;;;29856:159;30097:4;30090:5;30086:16;30080:23;30109:63;30166:4;30161:3;30157:14;30143:12;30109:63;;;30025:153;30271:4;30264:5;30260:16;30254:23;30283:63;30340:4;30335:3;30331:14;30317:12;30283:63;;;30188:164;30437:4;30430:5;30426:16;30420:23;30449:63;30506:4;30501:3;30497:14;30483:12;30449:63;;;30362:156;30600:6;30593:5;30589:18;30583:25;30614:65;30671:6;30666:3;30662:16;30648:12;30614:65;;31096:107;31175:22;31191:5;31175:22;;31210:370;;31351:75;31422:3;31413:6;31351:75;;;31448:2;31443:3;31439:12;31432:19;;31462:69;31527:3;31518:6;31462:69;;;-1:-1;31553:1;31544:11;;31339:241;-1:-1;;31339:241;31587:383;;31734:75;31805:3;31796:6;31734:75;;;31831:2;31826:3;31822:12;31815:19;;31845:75;31916:3;31907:6;31845:75;;;-1:-1;31942:2;31933:12;;31722:248;-1:-1;;31722:248;31977:378;;32122:73;32191:3;32182:6;32122:73;;;32217:1;32212:3;32208:11;32201:18;;32230:75;32301:3;32292:6;32230:75;;32362:262;;32506:93;32595:3;32586:6;32506:93;;32631:372;;32830:148;32974:3;32830:148;;33010:372;;33209:148;33353:3;33209:148;;33389:372;;33588:148;33732:3;33588:148;;33768:372;;33967:148;34111:3;33967:148;;34147:213;34265:2;34250:18;;34279:71;34254:9;34323:6;34279:71;;34367:229;34493:2;34478:18;;34507:79;34482:9;34559:6;34507:79;;34603:324;34749:2;34734:18;;34763:71;34738:9;34807:6;34763:71;;;34845:72;34913:2;34902:9;34898:18;34889:6;34845:72;;34934:340;35088:2;35073:18;;35102:71;35077:9;35146:6;35102:71;;;35184:80;35260:2;35249:9;35245:18;35236:6;35184:80;;35281:435;35455:2;35440:18;;35469:71;35444:9;35513:6;35469:71;;;35551:72;35619:2;35608:9;35604:18;35595:6;35551:72;;;35634;35702:2;35691:9;35687:18;35678:6;35634:72;;35723:647;35947:3;35932:19;;35962:71;35936:9;36006:6;35962:71;;;36044:72;36112:2;36101:9;36097:18;36088:6;36044:72;;;36127;36195:2;36184:9;36180:18;36171:6;36127:72;;;36210;36278:2;36267:9;36263:18;36254:6;36210:72;;;36293:67;36355:3;36344:9;36340:19;36331:6;36293:67;;36377:771;36635:3;36620:19;;36650:71;36624:9;36694:6;36650:71;;;36732:72;36800:2;36789:9;36785:18;36776:6;36732:72;;;36815;36883:2;36872:9;36868:18;36859:6;36815:72;;;36898;36966:2;36955:9;36951:18;36942:6;36898:72;;;36981:73;37049:3;37038:9;37034:19;37025:6;36981:73;;;37065;37133:3;37122:9;37118:19;37109:6;37065:73;;;36606:542;;;;;;;;;;37155:324;37301:2;37286:18;;37315:71;37290:9;37359:6;37315:71;;;37397:72;37465:2;37454:9;37450:18;37441:6;37397:72;;37486:451;37668:2;37653:18;;37682:71;37657:9;37726:6;37682:71;;;37764:72;37832:2;37821:9;37817:18;37808:6;37764:72;;;37847:80;37923:2;37912:9;37908:18;37899:6;37847:80;;37944:468;38138:2;38152:47;;;38123:18;;38213:106;38123:18;38305:6;38213:106;;;38205:114;;38330:72;38398:2;38387:9;38383:18;38374:6;38330:72;;38419:201;38531:2;38516:18;;38545:65;38520:9;38583:6;38545:65;;38627:213;38745:2;38730:18;;38759:71;38734:9;38803:6;38759:71;;38847:1195;39265:3;39250:19;;39280:71;39254:9;39324:6;39280:71;;;39362:72;39430:2;39419:9;39415:18;39406:6;39362:72;;;39445:66;39507:2;39496:9;39492:18;39483:6;39445:66;;;39522:72;39590:2;39579:9;39575:18;39566:6;39522:72;;;39605:135;39735:3;39724:9;39720:19;39711:6;39605:135;;;39751:131;39877:3;39866:9;39862:19;39853:6;39751:131;;;39931:9;39925:4;39921:20;39915:3;39904:9;39900:19;39893:49;39956:76;40027:4;40018:6;39956:76;;;39948:84;39236:806;-1:-1;;;;;;;;;39236:806;40265:293;40399:2;40413:47;;;40384:18;;40474:74;40384:18;40534:6;40474:74;;40873:407;41064:2;41078:47;;;41049:18;;41139:131;41049:18;41139:131;;41287:407;41478:2;41492:47;;;41463:18;;41553:131;41463:18;41553:131;;41701:407;41892:2;41906:47;;;41877:18;;41967:131;41877:18;41967:131;;42115:407;42306:2;42320:47;;;42291:18;;42381:131;42291:18;42381:131;;42529:407;42720:2;42734:47;;;42705:18;;42795:131;42705:18;42795:131;;42943:407;43134:2;43148:47;;;43119:18;;43209:131;43119:18;43209:131;;43357:407;43548:2;43562:47;;;43533:18;;43623:131;43533:18;43623:131;;43771:407;43962:2;43976:47;;;43947:18;;44037:131;43947:18;44037:131;;44185:407;44376:2;44390:47;;;44361:18;;44451:131;44361:18;44451:131;;44599:407;44790:2;44804:47;;;44775:18;;44865:131;44775:18;44865:131;;45013:407;45204:2;45218:47;;;45189:18;;45279:131;45189:18;45279:131;;45427:407;45618:2;45632:47;;;45603:18;;45693:131;45603:18;45693:131;;45841:407;46032:2;46046:47;;;46017:18;;46107:131;46017:18;46107:131;;46255:407;46446:2;46460:47;;;46431:18;;46521:131;46431:18;46521:131;;46669:407;46860:2;46874:47;;;46845:18;;46935:131;46845:18;46935:131;;47083:407;47274:2;47288:47;;;47259:18;;47349:131;47259:18;47349:131;;47497:407;47688:2;47702:47;;;47673:18;;47763:131;47673:18;47763:131;;47911:407;48102:2;48116:47;;;48087:18;;48177:131;48087:18;48177:131;;48325:407;48516:2;48530:47;;;48501:18;;48591:131;48501:18;48591:131;;48739:407;48930:2;48944:47;;;48915:18;;49005:131;48915:18;49005:131;;49153:407;49344:2;49358:47;;;49329:18;;49419:131;49329:18;49419:131;;49567:407;49758:2;49772:47;;;49743:18;;49833:131;49743:18;49833:131;;49981:407;50172:2;50186:47;;;50157:18;;50247:131;50157:18;50247:131;;50395:407;50586:2;50600:47;;;50571:18;;50661:131;50571:18;50661:131;;50809:407;51000:2;51014:47;;;50985:18;;51075:131;50985:18;51075:131;;51223:407;51414:2;51428:47;;;51399:18;;51489:131;51399:18;51489:131;;51637:407;51828:2;51842:47;;;51813:18;;51903:131;51813:18;51903:131;;52051:407;52242:2;52256:47;;;52227:18;;52317:131;52227:18;52317:131;;52465:407;52656:2;52670:47;;;52641:18;;52731:131;52641:18;52731:131;;52879:407;53070:2;53084:47;;;53055:18;;53145:131;53055:18;53145:131;;53513:324;53659:2;53644:18;;53673:71;53648:9;53717:6;53673:71;;53844:435;54018:2;54003:18;;54032:71;54007:9;54076:6;54032:71;;;54114:72;54182:2;54171:9;54167:18;54158:6;54114:72;;54286:205;54400:2;54385:18;;54414:67;54389:9;54454:6;54414:67;;54498:256;54560:2;54554:9;54586:17;;;54661:18;54646:34;;54682:22;;;54643:62;54640:2;;;54718:1;54715;54708:12;54640:2;54734;54727:22;54538:216;;-1:-1;54538:216;54761:321;;54904:18;54896:6;54893:30;54890:2;;;54936:1;54933;54926:12;54890:2;-1:-1;55067:4;55003;54980:17;;;;-1:-1;;54976:33;55057:15;;54827:255;55418:150;55541:4;55532:14;;55489:79;55575:136;55677:12;;55648:63;56215:177;56332:19;;;56381:4;56372:14;;56325:67;57050:91;;57112:24;57130:5;57112:24;;57148:85;57214:13;57207:21;;57190:43;57319:144;-1:-1;;;;;;57380:78;;57363:100;57548:121;-1:-1;;;;;57610:54;;57593:76;57755:81;57826:4;57815:16;;57798:38;57843:129;;57930:37;57961:5;57979:121;58058:37;58089:5;58058:37;;58223:145;58304:6;58299:3;58294;58281:30;-1:-1;58360:1;58342:16;;58335:27;58274:94;58377:268;58442:1;58449:101;58463:6;58460:1;58457:13;58449:101;;;58530:11;;;58524:18;58511:11;;;58504:39;58485:2;58478:10;58449:101;;;58565:6;58562:1;58559:13;58556:2;;;-1:-1;;58630:1;58612:16;;58605:27;58426:219;58653:95;;58717:26;58737:5;58717:26;;58755:90;;58816:24;58834:5;58816:24;;59013:89;;59077:20;59091:5;59077:20;;59190:88;;59252:21;59267:5;59252:21;;59285:97;59373:2;59353:14;-1:-1;;59349:28;;59333:49;59390:96;59465:3;59461:15;;59433:53;59494:94;59568:2;59564:14;;59536:52;59596:117;59665:24;59683:5;59665:24;;;59658:5;59655:35;59645:2;;59704:1;59701;59694:12;59720:111;59786:21;59801:5;59786:21;;59838:117;59907:24;59925:5;59907:24;",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "TINY_AMOUNT()": "f8dd4f0e",
    "VERSION()": "ffa1ad74",
    "admin()": "f851a440",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "assetBalanceOf(address)": "06b3efd6",
    "avgBorrowInterestRate()": "44a4a003",
    "balanceOf(address)": "70a08231",
    "baseRate()": "1f68f20a",
    "borrow(bytes32,uint256,uint256,uint256,address,address,address,bytes)": "2ea295fa",
    "borrowInterestRate()": "8325a1c0",
    "burn(address,uint256)": "9dc29fac",
    "burn(address,uint256,bool)": "76fd4fdf",
    "calculateSupplyInterestRate(uint256,uint256)": "6d23d1ac",
    "checkPriceDivergence(uint256,address,uint256)": "10e57644",
    "checkpointPrice(address)": "eebc5081",
    "checkpointSupply()": "7b7933b4",
    "decimals()": "313ce567",
    "earlyAccessToken()": "ca37e666",
    "getBorrowAmountForDeposit(uint256,uint256,address)": "04797930",
    "getDepositAmountForBorrow(uint256,uint256,address)": "631a3ef8",
    "getEstimatedMarginDetails(uint256,uint256,uint256,address)": "6b40cd40",
    "getListFunctionSignatures()": "90967de5",
    "getMaxEscrowAmount(uint256)": "829b38f4",
    "initialPrice()": "1d0806ae",
    "isOwner()": "8f32d59b",
    "kinkLevel()": "56e07d70",
    "liquidityMiningAddress()": "8ee6c4e6",
    "loanParamsIds(uint256)": "3291c11a",
    "loanTokenAddress()": "797bf385",
    "lowUtilBaseRate()": "d759dbeb",
    "lowUtilRateMultiplier()": "7e37c08c",
    "marginTrade(bytes32,uint256,uint256,uint256,address,address,uint256,bytes)": "28a02f19",
    "marginTradeAffiliate(bytes32,uint256,uint256,uint256,address,address,uint256,address,bytes)": "f6b69f99",
    "marketLiquidity()": "612ef80b",
    "maxScaleRate()": "ef2b0b39",
    "mint(address,uint256)": "40c10f19",
    "mint(address,uint256,bool)": "d1a1beb4",
    "name()": "06fdde03",
    "nextBorrowInterestRate(uint256)": "b9fe1a8f",
    "nextSupplyInterestRate(uint256)": "d65a5021",
    "owner()": "8da5cb5b",
    "pauser()": "9fd0506d",
    "profitOf(address)": "54198ce9",
    "rateMultiplier()": "330691ac",
    "sovrynContractAddress()": "06947a3a",
    "stringToBytes32(string)": "cfb51928",
    "supplyInterestRate()": "09ec6b6b",
    "symbol()": "95d89b41",
    "targetLevel()": "ba0e43bf",
    "target_()": "9bda3a98",
    "tokenPrice()": "7ff9b596",
    "totalAssetBorrow()": "20f6d07c",
    "totalAssetSupply()": "8fb807c5",
    "totalSupply()": "18160ddd",
    "totalSupplyInterestRate(uint256)": "12416898",
    "transactionLimit(address)": "e41b07e3",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "wrbtcTokenAddress()": "2f6b600d"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"valueBefore\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"valueAfter\",\"type\":\"uint256\"}],\"name\":\"AllowanceUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"loanToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"loanAmount\",\"type\":\"uint256\"}],\"name\":\"FlashBorrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"TINY_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"assetBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"avgBorrowInterestRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"loanId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialLoanDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralTokenSent\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"borrow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"borrowInterestRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"burnAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"useLM\",\"type\":\"bool\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"redeemed\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"burnAmount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"loanAmountPaid\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetSupply\",\"type\":\"uint256\"}],\"name\":\"calculateSupplyInterestRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanTokenSent\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minEntryPrice\",\"type\":\"uint256\"}],\"name\":\"checkPriceDivergence\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"checkpointPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"checkpointSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"earlyAccessToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialLoanDuration\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralTokenAddress\",\"type\":\"address\"}],\"name\":\"getBorrowAmountForDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"borrowAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"borrowAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialLoanDuration\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralTokenAddress\",\"type\":\"address\"}],\"name\":\"getDepositAmountForBorrow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"leverageAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanTokenSent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralTokenSent\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralTokenAddress\",\"type\":\"address\"}],\"name\":\"getEstimatedMarginDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getListFunctionSignatures\",\"outputs\":[{\"internalType\":\"bytes4[]\",\"name\":\"functionSignatures\",\"type\":\"bytes4[]\"},{\"internalType\":\"bytes32\",\"name\":\"moduleName\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"leverageAmount\",\"type\":\"uint256\"}],\"name\":\"getMaxEscrowAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxEscrowAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kinkLevel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"liquidityMiningAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loanParamsIds\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"loanTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lowUtilBaseRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lowUtilRateMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"loanId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"leverageAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanTokenSent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralTokenSent\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minEntryPrice\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"loanDataBytes\",\"type\":\"bytes\"}],\"name\":\"marginTrade\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"loanId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"leverageAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanTokenSent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralTokenSent\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minEntryPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"affiliateReferrer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"loanDataBytes\",\"type\":\"bytes\"}],\"name\":\"marginTradeAffiliate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"marketLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxScaleRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"useLM\",\"type\":\"bool\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minted\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"borrowAmount\",\"type\":\"uint256\"}],\"name\":\"nextBorrowInterestRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"supplyAmount\",\"type\":\"uint256\"}],\"name\":\"nextSupplyInterestRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pauser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"profitOf\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rateMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sovrynContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"source\",\"type\":\"string\"}],\"name\":\"stringToBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"result\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"supplyInterestRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"targetLevel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"target_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalAssetBorrow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalAssetSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetSupply\",\"type\":\"uint256\"}],\"name\":\"totalSupplyInterestRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"transactionLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wrbtcTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"params\":{\"_owner\":\"The account owner of the iTokens.\",\"_spender\":\"The account allowed to send the iTokens.\"},\"return\":\"The number of iTokens an account is allowing the spender  to send on its behalf.\"},\"approve(address,uint256)\":{\"params\":{\"_spender\":\"The account address that will be able to spend the tokens.\",\"_value\":\"The amount of tokens allowed to spend.\"}},\"assetBalanceOf(address)\":{\"return\":\"The user's balance of underlying token.\"},\"avgBorrowInterestRate()\":{\"return\":\"The average borrow interest.\"},\"balanceOf(address)\":{\"params\":{\"_owner\":\"The account owner of the iTokens.\"},\"return\":\"The number of iTokens an account owns.\"},\"borrow(bytes32,uint256,uint256,uint256,address,address,address,bytes)\":{\"params\":{\"borrower\":\"The one paying for the collateral.\",\"collateralTokenAddress\":\"The address of the token to be used as  collateral. Cannot be the loan token address.\",\"collateralTokenSent\":\"The amount of collateral tokens provided by the user.  (150% of the withdrawn amount worth in collateral tokens).\",\"initialLoanDuration\":\"The duration of the loan in seconds.  If the loan is not paid back until then, it'll need to be rolled over.\",\"loanId\":\"The ID of the loan, 0 for a new loan.\",\"receiver\":\"The one receiving the withdrawn amount.\",\"withdrawAmount\":\"The amount to be withdrawn (actually borrowed).\"},\"return\":\"New principal and new collateral added to loan.\"},\"borrowInterestRate()\":{\"return\":\"The borrow interest rate.\"},\"burn(address,uint256,bool)\":{\"params\":{\"burnAmount\":\"The amount of pool tokens to redeem.\",\"receiver\":\"the receiver of the underlying tokens. note: potetial LM rewards are always sent to the msg.sender\",\"useLM\":\"if true -> deposit the pool tokens into the Liquidity Mining contract\"}},\"calculateSupplyInterestRate(uint256,uint256)\":{\"params\":{\"assetBorrow\":\"The amount of loan tokens on debt.\",\"assetSupply\":\"The amount of loan tokens supplied.\"},\"return\":\"The next supply interest adjustment.\"},\"checkPriceDivergence(uint256,address,uint256)\":{\"params\":{\"collateralTokenAddress\":\"The token address of collateral.\",\"loanTokenSent\":\"The amount of deposit.\",\"minEntryPrice\":\"Value of loan token in collateral\"}},\"checkpointPrice(address)\":{\"params\":{\"_user\":\"The user account as the mapping index.\"},\"return\":\"The price on the checkpoint for this user.\"},\"getBorrowAmountForDeposit(uint256,uint256,address)\":{\"params\":{\"collateralTokenAddress\":\"The token address of collateral.\",\"depositAmount\":\"The amount of deposit.\",\"initialLoanDuration\":\"The duration of the loan.\"},\"return\":\"The amount of borrow allowed.\"},\"getDepositAmountForBorrow(uint256,uint256,address)\":{\"params\":{\"borrowAmount\":\"The amount of borrow.\",\"collateralTokenAddress\":\"The token address of collateral.\",\"initialLoanDuration\":\"The duration of the loan.\"},\"return\":\"The amount of deposit required.\"},\"getEstimatedMarginDetails(uint256,uint256,uint256,address)\":{\"params\":{\"collateralTokenAddress\":\"The token address of collateral.\",\"collateralTokenSent\":\"The amount of collateral tokens provided by the user.\",\"leverageAmount\":\"The multiple of exposure: 2x ... 5x. The leverage with 18 decimals.\",\"loanTokenSent\":\"The number of loan tokens provided by the user.\"},\"return\":\"The principal, the collateral and the interestRate.\"},\"getListFunctionSignatures()\":{\"details\":\"This function will return the list of function signature in this contract that are available for public call Then this function will be called by LoanTokenLogicBeacon, and the function signatures will be registred in LoanTokenLogicBeacon.To save the gas we can just directly return the list of function signature from this pure function. The other workaround (fancy way) is we can create a storage for the list of the function signature, and then we can store each function signature to that storage from the constructor. Then, in this function we just need to return that storage variable.\",\"return\":\"The list of function signatures (bytes4[])\"},\"getMaxEscrowAmount(uint256)\":{\"details\":\"maxEscrowAmount = liquidity * (100 - interestForDuration) / 100\",\"params\":{\"leverageAmount\":\"The chosen multiplier with 18 decimals.\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"marginTrade(bytes32,uint256,uint256,uint256,address,address,uint256,bytes)\":{\"params\":{\"collateralTokenAddress\":\"The token address of collateral.\",\"collateralTokenSent\":\"The amount of collateral tokens provided by the user.\",\"leverageAmount\":\"The multiple of exposure: 2x ... 5x. The leverage with 18 decimals.\",\"loanDataBytes\":\"Additional loan data (not in use for token swaps).\",\"loanId\":\"The ID of the loan, 0 for a new loan.\",\"loanTokenSent\":\"The number of loan tokens provided by the user.\",\"minEntryPrice\":\"Value of loan token in collateral.\",\"trader\":\"The account that performs this trade.\"},\"return\":\"New principal and new collateral added to trade.\"},\"marginTradeAffiliate(bytes32,uint256,uint256,uint256,address,address,uint256,address,bytes)\":{\"params\":{\"affiliateReferrer\":\"The address of the referrer from affiliates program.\",\"collateralTokenAddress\":\"The token address of collateral.\",\"collateralTokenSent\":\"The amount of collateral tokens provided by the user.\",\"leverageAmount\":\"The multiple of exposure: 2x ... 5x. The leverage with 18 decimals.\",\"loanDataBytes\":\"Additional loan data (not in use for token swaps).\",\"loanId\":\"The ID of the loan, 0 for a new loan.\",\"loanTokenSent\":\"The number of loan tokens provided by the user.\",\"minEntryPrice\":\"Value of loan token in collateral.\",\"trader\":\"The account that performs this trade.\"},\"return\":\"New principal and new collateral added to trade.\"},\"marketLiquidity()\":{\"return\":\"The market liquidity.\"},\"mint(address,uint256)\":{\"params\":{\"depositAmount\":\"The amount of underlying tokens provided on the  loan. (Not the number of loan tokens to mint).\",\"receiver\":\"The account getting the minted tokens.\"},\"return\":\"The amount of loan tokens minted.\"},\"mint(address,uint256,bool)\":{\"params\":{\"depositAmount\":\"The amount of underlying tokens provided on the loan.\\t\\t\\t\\t\\t(Not the number of loan tokens to mint).\",\"receiver\":\"the receiver of the tokens\",\"useLM\":\"if true -> deposit the pool tokens into the Liquidity Mining contract\"}},\"nextBorrowInterestRate(uint256)\":{\"params\":{\"borrowAmount\":\"The amount of tokens to borrow.\"},\"return\":\"The next borrow interest rate.\"},\"nextSupplyInterestRate(uint256)\":{\"params\":{\"supplyAmount\":\"The amount of tokens supplied.\"},\"return\":\"Interest that lenders are currently receiving when supplying a given amount of tokens to the pool.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"profitOf(address)\":{\"params\":{\"user\":\"The user address.\"},\"return\":\"The profit of a user.\"},\"supplyInterestRate()\":{\"return\":\"Interest that lenders are currently receiving when supplying to the pool.\"},\"tokenPrice()\":{\"return\":\"The loan token price.\"},\"totalAssetBorrow()\":{\"return\":\"The total amount of loan tokens on debt.\"},\"totalAssetSupply()\":{\"details\":\"Wrapper for internal _totalAssetSupply function.\",\"return\":\"The total amount of loan tokens on supply.\"},\"totalSupply()\":{\"return\":\"The total number of iTokens in existence as of now.\"},\"totalSupplyInterestRate(uint256)\":{\"params\":{\"assetSupply\":\"The amount of loan tokens supplied.\"},\"return\":\"Interest that lenders are currently receiving when supplying a given amount of loan tokens to the pool.\"},\"transfer(address,uint256)\":{\"params\":{\"_to\":\"The recipient of the tokens.\",\"_value\":\"The amount of tokens sent.\"},\"return\":\"Success true/false.\"},\"transferFrom(address,address,uint256)\":{\"return\":\"A boolean value indicating whether the operation succeeded.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"allowance(address,address)\":{\"notice\":\"Get the amount of iTokens allowed to be spent by a  given account on behalf of the owner.\"},\"approve(address,uint256)\":{\"notice\":\"Set an amount as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event.\"},\"assetBalanceOf(address)\":{\"notice\":\"Get loan token balance.\"},\"avgBorrowInterestRate()\":{\"notice\":\"Wrapper for average borrow interest.\"},\"balanceOf(address)\":{\"notice\":\"Get the amount of iTokens owned by an account.\"},\"borrow(bytes32,uint256,uint256,uint256,address,address,address,bytes)\":{\"notice\":\"Borrow funds from the pool. The underlying loan token may not be used as collateral.\"},\"borrowInterestRate()\":{\"notice\":\"Get borrow interest rate. The minimum rate the next base protocol borrower will receive for variable-rate loans.\"},\"burn(address,uint256,bool)\":{\"notice\":\"withdraws from the lending pool and optionally retrieves the pool tokens from the        Liquidity Mining Contract\"},\"calculateSupplyInterestRate(uint256,uint256)\":{\"notice\":\"Compute the next supply interest adjustment.\"},\"checkPriceDivergence(uint256,address,uint256)\":{\"notice\":\"Check if entry price lies above a minimum\"},\"checkpointPrice(address)\":{\"notice\":\"Getter for the price checkpoint mapping.\"},\"getBorrowAmountForDeposit(uint256,uint256,address)\":{\"notice\":\"Calculate the borrow allowed for a given deposit.     * The function for doing over-collateralized borrows against loan tokens expects a minimum amount of collateral be sent to satisfy collateral requirements of the loan, for borrow amount, interest rate, and initial loan duration. To determine appropriate values to pass to this function for a given loan, `getDepositAmountForBorrow` and 'getBorrowAmountForDeposit` are required.\"},\"getDepositAmountForBorrow(uint256,uint256,address)\":{\"notice\":\"Calculate the deposit required to a given borrow.     * The function for doing over-collateralized borrows against loan tokens expects a minimum amount of collateral be sent to satisfy collateral requirements of the loan, for borrow amount, interest rate, and initial loan duration. To determine appropriate values to pass to this function for a given loan, `getDepositAmountForBorrow` and 'getBorrowAmountForDeposit` are required.\"},\"getEstimatedMarginDetails(uint256,uint256,uint256,address)\":{\"notice\":\"Get margin information on a trade.\"},\"getListFunctionSignatures()\":{\"notice\":\"This function is MANDATORY, which will be called by LoanTokenLogicBeacon and be registered. Every new public function, the signature needs to be included in this function.\"},\"getMaxEscrowAmount(uint256)\":{\"notice\":\"Compute the maximum deposit amount under current market conditions.\"},\"marginTrade(bytes32,uint256,uint256,uint256,address,address,uint256,bytes)\":{\"notice\":\"Borrow and immediately get into a position.     * Trading on margin is used to increase an investor's buying power. Margin is the amount of money required to open a position, while leverage is the multiple of exposure to account equity.     * Leverage allows you to trade positions LARGER than the amount of money in your trading account. Leverage is expressed as a ratio.     * When trading on margin, investors first deposit some token that then serves as collateral for the loan, and then pay ongoing interest payments on the money they borrow.     * Margin trading = taking a loan and swapping it: In order to open a margin trade position, 1.- The user calls marginTrade on the loan token contract. 2.- The loan token contract provides the loan and sends it for processing   to the protocol proxy contract. 3.- The protocol proxy contract uses the module LoanOpening to create a   position and swaps the loan tokens to collateral tokens. 4.- The Sovryn Swap network looks up the correct converter and swaps the   tokens. If successful, the position is being held by the protocol proxy contract, which is why positions need to be closed at the protocol proxy contract.\"},\"marginTradeAffiliate(bytes32,uint256,uint256,uint256,address,address,uint256,address,bytes)\":{\"notice\":\"Wrapper for marginTrade invoking setAffiliatesReferrer to track  referral trade by affiliates program.\"},\"marketLiquidity()\":{\"notice\":\"Get current liquidity. A part of total funds supplied are borrowed. Liquidity = supply - borrow\"},\"mint(address,uint256)\":{\"notice\":\"Mint loan token wrapper. Adds a check before calling low level _mintToken function. The function retrieves the tokens from the message sender, so make sure to first approve the loan token contract to access your funds. This is done by calling approve(address spender, uint amount) on the ERC20 token contract, where spender is the loan token contract address and amount is the amount to be deposited.\"},\"mint(address,uint256,bool)\":{\"notice\":\"deposit into the lending pool and optionally participate at the Liquidity Mining Program\"},\"nextBorrowInterestRate(uint256)\":{\"notice\":\"Public wrapper for internal call.\"},\"nextSupplyInterestRate(uint256)\":{\"notice\":\"Get interest rate w/ added supply.\"},\"profitOf(address)\":{\"notice\":\"Wrapper for internal _profitOf low level function.\"},\"supplyInterestRate()\":{\"notice\":\"Get interest rate.\"},\"tokenPrice()\":{\"notice\":\"Loan token price calculation considering unpaid interests.\"},\"totalAssetBorrow()\":{\"notice\":\"Get the total amount of loan tokens on debt. Calls protocol getTotalPrincipal function. In the context of borrowing, principal is the initial size of a loan. It can also be the amount still owed on a loan. If you take out a $50,000 mortgage, for example, the principal is $50,000. If you pay off $30,000, the principal balance now consists of the remaining $20,000.\"},\"totalAssetSupply()\":{\"notice\":\"Get the total amount of loan tokens on supply.\"},\"totalSupply()\":{\"notice\":\"Get the total supply of iTokens.\"},\"totalSupplyInterestRate(uint256)\":{\"notice\":\"Get interest rate w/ added supply assets.\"},\"transfer(address,uint256)\":{\"notice\":\"Transfer tokens wrapper. Sets token owner the msg.sender. Sets maximun allowance uint256(-1) to ensure tokens are always transferred.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Moves `_value` loan tokens from `_from` to `_to` using the allowance mechanism. Calls internal _internalTransferFrom function.\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/mockup/LoanTokenLogicLMMockup.sol\":\"LoanTokenLogicLMMockup\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@ethereum-waffle/=node_modules/@ethereum-waffle/\",\":ds-test/=foundry/lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=foundry/lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":truffle/=node_modules/truffle/\"]},\"sources\":{\"contracts/connectors/loantoken/AdvancedToken.sol\":{\"keccak256\":\"0x4e7606dcb24cd7f3a4e5c1a153975fd65156f7239cb281034c84d64b0dfc5dd0\",\"urls\":[\"bzz-raw://0f0ab7e85a0ab4c198221de9c7802e5d7c8b07954defa081f10778372faae26e\",\"dweb:/ipfs/QmbeL315ceTTd4kBiZjkZiPxygRzFdWexjPS9nmsfKCezc\"]},\"contracts/connectors/loantoken/AdvancedTokenStorage.sol\":{\"keccak256\":\"0x08afb0584442da1baf29938b6ff797e22fc8b7e493e51fd26358e7be3b73fa32\",\"urls\":[\"bzz-raw://6cd1144ca50579200cd44c1bd9498549b73889959322894fb89abb598ee9ea03\",\"dweb:/ipfs/QmW6U3TsN4y781X5n7bMt3PGtiMQyAdPyBgVFTNTnewxuL\"]},\"contracts/connectors/loantoken/LoanTokenBase.sol\":{\"keccak256\":\"0x9cb501d26d27b5bc143085b6d38261323426741857e49ff5dea0ea1325b5fab8\",\"urls\":[\"bzz-raw://20d89f7140a2efd14434fe7389e9ef05fd6d14ce8e939d4c34aac10bbcd08702\",\"dweb:/ipfs/QmfQ6QBwH7Tw7oDVj4R71Q96o3ycFEkqrVzJKwuciS3Ty9\"]},\"contracts/connectors/loantoken/LoanTokenLogicStandard.sol\":{\"keccak256\":\"0xc27b1604f72cd126f41deae512fa72d39077a796582b75f10d83c1ca25e84a3c\",\"urls\":[\"bzz-raw://8d5173bcc9a856ffb9feb5f3420c462e742e80fb21ff05e64ea13d06dc25e901\",\"dweb:/ipfs/QmXhPDGCn4hXzTR6kkx2nBDx6R3RtqoDHwszftJ7jJEQGi\"]},\"contracts/connectors/loantoken/LoanTokenLogicStorage.sol\":{\"keccak256\":\"0xb38139a4492a0e76c5d6eadaae2c366e98ffd5974c12c7cf37c2b55b56b9ca94\",\"urls\":[\"bzz-raw://f698e1c42c1e107f537a5287a04fb74d615c6764ee4f88b37195eb496d77b238\",\"dweb:/ipfs/QmXbas1bgup3dkRhBhMQi2z3fsg9UvPFnWifetvBPfvKh1\"]},\"contracts/connectors/loantoken/Pausable.sol\":{\"keccak256\":\"0x54f95b041e66fbcadb867bfba626373b681e0000ecea2b19f521de89c3020690\",\"urls\":[\"bzz-raw://4e7ef0893bfcad7960c84dc41504218cf65edb7cb44263055eccc321b515df13\",\"dweb:/ipfs/QmPk7qj658ha5SvWLtsrS5okGaYWwuPHVaL86pJr6hQyjX\"]},\"contracts/connectors/loantoken/interfaces/FeedsLike.sol\":{\"keccak256\":\"0xc8786f355ccc5a00a4b0985c28f0063cb9480f53468d44b7c17b02c9bf13a970\",\"urls\":[\"bzz-raw://fef80803763be524fcce5500f377d653b4b8e6fd4dab318ea332938203090365\",\"dweb:/ipfs/QmWE4XDFfuKxsESYXbu3H8Bqn8DH2J5zbS5rQiqcigBEHi\"]},\"contracts/connectors/loantoken/interfaces/ProtocolLike.sol\":{\"keccak256\":\"0x97e523a6ab51b439537b2ad5ef8c09cb01f99d210b2574cc54fb5062f900f2ab\",\"urls\":[\"bzz-raw://e19c13654eec4ce2a5270a440767766f6e0859c034186bdcd66dd79b2ff59aaf\",\"dweb:/ipfs/QmPhfjV6eTc8KHvNUaiNiH1trQ5Ey8bSn5bf2jGxsAcv5S\"]},\"contracts/connectors/loantoken/interfaces/ProtocolSettingsLike.sol\":{\"keccak256\":\"0x3e1ea57320782c4f65c58d9f28aff15eda65eef1f8e76551b2da920dffbf0c1e\",\"urls\":[\"bzz-raw://5113bd26c46a25e8d3c1f85e123b2afe007bcde6850209d7abdbfc1b5b974b92\",\"dweb:/ipfs/QmQJaSinWCy7oBWdmv4oR31QL4VbYKEXsmMRdqU2aCthms\"]},\"contracts/connectors/loantoken/lib/MarginTradeStructHelpers.sol\":{\"keccak256\":\"0xf0612e2c0d13604a67c3d55efe88810c089f0b84ca63bd3ce82c1e09b0938973\",\"urls\":[\"bzz-raw://29d225d836c786e5140f7798e25f8c170c7417113cdd6a3bfe5d240357679678\",\"dweb:/ipfs/QmXTppmtBSC8pNCzvyt8H1zUUTnKvoedwmW3TLuXPKsGZU\"]},\"contracts/connectors/loantoken/modules/beaconLogicLM/LoanTokenLogicLM.sol\":{\"keccak256\":\"0x6b16cba8c623a645accca094f215fd138eb7afa329fbb04ed656d9f4931d56cd\",\"urls\":[\"bzz-raw://356a94a1b090f39bfff7a719491c1e77d6e2b3cbf002eb6340179a033eb415e1\",\"dweb:/ipfs/QmNk1xe5KK8tQ7nk4iGgLUJXG8njGVwDAXbFxc2hkmvPeh\"]},\"contracts/core/objects/LoanParamsStruct.sol\":{\"keccak256\":\"0xe15aa97713521da7f501e5225af9d92cf34bd68d286dbfed86aa75aabb323945\",\"urls\":[\"bzz-raw://8ffbf11735ac26f4c1cc8c3403b8b98519cff9a5a16bf690e1c7a8a29449aa39\",\"dweb:/ipfs/QmX6J85sDNbu5Mh553oQNkfNoPRd79sHU8zKLWzNUz3E7U\"]},\"contracts/farm/ILiquidityMining.sol\":{\"keccak256\":\"0xed5abb44e4a222ecf9d20998ad9ae2ee3715291c9ea6a30e0c74f0a0e6d08ea8\",\"urls\":[\"bzz-raw://5fef3b0642fb459b84f25e39036b3765a7cd554be1258ff678fc6204d4551fd6\",\"dweb:/ipfs/QmUcbqnmK2sWSQZDzLJfxbFepVF816S9XsYqMgk4D6DEc6\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xea0bb1bf7d022130bb42a4efdfd875ef76ac5ac730a94ddd7b8c9949d4253855\",\"urls\":[\"bzz-raw://2050b03a2a1d4203698261daf2f46749bf5b72e3d23c272553e047e6bea4af40\",\"dweb:/ipfs/QmPY8bbNv3KxnyQ4Z6DtHkYu2U1Kfd7ooRDRUWNuw6v4Jt\"]},\"contracts/interfaces/IWrbtc.sol\":{\"keccak256\":\"0x20fdfe4b5e32fd7f863b3fa128e3c80bd4ccf090a4ffba56186ef3b7f2a80492\",\"urls\":[\"bzz-raw://d1adc3348aded3938e587fead4d4becf8efbed346c9cdc73e1f8ed42cb43b2c9\",\"dweb:/ipfs/QmZPMshLwXDwH2UKkFeV5QPtz129swV354fQ25gqKWAV94\"]},\"contracts/interfaces/IWrbtcERC20.sol\":{\"keccak256\":\"0x7301a8c8ca7aa016ec94268a16d07366875f2e406442e929968dd745b1ee5be5\",\"urls\":[\"bzz-raw://12d22b4d1e74d95f82d2bc84b5e3c978e2341cb7a1b8fc383b64aaef59f13a00\",\"dweb:/ipfs/QmZkPrztJ5nwiKKudgz8aWX6kk3YHKCtmxJndMvV1NJuS6\"]},\"contracts/mockup/LoanTokenLogicLMMockup.sol\":{\"keccak256\":\"0xb3c397db76307af9fbb23de1a082e7906385c0b287a78e9c07fe98f9f59e772a\",\"urls\":[\"bzz-raw://824ac285e1b475785ed8bb0ccc4e74d34e0b7f934f0b38ba46e5b82569c78c75\",\"dweb:/ipfs/QmUagnjkbph2dZCMPJJ8hShVsHZ1ieMRFfkC1Uz2CUj8uw\"]},\"contracts/modules/interfaces/ProtocolAffiliatesInterface.sol\":{\"keccak256\":\"0x42f259156db09a06e3dcdf0ab9c6774712616b35e6baff97999a2a534d1c9c64\",\"urls\":[\"bzz-raw://54555f2049d372e0b52b6020f1459c5d8ee27ac9430ec6e329a3c74810933387\",\"dweb:/ipfs/Qme6jqbycF9LtMFvMpMHoGnLBeRk7B1rF5bZVAYK15GisV\"]},\"contracts/openzeppelin/Address.sol\":{\"keccak256\":\"0x23df48a01dbac9b25e86c9131174fb7752bbc7e741e63f1aa982de22e055ad54\",\"urls\":[\"bzz-raw://0928673cfdca6f6917432e1cff628b726b4396ed0f4b08d3281a7ebbdb2380e3\",\"dweb:/ipfs/QmY12enUUEaE7sC5PZAdqJo63JxaH2FqVJtHZxxB9HzVYE\"]},\"contracts/openzeppelin/Context.sol\":{\"keccak256\":\"0x7860cb1591dbd66bb497c60c46866d9fcdb56c73306ed86b25801000af1c7b2b\",\"urls\":[\"bzz-raw://79e480eab5cb03c034f7fb2c177f23874fddebbb3514d773729bb094a0fda826\",\"dweb:/ipfs/QmTfDHE4fnQE3gfycu7NePREWfWFgJgmaEmHDn4uyTnMBP\"]},\"contracts/openzeppelin/Ownable.sol\":{\"keccak256\":\"0x94496c375b3e82d87d7f01ce1577f008fab374312cf93012a0eca716e6aadb3a\",\"urls\":[\"bzz-raw://ea268f87bc9d256b99aae4d98f23931f485295b5720f505e0554223c9b54431a\",\"dweb:/ipfs/QmWCLqTijearegiDuWyhrkRQXXACT1sVUG6cF3L9pszb6Y\"]},\"contracts/openzeppelin/ReentrancyGuard.sol\":{\"keccak256\":\"0xd347de96ad57d1e45b07a2efe3050c1bd4b809236bbf354acb593de56d21a5c9\",\"urls\":[\"bzz-raw://ad45ba93d472a3c4f7092e34d6f1cdca11c9e64a5918bf848d497c7f49427ec5\",\"dweb:/ipfs/QmPC5tnpnpv67NfTDb7rZVgBvvLXoJmiuBzUgjz3MAUeFk\"]},\"contracts/openzeppelin/SafeMath.sol\":{\"keccak256\":\"0xbff8d6273e1a6870d1a142c0c23acd63a4dd47760f250390f49ee56333bcb6e8\",\"urls\":[\"bzz-raw://379880c293771d9db34b4db282bd22f0536d41f1db2a7fb887124984a5bcd719\",\"dweb:/ipfs/QmUrUzEJPp9WxyvFFZSaqv7qjnSwrkApNUkMny5cCcY2a6\"]},\"contracts/openzeppelin/SignedSafeMath.sol\":{\"keccak256\":\"0x449606d22a41bbeaeee8775d66b2bd179b6964b65fd3380b22ef837634e7523b\",\"urls\":[\"bzz-raw://f13fe82aab8ae79842e617c9c77155f2f46ec21670887c2e037d9d42b50062f8\",\"dweb:/ipfs/QmZJPTQmcVm6XWq5LJsouTwC71KzkjawN8UgqyQbPyUpkx\"]},\"contracts/reentrancy/Mutex.sol\":{\"keccak256\":\"0xd10b0fd07d5fed1ae1237e7c87e6501970fce2a86e2b8862e502258b0d3aeb2c\",\"urls\":[\"bzz-raw://a99cb17e5f05a4eeb80c91d0d00fb9c482502e5acdd0d10727d53f9b68f1e732\",\"dweb:/ipfs/QmZ8Va6t8DJAAHUcSXC4aWmitcgSAhugdeWHCFXJcxJF5S\"]},\"contracts/reentrancy/SharedReentrancyGuard.sol\":{\"keccak256\":\"0x2d0e61b104b91c1764f20fbeb381ba0f8a8889934ba7f6e8a167ed542ec2c124\",\"urls\":[\"bzz-raw://380369e173ad2b17130b26377df35a13ed3413b65f72f8242dc6e2eb5aca5517\",\"dweb:/ipfs/QmNNRyoKsrU7XsV1B8okhaJpGNgzRixnySebGZYzT3RmC9\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.5.17+commit.d19bba13"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "valueBefore",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "valueAfter",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AllowanceUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "burner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "assetAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Burn",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "loanToken",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "loanAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FlashBorrow",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "minter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "assetAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Mint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TINY_AMOUNT",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "VERSION",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assetBalanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "avgBorrowInterestRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "baseRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "loanId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "withdrawAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialLoanDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralTokenSent",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralTokenAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "borrow",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "borrowInterestRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "burnAmount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "useLM",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "redeemed",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "burnAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "loanAmountPaid",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assetBorrow",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "assetSupply",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateSupplyInterestRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "loanTokenSent",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralTokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "minEntryPrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkPriceDivergence"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkpointPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "checkpointSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "earlyAccessToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "depositAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialLoanDuration",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralTokenAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBorrowAmountForDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "borrowAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "borrowAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialLoanDuration",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralTokenAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDepositAmountForBorrow",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "depositAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "leverageAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "loanTokenSent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralTokenSent",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralTokenAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEstimatedMarginDetails",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "principal",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateral",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "interestRate",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getListFunctionSignatures",
          "outputs": [
            {
              "internalType": "bytes4[]",
              "name": "functionSignatures",
              "type": "bytes4[]"
            },
            {
              "internalType": "bytes32",
              "name": "moduleName",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "leverageAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMaxEscrowAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "maxEscrowAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "initialPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isOwner",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "kinkLevel",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "liquidityMiningAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "loanParamsIds",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "loanTokenAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lowUtilBaseRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lowUtilRateMultiplier",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "loanId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "leverageAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "loanTokenSent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralTokenSent",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralTokenAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "minEntryPrice",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "loanDataBytes",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "marginTrade",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "loanId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "leverageAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "loanTokenSent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralTokenSent",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralTokenAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "minEntryPrice",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "affiliateReferrer",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "loanDataBytes",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "marginTradeAffiliate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "marketLiquidity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxScaleRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "depositAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "mintAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "depositAmount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "useLM",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "minted",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "borrowAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nextBorrowInterestRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "supplyAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nextSupplyInterestRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pauser",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "profitOf",
          "outputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rateMultiplier",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sovrynContractAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "source",
              "type": "string"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "stringToBytes32",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "result",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "supplyInterestRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetLevel",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "target_",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalAssetBorrow",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalAssetSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "assetSupply",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupplyInterestRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "transactionLimit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "wrbtcTokenAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "methods": {
          "allowance(address,address)": {
            "params": {
              "_owner": "The account owner of the iTokens.",
              "_spender": "The account allowed to send the iTokens."
            },
            "return": "The number of iTokens an account is allowing the spender  to send on its behalf."
          },
          "approve(address,uint256)": {
            "params": {
              "_spender": "The account address that will be able to spend the tokens.",
              "_value": "The amount of tokens allowed to spend."
            }
          },
          "assetBalanceOf(address)": {
            "return": "The user's balance of underlying token."
          },
          "avgBorrowInterestRate()": {
            "return": "The average borrow interest."
          },
          "balanceOf(address)": {
            "params": {
              "_owner": "The account owner of the iTokens."
            },
            "return": "The number of iTokens an account owns."
          },
          "borrow(bytes32,uint256,uint256,uint256,address,address,address,bytes)": {
            "params": {
              "borrower": "The one paying for the collateral.",
              "collateralTokenAddress": "The address of the token to be used as  collateral. Cannot be the loan token address.",
              "collateralTokenSent": "The amount of collateral tokens provided by the user.  (150% of the withdrawn amount worth in collateral tokens).",
              "initialLoanDuration": "The duration of the loan in seconds.  If the loan is not paid back until then, it'll need to be rolled over.",
              "loanId": "The ID of the loan, 0 for a new loan.",
              "receiver": "The one receiving the withdrawn amount.",
              "withdrawAmount": "The amount to be withdrawn (actually borrowed)."
            },
            "return": "New principal and new collateral added to loan."
          },
          "borrowInterestRate()": {
            "return": "The borrow interest rate."
          },
          "burn(address,uint256,bool)": {
            "params": {
              "burnAmount": "The amount of pool tokens to redeem.",
              "receiver": "the receiver of the underlying tokens. note: potetial LM rewards are always sent to the msg.sender",
              "useLM": "if true -> deposit the pool tokens into the Liquidity Mining contract"
            }
          },
          "calculateSupplyInterestRate(uint256,uint256)": {
            "params": {
              "assetBorrow": "The amount of loan tokens on debt.",
              "assetSupply": "The amount of loan tokens supplied."
            },
            "return": "The next supply interest adjustment."
          },
          "checkPriceDivergence(uint256,address,uint256)": {
            "params": {
              "collateralTokenAddress": "The token address of collateral.",
              "loanTokenSent": "The amount of deposit.",
              "minEntryPrice": "Value of loan token in collateral"
            }
          },
          "checkpointPrice(address)": {
            "params": {
              "_user": "The user account as the mapping index."
            },
            "return": "The price on the checkpoint for this user."
          },
          "getBorrowAmountForDeposit(uint256,uint256,address)": {
            "params": {
              "collateralTokenAddress": "The token address of collateral.",
              "depositAmount": "The amount of deposit.",
              "initialLoanDuration": "The duration of the loan."
            },
            "return": "The amount of borrow allowed."
          },
          "getDepositAmountForBorrow(uint256,uint256,address)": {
            "params": {
              "borrowAmount": "The amount of borrow.",
              "collateralTokenAddress": "The token address of collateral.",
              "initialLoanDuration": "The duration of the loan."
            },
            "return": "The amount of deposit required."
          },
          "getEstimatedMarginDetails(uint256,uint256,uint256,address)": {
            "params": {
              "collateralTokenAddress": "The token address of collateral.",
              "collateralTokenSent": "The amount of collateral tokens provided by the user.",
              "leverageAmount": "The multiple of exposure: 2x ... 5x. The leverage with 18 decimals.",
              "loanTokenSent": "The number of loan tokens provided by the user."
            },
            "return": "The principal, the collateral and the interestRate."
          },
          "getListFunctionSignatures()": {
            "details": "This function will return the list of function signature in this contract that are available for public call Then this function will be called by LoanTokenLogicBeacon, and the function signatures will be registred in LoanTokenLogicBeacon.To save the gas we can just directly return the list of function signature from this pure function. The other workaround (fancy way) is we can create a storage for the list of the function signature, and then we can store each function signature to that storage from the constructor. Then, in this function we just need to return that storage variable.",
            "return": "The list of function signatures (bytes4[])"
          },
          "getMaxEscrowAmount(uint256)": {
            "details": "maxEscrowAmount = liquidity * (100 - interestForDuration) / 100",
            "params": {
              "leverageAmount": "The chosen multiplier with 18 decimals."
            }
          },
          "isOwner()": {
            "details": "Returns true if the caller is the current owner."
          },
          "marginTrade(bytes32,uint256,uint256,uint256,address,address,uint256,bytes)": {
            "params": {
              "collateralTokenAddress": "The token address of collateral.",
              "collateralTokenSent": "The amount of collateral tokens provided by the user.",
              "leverageAmount": "The multiple of exposure: 2x ... 5x. The leverage with 18 decimals.",
              "loanDataBytes": "Additional loan data (not in use for token swaps).",
              "loanId": "The ID of the loan, 0 for a new loan.",
              "loanTokenSent": "The number of loan tokens provided by the user.",
              "minEntryPrice": "Value of loan token in collateral.",
              "trader": "The account that performs this trade."
            },
            "return": "New principal and new collateral added to trade."
          },
          "marginTradeAffiliate(bytes32,uint256,uint256,uint256,address,address,uint256,address,bytes)": {
            "params": {
              "affiliateReferrer": "The address of the referrer from affiliates program.",
              "collateralTokenAddress": "The token address of collateral.",
              "collateralTokenSent": "The amount of collateral tokens provided by the user.",
              "leverageAmount": "The multiple of exposure: 2x ... 5x. The leverage with 18 decimals.",
              "loanDataBytes": "Additional loan data (not in use for token swaps).",
              "loanId": "The ID of the loan, 0 for a new loan.",
              "loanTokenSent": "The number of loan tokens provided by the user.",
              "minEntryPrice": "Value of loan token in collateral.",
              "trader": "The account that performs this trade."
            },
            "return": "New principal and new collateral added to trade."
          },
          "marketLiquidity()": {
            "return": "The market liquidity."
          },
          "mint(address,uint256)": {
            "params": {
              "depositAmount": "The amount of underlying tokens provided on the  loan. (Not the number of loan tokens to mint).",
              "receiver": "The account getting the minted tokens."
            },
            "return": "The amount of loan tokens minted."
          },
          "mint(address,uint256,bool)": {
            "params": {
              "depositAmount": "The amount of underlying tokens provided on the loan.\t\t\t\t\t(Not the number of loan tokens to mint).",
              "receiver": "the receiver of the tokens",
              "useLM": "if true -> deposit the pool tokens into the Liquidity Mining contract"
            }
          },
          "nextBorrowInterestRate(uint256)": {
            "params": {
              "borrowAmount": "The amount of tokens to borrow."
            },
            "return": "The next borrow interest rate."
          },
          "nextSupplyInterestRate(uint256)": {
            "params": {
              "supplyAmount": "The amount of tokens supplied."
            },
            "return": "Interest that lenders are currently receiving when supplying a given amount of tokens to the pool."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "profitOf(address)": {
            "params": {
              "user": "The user address."
            },
            "return": "The profit of a user."
          },
          "supplyInterestRate()": {
            "return": "Interest that lenders are currently receiving when supplying to the pool."
          },
          "tokenPrice()": {
            "return": "The loan token price."
          },
          "totalAssetBorrow()": {
            "return": "The total amount of loan tokens on debt."
          },
          "totalAssetSupply()": {
            "details": "Wrapper for internal _totalAssetSupply function.",
            "return": "The total amount of loan tokens on supply."
          },
          "totalSupply()": {
            "return": "The total number of iTokens in existence as of now."
          },
          "totalSupplyInterestRate(uint256)": {
            "params": {
              "assetSupply": "The amount of loan tokens supplied."
            },
            "return": "Interest that lenders are currently receiving when supplying a given amount of loan tokens to the pool."
          },
          "transfer(address,uint256)": {
            "params": {
              "_to": "The recipient of the tokens.",
              "_value": "The amount of tokens sent."
            },
            "return": "Success true/false."
          },
          "transferFrom(address,address,uint256)": {
            "return": "A boolean value indicating whether the operation succeeded."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        }
      },
      "userdoc": {
        "methods": {
          "allowance(address,address)": {
            "notice": "Get the amount of iTokens allowed to be spent by a  given account on behalf of the owner."
          },
          "approve(address,uint256)": {
            "notice": "Set an amount as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event."
          },
          "assetBalanceOf(address)": {
            "notice": "Get loan token balance."
          },
          "avgBorrowInterestRate()": {
            "notice": "Wrapper for average borrow interest."
          },
          "balanceOf(address)": {
            "notice": "Get the amount of iTokens owned by an account."
          },
          "borrow(bytes32,uint256,uint256,uint256,address,address,address,bytes)": {
            "notice": "Borrow funds from the pool. The underlying loan token may not be used as collateral."
          },
          "borrowInterestRate()": {
            "notice": "Get borrow interest rate. The minimum rate the next base protocol borrower will receive for variable-rate loans."
          },
          "burn(address,uint256,bool)": {
            "notice": "withdraws from the lending pool and optionally retrieves the pool tokens from the        Liquidity Mining Contract"
          },
          "calculateSupplyInterestRate(uint256,uint256)": {
            "notice": "Compute the next supply interest adjustment."
          },
          "checkPriceDivergence(uint256,address,uint256)": {
            "notice": "Check if entry price lies above a minimum"
          },
          "checkpointPrice(address)": {
            "notice": "Getter for the price checkpoint mapping."
          },
          "getBorrowAmountForDeposit(uint256,uint256,address)": {
            "notice": "Calculate the borrow allowed for a given deposit.     * The function for doing over-collateralized borrows against loan tokens expects a minimum amount of collateral be sent to satisfy collateral requirements of the loan, for borrow amount, interest rate, and initial loan duration. To determine appropriate values to pass to this function for a given loan, `getDepositAmountForBorrow` and 'getBorrowAmountForDeposit` are required."
          },
          "getDepositAmountForBorrow(uint256,uint256,address)": {
            "notice": "Calculate the deposit required to a given borrow.     * The function for doing over-collateralized borrows against loan tokens expects a minimum amount of collateral be sent to satisfy collateral requirements of the loan, for borrow amount, interest rate, and initial loan duration. To determine appropriate values to pass to this function for a given loan, `getDepositAmountForBorrow` and 'getBorrowAmountForDeposit` are required."
          },
          "getEstimatedMarginDetails(uint256,uint256,uint256,address)": {
            "notice": "Get margin information on a trade."
          },
          "getListFunctionSignatures()": {
            "notice": "This function is MANDATORY, which will be called by LoanTokenLogicBeacon and be registered. Every new public function, the signature needs to be included in this function."
          },
          "getMaxEscrowAmount(uint256)": {
            "notice": "Compute the maximum deposit amount under current market conditions."
          },
          "marginTrade(bytes32,uint256,uint256,uint256,address,address,uint256,bytes)": {
            "notice": "Borrow and immediately get into a position.     * Trading on margin is used to increase an investor's buying power. Margin is the amount of money required to open a position, while leverage is the multiple of exposure to account equity.     * Leverage allows you to trade positions LARGER than the amount of money in your trading account. Leverage is expressed as a ratio.     * When trading on margin, investors first deposit some token that then serves as collateral for the loan, and then pay ongoing interest payments on the money they borrow.     * Margin trading = taking a loan and swapping it: In order to open a margin trade position, 1.- The user calls marginTrade on the loan token contract. 2.- The loan token contract provides the loan and sends it for processing   to the protocol proxy contract. 3.- The protocol proxy contract uses the module LoanOpening to create a   position and swaps the loan tokens to collateral tokens. 4.- The Sovryn Swap network looks up the correct converter and swaps the   tokens. If successful, the position is being held by the protocol proxy contract, which is why positions need to be closed at the protocol proxy contract."
          },
          "marginTradeAffiliate(bytes32,uint256,uint256,uint256,address,address,uint256,address,bytes)": {
            "notice": "Wrapper for marginTrade invoking setAffiliatesReferrer to track  referral trade by affiliates program."
          },
          "marketLiquidity()": {
            "notice": "Get current liquidity. A part of total funds supplied are borrowed. Liquidity = supply - borrow"
          },
          "mint(address,uint256)": {
            "notice": "Mint loan token wrapper. Adds a check before calling low level _mintToken function. The function retrieves the tokens from the message sender, so make sure to first approve the loan token contract to access your funds. This is done by calling approve(address spender, uint amount) on the ERC20 token contract, where spender is the loan token contract address and amount is the amount to be deposited."
          },
          "mint(address,uint256,bool)": {
            "notice": "deposit into the lending pool and optionally participate at the Liquidity Mining Program"
          },
          "nextBorrowInterestRate(uint256)": {
            "notice": "Public wrapper for internal call."
          },
          "nextSupplyInterestRate(uint256)": {
            "notice": "Get interest rate w/ added supply."
          },
          "profitOf(address)": {
            "notice": "Wrapper for internal _profitOf low level function."
          },
          "supplyInterestRate()": {
            "notice": "Get interest rate."
          },
          "tokenPrice()": {
            "notice": "Loan token price calculation considering unpaid interests."
          },
          "totalAssetBorrow()": {
            "notice": "Get the total amount of loan tokens on debt. Calls protocol getTotalPrincipal function. In the context of borrowing, principal is the initial size of a loan. It can also be the amount still owed on a loan. If you take out a $50,000 mortgage, for example, the principal is $50,000. If you pay off $30,000, the principal balance now consists of the remaining $20,000."
          },
          "totalAssetSupply()": {
            "notice": "Get the total amount of loan tokens on supply."
          },
          "totalSupply()": {
            "notice": "Get the total supply of iTokens."
          },
          "totalSupplyInterestRate(uint256)": {
            "notice": "Get interest rate w/ added supply assets."
          },
          "transfer(address,uint256)": {
            "notice": "Transfer tokens wrapper. Sets token owner the msg.sender. Sets maximun allowance uint256(-1) to ensure tokens are always transferred."
          },
          "transferFrom(address,address,uint256)": {
            "notice": "Moves `_value` loan tokens from `_from` to `_to` using the allowance mechanism. Calls internal _internalTransferFrom function."
          }
        }
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@ethereum-waffle/=node_modules/@ethereum-waffle/",
        ":ds-test/=foundry/lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=foundry/lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":truffle/=node_modules/truffle/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "compilationTarget": {
        "contracts/mockup/LoanTokenLogicLMMockup.sol": "LoanTokenLogicLMMockup"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/connectors/loantoken/AdvancedToken.sol": {
        "keccak256": "0x4e7606dcb24cd7f3a4e5c1a153975fd65156f7239cb281034c84d64b0dfc5dd0",
        "urls": [
          "bzz-raw://0f0ab7e85a0ab4c198221de9c7802e5d7c8b07954defa081f10778372faae26e",
          "dweb:/ipfs/QmbeL315ceTTd4kBiZjkZiPxygRzFdWexjPS9nmsfKCezc"
        ],
        "license": null
      },
      "contracts/connectors/loantoken/AdvancedTokenStorage.sol": {
        "keccak256": "0x08afb0584442da1baf29938b6ff797e22fc8b7e493e51fd26358e7be3b73fa32",
        "urls": [
          "bzz-raw://6cd1144ca50579200cd44c1bd9498549b73889959322894fb89abb598ee9ea03",
          "dweb:/ipfs/QmW6U3TsN4y781X5n7bMt3PGtiMQyAdPyBgVFTNTnewxuL"
        ],
        "license": null
      },
      "contracts/connectors/loantoken/LoanTokenBase.sol": {
        "keccak256": "0x9cb501d26d27b5bc143085b6d38261323426741857e49ff5dea0ea1325b5fab8",
        "urls": [
          "bzz-raw://20d89f7140a2efd14434fe7389e9ef05fd6d14ce8e939d4c34aac10bbcd08702",
          "dweb:/ipfs/QmfQ6QBwH7Tw7oDVj4R71Q96o3ycFEkqrVzJKwuciS3Ty9"
        ],
        "license": null
      },
      "contracts/connectors/loantoken/LoanTokenLogicStandard.sol": {
        "keccak256": "0xc27b1604f72cd126f41deae512fa72d39077a796582b75f10d83c1ca25e84a3c",
        "urls": [
          "bzz-raw://8d5173bcc9a856ffb9feb5f3420c462e742e80fb21ff05e64ea13d06dc25e901",
          "dweb:/ipfs/QmXhPDGCn4hXzTR6kkx2nBDx6R3RtqoDHwszftJ7jJEQGi"
        ],
        "license": null
      },
      "contracts/connectors/loantoken/LoanTokenLogicStorage.sol": {
        "keccak256": "0xb38139a4492a0e76c5d6eadaae2c366e98ffd5974c12c7cf37c2b55b56b9ca94",
        "urls": [
          "bzz-raw://f698e1c42c1e107f537a5287a04fb74d615c6764ee4f88b37195eb496d77b238",
          "dweb:/ipfs/QmXbas1bgup3dkRhBhMQi2z3fsg9UvPFnWifetvBPfvKh1"
        ],
        "license": null
      },
      "contracts/connectors/loantoken/Pausable.sol": {
        "keccak256": "0x54f95b041e66fbcadb867bfba626373b681e0000ecea2b19f521de89c3020690",
        "urls": [
          "bzz-raw://4e7ef0893bfcad7960c84dc41504218cf65edb7cb44263055eccc321b515df13",
          "dweb:/ipfs/QmPk7qj658ha5SvWLtsrS5okGaYWwuPHVaL86pJr6hQyjX"
        ],
        "license": null
      },
      "contracts/connectors/loantoken/interfaces/FeedsLike.sol": {
        "keccak256": "0xc8786f355ccc5a00a4b0985c28f0063cb9480f53468d44b7c17b02c9bf13a970",
        "urls": [
          "bzz-raw://fef80803763be524fcce5500f377d653b4b8e6fd4dab318ea332938203090365",
          "dweb:/ipfs/QmWE4XDFfuKxsESYXbu3H8Bqn8DH2J5zbS5rQiqcigBEHi"
        ],
        "license": null
      },
      "contracts/connectors/loantoken/interfaces/ProtocolLike.sol": {
        "keccak256": "0x97e523a6ab51b439537b2ad5ef8c09cb01f99d210b2574cc54fb5062f900f2ab",
        "urls": [
          "bzz-raw://e19c13654eec4ce2a5270a440767766f6e0859c034186bdcd66dd79b2ff59aaf",
          "dweb:/ipfs/QmPhfjV6eTc8KHvNUaiNiH1trQ5Ey8bSn5bf2jGxsAcv5S"
        ],
        "license": null
      },
      "contracts/connectors/loantoken/interfaces/ProtocolSettingsLike.sol": {
        "keccak256": "0x3e1ea57320782c4f65c58d9f28aff15eda65eef1f8e76551b2da920dffbf0c1e",
        "urls": [
          "bzz-raw://5113bd26c46a25e8d3c1f85e123b2afe007bcde6850209d7abdbfc1b5b974b92",
          "dweb:/ipfs/QmQJaSinWCy7oBWdmv4oR31QL4VbYKEXsmMRdqU2aCthms"
        ],
        "license": null
      },
      "contracts/connectors/loantoken/lib/MarginTradeStructHelpers.sol": {
        "keccak256": "0xf0612e2c0d13604a67c3d55efe88810c089f0b84ca63bd3ce82c1e09b0938973",
        "urls": [
          "bzz-raw://29d225d836c786e5140f7798e25f8c170c7417113cdd6a3bfe5d240357679678",
          "dweb:/ipfs/QmXTppmtBSC8pNCzvyt8H1zUUTnKvoedwmW3TLuXPKsGZU"
        ],
        "license": null
      },
      "contracts/connectors/loantoken/modules/beaconLogicLM/LoanTokenLogicLM.sol": {
        "keccak256": "0x6b16cba8c623a645accca094f215fd138eb7afa329fbb04ed656d9f4931d56cd",
        "urls": [
          "bzz-raw://356a94a1b090f39bfff7a719491c1e77d6e2b3cbf002eb6340179a033eb415e1",
          "dweb:/ipfs/QmNk1xe5KK8tQ7nk4iGgLUJXG8njGVwDAXbFxc2hkmvPeh"
        ],
        "license": null
      },
      "contracts/core/objects/LoanParamsStruct.sol": {
        "keccak256": "0xe15aa97713521da7f501e5225af9d92cf34bd68d286dbfed86aa75aabb323945",
        "urls": [
          "bzz-raw://8ffbf11735ac26f4c1cc8c3403b8b98519cff9a5a16bf690e1c7a8a29449aa39",
          "dweb:/ipfs/QmX6J85sDNbu5Mh553oQNkfNoPRd79sHU8zKLWzNUz3E7U"
        ],
        "license": null
      },
      "contracts/farm/ILiquidityMining.sol": {
        "keccak256": "0xed5abb44e4a222ecf9d20998ad9ae2ee3715291c9ea6a30e0c74f0a0e6d08ea8",
        "urls": [
          "bzz-raw://5fef3b0642fb459b84f25e39036b3765a7cd554be1258ff678fc6204d4551fd6",
          "dweb:/ipfs/QmUcbqnmK2sWSQZDzLJfxbFepVF816S9XsYqMgk4D6DEc6"
        ],
        "license": null
      },
      "contracts/interfaces/IERC20.sol": {
        "keccak256": "0xea0bb1bf7d022130bb42a4efdfd875ef76ac5ac730a94ddd7b8c9949d4253855",
        "urls": [
          "bzz-raw://2050b03a2a1d4203698261daf2f46749bf5b72e3d23c272553e047e6bea4af40",
          "dweb:/ipfs/QmPY8bbNv3KxnyQ4Z6DtHkYu2U1Kfd7ooRDRUWNuw6v4Jt"
        ],
        "license": null
      },
      "contracts/interfaces/IWrbtc.sol": {
        "keccak256": "0x20fdfe4b5e32fd7f863b3fa128e3c80bd4ccf090a4ffba56186ef3b7f2a80492",
        "urls": [
          "bzz-raw://d1adc3348aded3938e587fead4d4becf8efbed346c9cdc73e1f8ed42cb43b2c9",
          "dweb:/ipfs/QmZPMshLwXDwH2UKkFeV5QPtz129swV354fQ25gqKWAV94"
        ],
        "license": null
      },
      "contracts/interfaces/IWrbtcERC20.sol": {
        "keccak256": "0x7301a8c8ca7aa016ec94268a16d07366875f2e406442e929968dd745b1ee5be5",
        "urls": [
          "bzz-raw://12d22b4d1e74d95f82d2bc84b5e3c978e2341cb7a1b8fc383b64aaef59f13a00",
          "dweb:/ipfs/QmZkPrztJ5nwiKKudgz8aWX6kk3YHKCtmxJndMvV1NJuS6"
        ],
        "license": null
      },
      "contracts/mockup/LoanTokenLogicLMMockup.sol": {
        "keccak256": "0xb3c397db76307af9fbb23de1a082e7906385c0b287a78e9c07fe98f9f59e772a",
        "urls": [
          "bzz-raw://824ac285e1b475785ed8bb0ccc4e74d34e0b7f934f0b38ba46e5b82569c78c75",
          "dweb:/ipfs/QmUagnjkbph2dZCMPJJ8hShVsHZ1ieMRFfkC1Uz2CUj8uw"
        ],
        "license": null
      },
      "contracts/modules/interfaces/ProtocolAffiliatesInterface.sol": {
        "keccak256": "0x42f259156db09a06e3dcdf0ab9c6774712616b35e6baff97999a2a534d1c9c64",
        "urls": [
          "bzz-raw://54555f2049d372e0b52b6020f1459c5d8ee27ac9430ec6e329a3c74810933387",
          "dweb:/ipfs/Qme6jqbycF9LtMFvMpMHoGnLBeRk7B1rF5bZVAYK15GisV"
        ],
        "license": null
      },
      "contracts/openzeppelin/Address.sol": {
        "keccak256": "0x23df48a01dbac9b25e86c9131174fb7752bbc7e741e63f1aa982de22e055ad54",
        "urls": [
          "bzz-raw://0928673cfdca6f6917432e1cff628b726b4396ed0f4b08d3281a7ebbdb2380e3",
          "dweb:/ipfs/QmY12enUUEaE7sC5PZAdqJo63JxaH2FqVJtHZxxB9HzVYE"
        ],
        "license": null
      },
      "contracts/openzeppelin/Context.sol": {
        "keccak256": "0x7860cb1591dbd66bb497c60c46866d9fcdb56c73306ed86b25801000af1c7b2b",
        "urls": [
          "bzz-raw://79e480eab5cb03c034f7fb2c177f23874fddebbb3514d773729bb094a0fda826",
          "dweb:/ipfs/QmTfDHE4fnQE3gfycu7NePREWfWFgJgmaEmHDn4uyTnMBP"
        ],
        "license": null
      },
      "contracts/openzeppelin/Ownable.sol": {
        "keccak256": "0x94496c375b3e82d87d7f01ce1577f008fab374312cf93012a0eca716e6aadb3a",
        "urls": [
          "bzz-raw://ea268f87bc9d256b99aae4d98f23931f485295b5720f505e0554223c9b54431a",
          "dweb:/ipfs/QmWCLqTijearegiDuWyhrkRQXXACT1sVUG6cF3L9pszb6Y"
        ],
        "license": null
      },
      "contracts/openzeppelin/ReentrancyGuard.sol": {
        "keccak256": "0xd347de96ad57d1e45b07a2efe3050c1bd4b809236bbf354acb593de56d21a5c9",
        "urls": [
          "bzz-raw://ad45ba93d472a3c4f7092e34d6f1cdca11c9e64a5918bf848d497c7f49427ec5",
          "dweb:/ipfs/QmPC5tnpnpv67NfTDb7rZVgBvvLXoJmiuBzUgjz3MAUeFk"
        ],
        "license": null
      },
      "contracts/openzeppelin/SafeMath.sol": {
        "keccak256": "0xbff8d6273e1a6870d1a142c0c23acd63a4dd47760f250390f49ee56333bcb6e8",
        "urls": [
          "bzz-raw://379880c293771d9db34b4db282bd22f0536d41f1db2a7fb887124984a5bcd719",
          "dweb:/ipfs/QmUrUzEJPp9WxyvFFZSaqv7qjnSwrkApNUkMny5cCcY2a6"
        ],
        "license": null
      },
      "contracts/openzeppelin/SignedSafeMath.sol": {
        "keccak256": "0x449606d22a41bbeaeee8775d66b2bd179b6964b65fd3380b22ef837634e7523b",
        "urls": [
          "bzz-raw://f13fe82aab8ae79842e617c9c77155f2f46ec21670887c2e037d9d42b50062f8",
          "dweb:/ipfs/QmZJPTQmcVm6XWq5LJsouTwC71KzkjawN8UgqyQbPyUpkx"
        ],
        "license": null
      },
      "contracts/reentrancy/Mutex.sol": {
        "keccak256": "0xd10b0fd07d5fed1ae1237e7c87e6501970fce2a86e2b8862e502258b0d3aeb2c",
        "urls": [
          "bzz-raw://a99cb17e5f05a4eeb80c91d0d00fb9c482502e5acdd0d10727d53f9b68f1e732",
          "dweb:/ipfs/QmZ8Va6t8DJAAHUcSXC4aWmitcgSAhugdeWHCFXJcxJF5S"
        ],
        "license": null
      },
      "contracts/reentrancy/SharedReentrancyGuard.sol": {
        "keccak256": "0x2d0e61b104b91c1764f20fbeb381ba0f8a8889934ba7f6e8a167ed542ec2c124",
        "urls": [
          "bzz-raw://380369e173ad2b17130b26377df35a13ed3413b65f72f8242dc6e2eb5aca5517",
          "dweb:/ipfs/QmNNRyoKsrU7XsV1B8okhaJpGNgzRixnySebGZYzT3RmC9"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/mockup/LoanTokenLogicLMMockup.sol",
    "id": 37658,
    "exportedSymbols": {
      "LoanTokenLogicLMMockup": [
        37657
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:575:137",
    "nodes": [
      {
        "id": 37625,
        "nodeType": "PragmaDirective",
        "src": "0:23:137",
        "nodes": [],
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ]
      },
      {
        "id": 37626,
        "nodeType": "PragmaDirective",
        "src": "24:33:137",
        "nodes": [],
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ]
      },
      {
        "id": 37627,
        "nodeType": "ImportDirective",
        "src": "59:76:137",
        "nodes": [],
        "absolutePath": "contracts/connectors/loantoken/modules/beaconLogicLM/LoanTokenLogicLM.sol",
        "file": "../connectors/loantoken/modules/beaconLogicLM/LoanTokenLogicLM.sol",
        "scope": 37658,
        "sourceUnit": 4629,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 37657,
        "nodeType": "ContractDefinition",
        "src": "137:437:137",
        "nodes": [
          {
            "id": 37656,
            "nodeType": "FunctionDefinition",
            "src": "195:377:137",
            "nodes": [],
            "body": {
              "id": 37655,
              "nodeType": "Block",
              "src": "330:242:137",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "307832633334443636613563613836383633333065313030333732456233464446423561454543443042",
                        "id": 37641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "373:42:137",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "value": "0x2c34D66a5ca8686330e100372Eb3FDFB5aEECD0B"
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 37645,
                                    "name": "receiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 37631,
                                    "src": "484:8:137",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 37644,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32410,
                                  "src": "477:6:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$32410_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 37646,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "477:16:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$32410",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 37647,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "transfer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 32382,
                              "src": "477:25:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) external returns (bool)"
                              }
                            },
                            "id": 37648,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "477:34:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 37649,
                            "name": "receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37631,
                            "src": "513:8:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 37650,
                            "name": "burnAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37633,
                            "src": "523:10:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 37642,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62978,
                            "src": "454:3:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 37643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "454:22:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 37651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "454:80:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6572726f72",
                        "id": 37652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "548:7:137",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_177f242d20ff7dc4598657e4355abd2b0df8f6351283a95d209db56ce73ef6e9",
                          "typeString": "literal_string \"error\""
                        },
                        "value": "error"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_177f242d20ff7dc4598657e4355abd2b0df8f6351283a95d209db56ce73ef6e9",
                          "typeString": "literal_string \"error\""
                        }
                      ],
                      "id": 37640,
                      "name": "_callOptionalReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3269,
                      "src": "340:19:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory,string memory)"
                      }
                    },
                    "id": 37653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "340:225:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37654,
                  "nodeType": "ExpressionStatement",
                  "src": "340:225:137"
                }
              ]
            },
            "documentation": null,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 37636,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 37635,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 55354,
                  "src": "272:12:137",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "272:12:137"
              }
            ],
            "name": "burn",
            "parameters": {
              "id": 37634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37631,
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 37656,
                  "src": "209:16:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "209:7:137",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37633,
                  "name": "burnAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 37656,
                  "src": "227:18:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37632,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "227:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "208:38:137"
            },
            "returnParameters": {
              "id": 37639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37638,
                  "name": "loanAmountPaid",
                  "nodeType": "VariableDeclaration",
                  "scope": 37656,
                  "src": "302:22:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37637,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "302:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "301:24:137"
            },
            "scope": 37657,
            "stateMutability": "nonpayable",
            "superFunction": 1024,
            "visibility": "external"
          }
        ],
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 37628,
              "name": "LoanTokenLogicLM",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4628,
              "src": "172:16:137",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LoanTokenLogicLM_$4628",
                "typeString": "contract LoanTokenLogicLM"
              }
            },
            "id": 37629,
            "nodeType": "InheritanceSpecifier",
            "src": "172:16:137"
          }
        ],
        "contractDependencies": [
          168,
          281,
          524,
          3921,
          3976,
          4015,
          4628,
          54570,
          55243,
          55355,
          57312
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          37657,
          4628,
          3921,
          3976,
          168,
          281,
          524,
          4015,
          55243,
          54570,
          57312,
          55355
        ],
        "name": "LoanTokenLogicLMMockup",
        "scope": 37658
      }
    ]
  },
  "id": 137
}